{
  "interval": {
    "intervalStart": "2025-09-21T00:00:00.000Z",
    "intervalEnd": "2025-09-22T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "ethereum-optimism/specs",
  "overview": "From 2025-09-21 to 2025-09-22, ethereum-optimism/specs had 3 new PRs (0 merged), 2 new issues, and 6 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOLB-lzc7M8-Q9",
      "title": "Its done",
      "author": "ajit2903",
      "number": 786,
      "repository": "ethereum-optimism/specs",
      "body": "Its done\r\n\r\n_Originally posted by @ajit2903 in https://github.com/ethereum-optimism/specs/pull/785#pullrequestreview-3250132838_\r\n            ",
      "createdAt": "2025-09-21T19:26:56Z",
      "closedAt": "2025-09-29T07:52:06Z",
      "state": "CLOSED",
      "commentCount": 1
    },
    {
      "id": "I_kwDOLB-lzc7M9Ayr",
      "title": "Proposal: Use SSZ hash_tree_root instead of keccak(payload) for SequencerCommitment signatures",
      "author": "simon-jentzsch",
      "number": 787,
      "repository": "ethereum-optimism/specs",
      "body": "<!--\nNeed help?\nRefer to our contributing guidelines for additional information about making a good issue:\nhttps://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\n-->\n\n**Is your feature request related to a problem? Please describe.**\n\nCurrently, sequencer commitments (preconfirmations) are signed over\n\n```\n\nkeccak256(\ndomain ++ chain\\_id ++ keccak256(payload)\n)\n\n````\n\nThis ties the signature to the raw byte serialization of the full payload.  \nAs a result, verification always requires transmitting the *entire payload*. This makes proofs unnecessarily large and prevents the use of Merkle proofs for lightweight verification. For light clients and zk-based systems (e.g. Colibri stateless clients), this is a major efficiency bottleneck.\n\n---\n\n**Describe the solution you'd like**\n\nDefine the signature message using an **SSZ container and its `hash_tree_root`**, similar to Ethereum consensus:\n\n```python\nclass SequencerCommitment(Container):\n    parent_beacon_block_root: Bytes32\n    execution_payload_header: ExecutionPayloadHeader\n````\n\nThen the signing root becomes:\n\n```\nkeccak256(\n    domain ++ chain_id ++ hash_tree_root(SequencerCommitment)\n)\n```\n\nThis enables:\n\n* **Merkle-friendly proofs**: clients can verify only the necessary fields.\n* **Smaller proofs**: no need to transmit the full payload, only Merkle branches.\n* **Consistency with Ethereum consensus**: aligns with how signing roots are already defined.\n* **Forward-compatibility**: SSZ evolution is safer than raw byte hashing.\n\n---\n\n**Describe alternatives you’ve considered**\n\n* **Status quo**: keep `keccak(payload)` – works but bloats proofs and prevents efficient verification.\n* **Application-layer Merkleization**: replicate hashing on top of the keccak payload, but this duplicates work and doesn’t integrate cleanly with existing SSZ tooling.\n\n---\n\n**Additional context**\n\n* Current spec reference: [[Rollup Node P2P – Block signatures](https://specs.optimism.io/protocol/rollup-node-p2p.html)](https://specs.optimism.io/protocol/rollup-node-p2p.html)\n* Ethereum SSZ reference: [SSZ hash\\_tree\\_root](https://ethereum.org/en/developers/docs/data-structures-and-encoding/ssz/)\n* Backwards compatibility path: introduce a **new topic/domain (e.g. v5)**, sequencers can dual-sign during migration, clients accept both formats.\n\nThis change would drastically reduce proof sizes and make OP Stack more compatible with stateless light clients and zk-provers.\n\n",
      "createdAt": "2025-09-21T19:40:34Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOLB-lzc6ptvn1",
      "title": "Adddd",
      "author": "ajit2903",
      "number": 783,
      "body": "<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nA clear and concise description of the features you're adding in this pull request.\r\n-->\r\n\r\n**Tests**\r\n\r\n<!--\r\nPlease describe any tests you've added. If you've added no tests, or left important behavior untested, please explain why not.\r\n-->\r\n\r\n**Additional context**\r\n\r\n<!--\r\nAdd any other context about the problem you're solving.\r\n-->\r\n\r\n**Metadata**\r\n\r\n<!-- \r\nInclude a link to any github issues that this may close in the following form:\r\n- Fixes #[Link to Issue]\r\n-->\r\n",
      "repository": "ethereum-optimism/specs",
      "createdAt": "2025-09-21T18:32:06Z",
      "mergedAt": null,
      "additions": 6331,
      "deletions": 305
    },
    {
      "id": "PR_kwDOLB-lzc6ptwNf",
      "title": "Update derivation.md",
      "author": "ajit2903",
      "number": 784,
      "body": "Prceed now\r\n\r\n<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nA clear and concise description of the features you're adding in this pull request.\r\n-->\r\n\r\n**Tests**\r\n\r\n<!--\r\nPlease describe any tests you've added. If you've added no tests, or left important behavior untested, please explain why not.\r\n-->\r\n\r\n**Additional context**\r\n\r\n<!--\r\nAdd any other context about the problem you're solving.\r\n-->\r\n\r\n**Metadata**\r\n\r\n<!-- \r\nInclude a link to any github issues that this may close in the following form:\r\n- Fixes #[Link to Issue]\r\n-->\r\n",
      "repository": "ethereum-optimism/specs",
      "createdAt": "2025-09-21T18:36:21Z",
      "mergedAt": null,
      "additions": 2,
      "deletions": 2
    },
    {
      "id": "PR_kwDOLB-lzc6pt3l7",
      "title": "Update derivation.md",
      "author": "ajit2903",
      "number": 785,
      "body": "Immideate action\r\n\r\n<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nA clear and concise description of the features you're adding in this pull request.\r\n-->\r\n\r\n**Tests**\r\n\r\n<!--\r\nPlease describe any tests you've added. If you've added no tests, or left important behavior untested, please explain why not.\r\n-->\r\n\r\n**Additional context**\r\n\r\n<!--\r\nAdd any other context about the problem you're solving.\r\n-->\r\n\r\n**Metadata**\r\n\r\n<!-- \r\nInclude a link to any github issues that this may close in the following form:\r\n- Fixes #[Link to Issue]\r\n-->\r\n",
      "repository": "ethereum-optimism/specs",
      "createdAt": "2025-09-21T19:25:32Z",
      "mergedAt": null,
      "additions": 1,
      "deletions": 1
    }
  ],
  "codeChanges": {
    "additions": 0,
    "deletions": 0,
    "files": 0,
    "commitCount": 4
  },
  "completedItems": [],
  "topContributors": [
    {
      "username": "ajit2903",
      "avatarUrl": "https://avatars.githubusercontent.com/u/97722590?v=4",
      "totalScore": 61.83479899712721,
      "prScore": 48.534798997127204,
      "issueScore": 4.1,
      "reviewScore": 9,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "joshklop",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31332481?v=4",
      "totalScore": 45.64027371013213,
      "prScore": 41.14027371013213,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "hexshire",
      "avatarUrl": "https://avatars.githubusercontent.com/u/165055168?u=1b6a31b2a6190958e346b9961b5dcd86dbd6818f&v=4",
      "totalScore": 18.448742863074038,
      "prScore": 13.94874286307404,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "almanax-ai",
      "avatarUrl": "https://avatars.githubusercontent.com/in/934833?v=4",
      "totalScore": 9,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 9,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "mds1",
      "avatarUrl": "https://avatars.githubusercontent.com/u/17163988?u=95114a00aa1ebac94d8fc8519598f168d2c5949f&v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "jfjeifkvbk",
      "avatarUrl": "https://avatars.githubusercontent.com/u/116491868?v=4",
      "totalScore": 4,
      "prScore": 0,
      "issueScore": 4,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "simon-jentzsch",
      "avatarUrl": "https://avatars.githubusercontent.com/u/10868622?u=0b35dcf8f4e1fcea85260346f920bd3f7c33e5a4&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "krif24",
      "avatarUrl": "https://avatars.githubusercontent.com/u/13201375?v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 3,
  "mergedPRs": 0,
  "newIssues": 2,
  "closedIssues": 0,
  "activeContributors": 6
}