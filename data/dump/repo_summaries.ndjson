["ethereum-optimism/docs_day_2025-06-06", "ethereum-optimism/docs", "day", "2025-06-06", "# ethereum-optimism/docs Daily Update (Jun 6, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to update the data glossary. Discussions continued on several active issues, including fixes for fault proofs with non-genesis interop and improvements to L1 origin validity handling in the op-supervisor.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1651](https://github.com/ethereum-optimism/docs/pull/1651), was opened to update the data glossary.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n### Fault Proofs and Interop Challenges\nDiscussions continued on [#16166](https://github.com/ethereum-optimism/docs/issues/16166) regarding the `op-supervisor`'s ability to provide data for fault proofs with non-genesis interop. The core problem is that `op-challenger` doesn't fully support non-Genesis Interop upgrades, leading to invalid actions when proving the non-genesis activation block.\n\n*   **Proposed Solutions:**\n    *   One option is for `op-challenger` to manually construct pre-interop super roots directly from rollup nodes or via the supervisor as a proxy, as there's no risk of unresolved cross-dependencies before interop activation.\n    *   Another option is to start indexing the safe DB in the supervisor from the first random derived block it receives, even if pre-interop, allowing it to serve super roots consistently. This would remove any special meaning of the first block in the safe DB.\n*   **Current Status:** An implementation of the second option is underway. It was also noted that fixing this issue before moving forward with devnets is crucial, as the current code is not viable for the migration process.\n\n### Improving L1 Origin Validity in op-supervisor\nDiscussions on [#16315](https://github.com/ethereum-optimism/docs/issues/16315) focused on improving the `op-supervisor`'s L1 origin validity handling during resets. The current reset logic only checks consistency between local and node safe databases, without verifying if the L1 origin of the found target is canonical.\n\n*   **Key Points:**\n    *   The supervisor should ensure that all provided targets are valid. If a target is invalid, the `op-node` should request another reset from the supervisor, rather than duplicating validity checks or walkbacks.\n    *   This approach would reduce complexity and handle cases where the L1 chain changes during the reset bisection.\n    *   It was noted that pre-interop, some of this functionality was handled by `sync.FindL2Heads`, which did check L1 origin canonicality.\n\n### Incorrect Nonce for Pending Transactions\nIssue [#623](https://github.com/ethereum-optimism/docs/issues/623) highlights that `eth_getTransactionCount` returns an incorrect nonce (0x1 instead of 0x0) for pending transactions, causing transactions to get stuck in the mempool. Users are seeking updates on the resolution of this issue.", "2025-09-04T03:25:44.773Z"]
["ethereum-optimism/ecosystem_day_2025-06-24", "ethereum-optimism/ecosystem", "day", "2025-06-24", "# ethereum-optimism/ecosystem Daily Update (Jun 24, 2025)\n## OVERVIEW \nThe day saw significant activity in issue management, with several issues being opened and closed. Discussions on CI stability and `op-node` goroutine issues were prominent, indicating ongoing efforts to enhance system reliability and performance.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, tests added, or other work were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Superstacks Mini App Enhancements\nSeveral issues related to the Superstacks Mini App were closed, including the integration of rank and XP into the claim endpoint [#847](https://github.com/ethereum-optimism/ecosystem/issues/847), cleanup of the claim UI [#848](https://github.com/ethereum-optimism/ecosystem/issues/848), and setting up a bugbash for the Superstacks claim on the website [#851](https://github.com/ethereum-optimism/ecosystem/issues/851).\n\n### Documentation and Analytics Improvements\nAn issue concerning Google Analytics tracking for blog posts on optimism.io was closed [#800](https://github.com/ethereum-optimism/ecosystem/issues/800). Additionally, a suggestion regarding bridging ERC-20 tokens with Viem in the documentation was closed [#1508](https://github.com/ethereum-optimism/ecosystem/issues/1508), with a note that the issue was addressed in a previous PR.\n\n### CI/CD and Testing Improvements\nAn issue related to investigating and improving CI flakiness was closed [#16271](https://github.com/ethereum-optimism/ecosystem/issues/16271), with a summary of improvements made. A spike exploring CI SLAs was also closed [#16437](https://github.com/ethereum-optimism/ecosystem/issues/16437), with the decision not to implement CI SLAs for now. A feature request to enable deterministic gas testing by setting a fixed base fee was closed [#408](https://github.com/ethereum-optimism/ecosystem/issues/408), as the proposed solution was deemed unnecessary.\n\n### Acceptance Test Porting\nAn issue to port `TestWithdrawalsRoot` to devstack was closed [#412](https://github.com/ethereum-optimism/ecosystem/issues/412), with a reference to the implementing PR.\n\n## NEW ISSUES\n\n### Superstacks Mini App Development\nThree new issues were opened related to the Superstacks Mini App: configuring production deployment [#866](https://github.com/ethereum-optimism/ecosystem/issues/866), implementing the Mini App UI for the claim flow [#867](https://github.com/ethereum-optimism/ecosystem/issues/867), and implementing the claim contract deployment process [#868](https://github.com/ethereum-optimism/ecosystem/issues/868).\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation and Improvement [#16271](https://github.com/ethereum-optimism/ecosystem/issues/16271)\nThe issue was closed today, with `scharissis` providing a final update on the progress made. Key achievements include the release and iteration of a test flake report generator, publicizing the report, and improving test flakiness. The team will continue to monitor flakiness. Earlier comments highlighted the top 10 flakiest acceptance tests and noted that most flakiness was due to infrastructure issues rather than acceptance testing itself.\n\n### `op-node` Goroutine Stuck Issues [#16332](https://github.com/ethereum-optimism/ecosystem/issues/16332)\nRecent comments from `rrrengineer` and `Creamers158` confirm that they are experiencing similar issues with `op-node` v1.13.3, where the node gets stuck with thousands of goroutines, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync failures. This indicates a persistent problem with `op-node` stability.\n\n### Spike: CI SLAs [#16437](https://github.com/ethereum-optimism/ecosystem/issues/16437)\nThe issue was closed today, with `scharissis` deciding not to implement CI SLAs for now. The discussion involved valuable feedback from `pauldowman`, `teddyknox`, and `ajsutton`. Key points raised included concerns about the proposed 5% failure rate being too high, the 1-hour PR feedback time being too long, and the danger of disabling tests. There was a consensus that PR merge time is not a meaningful CI metric. `teddyknox` suggested getting smarter about allowing new tests into the repo to proactively detect flakiness. `ajsutton` expressed skepticism about the necessity of SLAs for developers but acknowledged their potential utility for platforms.", "2025-09-04T03:26:40.401Z"]
["ethereum-optimism/optimism_day_2025-06-19", "ethereum-optimism/optimism", "day", "2025-06-19", "# ethereum-optimism/optimism Daily Update (Jun 19, 2025)\n## OVERVIEW \nThe day saw discussions on an existing issue related to the `op-supervisor` event overflow and a new issue opened to add flashblocks support in Kurtosis.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n### Kurtosis Devnet Enhancements\nA new issue was opened to add support for flashblocks (rollup-boost and rbuilder) to the Kurtosis devnet, ensuring compatibility with an infrastructure topology that includes an `rbuilder` instance per `conductor` instance ([#16514](https://github.com/ethereum-optimism/optimism/issues/16514)).\n\n## ACTIVE ISSUES\n### op-supervisor Event Overflow Analysis\nDiscussions continued on the `op-supervisor` event overflow issue ([#16335](https://github.com/ethereum-optimism/optimism/issues/16335)). The latest comment from `nonsense` on June 19th, 2025, indicates a pull request ([#16473](https://github.com/ethereum-optimism/optimism/pull/16473)) has been added to introduce a gauge for all in-flight events within the `GlobalSyncExec`. This aims to identify which event type causes issues if the overflow recurs. An additional gauge for total in-flight events was also added, with the potential for setting up alerts if a threshold is crossed. Previous discussions debated whether `ChainIndexingContinueEvent` or `\"cross-unsafe-update\"` events were the primary cause of the stacking.\n\n### Supersim vs. Interop Kurtosis Devnet Clarification\nThe discussion around the differences between `supersim` and `interop kurtosis devnet` continued ([#399](https://github.com/ethereum-optimism/optimism/issues/399)). On June 19th, 2025, `zhiqiangxu` inquired about the primary use case for `supersim`, following up on a previous comment that described `supersim` as a lighter wrapper around `anvil` for local development.", "2025-09-04T03:26:27.426Z"]
["ethereum-optimism/docs_day_2025-06-29", "ethereum-optimism/docs", "day", "2025-06-29", "# ethereum-optimism/docs Daily Update (Jun 29, 2025)\n## OVERVIEW \nThe day's activity in the `ethereum-optimism/docs` repository primarily focused on the creation of new issues, indicating a strong emphasis on identifying and documenting necessary updates and new content. No code changes or documentation enhancements were completed.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Documentation Update Requests\nSeveral new issues were opened requesting updates to existing documentation or the addition of new content. These include a request for a 2024 Q4 audit-related update for a specific page path, which is currently unclear ([#1673](https://github.com/ethereum-optimism/docs/issues/1673)), and a general request for documentation updates with specific acceptance criteria, such as MOVE token staking and DAO governance visuals ([#1674](https://github.com/ethereum-optimism/docs/issues/1674)). Another issue specifically requests updated documentation for Movement Network's integration with Optimism infrastructure, focusing on MOVE token utility ([#1676](https://github.com/ethereum-optimism/docs/issues/1676)).\n\n### Documentation Process Improvement\nOne issue was opened to address a documentation process improvement, specifically to add a PR title, which was subsequently closed ([#1675](https://github.com/ethereum-optimism/docs/issues/1675)).\n\n## ACTIVE ISSUES\n### Documentation Update for Movement Network\nIssue [#1675](https://github.com/ethereum-optimism/docs/issues/1675), titled \"[DOCS] Add PR title,\" was opened and subsequently closed. The comments on this issue, all from user Saad4343, consist of repeated hexadecimal strings (\"0xaed4b681fb202fed67f47e8580303f871db37ada\"). The purpose or context of these comments is not clear from the issue description or the comments themselves.", "2025-09-04T03:27:22.881Z"]
["ethereum-optimism/op-geth_day_2025-07-03", "ethereum-optimism/op-geth", "day", "2025-07-03", "# ethereum-optimism/op-geth Daily Update (Jul 3, 2025)\n## OVERVIEW \nToday's development focused on a significant update to the codebase, merging the latest version of go-ethereum. This ensures `op-geth` remains current with upstream improvements and features.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Upstream Synchronization\n*   A major update was initiated to merge `go-ethereum` v1.16.1 into the `op-geth` codebase, bringing the project up-to-date with the latest upstream changes and improvements [#638](https://github.com/ethereum-optimism/op-geth/pull/638).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#638](https://github.com/ethereum-optimism/op-geth/pull/638) all: merge go-ethereum v1.16.1 - This pull request aims to integrate the `go-ethereum` v1.16.1 release into the `op-geth` repository.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo issues had significant activity today.", "2025-09-04T03:27:28.231Z"]
["ethereum-optimism/optimism_day_2025-06-11", "ethereum-optimism/optimism", "day", "2025-06-11", "# ethereum-optimism/optimism Daily Update (Jun 11, 2025)\n## OVERVIEW \nThe day's activity focused on refining documentation and internal configurations for the `op-supervisor` and `SuperchainConfig`, alongside addressing critical issues related to acceptance test reliability and supervisor-node mode renaming. New issues were opened to enhance monitoring for flashblocks and track the development of a Gas Tank contract.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work was reported for Jun 11, 2025.\n\n## NEWLY OPENED PULL REQUESTS\nThree new pull requests were opened:\n- **`op-supervisor` Documentation and Configuration Updates**: Two PRs were opened to improve the `op-supervisor` documentation. [#16380](https://github.com/ethereum-optimism/optimism/pull/16380) fixes a typo in the `README.md`, and [#16381](https://github.com/ethereum-optimism/optimism/pull/16381) adds a link to a design document.\n- **Refactoring for Superchain Configuration**: [#16383](https://github.com/ethereum-optimism/optimism/pull/16383) proposes to decouple `AnchorStateRegistry` from `SystemConfig` and instead utilize `SuperchainConfig`, aiming for a more modular architecture.\n\n## CLOSED ISSUES\n\nNo issues were closed on Jun 11, 2025.\n\n## NEW ISSUES\n\nThree new issues were opened:\n- **Improving Acceptance Test Reliability**: [#16378](https://github.com/ethereum-optimism/optimism/issues/16378) was created to address the flakiness of acceptance tests, with the goal of making them consistently pass on the first attempt. Discussions indicate that some packages like `op-acceptance-tests/tests/interop/reorgs` pass consistently, but `op-acceptance-tests/tests/interop/sync/multisupervisor_interop` remains flaky.\n- **Supervisor <> op-node Mode Renaming**: [#16379](https://github.com/ethereum-optimism/optimism/issues/16379) was opened to rename supervisor-node modes to improve clarity and reduce confusion, based on a new naming convention.\n- **Flashblocks Monitoring and Alerting Improvements**: [#16388](https://github.com/ethereum-optimism/optimism/issues/16388) was created to establish comprehensive monitoring and alerting for flashblocks integration, particularly as op-sepolia approaches flashblocks enablement.\n\n## ACTIVE ISSUES\n\n- **Gas Tank Contract**: [#836](https://github.com/ethereum-optimism/optimism/issues/836) remains active, with a pull request for the Gas Tank contract (https://github.com/defi-wonderland/optimism/pull/414) being shared.", "2025-09-04T03:26:03.210Z"]
["ethereum-optimism/optimism_day_2025-07-20", "ethereum-optimism/optimism", "day", "2025-07-20", "# ethereum-optimism/optimism Daily Update (Jul 20, 2025)\n## OVERVIEW \nThe day's development activity was minimal, with no completed work reported. The primary activity involved the opening of a new pull request aimed at preventing leading slashes in test scopes.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo key technical developments were reported for completed work.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16754](https://github.com/ethereum-optimism/optimism/pull/16754), was opened. This PR addresses a fix to prevent a leading slash in `AddTestScope` when the previous scope is empty.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were reported.", "2025-09-04T03:28:25.121Z"]
["ethereum-optimism/infra_day_2025-07-18", "ethereum-optimism/infra", "day", "2025-07-18", "# ethereum-optimism/infra Daily Update (Jul 18, 2025)\n## OVERVIEW \nThe day saw dependency updates and the closure of several issues related to acceptance testing and interop network functionality. A new issue was opened to align acceptance test topology with production environments.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\n- A dependency bump for `golang.org/x/oauth2` from 0.16.0 to 0.27.0 was initiated in the `/op-ufm` directory via [#427](https://github.com/ethereum-optimism/infra/pull/427).\n\n## CLOSED ISSUES\n\n- **Interop Acceptance Test Resolution:** The acceptance test for interop network functionality, [#298](https://github.com/ethereum-optimism/infra/issues/298), was closed as it will be handled by the Protocol team.\n- **Devstack Test Porting:** The issue concerning porting `TestPectra` to devstack, [#416](https://github.com/ethereum-optimism/infra/issues/416), was closed, with the implementation noted in a related pull request in the `optimism` repository.\n\n## NEW ISSUES\n\n- **Acceptance Test Topology Alignment:** A new issue, [#16746](https://github.com/ethereum-optimism/infra/issues/16746), was opened to address the discrepancy between the current local Kurtosis interop devnet's public sequencer exposure and the production topology. This aims to make the Kurtosisnet YAML description match production, including components like proxyd and verifier nodes.\n\n## ACTIVE ISSUES\n\n- **op-acceptance-tests: Handling Failing Tests due to op-geth Version Bump:** Issue [#16731](https://github.com/ethereum-optimism/infra/issues/16731) discusses `TestExecMessageInvalidAttributes` and `TestRegularMessage` failing after an `op-geth` version bump. These tests are currently skipped, and a pull request in the `optimism` repository ([#16735](https://github.com/ethereum-optimism/optimism/pull/16735)) is expected to resolve this.", "2025-09-04T03:28:21.329Z"]
["ethereum-optimism/optimism_day_2025-07-21", "ethereum-optimism/optimism", "day", "2025-07-21", "# ethereum-optimism/optimism Daily Update (Jul 21, 2025)\n## OVERVIEW \nToday's development focused on optimizing the `op-batcher` for improved memory efficiency and throughput, alongside significant documentation updates for security reviews. Several long-standing issues were closed, indicating progress on various technical debts and interop-related tasks. New issues primarily revolve around the deployment and testing of \"flashblocks\" functionality.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Batcher Performance Enhancements\nThe `op-batcher` received critical performance improvements aimed at reducing memory consumption and accelerating block processing. Changes include discarding the channel compressor after frames are generated, leading to a \"massive reduction in memory usage\" when processing backlogs ([#16597](https://github.com/ethereum-optimism/optimism/pull/16597)). Additionally, the batcher will now start publishing and throttling sooner when loading a backlog of blocks, addressing potential throughput issues during restarts ([#16648](https://github.com/ethereum-optimism/optimism/pull/16648)).\n\n### Security Documentation Updates\nTwo new Spearbit security review reports for May and July 2025 were added to the documentation. These reports cover the Upgrade 16 and VerifyOPCM security reviews, enhancing transparency and providing up-to-date security information ([#16737](https://github.com/ethereum-optimism/optimism/pull/16737)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#16768](https://github.com/ethereum-optimism/optimism/pull/16768) [WIP] - enable tracing in op-node\n- [#16770](https://github.com/ethereum-optimism/optimism/pull/16770) fix: typos in PreimageOracle.sol\n\n## CLOSED ISSUES\n\n### Interoperability and Supervisor Enhancements\nA significant number of issues related to interop functionality and the `op-supervisor` were closed. This includes investigations into recovering RC Alpha testnets ([#15702](https://github.com/ethereum-optimism/optimism/issues/15702)), client follow-ups for RC Beta test runs ([#15755](https://github.com/ethereum-optimism/optimism/issues/15755)), and various `op-supervisor` readiness and RPC improvements ([#15757](https://github.com/ethereum-optimism/optimism/issues/15757), [#15758](https://github.com/ethereum-optimism/optimism/issues/15758)). Metrics for reorgs ([#15762](https://github.com/ethereum-optimism/optimism/issues/15762)), upgrade countdown polish ([#15763](https://github.com/ethereum-optimism/optimism/issues/15763)), and activation block reorg support ([#15774](https://github.com/ethereum-optimism/optimism/issues/15774)) were also addressed. Issues concerning dependency set configuration ([#16084](https://github.com/ethereum-optimism/optimism/issues/16084)) and `resetTracker` todos ([#16026](https://github.com/ethereum-optimism/optimism/issues/16026)) for the supervisor were closed.\n\n### Batcher and Node Optimization & Refinement\nSeveral issues focused on optimizing the `op-batcher` and `op-node` components. This includes a spike to optimize `op-batcher` memory consumption ([#16537](https://github.com/ethereum-optimism/optimism/issues/16537)), increasing observability of its memory usage ([#16572](https://github.com/ethereum-optimism/optimism/issues/16572)), and fixing channel duration tracking discrepancies ([#10924](https://github.com/ethereum-optimism/optimism/issues/10924)). `op-node` improvements include increasing `MaxFrameLength` and checking buffer size ([#10470](https://github.com/ethereum-optimism/optimism/issues/10470)), investigating `Peek/Discard io.Reader` in `BatchReader` ([#10522](https://github.com/ethereum-optimism/optimism/issues/10522)), and addressing an infinite loop on missing L1 origin ([#10923](https://github.com/ethereum-optimism/optimism/issues/10923)).\n\n### General Development and CI/CD Improvements\nA range of general development and CI/CD related issues were closed. This includes speeding up CI and Git by enforcing index-version 4 ([#10486](https://github.com/ethereum-optimism/optimism/issues/10486)), adding generic fork flag and field tests ([#10909](https://github.com/ethereum-optimism/optimism/issues/10909)), and abstracting/removing duplicate code across `check-hardfork` scripts ([#10914](https://github.com/ethereum-optimism/optimism/issues/10914)). Other closed issues cover `op-service` logger setup deduplication ([#10931](https://github.com/ethereum-optimism/optimism/issues/10931)), adding batch `BlockByNumber` to client ([#10933](https://github.com/ethereum-optimism/optimism/issues/10933)), and improving `txmgr` logs with `nonce` attributes ([#10937](https://github.com/ethereum-optimism/optimism/issues/10937)).\n\n### Pectra Support and Flashblocks Readiness\nProgress on Pectra support was tracked and closed ([#12435](https://github.com/ethereum-optimism/optimism/issues/12435)). Issues related to flashblocks readiness, such as enabling flashblocks non-publicly on op-sepolia ([#16496](https://github.com/ethereum-optimism/optimism/issues/16496)) and a reth-enabled flashblocks node ([#16544](https://github.com/ethereum-optimism/optimism/issues/16544)), were closed, indicating a shift towards active deployment and testing.\n\n## NEW ISSUES\n\n### Flashblocks Deployment and Testing Strategy\nA series of new issues outline the phased deployment and testing strategy for \"flashblocks\" functionality. This includes enabling flashblocks on a single production mainnet sequencer for initial evaluation ([#16759](https://github.com/ethereum-optimism/optimism/issues/16759)), followed by load testing on devnets ([#16756](https://github.com/ethereum-optimism/optimism/issues/16756)). Subsequent steps involve enabling flashblocks on remaining OP Labs sequencers ([#16760](https://github.com/ethereum-optimism/optimism/issues/16760)) and Sunnyside sequencers ([#16761](https://github.com/ethereum-optimism/optimism/issues/16761)).\n\n### Flashblocks Infrastructure and Monitoring\nNew issues also cover the necessary infrastructure and monitoring for flashblocks. This includes setting up alerting for flashblocks production issues ([#16762](https://github.com/ethereum-optimism/optimism/issues/16762)), deploying a `flashblocks-websocket-proxy` ([#16763](https://github.com/ethereum-optimism/optimism/issues/16763)), and deploying `flashblocks-rpc` nodes ([#16764](https://github.com/ethereum-optimism/optimism/issues/16764)). Partner support criteria evaluation on `eris-0` is also a key focus ([#16765](https://github.com/ethereum-optimism/optimism/issues/16765)).\n\n## ACTIVE ISSUES\n\n### Supervisor Unsafe Target Improvement\nIssue [#16314](https://github.com/ethereum-optimism/optimism/issues/16314) discusses improving the `op-supervisor`'s reset unsafe target. The latest comments indicate that much of the actionable work has been completed, particularly with PR [#16557](https://github.com/ethereum-optimism/optimism/pull/16557). The discussion now centers on whether any further actions are needed, given upcoming refactoring of these components. The issue was closed today, with a note to re-open or create a new issue if necessary, suggesting that the current scope of improvements has been met.", "2025-09-04T03:28:35.494Z"]
["ethereum-optimism/superchain-ops_day_2025-07-23", "ethereum-optimism/superchain-ops", "day", "2025-07-23", "# ethereum-optimism/superchain-ops Daily Update (Jul 23, 2025)\n## OVERVIEW \nThe day saw the closure of an issue related to deploying a flashblocks-websocket-proxy in op-sepolia, indicating progress in network infrastructure. An internal audit-related issue was also opened and closed. An active issue regarding semgrep rules for function naming encountered an error with GitHub Actions.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Network Infrastructure Deployment\nThe issue to deploy a flashblocks-websocket-proxy in op-sepolia was closed, indicating successful implementation or resolution of this network component [#16686](https://github.com/ethereum-optimism/superchain-ops/issues/16686).\n\n### Internal Audit Tracking\nAn internal issue related to the 2024 Q4 Audit was opened and subsequently closed on the same day [#1701](https://github.com/ethereum-optimism/superchain-ops/issues/1701).\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n### Code Style and Semgrep Rules\nIssue [#15115](https://github.com/ethereum-optimism/superchain-ops/issues/15115), which aims to add a semgrep rule for private/internal functions to start with an underscore and public functions not to, encountered a blocker. The `copilot-swe-agent` reported that GitHub Actions is disabled for the repository, preventing it from proceeding with the task. The agent requested that the issue be unassigned and reassigned after the GitHub Actions issue is resolved.", "2025-09-04T03:28:37.611Z"]
["ethereum-optimism/optimism_day_2025-07-23", "ethereum-optimism/optimism", "day", "2025-07-23", "# ethereum-optimism/optimism Daily Update (Jul 23, 2025)\n\n## OVERVIEW \nToday's development focused on optimizing test performance, enhancing testing infrastructure for sync and fault proofs, and refining contract deployment assertions. Several issues related to interop SuperSystem DA types and deployment configurations were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Test Performance and Infrastructure Improvements\nSignificant strides were made in optimizing test execution and expanding testing capabilities. A new feature was added to speed up `op-acceptance-tests` by improving Forge build steps, avoiding unnecessary test contract artifacts, and enabling intelligent rebuilds ([#16784](https://github.com/ethereum-optimism/optimism/pull/16784)). Additionally, scaffolding for `op-sync-tester` was introduced, including session handling, configuration loading from YAML, and initial boot functionality ([#16780](https://github.com/ethereum-optimism/optimism/pull/16780)). The `cannon` project also saw progress with the migration of more tests to the `DiffTester` framework, enhancing post-step checks ([#16787](https://github.com/ethereum-optimism/optimism/pull/16787)).\n\n### Contract Deployment Assertions Refinement\nSeveral pull requests focused on streamlining and removing redundant assertions within the `contracts-bedrock` deployment scripts. This includes removing unnecessary/duplicate system config assertions ([#16585](https://github.com/ethereum-optimism/optimism/pull/16585)), as well as assertions related to `l1erc721bridge` ([#16716](https://github.com/ethereum-optimism/optimism/pull/16716)), dispute game factory ([#16717](https://github.com/ethereum-optimism/optimism/pull/16717)), and optimism mintable erc20 factory ([#16719](https://github.com/ethereum-optimism/optimism/pull/16719)).\n\n### Interoperability and Monitoring Enhancements\nThe `op-e2e` suite was updated to support blob Data Availability (DA) types for the interop supersystem, allowing the batcher to be configured for blob-based data posting ([#16788](https://github.com/ethereum-optimism/optimism/pull/16788)). Furthermore, `dispute-mon` was enhanced to support multiple supervisor RPCs, improving its robustness and reliability ([#16517](https://github.com/ethereum-optimism/optimism/pull/16517)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#16797](https://github.com/ethereum-optimism/optimism/pull/16797) OP contracts\n- [#16798](https://github.com/ethereum-optimism/optimism/pull/16798) Remove proxyAdmin input from the OpChainConfig struct\n- [#16801](https://github.com/ethereum-optimism/optimism/pull/16801) op-batcher: separate metrics and logic\n\n## CLOSED ISSUES\n\n### Interoperability and Data Availability\nThe issue concerning configurable DA types for the interop SuperSystem in `op-e2e` was closed ([#15406](https://github.com/ethereum-optimism/optimism/issues/15406)). This issue, which aimed to allow the batcher to post batches via blobs instead of calldata, was initially closed incorrectly by automation but then reopened. It has now been resolved by the implementation of blob DA type support.\n\n### Sync Tester Development\nThe issue tracking session handling and middleware for the `op-sync-tester` was closed ([#16699](https://github.com/ethereum-optimism/optimism/issues/16699)). This issue focused on enabling the sync tester to maintain stateful information through sessions, initialized via a dedicated endpoint.\n\n### Infrastructure Deployment\nThe issue related to deploying a flashblocks-websocket-proxy in op-sepolia was closed ([#16686](https://github.com/ethereum-optimism/optimism/issues/16686)). This deployment aimed to expose flashblocks functionality if all active sequencers in op-sepolia were flashblocks-enabled.\n\n## NEW ISSUES\n- [#1701](https://github.com/ethereum-optimism/optimism/issues/1701) [2024 Q4 Audit] [page-path]\n\n## ACTIVE ISSUES\n\n### Code Style and Semgrep Rules\nIssue [#15115](https://github.com/ethereum-optimism/optimism/issues/15115), \"Add semgrep rule for private/internal functions,\" remains active. The latest comment from `copilot-swe-agent` indicates an error encountered while attempting to work on the issue, specifically that GitHub Actions is disabled for the repository. The agent requests that the issue be unassigned and then re-assigned after the GitHub Actions issue is resolved.\n\n### Test Target Setup and Teardown\nIssue [#375](https://github.com/ethereum-optimism/optimism/issues/375), \"Incorporate test target setup / teardown as an op-acceptor concern,\" is still open. The most recent comment from `teddyknox` (dated 2025-08-21) indicates that the issue is being closed as Kurtosis is no longer considered important for network testing compared to Sysgo. However, a previous comment from `scharissis` (dated 2025-07-23) provided related pull requests, suggesting ongoing work or discussions around this topic.", "2025-09-04T03:28:39.675Z"]
["ethereum-optimism/optimism_day_2025-07-15", "ethereum-optimism/optimism", "day", "2025-07-15", "# ethereum-optimism/optimism Daily Update (Jul 15, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure by porting several acceptance tests to devstack and introducing a new differential testing framework for Cannon. Significant bug fixes were implemented across `op-service`, `op-batcher`, `kurtosis-devnet`, and `contracts-bedrock`, improving stability and reliability.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing Infrastructure and Stability\nSeveral critical acceptance tests, including ERC20 bridge, withdrawals root, and chain tests, were successfully ported to `op-devstack` for persistent devnets ([#16695](https://github.com/ethereum-optimism/optimism/pull/16695), [#16547](https://github.com/ethereum-optimism/optimism/pull/16547), [#16594](https://github.com/ethereum-optimism/optimism/pull/16594)). A new \"DiffTester\" framework was introduced for Cannon, enabling robust differential testing for VM steps and migrating existing noop/unsupported syscall tests ([#16608](https://github.com/ethereum-optimism/optimism/pull/16608), [#16707](https://github.com/ethereum-optimism/optimism/pull/16707)).\n\n### Core Component Bug Fixes and Improvements\nKey bug fixes include adding JSON keys to the `OutputV0` type in `op-service` ([#16538](https://github.com/ethereum-optimism/optimism/pull/16538)), removing a duplicate check in `op-batcher` ([#16696](https://github.com/ethereum-optimism/optimism/pull/16696)), and fixing a race condition in `op-dispute-mon`'s test suite ([#16697](https://github.com/ethereum-optimism/optimism/pull/16697)). The `kurtosis-devnet` now includes retry mechanisms for build and deploy steps to improve resilience ([#16663](https://github.com/ethereum-optimism/optimism/pull/16663)).\n\n### Contract and Build System Refinements\nAn edge case in the unused imports check script for `contracts-bedrock` was fixed, preventing incorrect flagging of used imports within string quotes or after comments ([#16693](https://github.com/ethereum-optimism/optimism/pull/16693)). CircleCI images were updated to support Dependabot PRs ([#16676](https://github.com/ethereum-optimism/optimism/pull/16676)).\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16698](https://github.com/ethereum-optimism/optimism/pull/16698), was opened to fix the `cfg.InitialBond` assignment in the `add-game-type` sub-command within `op-deployer`.\n\n## CLOSED ISSUES\n\n### Testing and Development Workflow Improvements\nTwo issues related to the Bailiff bot, concerning emoji reactions when working and providing feedback to first-time users, were closed ([#12684](https://github.com/ethereum-optimism/optimism/issues/12684), [#12685](https://github.com/ethereum-optimism/optimism/issues/12685)). The `op-batcher` duplicate code issue was resolved ([#16677](https://github.com/ethereum-optimism/optimism/issues/16677)). The `TestChainFork` port to devstack was completed ([#413](https://github.com/ethereum-optimism/optimism/issues/413)).\n\n### Infrastructure and Deployment Decisions\nDiscussions around the need for NVMe node deployment for `op-rbuilders` were concluded, with a decision to skip it for now due to performance observations and a focus on more immediate issues ([#16689](https://github.com/ethereum-optimism/optimism/issues/16689)). Similarly, the need for dedicated namespacing of `rbuiders` was deprioritized in favor of adding additional labels to alerts and components within the existing sequencer namespace ([#16690](https://github.com/ethereum-optimism/optimism/issues/16690)).\n\n## NEW ISSUES\n\n### Sync Tester Development\nSeveral new issues were opened to outline the development of an `op-sync-tester`. This includes session handling and middleware ([#16699](https://github.com/ethereum-optimism/optimism/issues/16699)), support for the `eth` namespace ([#16700](https://github.com/ethereum-optimism/optimism/issues/16700)) and `engine` namespace ([#16701](https://github.com/ethereum-optimism/optimism/issues/16701)), and integration with `sysext` ([#16704](https://github.com/ethereum-optimism/optimism/issues/16704)) and `sysgo` ([#16702](https://github.com/ethereum-optimism/optimism/issues/16702)). The goal is to support sync acceptance tests ([#16703](https://github.com/ethereum-optimism/optimism/issues/16703)) and enable the `op-sync-tester` as a standalone service ([#16705](https://github.com/ethereum-optimism/optimism/issues/16705)).\n\n### Validator Enhancements and Migration\nNew issues were created to enhance the `op-validator`, including adding Kurtosis support ([#16712](https://github.com/ethereum-optimism/optimism/issues/16712)), automatic startup with `op-acceptor` ([#16711](https://github.com/ethereum-optimism/optimism/issues/16711)), and improved checks for network configurations and contract addresses ([#16713](https://github.com/ethereum-optimism/optimism/issues/16713)). A migration to Blockscout as the block explorer was also proposed ([#16714](https://github.com/ethereum-optimism/optimism/issues/16714)).\n\n## ACTIVE ISSUES\n\n### Flashblocks on Sunnyside Sequencers\nThe issue [#16688](https://github.com/ethereum-optimism/optimism/issues/16688) discusses enabling flashblocks on Sunnyside sequencers. The latest comment indicates that all sequencers (voting and non-voting) for Sepolia on Sunnyside are running with Flashblocks and connected to the websocket proxy. Failover has been tested on the `eris-0` devnet. This issue was deprioritized earlier in favor of stabilizing flashblocks on OP Labs Sepolia infrastructure.\n\n### Txpool Invalid Interop Tx Inclusion\nIssue [#635](https://github.com/ethereum-optimism/optimism/issues/635) concerns the conditional inclusion of invalid interop transactions in the txpool. Recent comments highlight ongoing investigation into the flakiness observed in CI, where invalid transactions were occasionally included despite ingress filtering. Reproduction efforts have been challenging, with attempts to run tests on repeat not consistently reproducing the issue. The discussion points to a potential deeper problem within `geth`'s transaction handling or filtering logic, as the current analysis suggests no clear path for invalid transactions to bypass filters and enter the mempool. Artifacts from a flaky CI run were provided for further analysis.", "2025-09-04T03:28:08.846Z"]
["ethereum-optimism/optimism_day_2025-07-22", "ethereum-optimism/optimism", "day", "2025-07-22", "# ethereum-optimism/optimism Daily Update (Jul 22, 2025)\n## OVERVIEW \nToday's development focused on enhancing the `op-batcher` with advanced data availability throttling mechanisms, improving `kurtosis-devnet`'s support for non-template network descriptions, and migrating `cannon` fault tests. Significant cleanup and refactoring efforts were also undertaken across various components.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Data Availability Throttling for `op-batcher`\nThe `op-batcher` received a significant upgrade with the introduction of advanced throttling control mechanisms for Data Availability (DA). This enhancement expands beyond previous capabilities, offering multiple strategies for more robust and flexible DA management.\n- Enhanced DA Throttling with multiple control mechanisms ([#16588](https://github.com/ethereum-optimism/optimism/pull/16588))\n\n### Infrastructure and Testing Improvements\nKey improvements were made to development infrastructure and testing frameworks, including a fix for `kurtosis-devnet` to support non-template network descriptions and the migration of `cannon` fault tests to a new framework.\n- Support for non-template network descriptions in `kurtosis-devnet` ([#16769](https://github.com/ethereum-optimism/optimism/pull/16769))\n- Migration of `cannon` fault tests to `DiffTester` framework ([#16767](https://github.com/ethereum-optimism/optimism/pull/16767))\n\n### Codebase Refinements and Cleanup\nSeveral refactoring and cleanup tasks were completed, streamlining deployment checks for various contracts and removing outdated `TODO` comments from the codebase. Unnecessary assertions related to `l1standardbridge` were also removed.\n- Cleanup of deploy checks for multiple contracts ([#16749](https://github.com/ethereum-optimism/optimism/pull/16749))\n- Removal of unnecessary `l1standardbridge` assertions ([#16715](https://github.com/ethereum-optimism/optimism/pull/16715))\n- Removal of outdated `TODO` comments ([#16775](https://github.com/ethereum-optimism/optimism/pull/16775))\n- `op-devstack` now tolerates absence of conductors ([#16776](https://github.com/ethereum-optimism/optimism/pull/16776))\n\n## NEWLY OPENED PULL REQUESTS\n- [#16774](https://github.com/ethereum-optimism/optimism/pull/16774) feat(op-acceptance-tests): build cache.\n- [#16781](https://github.com/ethereum-optimism/optimism/pull/16781) Rename TestERC721 Contract to L2ERC721Bridge_TestERC721_Harness.\n- [#16782](https://github.com/ethereum-optimism/optimism/pull/16782) Update Encoding.t.sol: Rename Test Harness for Clarity.\n- [#16789](https://github.com/ethereum-optimism/optimism/pull/16789) fix(op-batcher): accurate pending DA metrics.\n- [#16791](https://github.com/ethereum-optimism/optimism/pull/16791) Supervisor Fuzzing.\n\n## CLOSED ISSUES\n\n### Fault Proof Runbook Finalization\nThe final review of the Fault Proof Incident Runbook v3 was completed, and the \"draft\" label was removed. This involved updating references from other runbooks and renaming versions to clearly indicate which upgrade versions they cover. ([#16651](https://github.com/ethereum-optimism/optimism/issues/16651))\n\n## NEW ISSUES\n\n### `op-sync-tester` Enhancements\nA new issue was opened to support the `sync` namespace in `op-sync-tester`. This includes adding `sync_getSession` for monitoring session status and `sync_delete` for managing sessions. ([#16778](https://github.com/ethereum-optimism/optimism/issues/16778))\n\n## ACTIVE ISSUES\n\n### Configurable DA Type for `op-e2e` Interop SuperSystem\nDiscussion continues on making the Data Availability (DA) type configurable for the `op-e2e` interop `SuperSystem` ([#15406](https://github.com/ethereum-optimism/optimism/issues/15406)). The issue was briefly closed incorrectly due to automation but has since been reopened. While the current `SuperSystem` uses calldata for batch posting, there's a desire for blob posting, especially for interop Fault Proof (FP) testing. There's an ongoing debate about whether this is a blocker for RC Beta, with some suggesting that existing blob preimage tests provide sufficient coverage and that the `SuperSystem` itself might be deprecated in favor of `op-devstack`. The consensus is that this needs to be addressed before removing pre-interop FP support, but it doesn't necessarily block immediate interop shipping.", "2025-09-04T03:28:35.253Z"]
["ethereum-optimism/optimism_day_2025-07-25", "ethereum-optimism/optimism", "day", "2025-07-25", "# ethereum-optimism/optimism Daily Update (Jul 25, 2025)\n## OVERVIEW \nToday's development focused on refining the `op-batcher`'s throttling behavior, improving contract assertions, and addressing test suite stability. Key updates include enhanced visibility for batcher throttling and a fix for the OPCM test suite.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Batcher Throttling and Data Handling Improvements\nThe `op-batcher` received significant updates to its throttling mechanism. A new feature ([#16804](https://github.com/ethereum-optimism/optimism/pull/16804)) makes the maximum throttle threshold more visible in logs and API, improving operational transparency. Additionally, the batcher was updated to always use blobs while throttling ([#16773](https://github.com/ethereum-optimism/optimism/pull/16773)), preventing unintended fallback to calldata during periods of high data backlog.\n\n### Contract Assertion Cleanup and Test Fixes\nEfforts were made to clean up assertions across various Bedrock contracts, including the Optimism Portal, OPCM, ASR, and EthLockbox ([#16819](https://github.com/ethereum-optimism/optimism/pull/16819)). This refactoring aims to improve code clarity and maintainability. A specific bug fix was also implemented for the OPCM test suite ([#16813](https://github.com/ethereum-optimism/optimism/pull/16813)), ensuring its reliability.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Batcher Throttling Behavior Resolved\nThe issue concerning the `op-batcher` preventing auto-DA switching to calldata if throttling is activated ([#16691](https://github.com/ethereum-optimism/optimism/issues/16691)) has been closed. This indicates that the batcher's behavior during throttling, specifically its preference for blobs, has been successfully addressed.\n\n### Supervisor and Node Reset Logic\nThe issue related to improving the reset unsafe target logic in `op-supervisor` and `op-node` ([#16314](https://github.com/ethereum-optimism/optimism/issues/16314)) has been closed. The latest comment indicates that the issue is being closed due to recent project changes, with a suggestion to re-open or create a new issue if necessary. Previous discussions highlighted partial implementation and remaining considerations for pre- and post-Interop handling.\n\n### Logger Utility Refinement\nThe issue regarding a more reusable logger utility to change the log-level of sub-loggers in `op-service` ([#15139](https://github.com/ethereum-optimism/optimism/issues/15139)) has been closed. The resolution points to the existing mechanism for adjusting log levels based on context data via the log handler method, which is already supported by devstack.\n\n## NEW ISSUES\n\n### OPCM Test Suite Failure Investigation\nA new issue has been opened to investigate why the `OPContractsManager_Upgrade_Test::test_verifyOpcmCorrectness_succeeds()` test fails specifically on the OP Mainnet upgrade test but not on other fork tests ([#16823](https://github.com/ethereum-optimism/optimism/issues/16823)).\n\n### Geth v1.16.1 Merge Completion\nA new issue has been created to track the completion of the Geth v1.16.1 merge ([#16825](https://github.com/ethereum-optimism/optimism/issues/16825)). This issue lists the relevant open pull requests for this merge.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:45.813Z"]
["ethereum-optimism/optimism_day_2025-07-26", "ethereum-optimism/optimism", "day", "2025-07-26", "# ethereum-optimism/optimism Daily Update (Jul 26, 2025)\n## OVERVIEW \nThe day's development focused on internal code review with one new pull request opened for the `op-batcher` component. A new issue was also created to address a template update for invalidating dispute games within the Superchain.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\n*   **Internal Code Review:** A new pull request, [#16830](https://github.com/ethereum-optimism/optimism/pull/16830), was opened for the `op-batcher` component. This PR addresses the visibility of the `NextFrame` method, noting that it cannot be used outside its current package.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n*   **Superchain Operations Template Update:** A new issue, [#16827](https://github.com/ethereum-optimism/optimism/issues/16827), was created to develop a U16-compatible `superchain-ops` template. This template is intended to invalidate all existing dispute games by updating their retirement timestamp, as part of the fault proofs recovery runbook.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:44.571Z"]
["ethereum-optimism/optimism_day_2025-07-24", "ethereum-optimism/optimism", "day", "2025-07-24", "# ethereum-optimism/optimism Daily Update (Jul 24, 2025)\n\n## OVERVIEW \nToday's development focused on enhancing the `op-node`'s P2P configuration with a new flag for payload timestamp thresholds and updating `op-acceptance-tests`. Significant refactoring improved L1 bridge test coverage, and new issues were opened concerning event system refactoring, execution multiplexing, and minimum base fees.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### P2P Network Configuration\nA new configurable `GossipTimestampThreshold` flag was added to the `op-node` to allow operators to customize the maximum age for rejecting gossip messages with old payload timestamps, improving network flexibility. ([#16718](https://github.com/ethereum-optimism/optimism/pull/16718))\n\n### Test Infrastructure Updates\nThe `op-acceptance-tests` were updated to `v1.1.1`, ensuring compatibility and leveraging the latest testing features. ([#16802](https://github.com/ethereum-optimism/optimism/pull/16802))\n\n### L1 Bridge Test Refinements\nTest coverage and quality for both `L1StandardBridge` and `L1ERC721Bridge` were improved through refactoring, utilizing AI assistance with a revised prompt. ([#16772](https://github.com/ethereum-optimism/optimism/pull/16772))\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n- [#16814](https://github.com/ethereum-optimism/optimism/pull/16814) proposes to remove ambiguous uses of the word \"pending\" within the `op-batcher`.\n- [#16816](https://github.com/ethereum-optimism/optimism/pull/16816) aims to refactor the `op-batcher` by moving business logic out of the metrics package.\n\n## CLOSED ISSUES\nA short-lived issue regarding an Event System Refactor POC was opened and closed on the same day. ([#16806](https://github.com/ethereum-optimism/optimism/issues/16806))\n\n## NEW ISSUES\n### Core Protocol Enhancements\nNew issues were opened to track significant protocol-level work:\n- A Proof of Concept for an Event System Refactor. ([#16806](https://github.com/ethereum-optimism/optimism/issues/16806))\n- Tracking for Execution Multiplexing, a key initiative for performance. ([#16809](https://github.com/ethereum-optimism/optimism/issues/16809))\n- Tracking for the implementation of a Minimum Base Fee, referencing a ratified design document. ([#16807](https://github.com/ethereum-optimism/optimism/issues/16807))\n\n### RPC Provider Support\nAn issue was created to address the need for RPC providers to access `flashblocks-websocket-url` to power their `flashblocks-rpc` nodes. ([#16811](https://github.com/ethereum-optimism/optimism/issues/16811))\n\n## ACTIVE ISSUES\n### Flashblocks Monitoring and Alerting Improvements\nDiscussion on [#16388](https://github.com/ethereum-optimism/optimism/issues/16388) continues to focus on establishing robust monitoring and alerting for flashblocks integration, especially as op-sepolia approaches enablement. Key points from recent comments include:\n- **Metrics for Monitoring:** Specific metrics were outlined, such as minimum peer count (4), SLAs around block progression and divergence, and alerts for pending transactions exceeding thresholds (e.g., ~60).\n- **Flashblocks-Specific Metrics:** Suggestions include an SLA-like metric for `reth_op_rbuilder_total_block_built_duration` (p99 over a time interval) and monitoring `flashblocks-websocket-proxy` connections for failures and errors.\n- **RPC Node Health:** Metrics for `flashblocks-rpc` node health include tracking upstream errors and message rates, with the absence of these metrics serving as an alert.\n- **`op-node-rbuilder`:** This component should inherit most `op-node` alerts and metrics.\n- **Associated PRs:** A related PR in the `k8s` repository ([https://github.com/ethereum-optimism/k8s/pull/7162](https://github.com/ethereum-optimism/k8s/pull/7162)) was noted.\n- **Ongoing Work:** Other in-flight work related to flashblocks was mentioned, including `op-alloy` and another Optimism PR. A draft reth PR was also highlighted for early review.", "2025-09-04T03:28:42.831Z"]
["ethereum-optimism/op-geth_day_2025-07-28", "ethereum-optimism/op-geth", "day", "2025-07-28", "# ethereum-optimism/op-geth Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe day's development focused on laying the groundwork for configurable base fees and data gas, with two new feature pull requests opened and two new issues created to track related design and implementation details.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new feature pull requests were opened:\n- A new feature to introduce a configurable minimum base fee was initiated: [#648](https://github.com/ethereum-optimism/op-geth/pull/648).\n- Another new feature to implement configurable data gas per token was started: [#653](https://github.com/ethereum-optimism/op-geth/pull/653).\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nTwo new issues were opened today, both related to the `min-base-fee` feature:\n- **Block Header and Payload Attributes Updates:** An issue was created to add `minBaseFee` to the block header's `extraData` field, referencing a design document and a related specs issue: [#649](https://github.com/ethereum-optimism/op-geth/issues/649).\n- **Payload Attributes V3 Extension:** A separate issue was opened to add an extra `uint64` for `minBaseFee` in `PayloadAttributesV3`, emphasizing feature-fork separation and referencing the same specs issue: [#650](https://github.ethereum-optimism/op-geth/issues/650).\n\n## ACTIVE ISSUES\n**Min Base Fee Tracking:**\nThe tracking issue [#16807](https://github.com/ethereum-optimism/op-geth/issues/16807) for the Min Base Fee feature saw recent activity. On July 28, 2025, `wlawt` provided an update on other in-flight work relevant to this feature, specifically mentioning progress in `op-alloy` ([#580](https://github.com/alloy-rs/op-alloy/pull/580)) and `optimism` ([#16852](https://github.com/ethereum-optimism/optimism/pull/16852)). Later, on August 1, 2025, `wlawt` also added an early reth draft ([#17704](https://github.com/paradigmxyz/reth/pull/17704)) for review to facilitate early decision-making. Most recently, on September 3, 2025, `geoknee` linked to the relevant specs document ([https://specs.optimism.io/protocol/jovian/overview.html](https://specs.optimism.io/protocol/jovian/overview.html)).", "2025-09-04T03:28:49.614Z"]
["ethereum-optimism/optimism_day_2025-07-28", "ethereum-optimism/optimism", "day", "2025-07-28", "# ethereum-optimism/optimism Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe day saw significant activity in new feature development, particularly around configurable base fees and data gas costs, alongside governance improvements and ongoing discussions on flashblocks-related alerts.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nFour new pull requests were opened today, focusing on core protocol enhancements and governance:\n- [#16838](https://github.com/ethereum-optimism/optimism/pull/16838) addresses an issue with `superchainConfig` upgrades and adds support for multiple configurations.\n- [#16852](https://github.com/ethereum-optimism/optimism/pull/16852) introduces a configurable minimum base fee.\n- [#16854](https://github.com/ethereum-optimism/optimism/pull/16854) adds a configurable calldata gas cost parameter (`dataGasPerToken`).\n- [#16861](https://github.com/ethereum-optimism/optimism/pull/16861) implements a proposal validator for governance.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nFour new issues were opened today, primarily focusing on configurable parameters and system alerts:\n- **Configurable System Parameters:**\n    - [#16839](https://github.com/ethereum-optimism/optimism/issues/16839) proposes adding a `minBaseFee` configuration variable to the `SystemConfig` contract, including a new `setMinBaseFeeLog2` method and `ConfigUpdate` event.\n    - [#16843](https://github.com/ethereum-optimism/optimism/issues/16843) tracks the rollout and release of `op-batcher`.\n- **Flashblocks System Alerts:**\n    - [#16867](https://github.com/ethereum-optimism/optimism/issues/16867) suggests an alert for when a non-flashblocks-enabled sequencer is active or flashblocks are turned off, indicating a potential issue.\n    - [#16868](https://github.com/ethereum-optimism/optimism/issues/16868) proposes an alert for low peer count health of flashblocks-enabled sequencers, specifically when the count drops below 3 or 4.\n\n## ACTIVE ISSUES\n- **Min Base Fee Tracking:**\n    - [#16807](https://github.com/ethereum-optimism/optimism/issues/16807) continues to track the implementation of the minimum base fee. The latest comments highlight ongoing work, including a reth draft ([https://github.com/paradigmxyz/reth/pull/17704](https://github.com/paradigmxyz/reth/pull/17704)) and related in-flight work on op-alloy ([https://github.com/alloy-rs/op-alloy/pull/580](https://github.com/alloy-rs/op-alloy/pull/580)) and a relevant pull request ([https://github.com/ethereum-optimism/optimism/pull/16852](https://github.com/ethereum-optimism/optimism/pull/16852)).", "2025-09-04T03:28:50.395Z"]
["ethereum-optimism/specs_day_2025-07-28", "ethereum-optimism/specs", "day", "2025-07-28", "# ethereum-optimism/specs Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe day's activity focused on defining new specifications, with two new issues opened to address the `SuperchainConfig` type and the `min-base-fee` specification. Discussions continued on the active \"Min Base Fee\" tracking issue, highlighting ongoing development efforts in related repositories.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Specification Definition\nTwo new issues were opened to define new specifications. Issue [#741](https://github.com/ethereum-optimism/specs/issues/741) was created to port the `SuperchainConfig` type from the `superchain-registry` to the specs, aiming to add this type to the specification. Issue [#742](https://github.com/ethereum-optimism/specs/issues/742) was opened to write the specification for `min-base-fee`, referencing a ratified design document. This issue was later closed on August 29, 2025, via a pull request.\n\n## ACTIVE ISSUES\n### Min Base Fee Tracking\nDiscussions continued on the active tracking issue [#16807](https://github.com/ethereum-optimism/specs/issues/16807) for \"Min Base Fee\". The latest comments indicate ongoing development efforts in other repositories. On August 1, 2025, a reth draft was shared to gather early feedback and identify decisions. On July 28, 2025, other in-flight work related to `op-alloy` and `optimism` repositories was highlighted for tracking.", "2025-09-04T03:28:52.200Z"]
["ethereum-optimism/docs_day_2025-07-30", "ethereum-optimism/docs", "day", "2025-07-30", "# ethereum-optimism/docs Daily Update (Jul 30, 2025)\n## OVERVIEW \nThe day saw no completed work, but two new pull requests were opened, focusing on quick fixes for Nethermind documentation and an update to the L2 rollup testnet tutorial.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed technical developments to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n- A pull request was opened to address quick fixes related to Nethermind documentation ([#1704](https://github.com/ethereum-optimism/docs/pull/1704)).\n- Another pull request was initiated to update the L2 rollup testnet tutorial ([#1705](https://github.com/ethereum-optimism/docs/pull/1705)).\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:55.225Z"]
["ethereum-optimism/op-analytics_day_2025-07-31", "ethereum-optimism/op-analytics", "day", "2025-07-31", "# ethereum-optimism/op-analytics Daily Update (Jul 31, 2025)\n## OVERVIEW \nThe day's development focused on adding a new notebook for flashblocks analysis. An old issue regarding L2 Testnet Tutorial clarification was also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Analytics Notebooks\n* A new notebook for flashblocks analysis was added to `notebooks/misc_analysis`. ([#1714](https://github.com/ethereum-optimism/op-analytics/pull/1714))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Documentation Clarification\n* An issue requesting clarification on the L1 Contract Deployment documentation for the L2 Testnet Tutorial was closed. The documentation has since been updated. ([#1401](https://github.com/ethereum-optimism/op-analytics/issues/1401))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### L2 Testnet Tutorial Clarification\nIssue [#1401](https://github.com/ethereum-optimism/op-analytics/issues/1401), concerning clarification needed on the L1 Contract Deployment documentation for the L2 Testnet Tutorial, was closed today. The latest comment from @krofax confirmed that the relevant documentation has been updated and encouraged the user to raise a new issue if further blockers are encountered. This issue had been active since February 2025, with multiple users expressing similar difficulties.", "2025-09-04T03:28:58.960Z"]
["ethereum-optimism/optimism_day_2025-07-29", "ethereum-optimism/optimism", "day", "2025-07-29", "# ethereum-optimism/optimism Daily Update (Jul 29, 2025)\n## OVERVIEW \nThe day saw the opening of two new pull requests focusing on Go implementation updates for a creator pattern and initial execution multiplexing. A new issue was opened to explore event call graph tracing, while an active issue regarding congestion-based builder transaction reordering received a new comment.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n- [#16869](https://github.com/ethereum-optimism/optimism/pull/16869) Go implementation updates for CWIA creator pattern.\n- [#16873](https://github.com/ethereum-optimism/optimism/pull/16873) op-node, op-devstack: initial execution multiplexing.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Event System Tracing\nA new issue, [#16874](https://github.com/ethereum-optimism/optimism/issues/16874), was opened to add logic for tracing the event flow within `op-service`, aiming to visualize call traces for events like `p2p.ReceivedBlockEvent`. This issue was later closed on August 25, 2025, as similar functionality was found in another pull request.\n\n## ACTIVE ISSUES\n\n### Congestion-based Builder Transaction Reordering\nThe active issue [#306](https://github.com/ethereum-optimism/optimism/issues/306), concerning congestion-based builder transaction reordering, received a new comment from @moonfury-ops, who expressed interest in collaborating with @sebastianst on the topic. The issue's body describes the idea of tracking DA usage excess over time with an exponential cost/score penalty, suggesting it could be implemented outside the protocol to test the concept for an L1 congestion cost component.", "2025-09-04T03:28:54.838Z"]
["ethereum-optimism/optimism_day_2025-07-31", "ethereum-optimism/optimism", "day", "2025-07-31", "# ethereum-optimism/optimism Daily Update (Jul 31, 2025)\n## OVERVIEW \nThe day saw several dependency updates and new feature preparations, alongside the closure of a long-standing documentation clarity issue.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n- **Dependency Updates**: Multiple `gomod` dependencies were bumped, including `github.com/bmatcuk/doublestar/v4` to 4.9.1, `github.com/urfave/cli/v2` to 2.27.7, and `github.com/prometheus/client_golang` to 1.23.0. ([#16921](https://github.com/ethereum-optimism/optimism/pull/16921), [#16924](https://github.com/ethereum-optimism/optimism/pull/16924), [#16928](https://github.com/ethereum-optimism/optimism/pull/16928))\n- **Contract Interface and Upgrade Preparations**: A new pull request was opened to make `IDelayedWETH` inherit `IProxyAdminOwnedBase`, and another to clear upgrades for U17. A comment fix for `opcm-upgrade-checks` was also submitted. ([#16912](https://github.com/ethereum-optimism/optimism/pull/16912), [#16919](https://github.com/ethereum-optimism/optimism/pull/16919), [#16913](https://github.com/ethereum-optimism/optimism/pull/16913))\n\n## NEWLY OPENED PULL REQUESTS\n- [#16912](https://github.com/ethereum-optimism/optimism/pull/16912) make `IDelayedWETH` inherit `IProxyAdminOwnedBase`\n- [#16913](https://github.com/ethereum-optimism/optimism/pull/16913) fix comment of opcm-upgrade-checks\n- [#16919](https://github.com/ethereum-optimism/optimism/pull/16919) feat: clear upgrades for U17\n- [#16921](https://github.com/ethereum-optimism/optimism/pull/16921) dependabot(gomod): bump github.com/bmatcuk/doublestar/v4 from 4.8.1 to 4.9.1\n- [#16924](https://github.com/ethereum-optimism/optimism/pull/16924) dependabot(gomod): bump github.com/urfave/cli/v2 from 2.27.6 to 2.27.7\n- [#16928](https://github.com/ethereum-optimism/optimism/pull/16928) dependabot(gomod): bump github.com/prometheus/client_golang from 1.22.0 to 1.23.0\n\n## CLOSED ISSUES\n\n- **Documentation Clarification**: The issue regarding clarification needed on L1 contract deployment documentation was closed, with an apology for the delay and confirmation that the relevant documentation has been updated. ([#1401](https://github.com/ethereum-optimism/optimism/issues/1401))\n\n## NEW ISSUES\n\n- None\n\n## ACTIVE ISSUES\n\n- **L2 Testnet Tutorial Clarification** ([#1401](https://github.com/ethereum-optimism/optimism/issues/1401)): This issue, concerning confusing points in the \"Deploy the L1 contracts\" section of the L2 Testnet Tutorial, was closed today. The latest comment from @krofax confirmed that the documentation has been updated and encouraged users to raise the issue again if they encounter further blockers. This resolves a long-standing request for clarification on using `op-deployer` versus script-based deployment.", "2025-09-04T03:29:00.587Z"]
["ethereum-optimism/op-geth_day_2025-08-06", "ethereum-optimism/op-geth", "day", "2025-08-06", "# ethereum-optimism/op-geth Daily Update (Aug 6, 2025)\n## OVERVIEW \nThe day saw no direct code contributions in terms of features, bug fixes, or refactoring. The primary activity involved the opening of a new pull request related to calldata footprint limits and the resolution of an issue concerning project flagging.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#655](https://github.com/ethereum-optimism/op-geth/pull/655), was opened to address a spike related to calldata footprint block limits.\n\n## CLOSED ISSUES\n### Project Flagging Resolution\nAn issue concerning a project being inappropriately flagged, [#72](https://github.com/ethereum-optimism/op-geth/issues/72), was opened and subsequently closed today. The issue was resolved, with a reference to issue #73.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Project Flagging Feedback\nIssue [#72](https://github.com/ethereum-optimism/op-geth/issues/72), \"Onchain Builders: Project got flagged inappropriately,\" was active today. The issue was opened by `sexychinese` to provide feedback on an OP allocation to projects, specifically regarding their project being flagged in a Retro-Funding PR. `ccerv1` acknowledged the issue and stated that it was being looked into. Later, `ccerv1` confirmed the issue was resolved, referencing issue #73.", "2025-09-04T03:29:07.315Z"]
["ethereum-optimism/superchain-registry_day_2025-08-01", "ethereum-optimism/superchain-registry", "day", "2025-08-01", "# ethereum-optimism/superchain-registry Daily Update (Aug 1, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions and tracking for the \"Min Base Fee\" feature, with a new comment on an active issue and a discussion about state growth estimation on a closed issue.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\nNo issues were closed on this date.\n\n## NEW ISSUES\n\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n### Min Base Fee Tracking and Implementation Progress\nDiscussion on [#16807](https://github.com/ethereum-optimism/superchain-registry/issues/16807) continues to track the \"Min Base Fee\" feature. The latest comment from wlawt on August 1st, 2025, at 15:46:47Z, highlights an early reth draft ([https://github.com/paradigmxyz/reth/pull/17704](https://github.com/paradigmxyz/reth/pull/17704)) for early review and decision-making. This follows a previous comment from wlawt on July 28th, 2025, at 16:19:48Z, which listed other in-flight work related to this feature, including op-alloy ([https://github.com/alloy-rs/op-alloy/pull/580](https://github.com/alloy-rs/op-alloy/pull/580)) and optimism ([https://github.com/ethereum-optimism/optimism/pull/16852](https://github.com/ethereum-optimism/optimism/pull/16852)) repositories. The issue references the ratified design document ([https://github.com/ethereum-optimism/design-docs/pull/295](https://github.com/ethereum-optimism/design-docs/pull/295)).\n\n### Min Base Fee Specification and State Growth Estimation\nOn the closed issue [#742](https://github.com/ethereum-optimism/superchain-registry/issues/742), which focused on writing the specification for the \"min-base-fee,\" a new comment from geoknee on August 1st, 2025, at 21:26:38Z, discussed the need to compute a rough estimate for the state growth implied by this feature. This estimate is intended to be included in the motivation section of the specifications. A subsequent comment from geoknee on August 11th, 2025, at 14:51:01Z, clarified that this state growth estimation was better placed in the FMA and is now being tracked in a separate design document issue ([https://github.com/ethereum-optimism/design-docs/issues/316](https://github.com/ethereum-optimism/design-docs/issues/316)). The issue was ultimately closed on August 29th, 2025, at 10:29:35Z, via a pull request in the specs repository ([https://github.com/ethereum-optimism/specs/pull/747](https://github.com/ethereum-optimism/specs/pull/747)).", "2025-09-04T03:29:04.562Z"]
["ethereum-optimism/superchain-ops_day_2025-08-01", "ethereum-optimism/superchain-ops", "day", "2025-08-01", "# ethereum-optimism/superchain-ops Daily Update (Aug 1, 2025)\n\n## OVERVIEW\n\nThe day's development focused on a significant feature addition: supporting multi-level nesting for Gnosis Safe signing, enhancing the flexibility and depth of secure operations within the Superchain.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Gnosis Safe Signing Capabilities\n\nA major feature was introduced to enable multi-level nesting for Gnosis Safe signing ([#1150](https://github.com/ethereum-optimism/superchain-ops/pull/1150)). This allows for signing with Gnosis Safes at arbitrary depths, moving beyond the previous limitation of a single level. This improvement is crucial for op-stack chains requiring more complex and secure transaction signing workflows.\n\n## NEWLY OPENED PULL REQUESTS\n\nA new pull request, [#1157](https://github.com/ethereum-optimism/superchain-ops/pull/1157), was opened to fix the `set respected game template`.\n\n## CLOSED ISSUES\n\nNo issues were closed on this date.\n\n## NEW ISSUES\n\nNo new issues were opened on this date.\n\n## ACTIVE ISSUES\n\n### Tracking Min Base Fee Implementation\n\nDiscussions continued on [#16807](https://github.com/ethereum-optimism/superchain-ops/issues/16807), which tracks the implementation of the minimum base fee. The latest comment from wlawt at 2025-08-01T15:46:47Z shared an early reth draft ([https://github.com/paradigmxyz/reth/pull/17704](https://github.com/paradigmxyz/reth/pull/17704)) to gather early feedback and decisions.\n\n### Min Base Fee Specification\n\nIssue [#742](https://github.com/ethereum-optimism/superchain-ops/issues/742), concerning the specification for the minimum base fee, saw a new comment from geoknee at 2025-08-01T21:26:38Z. The comment highlighted the need to compute a rough estimate for the state growth implied by this feature, suggesting its inclusion in the motivation section of the specifications.", "2025-09-04T03:29:04.088Z"]
["ethereum-optimism/optimism_day_2025-08-01", "ethereum-optimism/optimism", "day", "2025-08-01", "# ethereum-optimism/optimism Daily Update (Aug 1, 2025)\n## OVERVIEW \nThe day saw the opening of two new pull requests, including an `op-node` update to use `math/rand/v2` and a Dependabot bump for `golang.org/x/sync`. A new issue was opened regarding mempool rebroadcaster cronjob deployment. Discussions continued on tracking the Min Base Fee and writing its specification.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this date.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n- **`op-node` Update**: [#16937](https://github.com/ethereum-optimism/optimism/pull/16937) proposes updating the `op-node` to use `math/rand/v2`.\n- **Dependency Bump**: [#16949](https://github.com/ethereum-optimism/optimism/pull/16949) is a Dependabot PR to bump the `golang.org/x/sync` dependency from version 0.14.0 to 0.16.0.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nA new issue was opened today:\n- **Mempool Rebroadcaster Deployment**: [#16932](https://github.com/ethereum-optimism/optimism/issues/16932) was created to track the deployment of a mempool rebroadcaster cronjob. This is in response to observations from Base regarding transactions being rejected by the `rbuilder` mempool while accepted by `geth`, leading to potential mempool drifts.\n\n## ACTIVE ISSUES\n- **[Tracking] Min Base Fee**: Discussion continued on [#16807](https://github.com/ethereum-optimism/optimism/issues/16807), which tracks the Min Base Fee feature. A new comment from wlawt on August 1st, 2025, at 15:46:47Z, added an early reth draft for review: `https://github.com/paradigmxyz/reth/pull/17704`.\n- **min-base-fee: write specification**: On [#742](https://github.com/ethereum-optimism/optimism/issues/742), which focuses on writing the specification for the min-base-fee, geoknee commented on August 1st, 2025, at 21:26:38Z, stating the need to compute a rough estimate for the state growth implied by this feature to include in the motivation section of the specs.", "2025-09-04T03:29:03.521Z"]
["ethereum-optimism/specs_day_2025-08-06", "ethereum-optimism/specs", "day", "2025-08-06", "# ethereum-optimism/specs Daily Update (Aug 6, 2025)\n## OVERVIEW \nThe day's development focused on protocol specification with the introduction of a new pull request for block calldata limits. An issue regarding project flagging in RetroPGF was also addressed and resolved.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#746](https://github.com/ethereum-optimism/specs/pull/746), was opened to add a specification for block calldata limits. This PR is currently open and awaiting review.\n\n## CLOSED ISSUES\n\nNo issues were closed during this period.\n\n## NEW ISSUES\n\nNo new issues were opened during this period.\n\n## ACTIVE ISSUES\n\n### RetroPGF Project Flagging Resolution\nIssue [#72](https://github.com/ethereum-optimism/specs/issues/72), \"Onchain Builders: Project got flagged inappropriately,\" was active and subsequently resolved. The issue concerned a project being incorrectly flagged during the RetroPGF allocation process. The user \"sexychinese\" reported the flagging and provided details about their \"World Mini Apps\" project. \"ccerv1\" acknowledged the issue and confirmed it was being investigated. Later, \"ccerv1\" confirmed the issue was resolved, referencing issue #73.", "2025-09-04T03:29:08.320Z"]
["ethereum-optimism/optimism_day_2025-08-06", "ethereum-optimism/optimism", "day", "2025-08-06", "# ethereum-optimism/optimism Daily Update (Aug 6, 2025)\n## OVERVIEW \nThe day saw new pull requests focusing on performance optimizations and improved method name translation. A notable issue regarding project flagging for OP allocation was raised and subsequently resolved.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nSeveral new pull requests were opened, primarily focusing on performance and code improvements. These include:\n- **Performance Enhancements:** [#16964](https://github.com/ethereum-optimism/optimism/pull/16964) proposes using `bytes.Buffer` in `op-service` for potential efficiency gains, while [#16978](https://github.com/ethereum-optimism/optimism/pull/16978) suggests preallocating resources in `op-challenger` to optimize performance.\n- **Cost Analysis Spike:** A spike for analyzing calldata footprint cost was initiated with [#16970](https://github.com/ethereum-optimism/optimism/pull/16970).\n- **Method Name Translation:** [#16974](https://github.com/ethereum-optimism/optimism/pull/16974) addresses an issue with translating method names, ensuring that the correct name is used even when parameters differ.\n\n## CLOSED ISSUES\n\nNo issues were closed during this period.\n\n## NEW ISSUES\n\nNo new issues were opened during this period.\n\n## ACTIVE ISSUES\n\n### Project Flagging for OP Allocation\nIssue [#72](https://github.com/ethereum-optimism/optimism/issues/72), titled \"Onchain Builders: Project got flagged inappropriately,\" was opened to address concerns about a project being incorrectly flagged during the OP allocation process. The user \"sexychinese\" reported that their project, \"World Mini Apps,\" which includes multiple mini-apps, was flagged. The Optimism team, specifically \"ccerv1,\" acknowledged the issue and confirmed they were investigating. The issue was subsequently resolved, with \"ccerv1\" stating, \"Issue has been resolved: #73.\"", "2025-09-04T03:29:08.643Z"]
["ethereum-optimism/optimism_day_2025-08-08", "ethereum-optimism/optimism", "day", "2025-08-08", "# ethereum-optimism/optimism Daily Update (Aug 8, 2025)\n## OVERVIEW \nToday's development focused on enhancements to the `op-batcher` component, specifically improving its robustness and observability. This includes better handling of channel closure reasons and increased resilience for AltDA input setting. Dependency updates were also performed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nThree new pull requests were opened today:\n*   [#16984](https://github.com/ethereum-optimism/optimism/pull/16984) introduces a metric mapping for `op-batcher` to implement channel close reasons, enhancing observability.\n*   [#16985](https://github.com/ethereum-optimism/optimism/pull/16985) aims to make the `op-batcher`'s AltDA `SetInput` function more resilient by incorporating per-request context and backoff mechanisms.\n*   [#16989](https://github.com/ethereum-optimism/optimism/pull/16989) is a dependency update, bumping `github.com/lmittmann/w3` from version 0.19.5 to 0.20.2.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:29:09.150Z"]
["ethereum-optimism/superchain-registry_day_2025-08-07", "ethereum-optimism/superchain-registry", "day", "2025-08-07", "# ethereum-optimism/superchain-registry Daily Update (Aug 7, 2025)\n## OVERVIEW \nThe day's activity primarily focused on the initiation of a new feature, specifically the addition of the Sova Sepolia Testnet. There were no completed features, bug fixes, code refactoring, documentation enhancements, or tests added.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo key technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1094](https://github.com/ethereum-optimism/superchain-registry/pull/1094), was opened to add the Sova Sepolia Testnet.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Documentation Request for PR Title\nIssue [#1675](https://github.com/ethereum-optimism/superchain-registry/issues/1675), \"[DOCS] Add PR title,\" remains active. The latest comments from Saad4343 on August 7, 2025, repeatedly state \"0xaed4b681fb202fed67f47e8580303f871db37ada.\" This appears to be a repeated hash or identifier, but its specific relevance to the documentation request for PR titles is not immediately clear from the comments alone. The issue is slated to be closed on August 28, 2025.", "2025-09-04T03:29:09.412Z"]
["ethereum-optimism/optimism_day_2025-08-07", "ethereum-optimism/optimism", "day", "2025-08-07", "# ethereum-optimism/optimism Daily Update (Aug 7, 2025)\n## OVERVIEW \nThe day's activity primarily focused on dependency updates, with three new pull requests opened to bump Go module versions. No new features, bug fixes, or code refactoring were completed.\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this day.\n\n## NEWLY OPENED PULL REQUESTS\nThree new pull requests were opened, all related to Go module dependency updates:\n*   [#16980](https://github.com/ethereum-optimism/optimism/pull/16980) dependabot(gomod): bump github.com/multiformats/go-multiaddr from 0.14.0 to 0.16.1\n*   [#16982](https://github.com/ethereum-optimism/optimism/pull/16982) dependabot(gomod): bump github.com/docker/go-connections from 0.5.0 to 0.6.0\n*   [#16983](https://github.com/ethereum-optimism/optimism/pull/16983) dependabot(gomod): bump golang.org/x/mod from 0.22.0 to 0.27.0\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n### Documentation Request Discussion\nIssue [#1675](https://github.com/ethereum-optimism/optimism/issues/1675), titled \"[DOCS] Add PR title\", received four new comments from user Saad4343. All comments, posted at 11:39:27Z and 11:44:37Z, consist of the same string: \"0xaed4b681fb202fed67f47e8580303f871db37ada\". The purpose of these comments is not clear from the provided data.", "2025-09-04T03:29:08.953Z"]
["ethereum-optimism/optimism_day_2025-08-09", "ethereum-optimism/optimism", "day", "2025-08-09", "# ethereum-optimism/optimism Daily Update (Aug 9, 2025)\n## OVERVIEW \nToday's development activity was light, with a single new pull request opened focusing on an optimization for the Kurtosis devnet.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16990](https://github.com/ethereum-optimism/optimism/pull/16990), was opened to optimize the Kurtosis devnet by using preallocated slices.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:29:09.596Z"]
["ethereum-optimism/optimism_day_2025-08-10", "ethereum-optimism/optimism", "day", "2025-08-10", "# ethereum-optimism/optimism Daily Update (Aug 10, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to address an HTTP response body leak. An existing issue related to `op-proposer` transaction creation received a new comment, and a long-standing issue concerning `min-base-fee` failure modes analysis was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16992](https://github.com/ethereum-optimism/optimism/pull/16992), was opened to fix an HTTP response body leak that occurs during etherscan verification polling.\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Analysis Completed\nThe issue [#311](https://github.com/ethereum-optimism/optimism/issues/311), which tracked the failure modes analysis for `min-base-fee`, was closed today. The analysis is complete and documented in a Notion page.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### op-proposer Transaction Creation Failure\nIssue [#13502](https://github.com/ethereum-optimism/optimism/issues/13502), concerning `op-proposer` failing to create transactions, received a new comment today. A user reported encountering the same error and shared their `op-proposer` startup command, seeking a solution. This issue was previously closed but has seen renewed discussion.", "2025-09-04T03:29:10.928Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-12", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-12", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 12, 2025)\n## OVERVIEW \nNo development activity was recorded for the `ethereum-optimism/ethereum-optimism.github.io` repository on August 12, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified.", "2025-09-04T03:29:13.529Z"]
["ethereum-optimism/specs_day_2025-08-11", "ethereum-optimism/specs", "day", "2025-08-11", "# ethereum-optimism/specs Daily Update (Aug 11, 2025)\n## OVERVIEW \nToday's activity focused on ongoing discussions around the `min-base-fee` specification and the `op-test-sequencer` integration. A new issue was opened to estimate state growth for the `min-base-fee` feature.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Min-Base-Fee State Growth Estimation\nA new issue was opened to add a state growth estimate to the FMA for the `min-base-fee` feature [#316](https://github.com/ethereum-optimism/specs/issues/316). This includes a napkin math calculation estimating 16MB of state growth per year.\n\n## ACTIVE ISSUES\n\n### `op-test-sequencer` Integration\nDiscussion continued on the integration of `op-test-sequencer` into the devnet environment and Kurtosis [#15265](https://github.com/ethereum-optimism/specs/issues/15265). A recent comment highlighted that this integration is required to run reorg tests in the `kona-supervisor` devstack environment. Previously, the issue was re-opened due to a `todo` in the code, after being deprioritized pending use-cases for testing.\n\n### `min-base-fee` Specification\nDiscussion on the `min-base-fee` specification [#742](https://github.com/ethereum-optimism/specs/issues/742) included a decision to move the state growth estimate to the FMA, with tracking for this now occurring in a separate issue. Initially, there was a request to compute a rough estimate for the state growth implied by this feature to be included in the motivation section of the specs.", "2025-09-04T03:29:13.231Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-11", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-11", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 11, 2025)\n## OVERVIEW \nToday's activity focused on refining specifications for the `min-base-fee` feature, including discussions on state growth estimates. An existing issue related to `op-test-sequencer` integration was also discussed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Min-Base-Fee State Growth Estimation\nA new issue was opened to add a state growth estimate to the Financial Modeling Analysis (FMA) for the `min-base-fee` feature [#316](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/316). This is to quantify the impact of adding an extra byte for `minBaseFeeLog2` per block, estimating approximately 16MB of state growth per year.\n\n## ACTIVE ISSUES\n### `op-test-sequencer` Integration\nDiscussion continued on integrating `op-test-sequencer` into the devnet environment and Kurtosis [#15265](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15265). A recent comment clarified that this integration is required to run reorg tests within the `kona-supervisor` devstack environment. Previously, the issue was re-opened due to a pending todo in the code, despite earlier deprioritization.\n\n### `min-base-fee` Specification\nRegarding the `min-base-fee` specification [#742](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/742), a comment today indicated that the state growth estimate, initially considered for this ticket, was better placed in the FMA and is now being tracked under a separate issue [#316](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/316). The initial request for a state growth estimate was to include it in the motivation section of the specs.", "2025-09-04T03:29:12.410Z"]
["ethereum-optimism/superchain-ops_day_2025-08-12", "ethereum-optimism/superchain-ops", "day", "2025-08-12", "# ethereum-optimism/superchain-ops Daily Update (Aug 12, 2025)\n## OVERVIEW \nThe day's development focused on improving developer workflow by addressing intermittent failures in forge scripts. A new pull request was opened to implement retries for these scripts.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- **Developer Workflow Improvements:** A new pull request, [#1161](https://github.com/ethereum-optimism/superchain-ops/pull/1161), was opened to implement retries for forge scripts. This aims to mitigate intermittent failures that are currently slowing down the development workflow.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-09-04T03:29:14.614Z"]
["ethereum-optimism/infra_day_2025-08-12", "ethereum-optimism/infra", "day", "2025-08-12", "# ethereum-optimism/infra Daily Update (Aug 12, 2025)\n## OVERVIEW \nThe day's activity focused on planning future development, with three new issues opened to port existing `devnet sdk` tests to Devstack, specifically for balance snapshots, interoperability readiness, and smoke test failures.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Devstack Test Porting\nThree new issues were opened to port existing `devnet sdk` tests to the Devstack environment. These include porting `TestBalanceSnapshot` to Devstack ([#442](https://github.com/ethereum-optimism/infra/issues/442)), porting `TestInteropReadiness` to Devstack ([#443](https://github.com/ethereum-optimism/infra/issues/443)), and porting `TestSmokeTestFailure` and `TestInteropSystemNoop` to Devstack ([#444](https://github.com/ethereum-optimism/infra/issues/444)).\n\n## ACTIVE ISSUES\nNo active issues had significant discussion today.", "2025-09-04T03:29:16.036Z"]
["ethereum-optimism/optimism_day_2025-08-11", "ethereum-optimism/optimism", "day", "2025-08-11", "# ethereum-optimism/optimism Daily Update (Aug 11, 2025)\n\n## OVERVIEW \nThe day saw new pull requests focused on development environment setup and dependency management. Several new issues were opened, primarily tracking progress on DA footprint limits, `op-up` tool enhancements, and multi-proofs. Discussions continued on existing issues related to `op-test-sequencer` and `min-base-fee` specifications.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo code changes were merged on this day.\n\n## NEWLY OPENED PULL REQUESTS\nThree new pull requests were opened:\n- **Development Environment & Dependency Management:** [#17017](https://github.com/ethereum-optimism/optimism/pull/17017) adds a `mise` lockfile, and [#17020](https://github.com/ethereum-optimism/optimism/pull/17020) locks Cargo dependencies, indicating efforts to standardize and manage development environments.\n- **Testing Infrastructure:** [#16996](https://github.com/ethereum-optimism/optimism/pull/16996) introduces a change to cancel package-wide context in `Close` for development testing.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n\n- **DA Footprint Limit Initiatives:** Several issues were opened to track progress on data availability footprint limits, including a general tracking issue [#16998](https://github.com/ethereum-optimism/optimism/issues/16998), productionizing hackathon work [#16999](https://github.com/ethereum-optimism/optimism/issues/16999), and writing a design document [#17009](https://github.com/ethereum-optimism/optimism/issues/17009).\n- **`op-up` Tool Enhancements:** New issues were created to guide the development of the `op-up` tool, focusing on publishing an initial release [#17003](https://github.com/ethereum-optimism/optimism/optimism/issues/17003), supporting the challenger [#17005](https://github.com/ethereum-optimism/optimism/issues/17005), and cleaning up logging [#17007](https://github.com/ethereum-optimism/optimism/issues/17007).\n- **Dispute Game and Event System Refinements:** A new issue [#17013](https://github.com/ethereum-optimism/optimism/issues/17013) was opened to track the development of \"Multi-proofs\" (Aggregate Dispute Game), aiming to combine multiple proof systems. Additionally, [#17001](https://github.com/ethereum-optimism/optimism/issues/17001) was created to remove two events from the event system.\n- **Scalar Fix Postmortem:** An issue [#17012](https://github.com/ethereum-optimism/optimism/issues/17012) was opened to conduct a postmortem of an original Scalar issue.\n\n## ACTIVE ISSUES\n\n- **`op-test-sequencer` Integration:** Issue [#15265](https://github.com/ethereum-optimism/optimism/issues/15265) regarding the integration of `op-test-sequencer` into devnet environments and Kurtosis saw a new comment from emhane, stating that this integration is required to run reorg tests in the `kona-supervisor` devstack environment. This indicates continued relevance and a dependency for specific testing scenarios.\n- **`min-base-fee` Specification:** On issue [#742](https://github.com/ethereum-optimism/optimism/issues/742), geoknee commented that the state growth estimate, initially considered for this specification, was better placed in the FMA and is now being tracked under [#316](https://github.com/ethereum-optimism/optimism/issues/316). This clarifies the scope of the `min-base-fee` specification and redirects the state growth analysis.\n- **`min-base-fee` State Growth Estimate:** Issue [#316](https://github.com/ethereum-optimism/optimism/issues/316) was created to specifically track the state growth estimate for `min-base-fee`. geoknee provided a \"napkin math\" estimate, calculating approximately 16MB of state growth per year due to an extra byte for `minBaseFeeLog2` per block. This provides an initial quantitative assessment of the feature's impact on state size.", "2025-09-04T03:29:15.007Z"]
["ethereum-optimism/optimism_day_2025-08-12", "ethereum-optimism/optimism", "day", "2025-08-12", "# ethereum-optimism/optimism Daily Update (Aug 12, 2025)\n## OVERVIEW \nThe day's development focused on opening new pull requests, primarily enhancing the `op-node` with improvements to logging, internal driver mechanisms, and RPC client context passing. Additionally, new PRs were opened for local `op-geth` images for Kurtosis and a draft for a Calldata Footprint Test. A new issue was created to coordinate GTM tasks for Flashblocks public enablement.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this date.\n\n## NEWLY OPENED PULL REQUESTS\n*   **`op-node` Enhancements:** Several new pull requests aim to refine the `op-node`'s functionality. This includes making the `reason` field more complete in \"Sync progress\" ([#17022](https://github.com/ethereum-optimism/optimism/pull/17022)), removing the `driver.StepEvent` ([#17024](https://github.com/ethereum-optimism/optimism/pull/17024)), and passing caller context to `DialRPCClientWithTimeout` in conductor initialization ([#17026](https://github.com/ethereum-optimism/optimism/pull/17026)).\n*   **Development Tooling & Testing:** New PRs were opened to facilitate development and testing, specifically adding local `op-geth` images for Kurtosis ([#17030](https://github.com/ethereum-optimism/optimism/pull/17030)) and a draft for a Calldata Footprint Test ([#17034](https://github.com/ethereum-optimism/optimism/pull/17034)).\n\n## CLOSED ISSUES\nNo closed issues to report for this date.\n\n## NEW ISSUES\n*   **Flashblocks GTM Coordination:** A new issue was created to coordinate Go-To-Market (GTM) tasks for the public enablement of Flashblocks, specifically assisting with documentation and coordinating with RaaS providers for the public Sepolia deployment ([#17027](https://github.com/ethereum-optimism/optimism/issues/17027)).\n\n## ACTIVE ISSUES\nNo active issues to report for this date.", "2025-09-04T03:29:16.055Z"]
["ethereum-optimism/optimism_day_2025-08-13", "ethereum-optimism/optimism", "day", "2025-08-13", "# ethereum-optimism/optimism Daily Update (Aug 13, 2025)\n## OVERVIEW \nThe day saw the opening of several new pull requests focusing on dependency updates, build fixes, and a new feature for network upgrade transactions. Multiple new issues were also opened, addressing Go compatibility, sync tester enhancements, and a user-reported error with the op-proposer.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nThree new pull requests were opened today. [#17055](https://github.com/ethereum-optimism/optimism/pull/17055) addresses a fix for the Aqua repository for `yq`. A dependency bump for `golang.org/x/term` from 0.29.0 to 0.34.0 was initiated in [#17057](https://github.com/ethereum-optimism/optimism/pull/17057). Additionally, [#17062](https://github.com/ethereum-optimism/optimism/pull/17062) introduces a new feature for network upgrade transactions related to CGT.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nSeveral new issues were reported today:\n*   **Go Compatibility and Tooling:** An issue was opened to support Go 1.25 in Cannon, aiming to test compatibility and fix any related problems ([#17060](https://github.com/ethereum-optimism/optimism/issues/17060)).\n*   **Op-Sync-Tester Enhancements:** Two issues were created to improve the `op-sync-tester`. One proposes adding a caching layer and batching EL requests for faster synchronization ([#17046](https://github.com/ethereum-optimism/optimism/issues/17046)), while the other suggests better session handling to reduce duplicated validation logic across RPCs ([#17047](https://github.com/ethereum-optimism/optimism/issues/17047)).\n*   **Op-Proposer Errors:** A user reported persistent errors with the `op-proposer`, including `GameAlreadyExists` messages, indicating potential issues with its operation ([#17042](https://github.com/ethereum-optimism/optimism/issues/17042)).\n\n## ACTIVE ISSUES\n*   **Op-Challenger Acceptance Tests on Interop ([#15948](https://github.com/ethereum-optimism/optimism/issues/15948)):** This issue, focused on adding acceptance tests for `op-challenger` functionality on interop chains, was reopened today. The latest comment from mbaxter indicates that there are still outstanding TODOs pointing to this ticket that need to be addressed before it can be considered complete.\n*   **Op-Sync-Tester: Support eth namespace ([#16700](https://github.com/ethereum-optimism/optimism/issues/16700)):** This issue, concerning the `op-sync-tester` supporting the `eth` namespace for RPC methods like `eth_getBlockReceipts`, `eth_getBlockByHash`, and `eth_getBlockByNumber`, was reopened today by pcw109550 to track the implementation of test cases for the `eth` namespace.", "2025-09-04T03:29:18.626Z"]
["ethereum-optimism/specs_day_2025-08-13", "ethereum-optimism/specs", "day", "2025-08-13", "# ethereum-optimism/specs Daily Update (Aug 13, 2025)\n## OVERVIEW \nThe day's activity focused on a new pull request related to DA footprint. Additionally, there was significant discussion and re-opening of existing issues concerning `op-challenger` acceptance tests and `op-sync-tester` RPC support, indicating ongoing work and refinement in these areas.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#748](https://github.com/ethereum-optimism/specs/pull/748), titled \"Jovian: DA Footprint\" was opened. This PR likely introduces specifications or changes related to data availability footprint within the Jovian release.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n### `op-challenger` Acceptance Test Refinement\nIssue [#15948](https://github.com/ethereum-optimism/specs/issues/15948), \"op-challenger acceptance tests on interop,\" was re-opened by mbaxter on Aug 13, 2025, at 18:30:56Z. The re-opening indicates that there are still outstanding TODOs related to this issue that need to be addressed, despite previous work. The issue aims to add acceptance tests for `op-challenger` functionality on interop chains, specifically covering dispute resolution of invalid proposals.\n\n### `op-sync-tester` RPC Support\nIssue [#16700](https://github.com/ethereum-optimism/specs/issues/16700), \"op-sync-tester: Support eth namespace,\" was re-opened by pcw109550 on Aug 13, 2025, at 09:03:49Z. The re-opening is to track the implementation of test cases for the `eth` namespace within `op-sync-tester`. This issue focuses on enabling `op-sync-tester` to serve specific `eth` RPC methods like `eth_getBlockReceipts`, `eth_getBlockByHash`, and `eth_getBlockByNumber` for blocks prior to a `test_head`.", "2025-09-04T03:29:18.870Z"]
["ethereum-optimism/superchain-ops_day_2025-08-14", "ethereum-optimism/superchain-ops", "day", "2025-08-14", "# ethereum-optimism/superchain-ops Daily Update (Aug 14, 2025)\n## OVERVIEW \nThe day's activity primarily involved the creation of a new issue concerning the migration of FP recovery tasks, with an offer of assistance for its resolution. An active issue regarding event call graphs also saw a new comment.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\n### Migration of FP Recovery Tasks\nA new issue was opened to track the migration of blacklist games tasks to a new template framework and the removal of old FP recovery tasks. An offer of assistance for sync time, async work, and PR review was made. ([#1162](https://github.com/ethereum-optimism/superchain-ops/issues/1162))\n\n## ACTIVE ISSUES\n### op-service: Event Call Graph\nDiscussion continued on the issue of adding logic to trace event flow. A contributor indicated they had added a PR for review. ([#16874](https://github.com/ethereum-optimism/superchain-ops/issues/16874))", "2025-09-04T03:29:20.446Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-14", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-14", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 14, 2025)\n## OVERVIEW \nThe day's development focused on a new pull request to add the $PAGE token to the Superchain List. Discussions continued on an existing issue regarding event call graphs and a new issue was opened concerning the migration of FP recovery tasks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1186](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1186), was opened to add the $PAGE token with its logo to the Superchain List.\n\n## CLOSED ISSUES\n\nNo issues were closed on this date.\n\n## NEW ISSUES\n### Task Migration\nA new issue, [#1162](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1162), was opened to track the migration of blacklist games tasks to a new template framework and the removal of old FP recovery tasks.\n\n## ACTIVE ISSUES\n### Event System Discussion\nDiscussion continued on [#16874](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16874) regarding the implementation of an event call graph. On August 14th, @sashass1315 mentioned submitting a PR for review. On August 15th, @pcw109550 responded, indicating that while the contribution was appreciated, the team is leaning towards removing the entire event system, suggesting the PR might not be merged but the code could still be useful for understanding control flow during the system's removal. The issue was later closed on August 25th by @mslipper, noting that similar functionality exists in another PR.\n\n### FP Recovery Task Migration\nA new issue, [#1162](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1162), was opened on August 14th to migrate FP recovery tasks. @blmalone offered assistance with sync time or async work and PR review on the same day.", "2025-09-04T03:29:19.722Z"]
["ethereum-optimism/optimism_day_2025-08-14", "ethereum-optimism/optimism", "day", "2025-08-14", "# ethereum-optimism/optimism Daily Update (Aug 14, 2025)\n## OVERVIEW \nThe day saw the introduction of new controller types for op-batcher and the creation of new issues related to audit processes and CLI flag recognition for op-up. Discussions continued on active issues concerning event flow tracing and migration of recovery tasks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this date.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#17067](https://github.com/ethereum-optimism/optimism/pull/17067), was opened to introduce disabled and unlimited controller types to the `op-batcher`.\n\n## CLOSED ISSUES\n\nNo issues were closed on this date.\n\n## NEW ISSUES\n\n### Audit Process and Security Readiness\nA new issue, [#17069](https://github.com/ethereum-optimism/optimism/issues/17069), was opened to track the audit process for the Dispute Game Creator Pattern refactor, outlining requirements for threat modeling and an audit readiness document.\n\n### CLI Flag Recognition for op-up\nIssue [#17076](https://github.com/ethereum-optimism/optimism/issues/17076) was created to address `op-up`'s inability to recognize standard CLI flags like `--help` and `--version`, leading to errors.\n\n## ACTIVE ISSUES\n\n### Event Call Graph and System Refactoring\nDiscussion continued on [#16874](https://github.com/ethereum-optimism/optimism/issues/16874), which aims to add logic to trace event flow. On Aug 14, `sashass1315` mentioned submitting a PR for review. However, on Aug 15, `pcw109550` indicated that the team is leaning towards removing the entire event system, suggesting the proposed changes might not be merged but the code could still be useful for understanding control flow during the removal process. The issue was later closed on Aug 25 by `mslipper` as similar functionality was implemented elsewhere.\n\n### Migration of FP Recovery Tasks\nOn [#1162](https://github.com/ethereum-optimism/optimism/issues/1162), which concerns migrating blacklist games to a new template framework and removing old FP recovery tasks, `blmalone` offered assistance with sync time or async work and PR review on Aug 14. The issue was later closed on Aug 18.", "2025-09-04T03:29:21.043Z"]
["ethereum-optimism/optimism_day_2025-08-18", "ethereum-optimism/optimism", "day", "2025-08-18", "# ethereum-optimism/optimism Daily Update (Aug 18, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes for service binding, significant refactoring of event handling, and extensive updates to testing infrastructure, including the addition of Cannon allocator instrumentation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Infrastructure Stability & Bug Fixes\nA critical bug causing connection errors and test failures due to default IPv6 binding was resolved by explicitly setting IPv4 binding for `op-devstack` services ([#17114](https://github.com/ethereum-optimism/optimism/pull/17114)). This improves the reliability of development environments.\n\n### Codebase Refinements & Event System Optimization\nThe codebase saw significant refactoring with the removal of `CrossUpdateRequestEvent`, `CrossUnsafeUpdateEvent`, and `CrossSafeUpdateEvent` ([#17101](https://github.com/ethereum-optimism/optimism/pull/17101)). This streamlines the event handling within `op-e2e` and `op-node/rollup` components.\n\n### Testing & CI Enhancements\nImprovements were made to the CI pipeline to optimize test execution, including running contracts tests only on relevant changes ([#17105](https://github.com/ethereum-optimism/optimism/pull/17105)) and ensuring `contracts-bedrock-tests` correctly depend on `op-node` ([#17116](https://github.com/ethereum-optimism/optimism/pull/17116)). Additionally, the flaky `TestCrossLayerUser` was removed from `op-e2e` to improve test suite stability ([#17106](https://github.com/ethereum-optimism/optimism/pull/17106)).\n\n### Cannon Allocator Instrumentation & VM Runner Logic\nWork continued on integrating allocator preheap instrumentation into Cannon ([#16030](https://github.com/ethereum-optimism/optimism/pull/16030)), a rebased contribution aimed at improving performance in constrained environments. The `vm-runner`'s L2 block selection logic was also reworked to ensure safer L2 block usage relative to the chosen L1 head ([#17089](https://github.com/ethereum-optimism/optimism/pull/17089)).\n\n## NEWLY OPENED PULL REQUESTS\nNine new pull requests were opened today, covering a range of fixes, features, and refactoring efforts. These include backporting a test ([#17109](https://github.com/ethereum-optimism/optimism/pull/17109)), adding missing methods to structs and interfaces ([#17111](https://github.com/ethereum-optimism/optimism/pull/17111), [#17113](https://github.com/ethereum-optimism/optimism/pull/17113)), removing a TODO from `Setup.sol` ([#17112](https://github.com/ethereum-optimism/optimism/pull/17112)), and migrating to structured logging with `slog` ([#17118](https://github.com/ethereum-optimism/optimism/pull/17118)). New features include integrating `FaultDisputeGameV2` into DGF ([#17119](https://github.com/ethereum-optimism/optimism/pull/17119)), and refactoring efforts involve migrating from `reflect.TypeOf` to `reflect.TypeFor` in `op-service` and `op-chain-ops` ([#17120](https://github.com/ethereum-optimism/optimism/pull/17120), [#17121](https://github.com/ethereum-optimism/optimism/pull/17121)), and merging `EngineResetDeriver` and `EngineController` in `op-node` ([#17125](https://github.com/ethereum-optimism/optimism/pull/17125)).\n\n## CLOSED ISSUES\n\n### Cannon Optimization & Performance\nThe long-standing issue regarding Cannon optimizations ([#11550](https://github.com/ethereum-optimism/optimism/issues/11550)) was closed today. This issue tracked various performance improvements for Cannon, including more space-efficient state snapshots and memory merklization. Related PRs and ongoing work were noted in the comments, indicating progress in this area.\n\n### Devstack Service Binding Fix\nA reported issue concerning `op-devstack`'s default host binding causing connection errors and test failures ([#17082](https://github.com/ethereum-optimism/optimism/issues/17082)) was closed. This indicates that the fix implemented in [#17114](https://github.com/ethereum-optimism/optimism/pull/17114) successfully addressed the problem.\n\n## NEW ISSUES\n\n### Documentation & Release Clarity\nA new issue highlights confusion regarding `op-deployer`'s version numbering, noting that releases appear non-sequential and counterintuitive ([#17108](https://github.com/ethereum-optimism/optimism/issues/17108)). This suggests a need for clearer release management or documentation for `op-deployer`.\n\n### Codebase Refactoring & Dependency Management\nA tracking issue was opened to resolve dependency cycles within `op-node` components ([#17115](https://github.com/ethereum-optimism/optimism/issues/17115)). This indicates an ongoing effort to improve the architectural clarity and maintainability of the `op-node` codebase.\n\n## ACTIVE ISSUES\n\n### Event System Refinement\nDiscussions on [#17001](https://github.com/ethereum-optimism/optimism/issues/17001), \"Remove two events from event system,\" indicate active progress. The latest comments confirm that two related pull requests ([#16997](https://github.com/ethereum-optimism/optimism/pull/16997) and [#17122](https://github.com/ethereum-optimism/optimism/pull/17122)) have been opened to address the removal of these events, with a second one ([#17165](https://github.com/ethereum-optimism/optimism/pull/17165)) also mentioned. This suggests a phased approach to streamlining the event system.", "2025-09-04T03:29:28.956Z"]
["ethereum-optimism/docs_day_2025-08-15", "ethereum-optimism/docs", "day", "2025-08-15", "# ethereum-optimism/docs Daily Update (Aug 15, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions and updates for existing issues, particularly concerning Go 1.24 support in Cannon and Data Availability Footprint Limit design and specification.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were created.\n\n## ACTIVE ISSUES\n### Data Availability Footprint Limit Discussions\nDiscussions continued on the Data Availability Footprint Limit, with updates provided on the design document and specification. The design document is available at [#17009](https://github.com/ethereum-optimism/docs/issues/17009) and the specification at [#17087](https://github.com/ethereum-optimism/docs/issues/17087).\n\n### Event Call Graph Development\nDiscussion on [#16874](https://github.com/ethereum-optimism/docs/issues/16874) regarding an \"Event Call Graph\" noted that while a PR was submitted, the team is leaning towards removing the entire event system, making the proposed changes unlikely to be merged. The code may still be used to follow control flow during the event system removal.\n\n### Go 1.24 Support in Cannon\nIssue [#14760](https://github.com/ethereum-optimism/docs/issues/14760) was reopened to track the progress of supporting Go 1.24 in Cannon, with a sub-issue to be added for OPCM changes.", "2025-09-04T03:29:21.313Z"]
["ethereum-optimism/op-analytics_day_2025-08-19", "ethereum-optimism/op-analytics", "day", "2025-08-19", "# ethereum-optimism/op-analytics Daily Update (Aug 19, 2025)\n\n## OVERVIEW \nThe day's development focused on a critical bug fix related to stablecoin schema, ensuring data accuracy. Additionally, new pull requests were opened for schema evolution and code cleanup, while several issues, including one concerning flashblocks on Sunnyside sequencers, were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Schema Fixes\nA bug fix was implemented to correct and execute the stablecoin schema successfully, addressing data integrity. This involved changes to the `Makefile`, `helm/dagster/values.yaml`, and `src/op_analytics/datasources/defillama/stablecoins/execute.py`. ([#1725](https://github.com/ethereum-optimism/op-analytics/pull/1725))\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n- [#1724](https://github.com/ethereum-optimism/op-analytics/pull/1724) Ggarner/20250815/schema evolution stablecoins: This PR likely proposes changes to evolve the stablecoin data schema.\n- [#1726](https://github.com/ethereum-optimism/op-analytics/pull/1726) chore: remove redundant words: This PR aims to clean up the codebase by removing unnecessary words.\n\n## CLOSED ISSUES\n\n### Flashblocks Enablement\nThe issue regarding enabling flashblocks on Sunnyside sequencers was closed ([#16688](https://github.com/ethereum-optimism/op-analytics/issues/16688)). The latest comment confirms that all voting and non-voting sequencers for Sepolia on Sunnyside are running with Flashblocks and are connected to the websocket proxy, with failover tested on a devnet.\n\n### Acceptance Test Logging\nAn issue concerning missing test logs in `op-acceptance-tests` was closed ([#17151](https://github.com/ethereum-optimism/op-analytics/issues/17151)). The logs were found in one of the root logs, and ongoing work is in progress to move these tests to a more appropriate workflow that captures logs effectively.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\n### Outdated Content Audit\nThe issue \"[2024 Q4 Audit] [page-path]\" ([#1673](https://github.com/ethereum-optimism/op-analytics/issues/1673)) remains active. The latest comment from krofax at 2025-08-19T14:12:35Z asks for clarification on which page the user is referring to, indicating that the specific content needing updates is still being identified. The issue's description highlights the need to update outdated information related to MOVE token utility and DAO governance structure.", "2025-09-04T03:29:28.857Z"]
["ethereum-optimism/docs_day_2025-08-19", "ethereum-optimism/docs", "day", "2025-08-19", "# ethereum-optimism/docs Daily Update (Aug 19, 2025)\n## OVERVIEW \nToday's focus was on documentation enhancements, specifically refactoring OP-Challenger docs and updating faucet links. Several audit-related and metric report issues were closed, and new PRs and issues were opened, indicating ongoing development and maintenance.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Refinement for Operators\nSignificant updates were made to the operator documentation, particularly for `op-challenger`. This involved a comprehensive refactor and link updates across multiple files related to chain operators and fault proofs, improving clarity and accuracy for those deploying and managing Optimism infrastructure. ([#1702](https://github.com/ethereum-optimism/docs/pull/1702))\n\n### Developer Tooling Documentation Improvements\nThe documentation for developer tools saw an update to the `faucets.mdx` file. This included adding a new faucet link for Sepolia and reordering existing faucet lists alphabetically to enhance consistency and user experience for app developers. ([#1703](https://github.com/ethereum-optimism/docs/pull/1703))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1718](https://github.com/ethereum-optimism/docs/pull/1718), was opened today, focusing on a redesign of the documentation homepage.\n\n## CLOSED ISSUES\n\n### Monthly Metrics Reporting\nSeveral issues related to monthly metrics reports for July 2025 were closed. These reports provided insights into the average and median times for first responses, issue closure, and answer times for both closed issues ([#1707](https://github.com/ethereum-optimism/docs/issues/1707)) and opened pull requests ([#1708](https://github.com/ethereum-optimism/docs/issues/1708)).\n\n### Documentation Audit Follow-ups\nAn issue related to the 2024 Q4 audit, specifically concerning a page path, was closed ([#1713](https://github.com/ethereum-optimism/docs/issues/1713)). This indicates progress in addressing findings from the audit.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Flashblocks on Sunnyside Sequencers\nIssue [#16688](https://github.com/ethereum-optimism/docs/issues/16688), concerning the enablement of flashblocks on Sunnyside sequencers, was closed today. The latest comment from @parkgunou confirmed that all Sunnyside sequencers for Sepolia are now running with Flashblocks and are connected to the websocket proxy, with failover tested on the `eris-0` devnet. This resolves the challenge of enabling flashblocks on Sunnyside's infrastructure.\n\n### Missing Test Logs in `op-acceptance-tests`\nIssue [#17151](https://github.com/ethereum-optimism/docs/issues/17151) highlights missing test logs in `op-acceptance-tests` despite failed tests in a CI run. @scharissis commented that the \"go-tests-short\" workflow job is not designed for acceptance tests and that the few sysgo acceptance tests it runs are not processed via `op-acceptor` to capture logs. A PR ([#16755](https://github.com/ethereum-optimism/optimism/pull/16755)) is in progress to move these tests, which should resolve the logging issue. @janjakubnanista later confirmed that the logs were found in one of the root logs.\n\n### Outdated Content in 2024 Q4 Audit\nIssue [#1673](https://github.com/ethereum-optimism/docs/issues/1673) points to outdated content on a page related to the 2024 Q4 audit, specifically regarding the Movement Network, MOVE token utility, and DAO governance. @krofax requested clarification on the specific page being referred to, indicating a need for more precise information to address the content update.", "2025-09-04T03:29:28.323Z"]
["ethereum-optimism/optimism_day_2025-08-15", "ethereum-optimism/optimism", "day", "2025-08-15", "# ethereum-optimism/optimism Daily Update (Aug 15, 2025)\n## OVERVIEW \nThe day saw new pull requests focused on code simplification and removal of an event system component. Several new issues were opened, including a potential `op-devstack` host issue, a request to revise `op-acceptance-tests`, and a new task for the DA Footprint Limit specification. Discussions continued on supporting Go 1.24 in Cannon and the future of the `op-service` event system.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Code Simplification and Refactoring\nEfforts are underway to streamline the codebase, with a new pull request aiming to simplify code within `op-service`. This indicates a focus on improving maintainability and readability.\n- [#17085](https://github.com/ethereum-optimism/optimism/pull/17085)\n\n### Event System Refinement\nA pull request was opened to remove `StepEvent` from `op-node`, suggesting a move towards a more refined or potentially redesigned event handling mechanism within the system.\n- [#17097](https://github.com/ethereum-optimism/optimism/pull/17097)\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n- [#17085](https://github.com/ethereum-optimism/optimism/pull/17085) `op-service: simplify code` aims to reduce complexity in the `op-service` component.\n- [#17097](https://github.com/ethereum-optimism/optimism/pull/17097) `op-node: Remove StepEvent` proposes the removal of a specific event type from `op-node`.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n### Development Environment and Testing Issues\nA potential issue with the default host in `op-devstack` was reported, leading to consistent errors in `sysgo` tests for a Base user. Additionally, a new issue was opened to revise the `safedb EL sync` tests within `op-acceptance-tests`.\n- [#17082](https://github.com/ethereum-optimism/optimism/issues/17082)\n- [#17083](https://github.com/ethereum-optimism/optimism/issues/17083)\n\n### Data Availability and Cannon Support\nA new task was created to write the specification for the DA Footprint Limit. Furthermore, an issue was opened to track the necessary changes to support the release of Cannon with Go 1.24, including updates to OPCM and `op-deployer`.\n- [#17087](https://github.com/ethereum-optimism/optimism/issues/17087)\n- [#17095](https://github.com/ethereum-optimism/optimism/issues/17095)\n\n## ACTIVE ISSUES\n### Cannon Go 1.24 Support\nIssue [#14760](https://github.com/ethereum-optimism/optimism/issues/14760) was reopened by pauldowman, who noted that this tracker issue will remain open until the Go 1.24 support for Cannon is shipped. A sub-issue for OPCM changes will also be added.\n\n### Event System Refactoring in op-service\nDiscussion on [#16874](https://github.com/ethereum-optimism/optimism/issues/16874) regarding `op-service: Event Call Graph` continued. pcw109550 commented that while sashass1315's contribution was appreciated, the team is leaning towards removing the entire event system, meaning the proposed changes would not be merged. The existing code might still be used to follow control flow during the event system's removal.\n\n### DA Footprint Limit Design\nOn [#17009](https://github.com/ethereum-optimism/optimism/issues/17009), mslipper provided an update, linking to the design document for the DA Footprint Limit.", "2025-09-04T03:29:24.047Z"]
["ethereum-optimism/specs_day_2025-08-19", "ethereum-optimism/specs", "day", "2025-08-19", "# ethereum-optimism/specs Daily Update (Aug 19, 2025)\n## OVERVIEW \nThe day saw the opening of a new feature-related pull request concerning custom gas tokens. Additionally, one long-standing issue related to flashblocks on Sunnyside sequencers was closed, confirming the successful implementation of flashblocks. Discussions continued on an issue regarding missing test logs in `op-acceptance-tests` and an outdated audit page.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Enhancements\nA new feature pull request was opened to add support for custom gas tokens, indicating ongoing efforts to expand the protocol's capabilities and flexibility. [#749](https://github.com/ethereum-optimism/specs/pull/749)\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#749](https://github.com/ethereum-optimism/specs/pull/749), titled \"feat: add custom gas token,\" was opened. This PR introduces a new feature to support custom gas tokens within the system.\n\n## CLOSED ISSUES\n\n### Flashblocks Implementation\nThe issue concerning the enablement of flashblocks on Sunnyside sequencers, [#16688](https://github.com/ethereum-optimism/specs/issues/16688), was closed. It was confirmed that all Sunnyside sequencers for Sepolia are now running with Flashblocks and are connected to the websocket proxy, with failover tested on a devnet.\n\n### Test Log Visibility\nThe issue [#17151](https://github.com/ethereum-optimism/specs/issues/17151), \"op-acceptance-tests: Missing test logs,\" was closed. The logs were successfully located in one of the root logs.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\n### Outdated Audit Page Content\nIssue [#1673](https://github.com/ethereum-optimism/specs/issues/1673), \"[2024 Q4 Audit] [page-path],\" remains active. The latest comment from krofax on August 19, 2025, at 14:12:35Z, asks for clarification on which specific page @cshein45 is referring to, indicating that the exact scope of the required updates for the outdated content is still being determined. The issue highlights the need to update information related to MOVE token utility and DAO governance structure.", "2025-09-04T03:29:31.373Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-20", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-20", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 20, 2025)\n## OVERVIEW \nThe day's development focused on enhancing the robustness of RPC communication within the CI/CD pipeline by addressing timeout and rate-limiting issues.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced RPC Provider Reliability\nA significant bug fix was implemented to improve the stability and resilience of RPC communication, particularly within CI/CD environments. This involved introducing a robust provider factory to mitigate issues like RPC timeouts and rate limiting, and to provide fallback mechanisms when primary RPC endpoints fail.\n- Fixed RPC timeouts and rate limiting with robust provider factory ([#1187](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1187))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Event System Refinement\nDiscussion continued on removing two events from the event system ([#17001](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17001)). The latest comments indicate progress with specific pull requests linked to address this, including one from today.\n\n### RPC Response Content Type\nThe issue regarding missing content type in RPC responses for `eth` queries from OP Chain A and B ([#389](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/389)) saw a new comment today from a user asking how to suggest a fix. This indicates ongoing interest and potential for community contributions to resolve the problem.", "2025-09-04T03:29:33.949Z"]
["ethereum-optimism/docs_day_2025-08-20", "ethereum-optimism/docs", "day", "2025-08-20", "# ethereum-optimism/docs Daily Update (Aug 20, 2025)\n\n## OVERVIEW \nToday's focus was on enhancing the documentation for chain operators with a new banner for the one-click deploy site. A new pull request was opened for a workflow file, and discussions continued on active issues related to RPC responses and event system removals.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Operator Documentation Enhancements\nA new banner was added to the chain operators documentation pages to promote the one-click deploy site, improving visibility for this feature. This involved modifications across several operator-related `.mdx` files and a new component.\n- [#1719](https://github.com/ethereum-optimism/docs/pull/1719)\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1720](https://github.com/ethereum-optimism/docs/pull/1720), was opened to create an `npm-gulp.yml` file.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were reported on this date.\n\n## ACTIVE ISSUES\n\n### RPC Response Content Type Issue\nDiscussion continued on [#389](https://github.com/ethereum-optimism/docs/issues/389), concerning missing content types in RPC responses for `eth_rpc_queries`. A user inquired about suggesting a fix, indicating ongoing interest in resolving this technical challenge.\n\n### Event System Removal\nComments on [#17001](https://github.com/ethereum-optimism/docs/issues/17001) provided links to related pull requests in the `optimism` repository, suggesting progress or context for the removal of two events from the event system. The issue was closed on August 21st, indicating resolution.", "2025-09-04T03:29:33.833Z"]
["ethereum-optimism/optimism_day_2025-08-19", "ethereum-optimism/optimism", "day", "2025-08-19", "# ethereum-optimism/optimism Daily Update (Aug 19, 2025)\n\n## OVERVIEW\n\nToday's development focused on enhancing testing infrastructure, improving performance metrics, and refining batcher throttling. Key updates include migrating operator fee tests to a new framework, fixing a safe head database test, and adding i-cache miss metrics to Cannon and op-challenger.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing Framework and Reliability\n\nSignificant progress was made in improving the testing infrastructure. Operator fee acceptance tests were migrated from the legacy `devnet-sdk` to the new `op-devstack` framework, streamlining test execution and maintenance ([#17130](https://github.com/ethereum-optimism/optimism/pull/17130)). A critical bug in the `TestNotTruncateDatabaseOnRestartWithExistingDatabase` test was fixed, ensuring its independent execution and reliability ([#17127](https://github.com/ethereum-optimism/optimism/pull/17127)). Additionally, the `go-tests` timeout was reduced, optimizing CI efficiency ([#17126](https://github.com/ethereum-optimism/optimism/pull/17126)).\n\n### Performance Monitoring and Optimization\n\nNew metrics were introduced to enhance performance monitoring. Cannon and op-challenger now report i-cache misses, providing valuable insights into instruction pre-heap efficiency ([#17123](https://github.com/ethereum-optimism/optimism/pull/17123)). The op-batcher's default throttle parameters were improved, increasing both lower and higher thresholds to widen the throttling range and prevent premature throttling ([#17148](https://github.com/ethereum-optimism/optimism/pull/17148)).\n\n### Codebase Refinements\n\nA notable refactoring effort involved the removal of `ForceResetEvent` across multiple components, simplifying the codebase and potentially improving clarity in event handling ([#17061](https://github.com/ethereum-optimism/optimism/pull/17061)). The `op-program` now relies on the `mise` install cache for prestate builds, which fixes the `preimage-reproducibility` CCI workflow ([#17124](https://github.com/ethereum-optimism/optimism/pull/17124)).\n\n## NEWLY OPENED PULL REQUESTS\n\nTen new pull requests were opened today, indicating active development across various components:\n- [#17129](https://github.com/ethereum-optimism/optimism/pull/17129) `op-acceptance-tests`: fix safeheaddb tests to use preRestartSafeBlock\n- [#17131](https://github.com/ethereum-optimism/optimism/pull/17131) add op-replay-seq & op-replay cmd line tool\n- [#17133](https://github.com/ethereum-optimism/optimism/pull/17133) `op-wheel`: change append to prealloc+copy\n- [#17136](https://github.com/ethereum-optimism/optimism/pull/17136) all: refactor to use same Ptr func\n- [#17137](https://github.com/ethereum-optimism/optimism/pull/17137) `op-service`: opt using builtin func clear\n- [#17138](https://github.com/ethereum-optimism/optimism/pull/17138) `op-program`: refactor to use bitutil.TestBytes\n- [#17139](https://github.com/ethereum-optimism/optimism/pull/17139) `op-challenger`: opt copyOutGeneric\n- [#17140](https://github.com/ethereum-optimism/optimism/pull/17140) `kurtosis-devnet`: fix prealloc len\n- [#17150](https://github.com/ethereum-optimism/optimism/pull/17150) chore: Investigate missing logs in acceptance tests\n\n## CLOSED ISSUES\n\n### Flashblocks Implementation and Exposure\n\nSeveral issues related to Flashblocks were closed, indicating progress in its implementation and accessibility. This includes enabling Flashblocks on Sunnyside sequencers ([#16688](https://github.com/ethereum-optimism/optimism/issues/16688)) and exposing the Flashblocks-websocket for RPC providers ([#16811](https://github.com/ethereum-optimism/optimism/issues/16811)).\n\n### Testing and Release Readiness\n\nKey issues related to testing and release readiness were resolved. This includes the completion of interop transaction fuzzing ([#15166](https://github.com/ethereum-optimism/optimism/issues/15166)), the initial release of `op-up` ([#17003](https://github.com/ethereum-optimism/optimism/issues/17003)), and the revision of `safedb` EL sync tests in `op-acceptance-tests` ([#17083](https://github.com/ethereum-optimism/optimism/issues/17083)).\n\n## NEW ISSUES\n\n### Developer Experience and Tooling\n\nSeveral new issues highlight a focus on improving developer experience and standardizing tooling. This includes adding an ASCII welcome message to `op-up` ([#17134](https://github.com/ethereum-optimism/optimism/issues/17134)), prompting users with a survey link on `op-up` shutdown ([#17135](https://github.com/ethereum-optimism/optimism/issues/17135)), and a broader initiative to standardize development tooling and define a \"chain descriptor\" ([#17146](https://github.com/ethereum-optimism/optimism/issues/17146), [#17147](https://github.com/ethereum-optimism/optimism/issues/17147)).\n\n### Flashblocks Operational Readiness and Documentation\n\nNew issues were opened to address operational aspects and documentation for Flashblocks. This includes coordinating and reviewing public documentation drafts ([#17141](https://github.com/ethereum-optimism/optimism/issues/17141)), planning on-call onboarding and revision for Flashblocks ([#17142](https://github.com/ethereum-optimism/optimism/issues/17142)), setting up alerts for unhealthy non-Flashblocks enabled sequencers ([#17143](https://github.com/ethereum-optimism/optimism/issues/17143)), and conducting infrastructure threat modeling related to Flashblocks delivery ([#17144](https://github.com/ethereum-optimism/optimism/issues/17144)).\n\n### Testing and Metrics Refinements\n\nFurther refinements to testing and metrics were proposed. An issue was opened to revise `op-program`'s `verify-reproducibility` workflow due to fragility with the `mise` cache ([#17156](https://github.com/ethereum-optimism/optimism/issues/17156)). There's also a need to improve the `op-batcher`'s throttling intensity metric for better visibility in Grafana ([#17149](https://github.com/ethereum-optimism/optimism/issues/17149)), and to investigate missing logs in `op-acceptance-tests` ([#17151](https://github.com/ethereum-optimism/optimism/issues/17151)).\n\n## ACTIVE ISSUES\n\n### [2024 Q4 Audit] [page-path] ([#1673](https://github.com/ethereum-optimism/optimism/issues/1673))\n\nThe discussion on this issue, which concerns updating outdated content related to the MOVE token utility and DAO governance structure, saw a recent comment from @krofax at 2025-08-19T14:12:35Z. The comment asks for clarification on which specific page the updates are referring to, indicating a need for more precise scope definition before proceeding with the audit.", "2025-09-04T03:29:35.134Z"]
["ethereum-optimism/optimism_day_2025-08-20", "ethereum-optimism/optimism", "day", "2025-08-20", "# ethereum-optimism/optimism Daily Update (Aug 20, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes, significant code refactoring to streamline event handling, and robust test enhancements across the `op-node`, `op-sync-tester`, and `op-acceptance-tests` modules.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Protocol Stability & Bug Fixes\nA critical bug in `op-service/eth` related to execution payload creation from blocks was fixed, ensuring correct block processing and chain synchronization. This involved updating the `op-geth` dependency. ([#17154](https://github.com/ethereum-optimism/optimism/pull/17154))\n\n### Event System Refactoring & Simplification\nSignificant progress was made in simplifying the event system within `op-node`. The `PromoteSafeEvent`, `PendingSafeRequestEvent`, and `PromoteFinalizedEvent` were removed, reducing complexity and improving code maintainability. This refactoring impacts various components including `l2_verifier`, `engine_controller`, and `driver`. ([#17161](https://github.com/ethereum-optimism/optimism/pull/17161), [#17122](https://github.com/ethereum-optimism/optimism/pull/17122), [#17165](https://github.com/ethereum-optimism/optimism/pull/17165))\n\n### Enhanced Testing Infrastructure\nSeveral new tests were added and existing ones migrated to improve coverage and reliability. This includes backporting the `VerifyOPCM` test for `contracts-bedrock`, fully implementing and testing the `eth` namespace in `op-sync-tester`, and migrating `TestInteropReadiness` to the `op-devstack` framework for `op-acceptance-tests`. ([#17110](https://github.com/ethereum-optimism/optimism/pull/17110), [#17117](https://github.com/ethereum-optimism/optimism/pull/17117), [#17160](https://github.com/ethereum-optimism/optimism/pull/17160))\n\n### Conductor Scenario Improvements\nUpdates were made to the `op-conductor` to address scenarios where a sequencer is healthy but its builder is not, improving the robustness of rollupboost healing. ([#17158](https://github.com/ethereum-optimism/optimism/pull/17158))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `op-sync-tester` `eth` Namespace Support\nThe issue tracking the implementation of `eth` namespace support in `op-sync-tester` has been closed. This work involved serving `eth_getBlockReceipts`, `eth_getBlockByHash`, and `eth_getBlockByNumber` methods. ([#16700](https://github.com/ethereum-optimism/optimism/issues/16700))\n\n## NEW ISSUES\n\n### Flashblocks Spec Finalization\nA new issue has been opened to track the finalization of the Flashblocks specification, supporting Flashbots in closing out their existing PR. ([#17162](https://github.com/ethereum-optimism/optimism/issues/17162))\n\n### `op-up` Usage Metrics Reporting\nA new issue proposes adding usage metrics reporting to `op-up` to better track the success of the local chain flow, addressing current limitations in relying solely on website metrics. ([#17164](https://github.com/ethereum-optimism/optimism/issues/17164))\n\n## ACTIVE ISSUES\n\n### Event System Refactoring Progress\nIssue [#17001](https://github.com/ethereum-optimism/optimism/issues/17001) is actively tracking the removal of two events from the event system. Recent comments indicate significant progress, with PRs [#16997](https://github.com/ethereum-optimism/optimism/pull/16997), [#17161](https://github.com/ethereum-optimism/optimism/pull/17161), [#17122](https://github.com/ethereum-optimism/optimism/pull/17122), and [#17165](https://github.com/ethereum-optimism/optimism/pull/17165) addressing the removal of `PromoteSafeEvent`, `PendingSafeRequestEvent`, and `PromoteFinalizedEvent`. The issue was closed on Aug 21, 2025, indicating completion.\n\n### RPC Response Content Type Missing\nIssue [#389](https://github.com/ethereum-optimism/optimism/issues/389) continues to be active, discussing the missing content type in RPC responses for `eth` queries from OP Chain A and B. A new comment from OBlackmon3 on Aug 20, 2025, asks for guidance on suggesting a fix, indicating ongoing community engagement and a desire to resolve this long-standing issue. The problem is noted to potentially affect how Wagmi reads `eth_getTransactionReceipt`.", "2025-09-04T03:29:38.870Z"]
["ethereum-optimism/infra_day_2025-08-21", "ethereum-optimism/infra", "day", "2025-08-21", "# ethereum-optimism/infra Daily Update (Aug 21, 2025)\n## OVERVIEW \nThe day's development focused on significant code refactoring within `op-acceptor`, removing unused code and improving efficiency. Several long-standing issues related to acceptance testing, devnet infrastructure, and event system cleanup were closed, indicating progress in stabilizing and streamlining core components.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### `op-acceptor` Codebase Optimization\nExtensive refactoring was performed within the `op-acceptor` component, leading to the removal of approximately 600 lines of unused code across various packages, identified through static analysis tools. This cleanup improves maintainability and reduces the codebase's footprint. ([#447](https://github.com/ethereum-optimism/infra/pull/447))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Aug 21, 2025.\n\n## CLOSED ISSUES\n\n### Streamlining Acceptance Testing Infrastructure\nSeveral issues related to acceptance testing were closed, including the incorporation of test target setup/teardown as an `op-acceptor` concern ([#375](https://github.com/ethereum-optimism/infra/issues/375)). This closure was based on the determination that Kurtosis is no longer a primary focus for network testing compared to Sysgo.\n\n### Proofs System Acceptance Test Completion\nKey issues concerning interop acceptance testing for the proofs system ([#15946](https://github.com/ethereum-optimism/infra/issues/15946)) and specific `op-challenger` acceptance tests on interop chains ([#15948](https://github.com/ethereum-optimism/infra/issues/15948)) were closed. This indicates the completion of acceptance testing for the proofs system, with all sub-issues addressed.\n\n### Devnet Faucet Wallet Implementation\nThe issue regarding a persistent devnet faucet wallet for `netchef` ([#396](https://github.com/ethereum-optimism/infra/issues/396)) was closed, signifying the successful implementation of funded wallets for L2 chains within new persistent devnets.\n\n### Event System Cleanup\nAn issue to remove two specific events from the event system ([#17001](https://github.com/ethereum-optimism/infra/issues/17001)) was closed, indicating successful removal and associated PRs in the `optimism` repository.\n\n## NEW ISSUES\nNo new issues were opened on Aug 21, 2025.\n\n## ACTIVE ISSUES\n\n### Contract Verification Improvements\nDiscussion on contract verification improvements ([#14813](https://github.com/ethereum-optimism/infra/issues/14813)) continues, with the latest comment suggesting a future shift to using `forge verify-contract` for verification once forge binary support is implemented. This aims to reduce custom verification code and leverage existing tooling. Previous suggestions included exploring Sourcify for broader integration.", "2025-09-04T03:29:39.627Z"]
["ethereum-optimism/optimism_day_2025-08-21", "ethereum-optimism/optimism", "day", "2025-08-21", "# ethereum-optimism/optimism Daily Update (Aug 21, 2025)\n## OVERVIEW \nToday's development focused on enhancing the Cannon VM by dropping version 7 feature flags, improving developer tooling with a new RPC endpoint for devstack, and significant progress in acceptance testing for dispute games. Several issues related to interop acceptance testing and event system cleanup were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Cannon VM and Protocol Enhancements\nThe Cannon VM saw updates with the removal of version 7 feature flags, streamlining the codebase as newer versions are adopted. This also included preparations for Go 1.25 compatibility by disabling specific memory mapping annotations in `op-program`.\n- [#17167](https://github.com/ethereum-optimism/optimism/pull/17167)\n- [#17176](https://github.com/ethereum-optimism/optimism/pull/17176)\n\n### Developer Tooling and Deployment Improvements\nA new RPC endpoint was exposed for the devstack L2 CL nodes, providing developers with better access to custom RPC methods. The `op-deployer` also gained forge autodiscovery capabilities, enhancing deployment workflows.\n- [#17168](https://github.com/ethereum-optimism/optimism/pull/17168)\n- [#17152](https://github.com/ethereum-optimism/optimism/pull/17152)\n\n### Acceptance Testing and Dispute Game Enhancements\nSignificant work was done on acceptance tests, introducing a `GameHelper` contract to facilitate multiple moves in dispute games within a single transaction. This improves the efficiency and scope of testing dispute game logic.\n- [#16994](https://github.com/ethereum-optimism/optimism/pull/16994)\n\n## NEWLY OPENED PULL REQUESTS\n- [#17169](https://github.com/ethereum-optimism/optimism/pull/17169) proposes adding ASCII art on `op-up` startup for a more engaging user experience.\n- [#17170](https://github.com/ethereum-optimism/optimism/pull/17170) aims to augment the sync tester configuration for `op-sync-tester`.\n\n## CLOSED ISSUES\n\n### Interoperability and Proofs Acceptance Testing\nSeveral issues related to interop acceptance testing for the proofs system were closed, indicating significant progress in validating the dispute game functionality across different chain setups. This includes the successful implementation of `op-challenger` acceptance tests.\n- [#15946](https://github.com/ethereum-optimism/optimism/issues/15946)\n- [#15948](https://github.com/ethereum-optimism/optimism/issues/15948)\n- [#16168](https://github.com/ethereum-optimism/optimism/issues/16168)\n\n### Codebase Cleanup and Optimization\nIssues addressing code cleanup and optimization were resolved, including the removal of unused withdrawal action methods and the elimination of unnecessary version checks in `op-program`.\n- [#17001](https://github.com/ethereum-optimism/optimism/issues/17001)\n- [#15218](https://github.com/ethereum-optimism/optimism/issues/15218)\n\n## NEW ISSUES\n\n### Documentation and Configuration Updates\nNew issues highlight the need to update documentation for `op-batcher`'s throttling configuration and defaults, ensuring accuracy for users.\n- [#17171](https://github.com/ethereum-optimism/optimism/issues/17171)\n\n### Deployment and Tooling Improvements\nChallenges in deployment tooling were identified, specifically the need for `op-deployer` to generate Gnosis Safe wrapped calldata for easier use by most users.\n- [#17173](https://github.com/ethereum-optimism/optimism/issues/17173)\n\n### Testing and Cannon VM Future Work\nIssues were opened to improve parallelism in `op-e2e` fault proof tests and to plan for the future removal of Cannon version 7 support and Go 1.24 feature flags once newer versions are stable in production.\n- [#17175](https://github.com/ethereum-optimism/optimism/issues/17175)\n- [#17177](https://github.com/ethereum-optimism/optimism/issues/17177)\n- [#17178](https://github.com/ethereum-optimism/optimism/issues/17178)\n\n## ACTIVE ISSUES\n\n### Contract Verification Improvements\nDiscussion on [#14813](https://github.com/ethereum-optimism/optimism/issues/14813) continues, with the latest comment suggesting revisiting `op-deployer` contract verification to leverage `forge verify-contract` once forge binary support is fully implemented. This aims to reduce custom verification code and streamline the process for Etherscan and Blockscout.\n\n### Test Target Setup/Teardown\nIssue [#375](https://github.com/ethereum-optimism/optimism/issues/375) was closed, with the latest comment indicating that Kurtosis is no longer considered as important for network testing compared to Sysgo.", "2025-09-04T03:29:42.670Z"]
["ethereum-optimism/superchain-registry_day_2025-08-21", "ethereum-optimism/superchain-registry", "day", "2025-08-21", "# ethereum-optimism/superchain-registry Daily Update (Aug 21, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out long-standing issues related to proofs system acceptance testing and event system cleanup. A new pull request was opened for Celo-sepolia integration.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1099](https://github.com/ethereum-optimism/superchain-registry/pull/1099), was opened to integrate Celo-sepolia.\n\n## CLOSED ISSUES\n### Proofs System Acceptance Testing\nThe issue related to providing acceptance tests for the proofs system for pre-interop and post-interop chains, [#15946](https://github.com/ethereum-optimism/superchain-registry/issues/15946), was closed as all sub-issues were completed. Similarly, the issue for adding `op-challenger` acceptance tests on interop chains, [#15948](https://github.com/ethereum-optimism/superchain-registry/issues/15948), was closed after the last remaining TODO was addressed.\n\n### Event System Cleanup\nThe issue to remove two events from the event system, [#17001](https://github.com/ethereum-optimism/superchain-registry/issues/17001), was closed, with associated pull requests linked in the comments.\n\n### Test Target Setup/Teardown\nThe issue concerning the incorporation of test target setup/teardown as an `op-acceptor` concern, [#375](https://github.com/ethereum-optimism/superchain-registry/issues/375), was closed as the importance of Kurtosis for network testing versus Sysgo was re-evaluated.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n### Contract Verification Improvements\nIssue [#14813](https://github.com/ethereum-optimism/superchain-registry/issues/14813) discusses improvements for contract verification. The latest comment suggests revisiting `op-deployer` contract verification once forge binary support is implemented, aiming to leverage `forge verify-contract` to reduce custom verification code. The discussion also previously considered using Sourcify for verification.", "2025-09-04T03:29:41.764Z"]
["ethereum-optimism/community-hub_day_2025-08-22", "ethereum-optimism/community-hub", "day", "2025-08-22", "# ethereum-optimism/community-hub Daily Update (Aug 22, 2025)\n## OVERVIEW \nOn August 22, 2025, there were no new features, bug fixes, code refactoring, documentation enhancements, or tests added to the ethereum-optimism/community-hub repository. The day's activity focused solely on discussions within an existing issue related to validation testing.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were created on this day.\n\n## ACTIVE ISSUES\n### Validation Test Planning and Scope\nDiscussion continued on [#686](https://github.com/ethereum-optimism/community-hub/issues/686), which addresses the need for improved validation testing, particularly for chain configuration. The latest comment from alfonso-op (2025-08-22T17:01:27Z) indicates a planned discussion with @bitwiseguy and Tess to review the scope of validation tests, specifically focusing on whether any tests previously marked as \"not planned\" should still be implemented. This follows an earlier comment from alfonso-op (2024-12-11T15:13:17Z) tasking @bitwiseguy with creating sub-issues for different validation tests. Previous discussions by geoknee (2024-11-25T18:04:39Z and 2024-11-25T18:02:51Z) highlighted the brittleness of TOML file parsing and suggested moving complexity into pure functions for better testability and formalizing them as production code.", "2025-09-04T03:29:41.781Z"]
["ethereum-optimism/optimism_day_2025-08-22", "ethereum-optimism/optimism", "day", "2025-08-22", "# ethereum-optimism/optimism Daily Update (Aug 22, 2025)\n## OVERVIEW \nToday's development focused on advancing the fault dispute game with a new V2, enhancing the `op-program`'s stability, and significantly bolstering the `op-sync-tester` with new engine APIs and E2E test integration, improving overall system robustness and testability.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Fault Dispute Game V2 Implementation\nA new version of the fault dispute game, `FaultDisputeGameV2`, was introduced to validate the creator pattern flow. This foundational feature is crucial for future dispute resolution mechanisms.\n- [#16929](https://github.com/ethereum-optimism/optimism/pull/16929)\n\n### Enhanced Sync Tester Capabilities and E2E Testing\nSignificant progress was made in the `op-sync-tester`, adding Verifier Engine APIs for Isthmus, Ecotone, Fjord, Granite, and Holocene. This was complemented by the integration of `SyncTester` into `op-devstack` for initial E2E testing, and improvements to acceptance tests to ensure follower nodes are in sync before test execution.\n- [#17072](https://github.com/ethereum-optimism/optimism/pull/17072)\n- [#17132](https://github.com/ethereum-optimism/optimism/pull/17132)\n- [#17179](https://github.com/ethereum-optimism/optimism/pull/17179)\n- [#17181](https://github.com/ethereum-optimism/optimism/pull/17181)\n\n### `op-program` Stability Improvement\nA critical bug fix was implemented in `op-program` to ensure proper resource cleanup in `pebbleKV.Get` by moving the `closer.Close()` call to a defer statement, preventing potential resource leaks.\n- [#17166](https://github.com/ethereum-optimism/optimism/pull/17166)\n\n## NEWLY OPENED PULL REQUESTS\n- [#17182](https://github.com/ethereum-optimism/optimism/pull/17182): Documentation update to fix a default value related to throttling.\n- [#17185](https://github.com/ethereum-optimism/optimism/pull/17185): A fix for address book initialization within `op-devstack`.\n\n## CLOSED ISSUES\n\n### Dispute Game Invalidation\nAn issue related to creating a U16-compatible `superchain-ops` template to invalidate existing dispute games by updating the retirement timestamp has been closed. This is a key step in the fault proofs recovery runbook.\n- [#16827](https://github.com/ethereum-optimism/optimism/issues/16827)\n\n## NEW ISSUES\n\n### Test Flakiness and CI/CD Improvements\nTwo new issues were opened focusing on improving test reliability and developer experience with the CI/CD pipeline. One addresses flakiness in `TestWrapETH` within acceptance tests, while the other aims to enhance the usability and testability of the CircleCI configuration.\n- [#17180](https://github.com/ethereum-optimism/optimism/issues/17180)\n- [#17184](https://github.com/ethereum-optimism/optimism/issues/17184)\n\n## ACTIVE ISSUES\n\n### Chain Configuration Validation Testing\nDiscussions on [#686](https://github.com/ethereum-optimism/optimism/issues/686) continue to focus on improving validation tests for chain configurations. The latest comments from @bitwiseguy and @teddyknox (from 2025-09-03) highlight the desire to run high-value monorepo CI jobs locally, particularly `kurtosis` and `go-tests-short`. Key pain points include the manual prerequisite setup for local testing and the lack of local validation for CircleCI config syntax. There's an interesting proposal to dynamically sort Go tests by run time to optimize test job durations, allowing developers to run more tests within their time budget. The idea is to have a script that updates test manifests based on local run durations, which can then be committed to VCS. The discussion also touches on moving complexity into pure functions for easier testing and increasing code coverage.", "2025-09-04T03:29:46.292Z"]
["ethereum-optimism/ecosystem_day_2025-08-22", "ethereum-optimism/ecosystem", "day", "2025-08-22", "# ethereum-optimism/ecosystem Daily Update (Aug 22, 2025)\n## OVERVIEW \nThe day's activity focused heavily on planning future UI/UX improvements for Optimism's web properties, with several new issues opened for redesigns and feature additions to the documentation site, console, and main optimism.io website.\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Documentation Site Redesign & Enhancements\nSeveral new issues were opened to plan significant updates to the docs.optimism.io site. This includes implementing a new navigation structure ([#926](https://github.com/ethereum-optimism/ecosystem/issues/926)), a complete homepage redesign ([#925](https://github.com/ethereum-optimism/ecosystem/issues/925)), and adding a one-click-deploy banner and project card to the homepage ([#928](https://github.com/ethereum-optimism/ecosystem/issues/928)).\n### Font Updates for Optimism Web Properties\nIssues were created to update the font across key Optimism web properties to align with a new brand kit. This includes updates for docs.optimism.io ([#923](https://github.com/ethereum-optimism/ecosystem/issues/923)) and console.optimism.io ([#924](https://github.com/ethereum-optimism/ecosystem/issues/924)).\n### Optimism.io Website Modernization\nPlanning has begun for a significant overhaul of the main optimism.io website, with new issues opened to spike the CMS architecture ([#930](https://github.com/ethereum-optimism/ecosystem/issues/930)) and explore a React migration ([#929](https://github.com/ethereum-optimism/ecosystem/issues/929)).\n### Localchain Interface Improvement\nA new issue was opened to add heatmap metrics to the localchain.optimism.io interface ([#927](https://github.com/ethereum-optimism/ecosystem/issues/927)).\n\n## ACTIVE ISSUES\n### Validation: Add Chain Config Negative Testing ([#686](https://github.com/ethereum-optimism/ecosystem/issues/686))\nThe discussion on this issue, which aims to improve the robustness of validation code by adding negative testing for chain configurations, saw a recent comment from @alfonso-op on August 22, 2025. He suggested a follow-up chat with @bitwiseguy and Tess to review if any \"not planned\" validation tests should still be implemented. Earlier, @alfonso-op had tasked @bitwiseguy (December 11, 2024) with creating sub-issues for specific validation tests. @geoknee (November 25, 2024) previously outlined a strategy to move complexity into pure functions for easier testing and to increase code coverage, noting the brittleness of TOML file parsing.", "2025-09-04T03:29:45.958Z"]
["ethereum-optimism/optimism_day_2025-08-23", "ethereum-optimism/optimism", "day", "2025-08-23", "# ethereum-optimism/optimism Daily Update (Aug 23, 2025)\n\n## OVERVIEW \nThe day's development focused on minor fixes and cleanup, with new pull requests addressing typos, package path corrections, and deprecations in RPC API definitions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Codebase Refinements & Typos\n*   Corrected package paths in justfiles using `justfile_directory()` ([#17187](https://github.com/ethereum-optimism/optimism/pull/17187)).\n*   Fixed typos in relay test documentation ([#17188](https://github.com/ethereum-optimism/optimism/pull/17188)).\n\n### RPC API Definition Updates\n*   Removed the deprecated `Public` field from RPC API definitions within `op-e2e` tests ([#17189](https://github.com/ethereum-optimism/optimism/pull/17189)).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#17187](https://github.com/ethereum-optimism/optimism/pull/17187) `fix(justfiles): correct package paths using justfile_directory()`: This PR aims to resolve issues with package paths in justfiles by utilizing the `justfile_directory()` function.\n*   [#17188](https://github.com/ethereum-optimism/optimism/pull/17188) `fix: correct typos in relay test documentation`: This PR addresses and corrects various typographical errors found within the relay test documentation.\n*   [#17189](https://github.com/ethereum-optimism/optimism/pull/17189) `op-e2e: remove deprecated Public field from RPC API definitions`: This PR focuses on cleaning up the `op-e2e` codebase by removing the `Public` field from RPC API definitions, as it has been deprecated.\n\n## CLOSED ISSUES\nNo issues were closed on Aug 23, 2025.\n\n## NEW ISSUES\nNo new issues were opened on Aug 23, 2025.\n\n## ACTIVE ISSUES\n\n### RPC Response Content Type Issue\n*   **[#389](https://github.com/ethereum-optimism/optimism/issues/389) OP Chain A and B rpc response for eth rpc queries is missing content type**: This issue, opened on April 23, 2025, reports that RPC responses for `eth` queries from OP Chain A and B are missing the `Content-Type` header. The latest comment from Hazimehhassan on August 23, 2025, at 17:40:02Z, is a mention to \"@smartcontracts\". Previously, OBlackmon3 on August 20, 2025, asked how to suggest a fix, and OscBacon on April 23, 2025, noted that this might be causing issues with how Wagmi reads `eth_getTransactionReceipt`.", "2025-09-04T03:29:46.255Z"]
["ethereum-optimism/optimism_day_2025-08-24", "ethereum-optimism/optimism", "day", "2025-08-24", "# ethereum-optimism/optimism Daily Update (Aug 24, 2025)\n## OVERVIEW \nToday's development focused on optimizing cannon's logging frequency for long-running processes and refining documentation for command-line examples. A new interop POC implementation issue was opened, and discussions continued on monitoring improvements for flashblocks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Cannon Performance and Logging Optimization\nA significant feature was added to reduce excessive logging during long-running cannon fault proof executions. The default progress logging frequency has been decreased from every 100,000 steps to every 1,000,000 steps, which will lead to fewer logs and improved performance for these processes. ([#17186](https://github.com/ethereum-optimism/optimism/pull/17186))\n\n### Documentation and Command-Line Clarity\nAn update was made to the `op-node` README to ensure proper line continuation with backslashes in command-line examples. This fix addresses potential copy-paste issues and shell parsing errors, improving the clarity and usability of the documentation. ([#16753](https://github.com/ethereum-optimism/optimism/pull/16753))\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n- [#17191](https://github.com/ethereum-optimism/optimism/pull/17191) aims to fix an error related to the edit index in JetBrains editors.\n- [#17192](https://github.com/ethereum-optimism/optimism/pull/17192) addresses a typo in the documentation.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Interoperability Proof of Concept\nA new issue was opened to track the completion and deployment of an interoperability Proof of Concept (POC) to the devnet. This is a key step towards enhancing cross-chain capabilities within the Superchain. ([#17190](https://github.com/ethereum-optimism/optimism/issues/17190))\n\n## ACTIVE ISSUES\n### Flashblocks Monitoring and Alerting Improvements\nDiscussions continued on improving monitoring and alerting for flashblocks integration, particularly as op-sepolia approaches flashblocks enablement ([#16388](https://github.com/ethereum-optimism/optimism/issues/16388)). The latest comments from yashvardhan-kukreja (Aug 24, 2025) indicate an associated PR in the `k8s` repository ([https://github.com/ethereum-optimism/k8s/pull/7162](https://github.com/ethereum-optimism/k8s/pull/7162)). Earlier notes (July 24, 2025) outlined specific metrics and SLAs for monitoring, including:\n- Minimum peer count (4).\n- SLAs around block progression and divergence.\n- Alerts for pending transactions exceeding thresholds (~60 or spikes).\n- Flashblocks-related SLA metrics (p99 over time) using `reth_op_rbuilder_total_block_built_duration`.\n- Monitoring `flashblocks-websocket-proxy` connections for failures and errors, with alerts for the absence of these metrics.\n- Tracking `flashblocks-rpc` node-reth metrics for upstream errors and message rates.\n- Ensuring `op-node-rbuilder` inherits most `op-node` alerts and metrics.", "2025-09-04T03:29:47.693Z"]
["ethereum-optimism/community-hub_day_2025-08-25", "ethereum-optimism/community-hub", "day", "2025-08-25", "# ethereum-optimism/community-hub Daily Update (Aug 25, 2025)\n\n## OVERVIEW \nToday's development focused on minor content updates within the community hub, specifically clarifying eligibility for the Citizens' House and updating a contributor page. Several issues were closed, primarily related to internal tracking and previously completed work.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Community Content Updates\n*   Updated the techNERD contribution page with the latest information ([#1177](https://github.com/ethereum-optimism/community-hub/pull/1177)).\n*   Clarified that the list of eligible chains and apps refers to Citizenship eligibility to avoid confusion with grants eligibility ([#1180](https://github.com/ethereum-optimism/community-hub/pull/1180)).\n\n## NEWLY OPENED PULL REQUESTS\n- None\n\n## CLOSED ISSUES\n\n### Internal Tracking and Development Decisions\n*   The tracking issue for \"Jovian + Karst: Consensus influencing event nonces\" was closed as the implementation is not planned for the near future ([#13543](https://github.com/ethereum-optimism/community-hub/issues/13543)).\n*   An issue regarding \"op-service: Event Call Graph\" was closed, noting that similar functionality exists elsewhere and the team is moving away from the event system ([#16874](https://github.com/ethereum-optimism/community-hub/issues/16874)).\n*   The issue \"op-up: clean up logging\" was closed, as it's not considered worthwhile without `op-geth` eliminating global logger use ([#17007](https://github.com/ethereum-optimism/community-hub/issues/17007)).\n\n### Postmortem and Test Log Resolution\n*   The \"[Scalar fix] Postmortem of original issue\" was closed, indicating the work was completed last week ([#17012](https://github.com/ethereum-optimism/community-hub/issues/17012)).\n*   An issue concerning \"op-acceptance-tests: Missing test logs\" was closed after the logs were located in root logs ([#17151](https://github.com/ethereum-optimism/community-hub/issues/17151)).\n\n## NEW ISSUES\n- None\n\n## ACTIVE ISSUES\n- None", "2025-09-04T03:29:48.619Z"]
["ethereum-optimism/docs_day_2025-08-25", "ethereum-optimism/docs", "day", "2025-08-25", "# ethereum-optimism/docs Daily Update (Aug 25, 2025)\n## OVERVIEW \nThe day saw significant activity in issue resolution, with several long-standing and recent issues being closed. This included the closure of issues related to event system tracing, logging cleanup, and postmortems, indicating a focus on refining existing processes and documentation. A new issue was opened for a Q4 2024 audit.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n### Internal Process and System Refinements\nSeveral issues related to internal system processes and logging were closed. This includes the closure of [#17007](https://github.com/ethereum-optimism/docs/issues/17007) concerning `op-up` logging cleanup, which was deemed not worthwhile without `op-geth` eliminating global logger use. Additionally, [#16874](https://github.com/ethereum-optimism/docs/issues/16874) regarding `op-service` event call graph was closed as a similar solution exists and the team is moving towards removing the event system.\n\n### Postmortem and Tracking Issue Resolution\nThe postmortem for a Scalar fix, [#17012](https://github.com/ethereum-optimism/docs/issues/17012), was closed as the work had already been completed. The tracking issue [#13543](https://github.com/ethereum-optimism/docs/issues/13543) concerning Jovian + Karst consensus influencing event nonces was also closed, with the decision not to implement it for the time being.\n\n### Test Log Resolution\nThe issue [#17151](https://github.com/ethereum-optimism/docs/issues/17151) regarding missing test logs in `op-acceptance-tests` was closed after the logs were located in one of the root logs.\n\n## NEW ISSUES\n\n### Audit Planning\nA new issue, [#1722](https://github.com/ethereum-optimism/docs/issues/1722), was opened to track the 2024 Q4 Audit for a specific page path, indicating upcoming review and verification work.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:29:49.101Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-25", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-25", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 25, 2025)\n## OVERVIEW \nToday's development focused on expanding token support within the Superchain ecosystem by adding the Pepe Community (PEPE) token for the Ethereum to Base bridge. Several long-standing issues, including those related to consensus event nonces, event tracing, logging, and test log visibility, were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Token Expansion\n- The Pepe Community ($PEPE) token was added to the Superchain Token List, enabling bridging between Ethereum and Base. This involved updating `data/pepe_community/data.json` and adding `data/pepe_community/logo.svg`. ([#1188](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1188))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Consensus and Event System Refinements\n- An issue tracking consensus-influencing event nonces was closed, as implementation is not planned for the time being. ([#13543](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/13543))\n- An issue concerning an event call graph for `op-service` was closed, as similar functionality exists elsewhere and the team is leaning towards removing the entire event system. ([#16874](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16874))\n\n### Logging and Debugging Improvements\n- An issue related to cleaning up `op-up` logging was closed, deemed not worthwhile without `op-geth` eliminating global logger usage. ([#17007](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17007))\n- An issue regarding missing test logs in `op-acceptance-tests` was closed, as the logs were located in root logs. ([#17151](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17151))\n\n### Postmortem Documentation\n- A postmortem issue for a Scalar fix was closed, indicating the task was completed during a recent retro. ([#17012](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17012))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:29:48.936Z"]
["ethereum-optimism/infra_day_2025-08-25", "ethereum-optimism/infra", "day", "2025-08-25", "# ethereum-optimism/infra Daily Update (Aug 25, 2025)\n## OVERVIEW \nThe day saw the closure of several long-standing issues related to runbook refactoring, event system tracing, and logging cleanup. A new pull request was opened for linting in `op-acceptor`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#450](https://github.com/ethereum-optimism/infra/pull/450), was opened to address linting within the `op-acceptor` component.\n\n## CLOSED ISSUES\n\n### Runbook and Playbook Refactoring\nThe issue [#347](https://github.com/ethereum-optimism/infra/issues/347), which aimed to refactor the upgrade runbook to align with the mainnet migration playbook format, was closed.\n\n### Event System and Logging Cleanup\nSeveral issues related to internal system improvements were closed:\n- [#13543](https://github.com/ethereum-optimism/infra/issues/13543), concerning consensus-influencing event nonces, was closed as it is not currently planned for implementation.\n- [#16874](https://github.com/ethereum-optimism/infra/issues/16874), which proposed adding an event call graph to `op-service`, was closed as similar functionality exists elsewhere and the team is leaning towards removing the entire event system.\n- [#17007](https://github.com/ethereum-optimism/infra/issues/17007), focused on cleaning up logging in `op-up`, was closed due to the complexity of eliminating global logger use in `op-geth`.\n\n### Postmortem and Test Log Resolution\n- The issue [#17012](https://github.com/ethereum-optimism/infra/issues/17012), related to a Scalar fix postmortem, was closed as the work had already been completed.\n- [#17151](https://github.com/ethereum-optimism/infra/issues/17151), addressing missing test logs in `op-acceptance-tests`, was closed after the logs were located in root logs.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments were updated today.", "2025-09-04T03:29:50.214Z"]
["ethereum-optimism/op-analytics_day_2025-08-25", "ethereum-optimism/op-analytics", "day", "2025-08-25", "# ethereum-optimism/op-analytics Daily Update (Aug 25, 2025)\n\n## OVERVIEW \nToday's development focused on refining data processing by excluding Celo from pending batches. Several tracking and cleanup issues were closed, indicating progress in streamlining internal processes and addressing previous concerns.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Data Pipeline Refinement**: A change was implemented to exclude Celo from pending batches in the data pipeline, indicating a focus on data integrity and specific chain handling. ([#1727](https://github.com/ethereum-optimism/op-analytics/pull/1727))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Internal Process Streamlining**: Several issues related to internal processes and tracking were closed, including a tracking issue for consensus-influencing event nonces ([#13543](https://github.com/ethereum-optimism/op-analytics/issues/13543)) and a postmortem of a scalar fix ([#17012](https://github.com/ethereum-optimism/op-analytics/issues/17012)).\n*   **Codebase Cleanup and Refinement**: Issues concerning event call graphs ([#16874](https://github.com/ethereum-optimism/op-analytics/issues/16874)) and logging cleanup in `op-up` ([#17007](https://github.com/ethereum-optimism/op-analytics/issues/17007)) were closed, indicating efforts to improve code clarity and maintainability.\n*   **Testing Infrastructure Improvement**: An issue regarding missing test logs in `op-acceptance-tests` was closed ([#17151](https://github.com/ethereum-optimism/op-analytics/issues/17151)), suggesting progress in enhancing testing visibility.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:29:51.241Z"]
["ethereum-optimism/op-geth_day_2025-08-25", "ethereum-optimism/op-geth", "day", "2025-08-25", "# ethereum-optimism/op-geth Daily Update (Aug 25, 2025)\n## OVERVIEW \nThe primary focus for the day was a significant merge of go-ethereum v1.16.1 into the codebase, impacting numerous files across various directories. Several tracking and operational issues were also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Upstream Geth Integration\nA major merge of `go-ethereum v1.16.1` was completed, involving extensive changes across the `accounts/abi`, `.gitea/workflows`, `cmd/devp2p`, `beacon/engine`, and `build` directories. This update brings `op-geth` closer to the latest upstream `go-ethereum` version, ensuring compatibility and incorporating upstream improvements ([#652](https://github.com/ethereum-optimism/op-geth/pull/652)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Operational and Tracking Issue Closure\nSeveral tracking and operational issues were closed, including one related to consensus-influencing event nonces ([#13543](https://github.com/ethereum-optimism/op-geth/issues/13543)), an issue concerning event call graph tracing ([#16874](https://github.com/ethereum-optimism/op-geth/issues/16874)), and a task to clean up `op-up` logging ([#17007](https://github.com/ethereum-optimism/op-geth/issues/17007)). A postmortem issue for a Scalar fix was also closed as the work was completed ([#17012](https://github.com/ethereum-optimism/op-geth/issues/17012)).\n\n### Test Log Visibility Improvement\nAn issue regarding missing test logs in `op-acceptance-tests` was closed, with the logs being located in root logs. This improves visibility into test failures and debugging ([#17151](https://github.com/ethereum-optimism/op-geth/issues/17151)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-09-04T03:29:51.279Z"]
["ethereum-optimism/ecosystem_day_2025-08-25", "ethereum-optimism/ecosystem", "day", "2025-08-25", "# ethereum-optimism/ecosystem Daily Update (Aug 25, 2025)\n## OVERVIEW \nThe day saw the closure of several long-standing issues related to protocol mechanics and logging, alongside the creation of new issues focusing on UI/UX improvements for optimism.io and localchain.dev.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n### Protocol Mechanics and Event Handling\nAn issue concerning the implementation of a claim contract deployment process for a mini-app was closed [#868](https://github.com/ethereum-optimism/ecosystem/issues/868). Additionally, a tracking issue related to consensus influencing event nonces was closed, with the decision not to implement it for the time being [#13543](https://github.com/ethereum-optimism/ecosystem/issues/13543).\n\n### Logging and Debugging Improvements\nAn issue regarding the tracing of event flow in `op-service` was closed, as similar functionality is already present in another pull request [#16874](https://github.com/ethereum-optimism/ecosystem/issues/16874). Another issue focused on cleaning up logging in `op-up` was closed, as it was deemed not worthwhile without `op-geth` eliminating all use of the global logger [#17007](https://github.com/ethereum-optimism/ecosystem/issues/17007).\n\n### Postmortem and Test Log Resolution\nA postmortem issue related to a Scalar fix was closed, indicating the work was completed [#17012](https://github.com/ethereum-optimism/ecosystem/issues/17012). An issue concerning missing test logs in `op-acceptance-tests` was also closed, as the logs were successfully located [#17151](https://github.com/ethereum-optimism/ecosystem/issues/17151).\n\n## NEW ISSUES\n\n### UI/UX Enhancements\nNew issues were opened to implement a storybook and design system for optimism.io [#931](https://github.com/ethereum-optimism/ecosystem/issues/931) and to add Atlas to localchain.dev while making its logo clickable [#932](https://github.com/ethereum-optimism/ecosystem/issues/932).\n\n## ACTIVE ISSUES\n\n### Event Call Graph in op-service\nIssue [#16874](https://github.com/ethereum-optimism/ecosystem/issues/16874) discusses adding logic to trace event flow. The latest comment from mslipper indicates that similar functionality exists elsewhere, leading to its closure. Earlier, pcw109550 noted that the team is leaning towards removing the entire event system, making this specific contribution unlikely to be merged, though the code might be used for control flow analysis.\n\n### op-up: clean up logging\nIssue [#17007](https://github.com/ethereum-optimism/ecosystem/issues/17007) addresses problems encountered with filtering `op-geth` logs. The latest comment from joshklop suggests that cleaning up logging in `op-up` is not worthwhile unless `op-geth` eliminates its use of the global logger.\n\n### op-acceptance-tests: Missing test logs\nIssue [#17151](https://github.com/ethereum-optimism/ecosystem/issues/17151) highlights missing logs for failed tests in CI runs. The latest comment from janjakubnanista confirms that the logs have been found. Earlier, scharissis clarified that the workflow job in question is not meant for acceptance tests and that a separate PR is in progress to move these tests, which should resolve the logging issue.", "2025-09-04T03:29:54.000Z"]
["ethereum-optimism/community-hub_day_2025-08-26", "ethereum-optimism/community-hub", "day", "2025-08-26", "# ethereum-optimism/community-hub Daily Update (Aug 26, 2025)\n## OVERVIEW \nThe day's development focused on minor updates to documentation and font files. Significant discussions continued on active issues, particularly around `op-proposer` configuration and flashblocks monitoring.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Documentation and Asset Updates**\n    *   Updated `govnerds.mdx` with S8 Charter information ([#1181](https://github.com/ethereum-optimism/community-hub/pull/1181)).\n    *   Updated various font files and `global.css` ([#1182](https://github.com/ethereum-optimism/community-hub/pull/1182)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Challenger Support in op-up**\n    *   The issue of supporting the challenger within `op-up` was closed, with the conclusion that distributing the challenger via `op-up` for `sysgo` is likely not worth the effort, suggesting focus on other backends like Docker instead ([#17005](https://github.com/ethereum-optimism/community-hub/issues/17005)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n*   **op-proposer Failed to Create Transaction** ([#13502](https://github.com/ethereum-optimism/community-hub/issues/13502))\n    *   A user confirmed that setting `--game-type=1` resolved their issue with `op-proposer` failing to create transactions, aligning with previous suggestions about misconfigured game types. The discussion highlights the importance of correct `game-type` settings for `op-proposer`.\n\n*   **op-sync-tester, op-acceptance-tests: sync test using the sync-tester** ([#16703](https://github.com/ethereum-optimism/community-hub/issues/16703))\n    *   The issue was reopened as not all Hardfork (HF) transitions were tested. New test case ideas include checking all OP Stack HF transitions, validating multiple CLs syncing with a single Sync Tester, and testing user transactions within L2 blocks.\n\n*   **Load Testing Flashblocks on Devnets** ([#16756](https://github.com/ethereum-optimism/community-hub/issues/16756))\n    *   A request was made for a summary document detailing the outcomes of the load tests, including scenarios, networks, and results.\n\n*   **Alert when non-flashblocks-enabled sequencer is active or flashblocks are turned off** ([#16867](https://github.com/ethereum-optimism/community-hub/issues/16867))\n    *   Progress was noted with a pull request for `rollup-boost` that, once landed, will enable the creation of the desired alert.\n\n*   **Alert on low peer count health of flashblocks-enabled sequencer** ([#16868](https://github.com/ethereum-optimism/community-hub/issues/16868))\n    *   It was noted that peer count alerting for `op-node` sequencer peering already exists. The plan is to add `reth`/`op-rbuilder` peer count monitoring for this specific alert.", "2025-09-04T03:29:54.904Z"]
["ethereum-optimism/docs_day_2025-08-26", "ethereum-optimism/docs", "day", "2025-08-26", "# ethereum-optimism/docs Daily Update (Aug 26, 2025)\n## OVERVIEW \nToday's focus was on minor documentation fixes and an update to the project's font assets. A deprecated SDK reference was removed, and the project's font files were updated to \"Reforma.\" Discussions continued on several active issues, including `op-proposer` transaction failures and sync testing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Refinement\nA bug fix was implemented to remove a reference to a deprecated SDK, ensuring the documentation remains accurate and up-to-date ([#1724](https://github.com/ethereum-optimism/docs/pull/1724)).\n\n### Asset Updates\nThe project's font assets were updated to \"Reforma,\" involving changes across multiple font files and related styling configurations ([#1723](https://github.com/ethereum-optimism/docs/pull/1723)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### `op-proposer` Transaction Failures\nDiscussions on [#13502](https://github.com/ethereum-optimism/docs/issues/13502) continued regarding `op-proposer` failing to create transactions. The latest comment from `dariusL3` (Aug 26, 2025) confirmed that setting `--game-type=1` fixed the issue for them, aligning with previous suggestions about upgrading the game factory address proxy and checking game types.\n\n### Sync Testing Enhancements\nOn [#16703](https://github.com/ethereum-optimism/docs/issues/16703), `pcw109550` (Aug 26, 2025) outlined test case ideas for sync testing, prioritizing checking all OP Stack Hard Fork transitions, not just Isthmus. Other ideas include testing with multiple CLs and user transactions, with items 2 and 3 being captured in a separate issue.\n\n### Load Testing Flashblocks\nIssue [#16756](https://github.com/ethereum-optimism/docs/issues/16756) saw a brief update from `zhwrd` (Aug 26, 2025) clarifying that they are working on the report after accidentally moving the issue to \"done.\" `alfonso-op` (Aug 26, 2025) requested a summary document of the load test outcomes.\n\n### Flashblocks Sequencer Alerts\nDiscussions on [#16867](https://github.com/ethereum-optimism/docs/issues/16867) regarding alerts for non-flashblocks-enabled sequencers saw `jelias2` (Aug 26, 2025) link to a relevant pull request, stating that the alert will be created once it lands. Similarly, for [#16868](https://github.com/ethereum-optimism/docs/issues/16868) concerning low peer count alerts for flashblocks-enabled sequencers, `jelias2` (Aug 26, 2025) noted existing peer count alerting for `op-node` and plans to add `reth`/`op-rbuilder` peer count for this specific alert.", "2025-09-04T03:29:55.471Z"]
["ethereum-optimism/optimism_day_2025-08-25", "ethereum-optimism/optimism", "day", "2025-08-25", "# ethereum-optimism/optimism Daily Update (Aug 25, 2025)\n\n## OVERVIEW \nThe day saw significant progress in devnet capabilities with flashblocks support, critical bug fixes for Superchain configuration, and extensive updates to core dependencies including Geth and Cannon. Several issues related to developer experience and infrastructure were also addressed and closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Devnet Enhancements & Testing Infrastructure\nFlashblocks support was added to the Kurtosis devnet, enabling more robust testing environments ([#17172](https://github.com/ethereum-optimism/optimism/pull/17172)). Improvements were also made to the sync tester in `op-devstack` ([#17198](https://github.com/ethereum-optimism/optimism/pull/17198)) and fork retry logic was added to upgrade tests to enhance reliability ([#17201](https://github.com/ethereum-optimism/optimism/pull/17201)).\n\n### Core Dependency Updates & Refinements\nThe `op-geth` dependency was updated to include upstream Geth v1.16.1 changes ([#16785](https://github.com/ethereum-optimism/optimism/pull/16785)). Cannon deployment now supports Go 1.24 ([#17155](https://github.com/ethereum-optimism/optimism/pull/17155)), and the `op-node` driver package was reorganized for better structure ([#17098](https://github.com/ethereum-optimism/optimism/pull/17098)).\n\n### Bug Fixes & Tooling Improvements\nA critical bug in the `superchain-config` fuzz test was fixed, specifically addressing `ProxyAdmin` constraints ([#17203](https://github.com/ethereum-optimism/optimism/pull/17203)). The `op-chain-ops` tool received an update to handle new Forge compiler profiles for source map loading ([#17196](https://github.com/ethereum-optimism/optimism/pull/17196)). Additionally, `op-up` was enhanced with ASCII art and a survey link for improved user experience ([#17205](https://github.com/ethereum-optimism/optimism/pull/17205), [#17206](https://github.com/ethereum-optimism/optimism/pull/17206)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17197](https://github.com/ethereum-optimism/optimism/pull/17197) `op-acceptance-tests`: Adds sync tester tests.\n- [#17199](https://github.com/ethereum-optimism/optimism/pull/17199) `chore(op-challenger)`: Corrects an error message for `GetGameRange` calls.\n- [#17202](https://github.com/ethereum-optimism/optimism/pull/17202) `chore(tests)`: Bumps Kurtosis package to a fully reproducible version compatible with the new deployer.\n- [#17212](https://github.com/ethereum-optimism/optimism/pull/17212) `feat(ci)`: Configures CI to run on proposal branches.\n\n## CLOSED ISSUES\n\n### Core Protocol & Infrastructure Updates\nSeveral issues related to core protocol updates and infrastructure were closed. This includes the completion of the Geth v1.16.1 merge ([#16825](https://github.com/ethereum-optimism/optimism/issues/16825)), and the support for Cannon with Go 1.24 ([#17095](https://github.com/ethereum-optimism/optimism/issues/17095)). A tracking issue for consensus-influencing event nonces was closed as it is not being implemented currently ([#13543](https://github.com/ethereum-optimism/optimism/issues/13543)).\n\n### Developer Experience & Tooling Improvements\nEfforts to reduce friction between Go and Solidity development were completed ([#14976](https://github.com/ethereum-optimism/optimism/issues/14976)). Issues related to `op-up` logging cleanup ([#17007](https://github.com/ethereum-optimism/optimism/issues/17007)), adding ASCII art on startup ([#17134](https://github.com/ethereum-optimism/optimism/issues/17134)), and including a survey link on shutdown ([#17135](https://github.com/ethereum-optimism/optimism/issues/17135)) were also closed.\n\n### Operational & Testing Enhancements\nThe rollout and release of `op-batcher` was completed ([#16843](https://github.com/ethereum-optimism/optimism/issues/16843)). An issue concerning missing test logs in `op-acceptance-tests` was resolved ([#17151](https://github.com/ethereum-optimism/optimism/issues/17151)). A cronjob for mempool rebroadcaster deployment was also addressed ([#16932](https://github.com/ethereum-optimism/optimism/issues/16932)).\n\n## NEW ISSUES\n\n### Forge Deployer Migration\nA series of new issues were opened to track the migration of the OP Deployer to use Forge. This includes a tracking issue for the overall migration ([#17213](https://github.com/ethereum-optimism/optimism/issues/17213)), creating a CLI wrapper around the Forge binary ([#17214](https://github.com/ethereum-optimism/optimism/issues/17214)), and converting specific deployment functions like `DeploySuperchain` ([#17215](https://github.com/ethereum-optimism/optimism/issues/17215)), `DeployImplementations` ([#17216](https://github.com/ethereum-optimism/optimism/issues/17216)), and `DeployOPChain` ([#17217](https://github.com/ethereum-optimism/optimism/issues/17217)) to use Forge. The conversion of contract verification logic to use Forge is also tracked ([#17218](https://github.com/ethereum-optimism/optimism/issues/17218)).\n\n### Technical Specification Updates\nAn issue was created to update the Cannon FPVM specification to include `getrandom` syscall changes related to Go 1.24 features ([#17207](https://github.com/ethereum-optimism/optimism/issues/17207)).\n\n### Kurtosis & Websockets\nA feature request was opened to implement Websockets support in the Kurtosis Reverse Proxy ([#17194](https://github.com/ethereum-optimism/optimism/issues/17194)).\n\n## ACTIVE ISSUES\n\n### Forge Deployer Migration\nDiscussions on the Forge Deployer migration issues indicate active interest from contributors. For [#17214](https://github.com/ethereum-optimism/optimism/issues/17214), [#17215](https://github.com/ethereum-optimism/optimism/issues/17215), [#17216](https://github.com/ethereum-optimism/optimism/issues/17216), [#17217](https://github.com/ethereum-optimism/optimism/issues/17217), and [#17218](https://github.com/ethereum-optimism/optimism/issues/17218), `tooshiNoko` has expressed interest in taking on these tasks. For the overall tracking issue [#17213](https://github.com/ethereum-optimism/optimism/issues/17213), `tooshiNoko` noted that `bitwiseguy` self-assigned and suggested syncing up to avoid overlapping work, indicating a collaborative effort on this significant migration.", "2025-09-04T03:29:56.645Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-26", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-26", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 26, 2025)\n## OVERVIEW \nToday's activity focused on ongoing discussions and planning for several key areas, including flashblocks, sync testing, and op-proposer configuration. A notable issue related to op-up's challenger support was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Op-Up Challenger Support\nThe issue regarding `op-up` support for the challenger was closed today, with the conclusion that distributing the challenger within `op-up` for `sysgo` is likely not worth the effort, and focusing on other backends like Docker is preferred [#17005](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17005).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Flashblocks Monitoring and Alerts\nDiscussions continued on setting up alerts for flashblocks. For [#16867](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16867), an update was provided that an alert will be created once a related pull request in `rollup-boost` lands. Regarding [#16868](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16868), it was noted that peer count alerting for `op-node` sequencer peering already exists, and the focus will be on adding `reth`/`op-rbuilder` peer count alerts.\n\n### Load Testing Flashblocks\nProgress on load testing flashblocks on devnets was discussed in [#16756](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16756). A team member accidentally marked the issue as done and is now working on a report summarizing the outcomes, including load test scenarios and network results.\n\n### Sync Testing Enhancements\nDiscussions on `op-sync-tester` and `op-acceptance-tests` continued in [#16703](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16703). New test case ideas were proposed, including checking every OP Stack Hard Fork transition, validating multiple CLs with a single sync tester, and testing user transactions within L2 blocks. It was noted that items 2 and 3 are captured in a separate issue.\n\n### Op-Proposer Transaction Failure\nA new comment was added to [#13502](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/13502) confirming that setting `--game-type=1` fixed the \"Failed to create a transaction\" error for a user, aligning with previous suggestions to check and set the correct game type.", "2025-09-04T03:29:57.372Z"]
["ethereum-optimism/specs_day_2025-08-25", "ethereum-optimism/specs", "day", "2025-08-25", "# ethereum-optimism/specs Daily Update (Aug 25, 2025)\n\n## OVERVIEW \nThe day's development focused on integrating the minimum base fee design into the specifications, particularly for the Jovian release. Several tracking and operational issues were closed, indicating progress in clearing outstanding tasks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Specification Updates\n*   **Minimum Base Fee Integration:** The design document for the minimum base fee was converted into formal specifications, impacting the `exec-engine.md`, `overview.md`, and `system-config.md` files within the `specs/protocol/jovian` directory. This is a significant step in defining the protocol's economic parameters for the upcoming Jovian release. ([#747](https://github.com/ethereum-optimism/specs/pull/747))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Operational and Logging Improvements\n*   **Logging Cleanup:** An issue related to cleaning up logging in `op-up` was closed, with the note that it's likely not worthwhile without `op-geth` eliminating all use of the global logger. ([#17007](https://github.com/ethereum-optimism/specs/issues/17007))\n*   **Acceptance Test Log Visibility:** An issue concerning missing test logs in `op-acceptance-tests` was closed, as the logs were found in one of the root logs. ([#17151](https://github.com/ethereum-optimism/specs/issues/17151))\n\n### Design and Event System Review\n*   **Consensus Event Nonces:** A tracking issue for consensus-influencing event nonces for Jovian + Karst was closed, indicating that this feature will not be implemented for the time being. ([#13543](https://github.com/ethereum-optimism/specs/issues/13543))\n*   **Event Call Graph Analysis:** An issue regarding an event call graph in `op-service` was closed, as similar functionality is being addressed in another pull request, and there's a leaning towards removing the entire event system. ([#16874](https://github.com/ethereum-optimism/specs/issues/16874))\n*   **Scalar Fix Postmortem:** A postmortem issue related to a Scalar fix was closed, as the work was completed during a recent retro. ([#17012](https://github.com/ethereum-optimism/specs/issues/17012))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were updated today.", "2025-09-04T03:29:52.056Z"]
["ethereum-optimism/op-analytics_day_2025-08-26", "ethereum-optimism/op-analytics", "day", "2025-08-26", "# ethereum-optimism/op-analytics Daily Update (Aug 26, 2025)\n## OVERVIEW \nToday's development focused on optimizing data processing for Dune Analytics, specifically reducing the run time for \"All Transactions\" data. Discussions on active issues covered troubleshooting `op-proposer` configurations, refining sync testing strategies, and enhancing flashblocks-related alerts.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Optimization\nA pull request was opened to reduce the run time for the \"All Transactions\" data on Dune Analytics, specifically targeting the `other_chains_tracking/get_all_txs.ipynb` file. This aims to improve efficiency in data processing. ([#1729](https://github.com/ethereum-optimism/op-analytics/pull/1729))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Challenger Support in op-up\nThe issue regarding `op-up` support for the challenger was closed, with the conclusion that distributing the challenger within `op-up` for `sysgo` is likely not worth the effort, and focusing on other backends like Docker is preferred. ([#17005](https://github.com/ethereum-optimism/op-analytics/issues/17005))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### op-proposer Failed to Create Transaction\nDiscussion continued on troubleshooting `op-proposer` failures. The latest comment confirmed that setting `--game-type=1` resolved the issue for one user, indicating a misconfiguration of the game type as a common cause. Previous comments highlighted the `NoImplementation` error and suggested checking contract configuration or `op-proposer`'s game-type setting. ([#13502](https://github.com/ethereum-optimism/op-analytics/issues/13502))\n\n### Sync Test Using Sync-Tester\nIdeas for sync test cases were discussed. The latest comment outlined priorities: checking all OP Stack Hard Fork transitions (not just Isthmus), testing multiple CLs with a single Sync Tester, and incorporating user transactions into L2 blocks for sync validation. Items 2 and 3 were noted as being captured in a separate issue. ([#16703](https://github.com/ethereum-optimism/op-analytics/issues/16703))\n\n### Load Testing Flashblocks on Devnets\nA comment indicated that a report summarizing the load test scenarios, networks, and results is currently being worked on. ([#16756](https://github.com/ethereum-optimism/op-analytics/issues/16756))\n\n### Alert for Non-Flashblocks-Enabled Sequencer or Flashblocks Off\nA pull request for `rollup-boost` was linked, with the intention to create the alert once that PR lands. This alert aims to detect when a backup sequencer without flashblocks components becomes active, indicating a potential issue with flashblocks. ([#16867](https://github.com/ethereum-optimism/op-analytics/issues/16867))\n\n### Alert on Low Peer Count Health of Flashblocks-Enabled Sequencer\nIt was noted that peer count alerting for `op-node` sequencer peering already exists for counts less than 2. The plan is to add `reth`/`op-rbuilder` peer count monitoring for this specific alert, which targets critical low peer counts (e.g., below 3 or 4) for flashblocks-enabled sequencers. ([#16868](https://github.com/ethereum-optimism/op-analytics/issues/16868))", "2025-09-04T03:29:59.420Z"]
["ethereum-optimism/op-geth_day_2025-08-26", "ethereum-optimism/op-geth", "day", "2025-08-26", "# ethereum-optimism/op-geth Daily Update (Aug 26, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions and progress within existing issues, particularly around `op-proposer` configuration, sync testing, and flashblocks-related alerts. A decision was made to close an issue related to `op-up` support for the challenger.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n**Challenger Support in op-up**\nThe issue of supporting the challenger in `op-up` was closed today. The decision was made that distributing the challenger within `op-up` for `sysgo` use is likely not worth the effort, and focusing on other backends like Docker, which do not require binary distribution, is a better approach ([#17005](https://github.com/ethereum-optimism/op-geth/issues/17005)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n**op-proposer Failed to create a transaction**\nDiscussion on this issue continues, with a user confirming that setting `--game-type=1` resolved their problem. This aligns with earlier suggestions about ensuring the correct game type is configured for `op-proposer` ([#13502](https://github.com/ethereum-optimism/op-geth/issues/13502)).\n\n**op-sync-tester,op-acceptance-tests: sync test using the sync-tester**\nNew test case ideas were proposed, including checking every OP Stack Hard Fork transition, validating multiple CLs syncing with a single sync tester, and incorporating user transactions into L2 blocks for sync validation. Items 2 and 3 are being tracked in a separate issue ([#16703](https://github.com/ethereum-optimism/op-geth/issues/16703)).\n\n**load testing flashblocks on devnets**\nAn update indicated that a report summarizing the load test outcomes, scenarios, and results is in progress ([#16756](https://github.com/ethereum-optimism/op-geth/issues/16756)).\n\n**alert when non-flashblocks-enabled sequencer is active or flashblocks are turned off**\nProgress is being made on a related pull request ([#400](https://github.com/flashbots/rollup-boost/pull/400)) in the `flashbots/rollup-boost` repository. Once this lands, an alert will be created ([#16867](https://github.com/ethereum-optimism/op-geth/issues/16867)).\n\n**alert on low peer count health of flashblocks-enabled sequencer**\nIt was noted that peer count alerting for `op-node` sequencer peering is already in place. The plan is to add `reth`/`op-rbuilder` peer count for this specific alert ([#16868](https://github.com/ethereum-optimism/op-geth/issues/16868)).", "2025-09-04T03:29:58.730Z"]
["ethereum-optimism/specs_day_2025-08-26", "ethereum-optimism/specs", "day", "2025-08-26", "# ethereum-optimism/specs Daily Update (Aug 26, 2025)\n## OVERVIEW \nToday's development focused on enhancing the supervisor interop specifications with a new local safe feature. Discussions continued on critical issues including op-proposer failures, sync testing, flashblocks load testing, and sequencer alerting.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Interoperability Enhancements\nA new `supervisor_localSafe` feature was added to the interop specifications, enhancing the supervisor's capabilities within the Superchain ecosystem ([#753](https://github.com/ethereum-optimism/specs/pull/753)). This contributes to improved cross-chain interoperability.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n- [#751](https://github.com/ethereum-optimism/specs/pull/751) LivenessModule: This PR likely introduces a new module related to liveness, potentially for monitoring or ensuring system responsiveness.\n- [#752](https://github.com/ethereum-optimism/specs/pull/752) TimelockGuard: This PR suggests the addition of a timelock mechanism, which could be for security or controlled access to certain functionalities.\n\n## CLOSED ISSUES\n\n### Challenger Support in op-up\nThe issue regarding `op-up` support for the challenger was closed ([#17005](https://github.com/ethereum-optimism/specs/issues/17005)). The decision was made that distributing the challenger within `op-up` for `sysgo` is likely not worth the effort, with a preference for focusing on other backends like Docker that do not require binary distribution.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### op-proposer Transaction Failures\nDiscussions on [#13502](https://github.com/ethereum-optimism/specs/issues/13502) continued, with a recent comment confirming that setting `--game-type=1` fixed the \"Failed to create a transaction\" error for one user. This aligns with earlier suggestions that the issue often stems from misconfigured contracts or an incorrect `game-type` for `op-proposer`.\n\n### Sync Testing for OP Stack\nIssue [#16703](https://github.com/ethereum-optimism/specs/issues/16703) saw new ideas for sync test cases. Key suggestions include checking every OP Stack Hard Fork transition (not just Isthmus), testing with multiple Consensus Layers (CLs) and a single Sync Tester, and incorporating user transactions into L2 blocks to verify L2CL synchronization. Items 2 and 3 are being tracked in a separate issue.\n\n### Flashblocks Load Testing\nOn [#16756](https://github.com/ethereum-optimism/specs/issues/16756), there was a request for a summary document detailing the load test scenarios, networks used, and results. A team member indicated they are working on this report.\n\n### Flashblocks Sequencer Alerting\nDiscussions on sequencer alerting for flashblocks continued. For [#16867](https://github.com/ethereum-optimism/specs/issues/16867), an alert will be created once a related pull request in `rollup-boost` lands, which aims to detect when a non-flashblocks-enabled sequencer is active or flashblocks are turned off. Regarding [#16868](https://github.com/ethereum-optimism/specs/issues/16868), it was noted that peer count alerting for `op-node` sequencer peering already exists, and the focus for this issue will be on adding `reth`/`op-rbuilder` peer count alerts.", "2025-09-04T03:30:00.843Z"]
["ethereum-optimism/superchain-ops_day_2025-08-26", "ethereum-optimism/superchain-ops", "day", "2025-08-26", "# ethereum-optimism/superchain-ops Daily Update (Aug 26, 2025)\n\n## OVERVIEW \nToday's development focused on improving the reliability of simulation scripts by adding fork retries, reducing CI flakiness. Discussions continued on active issues related to `op-proposer` failures, sync testing, and flashblocks monitoring.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Simulation Script Reliability**\n    *   Added fork retries to simulation scripts to reduce CI flakiness ([#1172](https://github.com/ethereum-optimism/superchain-ops/pull/1172)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **`op-proposer` Transaction Failures**\n    *   A user confirmed that setting `--game-type=1` fixed their `op-proposer` transaction creation failure, aligning with previous suggestions about misconfigured game types or contracts ([#13502](https://github.com/ethereum-optimism/superchain-ops/issues/13502)).\n\n*   **Sync Acceptance Tests**\n    *   The issue was reopened as not all Hardfork (HF) transitions were tested. New test case ideas include checking every OP Stack HF transition, validating multiple CLs syncing with individual mock EL endpoints, and testing user transactions within L2 blocks ([#16703](https://github.com/ethereum-optimism/superchain-ops/issues/16703)).\n\n*   **Flashblocks Load Testing**\n    *   A request was made for a summary document detailing the load test scenarios, networks used, and results for flashblocks on `eris-0` ([#16756](https://github.com/ethereum-optimism/superchain-ops/issues/16756)).\n\n*   **Flashblocks Sequencer Alerts**\n    *   An alert is planned for when a non-flashblocks-enabled sequencer becomes active or flashblocks are turned off, indicating a potential issue with flashblocks. This alert will be created once a related pull request is merged ([#16867](https://github.com/ethereum-optimism/superchain-ops/issues/16867)).\n    *   Regarding low peer count alerts for flashblocks-enabled sequencers, it was noted that peer count alerting for `op-node` sequencer peering already exists. The focus will be on adding `reth`/`op-rbuilder` peer count alerts for this specific issue ([#16868](https://github.com/ethereum-optimism/superchain-ops/issues/16868)).", "2025-09-04T03:30:00.326Z"]
["ethereum-optimism/ecosystem_day_2025-08-26", "ethereum-optimism/ecosystem", "day", "2025-08-26", "# ethereum-optimism/ecosystem Daily Update (Aug 26, 2025)\n## OVERVIEW \nThe day's activity focused on addressing infrastructure and security concerns, with new issues opened for website font updates and CSP implementation. Discussions continued on `op-proposer` configuration, sync testing, and flashblocks-related alerts.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### op-up Challenger Support\nThe issue of supporting the challenger within `op-up` was closed, with the conclusion that distributing the challenger via `op-up` for `sysgo` is likely not worth the effort, and focusing on other backends like Docker is preferred ([#17005](https://github.com/ethereum-optimism/ecosystem/issues/17005)).\n\n## NEW ISSUES\n### Website Enhancements\nTwo new issues were opened to address website improvements: one to update the font for community.optimism.io ([#933](https://github.com/ethereum-optimism/ecosystem/issues/933)) and another to add Content Security Policy (CSP) to oplabs.co site ([#934](https://github.com/ethereum-optimism/ecosystem/issues/934)).\n\n## ACTIVE ISSUES\n### op-proposer Configuration\nA user confirmed that setting `--game-type=1` resolved their `op-proposer` issue, which was failing to create a transaction due to a `NoImplementation` error related to misconfigured contracts or an incorrect game type ([#13502](https://github.com/ethereum-optimism/ecosystem/issues/13502)).\n\n### Sync Tester Development\nDiscussions on `op-sync-tester` and `op-acceptance-tests` continued, with a focus on testing every OP Stack Hard Fork transition, not just Isthmus. Ideas for future test cases include validating multiple CLs syncing together and checking L2CLs with user transactions in L2 blocks. The issue was reopened as not all HF transitions were tested ([#16703](https://github.com/ethereum-optimism/ecosystem/issues/16703)).\n\n### Flashblocks Load Testing\nAn update indicated that a report summarizing the outcome of load tests on eris-0 for flashblocks is currently being worked on ([#16756](https://github.com/ethereum-optimism/ecosystem/issues/16756)).\n\n### Flashblocks Alerting\nProgress was noted on creating an alert for when a non-flashblocks-enabled sequencer is active or flashblocks are turned off, pending the landing of a related pull request ([#16867](https://github.com/ethereum-optimism/ecosystem/issues/16867)). Additionally, an existing peer count alert for `op-node` sequencer peering was identified, and the plan is to add Reth/op-rbuilder peer count for flashblocks-enabled sequencers ([#16868](https://github.com/ethereum-optimism/ecosystem/issues/16868)).", "2025-09-04T03:30:02.154Z"]
["ethereum-optimism/community-hub_day_2025-08-27", "ethereum-optimism/community-hub", "day", "2025-08-27", "# ethereum-optimism/community-hub Daily Update (Aug 27, 2025)\n## OVERVIEW \nThe day's development primarily focused on a minor visual update to the favicon. Significant activity was observed in issue discussions, particularly around the \"Forge Deployer\" migration and the deprioritization of flashblocks support in Kurtosis.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Visual Updates\nA minor update was implemented to change the favicon, enhancing the visual branding of the community hub. ([#1183](https://github.com/ethereum-optimism/community-hub/pull/1183))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Forge Deployer Migration Progress\nDiscussions continued on the \"Forge Deployer\" migration, with multiple team members expressing interest in contributing. User tooshiNoko offered to take on several related tasks, including creating a CLI wrapper around the Forge binary ([#17214](https://github.com/ethereum-optimism/community-hub/issues/17214)), converting `DeploySuperchain` ([#17215](https://github.com/ethereum-optimism/community-hub/issues/17215)), `DeployImplementations` ([#17216](https://github.com/ethereum-optimism/community-hub/issues/17216)), and `DeployOPChain` ([#17217](https://github.com/ethereum-optimism/community-hub/issues/17217)) to use Forge, and converting contract verification logic ([#17218](https://github.com/ethereum-optimism/community-hub/issues/17218)). There was also a discussion about coordinating efforts on the overall tracking issue for the migration ([#17213](https://github.com/ethereum-optimism/community-hub/issues/17213)) to avoid overlapping work.\n\n### Flashblocks Support Deprioritized\nThe task to add support for flashblocks in Kurtosis ([#16514](https://github.com/ethereum-optimism/community-hub/issues/16514)) was officially deprioritized and will not be implemented. A summary of the progress indicated that tests were largely implemented, with two outstanding PRs needing cleanup and merging. The estimated size for completion was S.", "2025-09-04T03:30:02.281Z"]
["ethereum-optimism/optimism_day_2025-08-26", "ethereum-optimism/optimism", "day", "2025-08-26", "# ethereum-optimism/optimism Daily Update (Aug 26, 2025)\n## OVERVIEW \nToday's development focused on refining testing infrastructure, addressing CI stability, and making minor tooling adjustments. Key updates include an `op-sync-tester` refactor and a CI fix.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Testing Infrastructure Enhancements\nThe `op-sync-tester` was significantly refactored to implement the `L2ELNode` interface, simplifying network setup for testing. This change streamlines the integration of the sync tester with other components like `op-geth` and `op-reth`. ([#17200](https://github.com/ethereum-optimism/optimism/pull/17200))\n\n### CI/CD and Tooling Improvements\nA critical CI issue was resolved by removing a problematic \"Todo\" that was causing build failures. Additionally, documentation for `op-deployer` was updated to correct an outdated link, and basic CLI argument handling was added to `op-up`. ([#17229](https://github.com/ethereum-optimism/optimism/pull/17229), [#17204](https://github.com/ethereum-optimism/optimism/pull/17204), [#17208](https://github.com/ethereum-optimism/optimism/pull/17208))\n\n### Contract Reversions and CI Stability\nA previous change related to FDG legibility was reverted in the U16a proposal branch. Furthermore, a CI adjustment was made to write cannon preimage commit information to a temporary file before uploading, aiming to improve `gsutil cp` retries and reduce flakiness. ([#17209](https://github.com/ethereum-optimism/optimism/pull/17209), [#17219](https://github.com/ethereum-optimism/optimism/pull/17219))\n\n## NEWLY OPENED PULL REQUESTS\nThree new pull requests were opened today:\n- [#17221](https://github.com/ethereum-optimism/optimism/pull/17221): Focuses on fixing typos within the codebase.\n- [#17222](https://github.com/ethereum-optimism/optimism/pull/17222): Introduces a feature to enable flashblocks tests within the Kurtosis devnet.\n- [#17227](https://github.com/ethereum-optimism/optimism/pull/17227): Proposes removing the super root migration from the portal as part of the U16a update.\n\n## CLOSED ISSUES\n\n### Testing and Development Tooling\nThe issue of supporting `sysgo` within `op-sync-tester` and `op-devstack` was closed, indicating progress in integrating these components for testing. Additionally, the `op-up` tool now recognizes and responds to standard CLI flags, improving its usability. ([#16702](https://github.com/ethereum-optimism/optimism/issues/16702), [#17076](https://github.com/ethereum-optimism/optimism/issues/17076))\n\n### Challenger Support in `op-up`\nThe issue concerning `op-up`'s support for the challenger was closed. A comment noted that distributing the challenger in `op-up` for `sysgo` use might be too complex, suggesting a focus on other backends like Docker that don't require binary distribution. ([#17005](https://github.com/ethereum-optimism/optimism/issues/17005))\n\n## NEW ISSUES\n\n### Core Protocol Development\nA new issue was opened to track the completion of the Geth v1.16.2 merge, indicating ongoing efforts to update core dependencies. ([#17223](https://github.com/ethereum-optimism/optimism/issues/17223))\n\n### Security and Auditing\nA new issue was created to resolve an ImmuneFi divergence report, highlighting a focus on addressing security findings. ([#17224](https://github.com/ethereum-optimism/optimism/issues/17224))\n\n### Developer Experience and Tooling\nTwo new issues were opened to enhance developer experience: one to define a configuration schema for `op-up` and another to improve the CircleCI config for job dependency references, making CI setup more intuitive. ([#17225](https://github.com/ethereum-optimism/optimism/issues/17225), [#17226](https://github.com/ethereum-optimism/optimism/issues/17226))\n\n## ACTIVE ISSUES\n\n### `op-proposer` Transaction Failures ([#13502](https://github.com/ethereum-optimism/optimism/issues/13502))\nThe latest comment confirms that setting `--game-type=1` fixed the \"Failed to create a transaction\" error for a user, suggesting that misconfiguration of the game type is a common cause. Previous discussions highlighted that the error often relates to `NoImplementation` due to misconfigured contracts or an incorrect `game-type` for `op-proposer`.\n\n### Sync Testing with `op-sync-tester` ([#16703](https://github.com/ethereum-optimism/optimism/issues/16703))\nThe issue was reopened as not all Hardfork (HF) transitions were tested. New test case ideas include checking every OP Stack HF transition (not just Isthmus), testing multiple CLs with a single Sync Tester, and validating user transactions within L2 blocks. Items 2 and 3 are being tracked in a separate issue.\n\n### Flashblocks Load Testing ([#16756](https://github.com/ethereum-optimism/optimism/issues/16756))\nA comment from today indicates that the issue was accidentally marked as done and that a report summarizing the load test scenarios, networks, and results is currently being worked on.\n\n### Flashblocks Alerting ([#16867](https://github.com/ethereum-optimism/optimism/issues/16867), [#16868](https://github.com/ethereum-optimism/optimism/issues/16868))\nFor [#16867](https://github.com/ethereum-optimism/optimism/issues/16867) (alert when non-flashblocks-enabled sequencer is active), a PR for `rollup-boost` is pending, after which the alert will be created. For [#16868](https://github.com/ethereum-optimism/optimism/issues/16868) (alert on low peer count health), it was noted that peer count alerting for `op-node` sequencer peering already exists. The plan is to add `reth`/`op-rbuilder` peer count for this specific alert.", "2025-09-04T03:30:02.299Z"]
["ethereum-optimism/docs_day_2025-08-27", "ethereum-optimism/docs", "day", "2025-08-27", "# ethereum-optimism/docs Daily Update (Aug 27, 2025)\n## OVERVIEW \nToday's focus was on significant documentation enhancements, particularly around Superchain operations and the introduction of Flashblocks, alongside the creation of new issues for audit tracking and PR title requirements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Operations Documentation\n- Updated the Superchain operations guide with new information. ([#1725](https://github.com/ethereum-optimism/docs/pull/1725))\n\n### Flashblocks Documentation\n- Added comprehensive documentation for Flashblocks, detailing its features for app developers and chain operators. ([#1716](https://github.com/ethereum-optimism/docs/pull/1716))\n- This involved changes across multiple files, including new pages for Flashblocks features and their application for both app developers and chain operators.\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request was opened for a Snyk upgrade. ([#1726](https://github.com/ethereum-optimism/docs/pull/1726))\n\n## CLOSED ISSUES\n\n### Deprioritized Feature\n- The task to add support for Flashblocks in Kurtosis was closed as deprioritized and will not be implemented. ([#16514](https://github.com/ethereum-optimism/docs/issues/16514))\n\n## NEW ISSUES\n\n### Documentation Audits and Standards\n- A new issue was created for a 2024 Q4 audit, specifying required updates for a particular page. ([#1727](https://github.com/ethereum-optimism/docs/issues/1727))\n- Another issue was opened to enforce adding PR titles. ([#1728](https://github.com/ethereum-optimism/docs/issues/1728))\n\n## ACTIVE ISSUES\n\n### Forge Deployer Migration\n- **[Forge Deployer] Create CLI wrapper around Forge binary** ([#17214](https://github.com/ethereum-optimism/docs/issues/17214)): A community member, tooshiNoko, expressed interest in taking on this task.\n- **[Tracking] [Forge Deployer] OP Deployer Forge Migration** ([#17213](https://github.com/ethereum-optimism/docs/issues/17213)): tooshiNoko noted a self-assignment by another user and suggested syncing up to avoid overlapping work, expressing a desire to take on all related tasks.\n- **[Forge Deployer] Convert DeploySuperchain to use Forge** ([#17215](https://github.com/ethereum-optimism/docs/issues/17215)): tooshiNoko inquired about taking on this task.\n- **[Forge Deployer] Convert DeployImplementations to use Forge** ([#17216](https://github.com/ethereum-optimism/docs/issues/17216)): tooshiNoko inquired about taking on this task.\n- **[Forge Deployer] Convert DeployOPChain to use Forge** ([#17217](https://github.com/ethereum-optimism/docs/issues/17217)): tooshiNoko inquired about taking on this task.\n- **[Forge Deployer] Convert contract verification logic to use Forge** ([#17218](https://github.com/ethereum-optimism/docs/issues/17218)): tooshiNoko inquired about taking on this task.", "2025-09-04T03:30:03.879Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-27", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-27", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 27, 2025)\n## OVERVIEW \nToday's development focused on enhancing token validation robustness and expanding token listings. A critical bug fix was implemented to add retry logic for contract validation calls, improving contributor experience. New tokens, EL and Wrapped WIT, were added, alongside bwAJNA on Mode.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Token Listing Expansion\nNew tokens were added to the Superchain token list, expanding the ecosystem's supported assets. This includes the EL token added to Soneium ([#1190](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1190)), the Wrapped WIT token (beta) to multiple testnets ([#1183](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1183)), and bwAJNA on Mode ([#1019](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1019)).\n\n### Improved Token Validation Reliability\nA significant bug fix was implemented to enhance the reliability of contract validation during CI. Retry logic was added for contract function calls (decimals, symbol, name) to address intermittent failures, improving the contributor experience for legitimate token submissions ([#1189](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1189)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Deprioritized Feature Development\nThe issue concerning the addition of flashblocks support in Kurtosis ([#16514](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16514)) was closed as it has been deprioritized and will not be implemented.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Forge Deployer Migration Progress\nDiscussions on the Forge Deployer migration are active, with several issues seeing engagement. For the \"Create CLI wrapper around Forge binary\" issue ([#17214](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17214)), `tooshiNoko` expressed interest in taking on the task. Similarly, `tooshiNoko` also inquired about taking on the conversion of `DeploySuperchain` ([#17215](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17215)), `DeployImplementations` ([#17216](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17216)), `DeployOPChain` ([#17217](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17217)), and contract verification logic ([#17218](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17218)) to use Forge. On the main tracking issue for \"OP Deployer Forge Migration\" ([#17213](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17213)), `tooshiNoko` noted that `bitwiseguy` had self-assigned and suggested syncing up to avoid overlapping work, mentioning a recently submitted PR (#17235) and expressing a desire to take on all related tasks if possible.", "2025-09-04T03:30:04.188Z"]
["ethereum-optimism/op-analytics_day_2025-08-27", "ethereum-optimism/op-analytics", "day", "2025-08-27", "# ethereum-optimism/op-analytics Daily Update (Aug 27, 2025)\n## OVERVIEW \nToday's focus was on a critical bug fix addressing schema migration for l2beat TVS breakdown data. Additionally, discussions continued on several \"Forge Deployer\" issues, with community members expressing interest in contributing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Pipeline Stability\n*   A bug fix was implemented to correct the schema migration for l2beat TVS breakdown data, ensuring the current implementation remains robust and accurate ([#1730](https://github.com/ethereum-optimism/op-analytics/pull/1730)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Deprioritized Development\n*   The task to add support for flashblocks in Kurtosis was closed and deprioritized, with a note that it will not be implemented at this time ([#16514](https://github.com/ethereum-optimism/op-analytics/issues/16514)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Forge Deployer Migration Progress\nDiscussions are ongoing regarding the migration of OP Deployer to use Forge. Community member tooshiNoko has expressed strong interest in taking on several related tasks, including creating a CLI wrapper around the Forge binary ([#17214](https://github.com/ethereum-optimism/op-analytics/issues/17214)), converting `DeploySuperchain` ([#17215](https://github.com/ethereum-optimism/op-analytics/issues/17215)), `DeployImplementations` ([#17216](https://github.com/ethereum-optimism/op-analytics/issues/17216)), `DeployOPChain` ([#17217](https://github.com/ethereum-optimism/op-analytics/issues/17217)), and contract verification logic ([#17218](https://github.com/ethereum-optimism/op-analytics/issues/17218)) to use Forge. tooshiNoko also noted submitting a related PR ([#17235](https://github.com/ethereum-optimism/op-analytics/pull/17235)) and is seeking to sync up with other contributors to avoid overlapping work on the overall tracking issue ([#17213](https://github.com/ethereum-optimism/op-analytics/issues/17213)).", "2025-09-04T03:30:04.815Z"]
["ethereum-optimism/specs_day_2025-08-27", "ethereum-optimism/specs", "day", "2025-08-27", "# ethereum-optimism/specs Daily Update (Aug 27, 2025)\n## OVERVIEW \nToday's development focused on the addition of comprehensive specifications for Flashblocks, an out-of-protocol system for rapid preconfirmation. Discussions also continued on the migration of OP Deployer to Forge, with several related issues seeing new comments.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Flashblocks Specification:** A new pull request was merged, adding detailed specifications for Flashblocks, an out-of-protocol system designed to enable rapid preconfirmation. This includes updates to the `SUMMARY.md` and the introduction of `protocol/flashblocks.md`. ([#754](https://github.com/ethereum-optimism/specs/pull/754))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Flashblocks Kurtosis Support Deprioritized:** The issue concerning the addition of Flashblocks support in Kurtosis was closed, with a note indicating that this task is currently deprioritized and will not be implemented. ([#16514](https://github.com/ethereum-optimism/specs/issues/16514))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n*   **OP Deployer Forge Migration Tracking:** Discussions continued on the overall tracking issue for the OP Deployer Forge Migration ([#17213](https://github.com/ethereum-optimism/specs/issues/17213)). A new comment from `tooshiNoko` indicated a recently submitted PR and a desire to sync up to avoid overlapping work, expressing interest in taking on related tasks.\n*   **Forge Deployer CLI Wrapper:** `tooshiNoko` inquired about taking on the task of creating a CLI wrapper around the Forge binary for OP Deployer ([#17214](https://github.com/ethereum-optimism/specs/issues/17214)).\n*   **Forge Deployer Conversion Tasks:** `tooshiNoko` also expressed interest in converting `DeploySuperchain` ([#17215](https://github.com/ethereum-optimism/specs/issues/17215)), `DeployImplementations` ([#17216](https://github.com/ethereum-optimism/specs/issues/17216)), `DeployOPChain` ([#17217](https://github.com/ethereum-optimism/specs/issues/17217)), and contract verification logic ([#17218](https://github.com/ethereum-optimism/specs/issues/17218)) to use Forge.", "2025-09-04T03:30:05.230Z"]
["ethereum-optimism/superchain-ops_day_2025-08-27", "ethereum-optimism/superchain-ops", "day", "2025-08-27", "# ethereum-optimism/superchain-ops Daily Update (Aug 27, 2025)\n\n## OVERVIEW\nThe day saw significant code refactoring with the removal of the legacy superchain-ops system, streamlining the codebase. Discussions on several \"Forge Deployer\" migration issues were active, indicating upcoming development in that area.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Codebase Refactoring and Cleanup\n*   The legacy `superchain-ops` system was removed from the `main` branch, with a tag provided for historical access, significantly cleaning up the repository. ([#1163](https://github.com/ethereum-optimism/superchain-ops/pull/1163))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Forge Deployer Migration Planning\nDiscussions are ongoing regarding the migration of OP Deployer to use Forge. Several issues are tracking this effort, with community members expressing interest in contributing.\n*   **[Tracking] [Forge Deployer] OP Deployer Forge Migration** ([#17213](https://github.com/ethereum-optimism/superchain-ops/issues/17213)): A community member, tooshiNoko, noted that they submitted a PR and offered to sync up with bitwiseguy to avoid overlapping work, expressing interest in taking on all related tasks.\n*   **[Forge Deployer] Create CLI wrapper around Forge binary** ([#17214](https://github.com/ethereum-optimism/superchain-ops/issues/17214)): tooshiNoko asked if they could take on this task.\n*   **[Forge Deployer] Convert DeploySuperchain to use Forge** ([#17215](https://github.com/ethereum-optimism/superchain-ops/issues/17215)): tooshiNoko asked if they could take on this task.\n*   **[Forge Deployer] Convert DeployImplementations to use Forge** ([#17216](https://github.com/ethereum-optimism/superchain-ops/issues/17216)): tooshiNoko asked if they could take on this task.\n*   **[Forge Deployer] Convert DeployOPChain to use Forge** ([#17217](https://github.com/ethereum-optimism/superchain-ops/issues/17217)): tooshiNoko asked if they could take on this task.\n*   **[Forge Deployer] Convert contract verification logic to use Forge** ([#17218](https://github.com/ethereum-optimism/superchain-ops/issues/17218)): tooshiNoko asked if they could take on this task.\n\n### Flashblocks Support in Kurtosis\nThe task to add support for flashblocks in Kurtosis has been deprioritized and will not be implemented.\n*   **Add support for flashblocks in kurtosis.** ([#16514](https://github.com/ethereum-optimism/superchain-ops/issues/16514)): serpixel commented that this task is currently deprioritized and will not be implemented, despite tests being largely implemented.", "2025-09-04T03:30:07.364Z"]
["ethereum-optimism/op-geth_day_2025-08-27", "ethereum-optimism/op-geth", "day", "2025-08-27", "# ethereum-optimism/op-geth Daily Update (Aug 27, 2025)\n## OVERVIEW \nThe day saw the closure of an issue related to flashblocks support in Kurtosis, indicating a shift in development priorities. Discussions continued on several \"Forge Deployer\" migration issues, with community members expressing interest in contributing. A new issue was opened regarding gas cost discrepancies.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**Kurtosis Flashblocks Support Deprioritized**\nThe issue to add support for flashblocks in Kurtosis was closed, with the decision to deprioritize its implementation at this time. While tests were largely implemented, the task will not be pursued further. ([#16514](https://github.com/ethereum-optimism/op-geth/issues/16514))\n\n## NEW ISSUES\n\n**Gas Cost Discrepancies**\nA new issue was opened to investigate a gap observed between different kinds of gas costs when using `debug_traceCall`, specifically noting a difference between \"Gross Gas Cost\" and \"Net Gas Cost\" (trace.gasUsed). ([#664](https://github.com/ethereum-optimism/op-geth/issues/664))\n\n## ACTIVE ISSUES\n\n**Forge Deployer Migration Progress**\nDiscussions continued on several issues related to the \"Forge Deployer\" migration. Community member tooshiNoko expressed interest in taking on multiple tasks, including creating a CLI wrapper around the Forge binary ([#17214](https://github.com/ethereum-optimism/op-geth/issues/17214)), converting `DeploySuperchain` ([#17215](https://github.com/ethereum-optimism/op-geth/issues/17215)), `DeployImplementations` ([#17216](https://github.com/ethereum-optimism/op-geth/issues/17216)), `DeployOPChain` ([#17217](https://github.com/ethereum-optimism/op-geth/issues/17217)), and contract verification logic ([#17218](https://github.com/ethereum-optimism/op-geth/issues/17218)) to use Forge. tooshiNoko also synced with @bitwiseguy on the overall tracking issue ([#17213](https://github.com/ethereum-optimism/op-geth/issues/17213)) to avoid overlapping work, indicating active community engagement in this migration effort.", "2025-09-04T03:30:07.199Z"]
["ethereum-optimism/optimism_day_2025-08-27", "ethereum-optimism/optimism", "day", "2025-08-27", "# ethereum-optimism/optimism Daily Update (Aug 27, 2025)\n## OVERVIEW \nToday's development focused on enhancing the `op-devstack` with Kona supervisor support, critical bug fixes in `op-program`, and significant additions to testing infrastructure, particularly for `op-sync-tester` and `op-up`. Several new issues were opened to track the integration of Kona and Cannon for fault proofs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Devstack and Challenger Enhancements\nThe `op-devstack` now supports the `kona-supervisor` within its `sysgo` orchestrator, enabling its launch as part of the devstack system ([#17195](https://github.com/ethereum-optimism/optimism/pull/17195)). Additionally, the `op-devstack` was improved to verify contract deployment transactions are actually included, preventing race conditions ([#17232](https://github.com/ethereum-optimism/optimism/pull/17232)). The `op-challenger` gained an option to restrict the frequency of update cycles, reducing L1 node calls ([#17233](https://github.com/ethereum-optimism/optimism/pull/17233)).\n\n### Program and Sync Tester Improvements\nA bug in `op-program` related to the length check for pending progress during the consolidate step was fixed ([#17220](https://github.com/ethereum-optimism/optimism/pull/17220)). The `op-sync-tester` received significant updates, adding Verifier Engine APIs (`engine_newPayloadV1`, `engine_getPayloadV1`, `engine_forkchoiceUpdatedV1`, etc.) to support Bedrock, Canyon, and Delta hardforks ([#17234](https://github.com/ethereum-optimism/optimism/pull/17234)).\n\n### Testing and CI Updates\nUnit tests were added for `op-up` ([#17210](https://github.com/ethereum-optimism/optimism/pull/17210)). The CI configuration was updated to run the same jobs on the `proposal/op-contracts/v4.1.0` branch as on `develop` ([#17211](https://github.com/ethereum-optimism/optimism/pull/17211)). Cannon baseline files were updated to align with the geth 1.16.2 upgrade ([#17230](https://github.com/ethereum-optimism/optimism/pull/17230)).\n\n## NEWLY OPENED PULL REQUESTS\n- **Feature Development**: New features include a CLI wrapper for Forge binary execution ([#17235](https://github.com/ethereum-optimism/optimism/pull/17235)) and an interop portal ([#17247](https://github.com/ethereum-optimism/optimism/pull/17247)).\n- **Bug Fixes**: A fix for the `sync-tester` to correct the PayloadV4 version check in `GetPayloadV4` was opened ([#17236](https://github.com/ethereum-optimism/optimism/pull/17236)).\n- **Testing and Infrastructure**: A pull request to add edge case tests for `Blueprint.bytesToUint` function was opened ([#17240](https://github.com/ethereum-optimism/optimism/pull/17240)). There's also a new PR to introduce `BlockBuilder` in the `op-node` engine package ([#17241](https://github.com/ethereum-optimism/optimism/pull/17241)).\n\n## CLOSED ISSUES\n\n### Fault Proof System Enhancements\nThe tracking issue for the Interop proofs U17 proof upgrade workstream has been closed ([#15980](https://github.com/ethereum-optimism/optimism/issues/15980)). This indicates progress in the ongoing efforts to improve the fault proof system.\n\n### Testing Infrastructure Improvements\nSupport for flashblocks in Kurtosis, a key component for testing, has been addressed and the issue closed ([#16514](https://github.com/ethereum-optimism/optimism/issues/16514)). However, a comment notes this task is currently deprioritized and will not be fully implemented as initially planned, with tests mostly done but two PRs needing cleanup.\n\n### Challenger and Program Stability\nAn issue providing an option to limit how often games are processed by `op-challenger` has been closed ([#13090](https://github.com/ethereum-optimism/optimism/issues/13090)), which should reduce L1 node calls. A bug regarding an invalid pending progress length check in `op-program`'s state transition has also been resolved ([#15217](https://github.com/ethereum-optimism/optimism/issues/15217)).\n\n### Sync Tester Engine Support\nThe issue tracking the `op-sync-tester`'s support for the engine namespace, including methods like `engine_newPayload` and `engine_forkchoiceUpdated`, has been closed ([#16701](https://github.com/ethereum-optimism/optimism/issues/16701)).\n\n## NEW ISSUES\n\n### Kona + Cannon Integration\nSeveral new issues were opened to track the integration of Kona and Cannon as a fallback proof option:\n- Main tracking issue for shipping Kona + Cannon as a fallback fault proof ([#17237](https://github.com/ethereum-optimism/optimism/issues/17237)).\n- Adding Kona + Cannon to `vm-runner` for testing with real mainnet blocks ([#17238](https://github.com/ethereum-optimism/optimism/issues/17238)).\n- Integrating Kona + Cannon into `op-challenger`, including adding a `cannon-kona` trace type ([#17239](https://github.com/ethereum-optimism/optimism/issues/17239)).\n\n### Protocol Stability and Testing\nNew issues address critical aspects of protocol stability and testing:\n- Edits for the U17 governance proposal related to proofs ([#17244](https://github.com/ethereum-optimism/optimism/issues/17244)).\n- Investigating `op-node` instability triggered by L1 RPC delays, particularly when L1 RPC is slow ([#17245](https://github.com/ethereum-optimism/optimism/issues/17245)).\n- Enabling flashblock tests against persistent devnets in `op-acceptance-tests` ([#17248](https://github.com/ethereum-optimism/optimism/issues/17248)).\n\n## ACTIVE ISSUES\n\n### Forge Deployer Migration\nDiscussions continue on the migration of OP Deployer to use Forge.\n- **[Forge Deployer] Create CLI wrapper around Forge binary** ([#17214](https://github.com/ethereum-optimism/optimism/issues/17214)): `tooshiNoko` expressed interest in taking this task.\n- **[Tracking] [Forge Deployer] OP Deployer Forge Migration** ([#17213](https://github.com/ethereum-optimism/optimism/issues/17213)): `tooshiNoko` noted that they submitted [#17235](https://github.com/ethereum-optimism/optimism/pull/17235) and suggested syncing up with `bitwiseguy` to avoid overlapping work, also expressing a desire to take on all related tasks.\n- **[Forge Deployer] Convert DeploySuperchain to use Forge** ([#17215](https://github.com/ethereum-optimism/optimism/issues/17215)): `tooshiNoko` asked if they could take this task.\n- **[Forge Deployer] Convert DeployImplementations to use Forge** ([#17216](https://github.com/ethereum-optimism/optimism/issues/17216)): `tooshiNoko` asked if they could take this task.\n- **[Forge Deployer] Convert DeployOPChain to use Forge** ([#17217](https://github.com/ethereum-optimism/optimism/issues/17217)): `tooshiNoko` asked if they could take this task.\n- **[Forge Deployer] Convert contract verification logic to use Forge** ([#17218](https://github.com/ethereum-optimism/optimism/issues/17218)): `tooshiNoko` asked if they could take this task.\n\nThe common theme across these issues is `tooshiNoko`'s active engagement and interest in leading the Forge migration efforts.", "2025-09-04T03:30:10.381Z"]
["ethereum-optimism/ecosystem_day_2025-08-28", "ethereum-optimism/ecosystem", "day", "2025-08-28", "# ethereum-optimism/ecosystem Daily Update (Aug 28, 2025)\n## OVERVIEW \nThe day's activity focused on internal maintenance with a new pull request to fix a broken link and ongoing discussions on existing issues related to testing infrastructure and documentation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#935](https://github.com/ethereum-optimism/ecosystem/pull/935), was opened to fix a broken link to the protocol specs repository.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Documentation for OP Stack Rollup Testnet Creation\nDiscussion continues on [#1530](https://github.com/ethereum-optimism/ecosystem/issues/1530) regarding creating an OP Stack Rollup testnet with `op-deployer`. The latest comment from krofax at 2025-08-28T15:56:40Z highlights a \"rich PR\" that overhauls the old documentation, inviting review. Earlier comments from Visheshgpt and Chomtana pointed out high RPC call numbers on Alchemy with the permissioned fault-proof system and confusion in existing documentation due to mixed deployment methods.\n\n### CI for `op-geth` PRs\nIssue [#665](https://github.com/ethereum-optimism/ecosystem/issues/665) discusses running the monorepo CI suite on `op-geth` PRs. The latest comment from ajsutton at 2025-08-28T20:01:03Z suggests a periodic job to check for the latest `op-geth` commit and notify on Slack if it fails, as an alternative to direct CI integration.", "2025-09-04T03:30:09.478Z"]
["ethereum-optimism/docs_day_2025-08-28", "ethereum-optimism/docs", "day", "2025-08-28", "# ethereum-optimism/docs Daily Update (Aug 28, 2025)\n\n## OVERVIEW \nThe day's focus was on enhancing documentation, particularly with a new tutorial for upgrading ERC-20 tokens for Superchain interoperability. Several issues related to documentation and audit processes were closed, indicating ongoing efforts to refine content and internal workflows.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Interoperability Documentation\nA significant new tutorial was added to guide users on upgrading existing ERC-20 tokens for interoperability within the Superchain ecosystem. This involves detailed steps for contract upgrades, custom bridging, and lockbox mechanisms, crucial for seamless asset migration and utilization in the new interop environment. ([#1577](https://github.com/ethereum-optimism/docs/pull/1577))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Documentation Workflow Improvements\nSeveral issues related to documentation processes were closed, including those addressing the addition of PR titles for better organization and clarity. This indicates a continuous effort to streamline documentation contributions. ([#1675](https://github.com/ethereum-optimism/docs/issues/1675), [#1728](https://github.com/ethereum-optimism/docs/issues/1728))\n\n### Audit-Related Documentation\nAn issue concerning the 2024 Q4 Audit documentation was closed, suggesting progress in preparing or updating content related to audit findings and requirements. ([#1722](https://github.com/ethereum-optimism/docs/issues/1722))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### op-deployer Documentation Overhaul\nDiscussion continues on overhauling the documentation for creating an OP Stack Rollup testnet using `op-deployer` ([#1530](https://github.com/ethereum-optimism/docs/issues/1530)). The latest comment from @krofax highlights a \"rich PR\" ([https://github.com/ethereum-optimism/docs/pull/1705/](https://github.com/ethereum-optimism/docs/pull/1705/)) that aims to completely revise the existing \"Create an op stack Rollup testnet with op-deployer\" guide, inviting review from @opfocus. Earlier comments from April 2025 discussed high RPC call numbers on Alchemy when using the permissioned fault-proof system, particularly from the challenger, and discrepancies between old manual deployment methods and the new `op-deployer` approach, which defaults to FaultDisputeGame. There was also a question about potential issues when deploying a chain with permissioned fault proofs.\n\n### Monorepo CI for op-geth PRs\nThe discussion around running the monorepo CI suite on `op-geth` PRs ([#665](https://github.com/ethereum-optimism/docs/issues/665)) saw a new suggestion from @ajsutton. Option C proposes a periodic job in the monorepo to check for the latest `op-geth` commit from the Optimism branch, notifying via Slack if it fails. This approach aims to quickly alert to problems, though it might produce false alarms if it runs between `op-geth` and corresponding monorepo PR merges. The core problem is ensuring that `op-geth` changes are validated against the broader monorepo CI.", "2025-09-04T03:30:09.531Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-28", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-28", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 28, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, code refactoring, documentation enhancements, or tests added. Development activity focused on ongoing discussions within active issues, particularly concerning CI practices and documentation for deploying OP Stack rollups.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n### CI/CD Enhancements for `op-geth` Integration\nDiscussions on [#665](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/665) centered on improving CI practices for `op-geth` changes. A new suggestion (Option C) was proposed to implement a periodic job in the monorepo that checks for the latest `op-geth` commit from the `optimism` branch. This job would notify via Slack if it fails, aiming to quickly alert to integration issues, though it acknowledges potential false alarms.\n\n### Documentation for OP Stack Rollup Deployment\nIssue [#1530](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1530) saw a significant update with a user (`krofax`) sharing a \"rich PR\" ([https://github.com/ethereum-optimism/docs/pull/1705/](https://github.com/ethereum-optimism/docs/pull/1705/)) that overhauls the existing \"Create an op stack Rollup testnet with op-deployer\" guide. This indicates progress towards clearer and more up-to-date documentation for deploying OP Stack testnets. Earlier comments highlighted confusion due to mixed documentation approaches (manual vs. `op-deployer`) and concerns about high RPC calls when using the permissioned fault-proof system.\n\n### Flashblock Tests for Persistent Devnets\nIssue [#17248](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17248) received a comment reiterating the need to enable flashblock tests against persistent devnets. The task is described as \"XS-S\" in size, suggesting it's a relatively small and straightforward piece of work to ensure correct functionality.", "2025-09-04T03:30:10.228Z"]
["ethereum-optimism/infra_day_2025-08-28", "ethereum-optimism/infra", "day", "2025-08-28", "# ethereum-optimism/infra Daily Update (Aug 28, 2025)\n## OVERVIEW \nThe day saw no new code contributions, bug fixes, or documentation enhancements. The focus was on ongoing discussions within active issues, particularly concerning CI improvements for `op-geth` and documentation for `op-deployer`.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### CI Enhancements for `op-geth` Integration\nDiscussion on [#665](https://github.com/ethereum-optimism/infra/issues/665) revolves around improving the CI process for `op-geth` PRs. The latest comment from ajsutton suggests a \"Option C\" involving a periodic job in the monorepo to check for the latest `op-geth` commit from the optimism branch, notifying via Slack if it fails. This aims to quickly alert to integration issues, though it might produce false alarms.\n\n### Documentation for `op-deployer`\nThe ongoing discussion in [#1530](https://github.com/ethereum-optimism/infra/issues/1530) focuses on creating an example for deploying an OP Stack Rollup testnet using `op-deployer`. The most recent comment from krofax highlights a \"rich PR\" ([https://github.com/ethereum-optimism/docs/pull/1705/](https://github.com/ethereum-optimism/docs/pull/1705/)) that overhauls the existing documentation for `op-deployer`. Earlier comments from Chomtana pointed out the current mixed-up state of documentation, making it difficult for external chain operators. Visheshgpt noted a high number of RPC calls on Alchemy when using the permissioned fault-proof system, primarily from the challenger.\n\n### Flashblock Tests for Persistent Devnets\nIssue [#17248](https://github.com/ethereum-optimism/infra/issues/17248) discusses enabling flashblock tests against persistent devnets. Stevmark11's comment reiterates that the gate for these tests is already in place, and the primary task is to ensure correct functionality.", "2025-09-04T03:30:10.453Z"]
["ethereum-optimism/op-geth_day_2025-08-28", "ethereum-optimism/op-geth", "day", "2025-08-28", "# ethereum-optimism/op-geth Daily Update (Aug 28, 2025)\n\n## OVERVIEW \nThe day saw no new features, bug fixes, or code refactoring. A new issue was opened to discuss running monorepo CI on op-geth PRs. Discussions continued on enabling flashblock tests and improving op-deployer documentation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### CI/CD Improvements\nA new issue was opened to discuss running the monorepo CI suite on `op-geth` PRs to ensure changes are compatible with the broader monorepo ecosystem and prevent regressions [#665](https://github.com/ethereum-optimism/op-geth/issues/665).\n\n## ACTIVE ISSUES\n\n### Flashblock Test Enablement\nDiscussion continued on enabling flashblock tests against persistent devnets [#17248](https://github.com/ethereum-optimism/op-geth/issues/17248). The latest comment reiterates that the gate for these tests is already in place and the primary task is to ensure its correct functionality.\n\n### Documentation for op-deployer\nDiscussions are ongoing regarding the documentation for creating an OP Stack Rollup testnet with `op-deployer` [#1530](https://github.com/ethereum-optimism/op-geth/issues/1530). A recent comment highlights a \"rich PR\" that overhauls the existing documentation, inviting review. Earlier comments noted a high number of RPC calls when using the permissioned fault-proof system, particularly `eth_call` requests targeting Permissioned Dispute Game contracts, and concerns about the current documentation being mixed between old manual deployment methods and the new `op-deployer` approach. There was also a question about potential issues arising from deploying a chain with permissioned fault proofs if there's a configuration discrepancy.", "2025-09-04T03:30:13.047Z"]
["ethereum-optimism/op-analytics_day_2025-08-28", "ethereum-optimism/op-analytics", "day", "2025-08-28", "# ethereum-optimism/op-analytics Daily Update (Aug 28, 2025)\n## OVERVIEW \nThe day's development focused on integrating new analytical capabilities with the addition of \"jovian analysis\" to the repository. Discussions on active issues revolved around improving CI processes for `op-geth` PRs and enhancing documentation for `op-deployer`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Analytical Tooling Expansion\nA significant addition was made to the repository with the integration of \"jovian analysis\" ([#1728](https://github.com/ethereum-optimism/op-analytics/pull/1728)). This involved adding numerous files related to data fetching, configuration, core analysis functions, and visualization, primarily within the `notebooks/adhoc/jovian_analysis` directory. This new analysis capability includes:\n- Core Python scripts for analysis functions, chain configuration, ClickHouse data fetching, and constants.\n- Jupyter notebooks for ad-hoc analysis, including `jovian_analysis.ipynb` and `da_throttling_analysis.ipynb`.\n- Pre-generated HTML outputs and result images from various analysis runs, indicating a robust set of analytical tools for data usage, compression, and gas limit analysis.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Aug 28, 2025.\n\n## CLOSED ISSUES\nNo issues were closed on Aug 28, 2025.\n\n## NEW ISSUES\nNo new issues were opened on Aug 28, 2025.\n\n## ACTIVE ISSUES\n\n### CI Enhancements for Monorepo\nDiscussion on [#665](https://github.com/ethereum-optimism/op-analytics/issues/665) centered on improving the Continuous Integration (CI) process for `op-geth` PRs within the monorepo. The latest comment from ajsutton suggests an alternative: a periodic job in the monorepo to check for the latest `op-geth` commit from the optimism branch. This job would notify via Slack if it fails, aiming to quickly alert developers to potential issues, even if it doesn't prevent them. The main concern raised is the possibility of false alarms if the job runs between an `op-geth` PR merging and its corresponding monorepo PR merging.\n\n### Documentation for `op-deployer`\nThe ongoing discussion in [#1530](https://github.com/ethereum-optimism/op-analytics/issues/1530) focuses on enhancing the documentation for creating an OP Stack Rollup testnet using `op-deployer`. The most recent comment from krofax highlights a \"rich PR\" ([https://github.com/ethereum-optimism/docs/pull/1705/](https://github.com/ethereum-optimism/docs/pull/1705/)) that overhauls the existing documentation. Earlier comments from Visheshgpt and Chomtana pointed out issues with high RPC call volumes when using the permissioned fault-proof system and the confusion caused by mixed old and new deployment methods in the documentation, respectively. seromenho inquired about potential issues with deploying a chain with permissioned fault proofs, and sbvegan clarified that `op-deployer` currently only deploys the permissioned dispute game (game type 1) with a placeholder for the absolute prestate hash, noting a circular dependency. Hakkmihakim also linked to the issue. The overall sentiment is a strong need for clearer, updated documentation for `op-deployer` to facilitate external chain operators.", "2025-09-04T03:30:13.720Z"]
["ethereum-optimism/superchain-registry_day_2025-08-28", "ethereum-optimism/superchain-registry", "day", "2025-08-28", "# ethereum-optimism/superchain-registry Daily Update (Aug 28, 2025)\n## OVERVIEW \nThe day's development focused on expanding the Superchain Registry with the addition of a new testnet, Arena Z, enhancing the ecosystem's testing capabilities. Discussions on active issues covered CI improvements and documentation for rollup deployment.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Registry Expansion\nA new testnet, Arena Z, was added to the Superchain Registry, including its configuration, chain list entries, and genesis data. This expands the available testing environments within the Superchain ecosystem. ([#1092](https://github.com/ethereum-optimism/superchain-registry/pull/1092))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### CI/CD Enhancements\nA new issue was opened to discuss running the monorepo CI suite on `op-geth` PRs to ensure comprehensive end-to-end testing and prevent regressions. ([#665](https://github.com/ethereum-optimism/superchain-registry/issues/665))\n\n## ACTIVE ISSUES\n\n### Documentation for Rollup Testnet Deployment\nDiscussions on [#1530](https://github.com/ethereum-optimism/superchain-registry/issues/1530) revolve around improving the documentation for creating an OP Stack Rollup testnet using `op-deployer`. The latest comment from krofax indicates a \"rich PR\" is in progress to overhaul the existing documentation, suggesting significant updates are coming to clarify the process for external chain operators. Earlier comments highlighted confusion due to mixed-up old and new deployment methods and the high volume of RPC calls observed when using the permissioned fault-proof system.\n\n### Flashblock Tests for Persistent Devnets\nIssue [#17248](https://github.com/ethereum-optimism/superchain-registry/issues/17248) focuses on enabling flashblock tests against persistent devnets. The latest comment from Stevmark11 reiterates the need to enable these tests, noting that the necessary gate is in place and primarily requires verification of correct functionality. This is categorized as a small task.\n\n### Monorepo CI for op-geth PRs\nOn [#665](https://github.com/ethereum-optimism/superchain-registry/issues/665), the discussion centers on ensuring the monorepo CI runs for `op-geth` PRs to catch issues early. Ajsutton suggested an alternative: a periodic job in the monorepo that checks for the latest `op-geth` commit and alerts if it fails. This approach aims to quickly identify integration problems, though it might produce false alarms if the job runs between `op-geth` and monorepo PR merges.", "2025-09-04T03:30:13.947Z"]
["ethereum-optimism/superchain-ops_day_2025-08-28", "ethereum-optimism/superchain-ops", "day", "2025-08-28", "# ethereum-optimism/superchain-ops Daily Update (Aug 28, 2025)\n## OVERVIEW \nThe day's development focused on preparing for future upgrades with the addition of a U13 to U16 template and example task. Two new pull requests were opened, one for a new L1PortalExecuteL2Call template and another for a monorepo commit bump. Discussions continued on active issues related to testing and documentation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Upgrade Template Development\nA significant addition was made with the introduction of a template and example task for upgrading from U13 directly to U16. This template is designed to streamline the upgrade process for chains on U12, allowing them to bypass intermediate phases and move directly to the latest upgrade level. This work involved adding several new files related to upgrade prestate and various upgrade versions. ([#1144](https://github.com/ethereum-optimism/superchain-ops/pull/1144))\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n*   [#1173](https://github.com/ethereum-optimism/superchain-ops/pull/1173) feat: add L1PortalExecuteL2Call template for L2 actions through OptimismPortal - This PR introduces a new template to facilitate L2 actions via the OptimismPortal.\n*   [#1174](https://github.com/ethereum-optimism/superchain-ops/pull/1174) Bump monorepo commit - This PR is for updating the monorepo commit.\n\n## CLOSED ISSUES\nNo issues were closed on Aug 28, 2025.\n\n## NEW ISSUES\n### CI/CD Improvements\nA new issue was opened to discuss running the monorepo CI suite on `op-geth` PRs. The goal is to ensure that changes to `op-geth` are tested against the monorepo's end-to-end tests before merging, preventing potential regressions. ([#665](https://github.com/ethereum-optimism/superchain-ops/issues/665))\n\n## ACTIVE ISSUES\n### Testing Infrastructure\nDiscussion continued on [#17248](https://github.com/ethereum-optimism/superchain-ops/issues/17248) regarding enabling flashblock tests against persistent devnets. The latest comment from Stevmark11 reiterated the need to ensure these tests work correctly, noting that the necessary gate is already in place.\n\n### Documentation Enhancements\nThe issue [#1530](https://github.com/ethereum-optimism/superchain-ops/issues/1530), concerning an example for creating an OP Stack Rollup testnet with `op-deployer`, saw new activity. krofax commented, mentioning a \"rich PR\" ([https://github.com/ethereum-optimism/docs/pull/1705/](https://github.com/ethereum-optimism/docs/pull/1705/)) that overhauls the existing documentation and requested a review. Earlier comments from Chomtana highlighted the current confusion in the documentation due to a mix of old manual deployment methods and the new `op-deployer` approach, making it difficult for external chain operators. Visheshgpt also noted a high number of RPC calls on Alchemy when using the permissioned fault-proof system, primarily from the challenger.", "2025-09-04T03:30:13.764Z"]
["ethereum-optimism/ecosystem_day_2025-08-29", "ethereum-optimism/ecosystem", "day", "2025-08-29", "# ethereum-optimism/ecosystem Daily Update (Aug 29, 2025)\n## OVERVIEW \nThe day saw a documentation update for the license date. Discussions continued on deprecating the req-resp p2p sync in op-node, with new insights on alternative unsafe block sync mechanisms. The specification for `min-base-fee` was also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Updates\nA minor documentation update was made to reflect the current license date.\n- [#936](https://github.com/ethereum-optimism/ecosystem/pull/936)\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#936](https://github.com/ethereum-optimism/ecosystem/pull/963), was opened to update the license date in the documentation.\n\n## CLOSED ISSUES\n\n### Protocol Specification Finalization\nThe issue tracking the specification for `min-base-fee` was closed, indicating that the specification has been finalized and integrated.\n- [#742](https://github.com/ethereum-optimism/ecosystem/issues/742)\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Op-node Sync Mechanism Improvements\nDiscussions continued on deprecating the req-resp p2p sync in `op-node` to address existing sync problems. A detailed comment from @tessr provided additional context and ideas from @emilianobonassi, who prototyped an alternative unsafe block sync mechanism. This alternative is highlighted as cheaper, simpler, and faster for scaling out and recovery compared to the current req-resp method, which suffers from slow sync speeds and race conditions. The proposed alternative is complementary to p2p and involves a centralized driver for gossiping blocks, where the sequencer leader publishes the latest unsafe block via Redis, and other nodes subscribe and inject it via the `admin_postUnsafePayload` API.\n- [#14108](https://github.com/ethereum-optimism/ecosystem/issues/14108)", "2025-09-04T03:30:16.304Z"]
["ethereum-optimism/infra_day_2025-08-29", "ethereum-optimism/infra", "day", "2025-08-29", "# ethereum-optimism/infra Daily Update (Aug 29, 2025)\n## OVERVIEW \nToday's development focused on dependency updates within the `op-acceptor` component, alongside significant discussion on an active issue concerning the deprecation of `req-resp` P2P sync in `op-node`. A key specification for `min-base-fee` was also finalized.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Dependency Updates**: A routine maintenance update was performed to bump the `github.com/ulikunitz/xz` dependency from version 0.5.12 to 0.5.14 in the `op-acceptor` component. This ensures the project utilizes the latest stable versions of its libraries. ([#451](https://github.com/ethereum-optimism/infra/pull/451))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Min-Base-Fee Specification Finalized**: The specification for `min-base-fee` has been formally written and ratified, with the issue now closed. This marks a significant step in defining this protocol feature. ([#742](https://github.com/ethereum-optimism/infra/issues/742))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **Deprecating `req-resp` P2P Sync in `op-node`**: Discussions continued regarding the removal of `req-resp` P2P sync in `op-node` to address existing sync problems. The latest comments provide additional context and ideas from @emilianobonassi, who has prototyped an alternate unsafe block sync mechanism. This alternative is highlighted for being cheaper, simpler, and faster for scaling out and recovery compared to the current `req-resp` protocol. It addresses issues like UDP networking complexities, lack of domain name support for static IPs, and race conditions that lead to slow and unstable synchronization. The proposed alternative is complementary to P2P and suggests plugging multiple \"drivers\" for block gossiping, including a centralized one where the sequencer leader publishes the latest unsafe block via Redis, and other nodes subscribe and inject it via `admin_postUnsafePayload`. ([#14108](https://github.com/ethereum-optimism/infra/issues/14108))", "2025-09-04T03:30:16.870Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-29", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-29", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 29, 2025)\n## OVERVIEW \nThe day's activity focused on routine maintenance with an update to circulating supply data. A new pull request was opened to add a new token. A significant issue related to `min-base-fee` specification was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Tokenomics Data Update\n- The `circulatingSupply.txt` file was updated, indicating routine maintenance of tokenomics data ([#1192](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1192)).\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1193](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1193), was opened to add the \"fort token.\"\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Specification Finalized\n- The issue concerning the specification for `min-base-fee` was closed, indicating that the design document has been ratified and the specification is complete ([#742](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/742)).\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n\n### Deprecation of Req-Resp P2P Sync in op-node\n- Discussion on [#14108](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/14108) continues regarding the removal of req-resp p2p sync in `op-node`. The latest comments highlight the benefits of an alternative unsafe block sync mechanism, emphasizing its cost-effectiveness, simpler networking (avoiding UDP and NAT issues), and faster scale-out and recovery compared to the current req-resp protocol. This alternative is described as complementary, allowing multiple \"drivers\" to gossip blocks, including a centralized one where the sequencer leader publishes the latest unsafe block via Redis.", "2025-09-04T03:30:16.336Z"]
["ethereum-optimism/optimism_day_2025-08-28", "ethereum-optimism/optimism", "day", "2025-08-28", "# ethereum-optimism/optimism Daily Update (Aug 28, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure with a new flaky test report feature and significant refactoring of sync tester interfaces. Improvements were also made to `op-deployer` for Forge CLI integration and `cannon` for memory optimization.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Testing Infrastructure Enhancements\nA new feature was added to the `op-acceptance-tests` to generate a flaky test report, improving test reliability and debugging. Additionally, the `op-sync-tester` saw significant refactoring, moving session types and API interfaces to `op-service/eth` to resolve circular dependencies, which will improve the maintainability and robustness of the testing framework.\n- [#17250](https://github.com/ethereum-optimism/optimism/pull/17250)\n- [#17252](https://github.com/ethereum-optimism/optimism/pull/17252)\n\n### `op-deployer` Tooling Improvements\nThe `op-deployer` received updates to integrate a Forge CLI wrapper, streamlining deployment processes. Further enhancements were made to enforce specific Forge versions for `StandardBin`, ensuring consistency and reliability in production deployments.\n- [#17231](https://github.com/ethereum-optimism/optimism/pull/17231)\n- [#17242](https://github.com/ethereum-optimism/optimism/pull/17242)\n\n### Cannon Performance Optimization\nThe `cannon` component saw a crucial optimization with the reduction of heap/code cache size. This change addresses memory constraints, enabling more parallel Cannon instances to run on medium-sized machines, which is vital for efficient fault proof execution.\n- [#17246](https://github.com/ethereum-optimism/optimism/pull/17246)\n\n## NEWLY OPENED PULL REQUESTS\n- [#17249](https://github.com/ethereum-optimism/optimism/pull/17249): Adds support for cannon-kona trace types.\n- [#17264](https://github.com/ethereum-optimism/optimism/pull/17264): Enhances `op-deployer` with Forge support for `DeployImplementations`.\n- [#17265](https://github.com/ethereum-optimism/optimism/pull/17265): Introduces logic for `op-deployer` and `op-up` to build artifacts if they are not present.\n- [#17266](https://github.com/ethereum-optimism/optimism/pull/17266): A dependabot update to bump `github.com/ulikunitz/xz` from 0.5.12 to 0.5.14.\n- [#17268](https://github.com/ethereum-optimism/optimism/pull/17268): Implements developer feature flagging within OPCM.\n\n## CLOSED ISSUES\nNo issues were closed on Aug 28, 2025.\n\n## NEW ISSUES\n\n### Sync Tester and CI Enhancements\nA new issue proposes a nightly CI job for `op-sync-tester` to ensure `op-node` (or other CL) can sync using the latest sync tester, aiming to improve continuous integration and testing.\n- [#17253](https://github.com/ethereum-optimism/optimism/issues/17253)\n\n### Dispute Game V2 Development\nSeveral new issues outline the development and integration of version 2 of the FaultDisputeGame (FDG) and PermissionedDisputeGame (PDG). This includes adding new v2 implementations using the CWIA approach, deploying these new implementations via `op-deployer` (feature-flagged), and updating OPCM to use these v2 implementations for `deploy`, `upgrade`, and `addGameType` operations. The long-term plan involves stopping blueprint deployments for FDG/PDG, dropping feature flags to always use v2, and eventually deleting legacy dispute game contracts.\n- [#17255](https://github.com/ethereum-optimism/optimism/issues/17255)\n- [#17254](https://github.com/ethereum-optimism/optimism/issues/17254)\n- [#17256](https://github.com/ethereum-optimism/optimism/issues/17256)\n- [#17257](https://github.com/ethereum-optimism/optimism/issues/17257)\n- [#17258](https://github.com/ethereum-optimism/optimism/issues/17258)\n- [#17259](https://github.com/ethereum-optimism/optimism/issues/17259)\n- [#17260](https://github.com/ethereum-optimism/optimism/issues/17260)\n- [#17261](https://github.com/ethereum-optimism/optimism/issues/17261)\n- [#17262](https://github.com/ethereum-optimism/optimism/issues/17262)\n- [#17263](https://github.com/ethereum-optimism/optimism/issues/17263)\n\n### OPCM Validator Update\nAn issue was opened to update `OPCMStandardValidator` to correctly handle the new dispute game contracts, as some data previously accessible from v1 implementations will no longer be available in v2.\n- [#17267](https://github.com/ethereum-optimism/optimism/issues/17267)\n\n## ACTIVE ISSUES\n\n### `op-acceptance-tests`: Enable Flashblock Tests\nThe issue [#17248](https://github.com/ethereum-optimism/optimism/issues/17248) discusses enabling flashblock tests against persistent devnets. The latest comment from Stevmark11 confirms that the necessary gate is in place and the primary task is to ensure correct functionality, indicating a straightforward implementation.\n\n### CI for `op-geth` PRs\nIssue [#665](https://github.com/ethereum-optimism/optimism/issues/665) addresses the need for monorepo CI to run on `op-geth` PRs to catch breaking changes early. Ajsutton proposed \"Option C\": a periodic job in the monorepo to check for the latest `op-geth` commit from the optimism branch, notifying via Slack if it fails. This approach aims to quickly alert to issues, though it might produce false alarms if the job runs between `op-geth` and monorepo PR merges.\n\n### Documentation for `op-deployer`\nIssue [#1530](https://github.com/ethereum-optimism/optimism/issues/1530) focuses on creating an example for deploying an OP Stack Rollup testnet using `op-deployer`. Krofax provided an update, mentioning a \"rich PR\" ([https://github.com/ethereum-optimism/docs/pull/1705/](https://github.com/ethereum-optimism/docs/pull/1705/)) that overhauls the existing documentation. Previous comments highlighted confusion due to mixed old and new deployment methods, high RPC calls on Alchemy when using permissioned fault proofs, and the current default of `op-deployer` to `FaultDisputeGame` instead of `L2OO`. There was also a discussion about circular dependencies related to prestate hash and chain configuration.", "2025-09-04T03:30:16.799Z"]
["ethereum-optimism/op-geth_day_2025-08-29", "ethereum-optimism/op-geth", "day", "2025-08-29", "# ethereum-optimism/op-geth Daily Update (Aug 29, 2025)\n## OVERVIEW \nThe day saw the introduction of a new feature to implement a minimum base fee and the closure of an issue related to the min-base-fee specification. Discussions continued on an active issue concerning the removal of req-resp p2p sync in op-node, with new insights on alternative unsafe block sync mechanisms.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#666](https://github.com/ethereum-optimism/op-geth/pull/666), was opened to introduce a minimum base fee feature.\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Specification Finalized\nThe issue [#742](https://github.com/ethereum-optimism/op-geth/issues/742), concerning the specification for the minimum base fee, was closed. This indicates the completion of the specification, as noted by its ratification via https://github.com/ethereum-optimism/specs/pull/747.\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n\n### Deprecation of Req-Resp P2P Sync in op-node\nDiscussion continued on [#14108](https://github.com/ethereum-optimism/op-geth/issues/14108), which aims to remove the req-resp p2p sync mechanism in op-node to address existing sync problems. A new comment from tessr provided extensive context and ideas from @emilianobonassi regarding an alternate unsafe block sync mechanism. This proposed alternative is described as cheaper, simpler, and faster for scale-out and recovery compared to req-resp, highlighting issues with UDP, static IP limitations, and race conditions in the current p2p approach. The alternative involves a centralized driver that can plug into multiple block gossiping mechanisms, using Redis for normal syncs and an admin API for injecting blocks on restarts.", "2025-09-04T03:30:18.920Z"]
["ethereum-optimism/op-analytics_day_2025-08-29", "ethereum-optimism/op-analytics", "day", "2025-08-29", "# ethereum-optimism/op-analytics Daily Update (Aug 29, 2025)\n## OVERVIEW \nToday's development focused on refining data quality checks for account abstraction, updating explorer links, and improving analysis notebooks. A key specification for min-base-fee was also finalized.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Quality and Testing Enhancements\nSignificant work was done to improve the robustness of data quality checks, particularly for account abstraction. This included adding a regression test for reverted account abstraction user operations and relaxing data quality checks to ignore missing traces for failed user operations ([#1732](https://github.com/ethereum-optimism/op-analytics/pull/1732), [#1738](https://github.com/ethereum-optimism/op-analytics/pull/1738)).\n\n### Infrastructure and Dependency Updates\nCore infrastructure saw updates with a bump to the Dagster dependency, ensuring the analytics pipeline remains current and stable ([#1734](https://github.com/ethereum-optimism/op-analytics/pull/1734), [#1739](https://github.com/ethereum-optimism/op-analytics/pull/1739)). A minor fix was also implemented to address a duplicate issue in the CircleCI configuration ([#1736](https://github.com/ethereum-optimism/op-analytics/pull/1736)).\n\n### Analytics and Explorer Link Refinements\nSeveral updates were made to improve the accuracy and presentation of analytical data. This involved updating OP Mainnet Explorer Links across various files ([#1715](https://github.com/ethereum-optimism/op-analytics/pull/1715)) and refining the Jovian analysis notebooks to improve base fee display and drop zero values in charts ([#1735](https://github.com/ethereum-optimism/op-analytics/pull/1735), [#1737](https://github.com/ethereum-optimism/op-analytics/pull/1737)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#1731](https://github.com/ethereum-optimism/op-analytics/pull/1731) Record data quality errors per template\n- [#1733](https://github.com/ethereum-optimism/op-analytics/pull/1733) Exclude user ops without innerHandleOp from DQ check\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Specification Finalized\nThe specification for the min-base-fee feature has been written and ratified, marking a significant step in protocol development ([#742](https://github.com/ethereum-optimism/op-analytics/issues/742)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Deprecating Req-Resp P2P Sync in op-node\nDiscussion continues on deprecating the req-resp p2p sync mechanism in `op-node` to address existing sync problems ([#14108](https://github.com/ethereum-optimism/op-analytics/issues/14108)). The latest comment from tessr provides additional context and ideas from @emilianobonassi, who prototyped an alternative unsafe block sync mechanism. This alternative offers benefits such as being cheaper and simpler to run, faster scale-out and recovery, and addressing issues with UDP networking and static IP limitations. The proposed alternative is complementary to p2p and allows for multiple \"drivers\" to gossip blocks, including a centralized driver where the sequencer leader publishes the latest unsafe block via Redis.", "2025-09-04T03:30:19.463Z"]
["ethereum-optimism/specs_day_2025-08-29", "ethereum-optimism/specs", "day", "2025-08-29", "# ethereum-optimism/specs Daily Update (Aug 29, 2025)\n## OVERVIEW \nThe day saw significant progress in protocol specification with the introduction of the U16a specification, laying groundwork for future features. An important issue related to `min-base-fee` specification was also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Specification Enhancements\nA new feature, U16a specification, was proposed and integrated into the protocol. This includes updates to `OptimismPortal` functions and `SystemConfig` logic, streamlining future feature additions. ([#750](https://github.com/ethereum-optimism/specs/pull/750))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Specification Finalization\nThe issue concerning the specification for `min-base-fee` was closed today ([#742](https://github.com/ethereum-optimism/specs/issues/742)). This issue, which aimed to formalize the `min-base-fee` design, was resolved following the integration of its specification via a related pull request.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Deprecation of Req-Resp P2P Sync\nDiscussion on [#14108](https://github.com/ethereum-optimism/specs/issues/14108) continues regarding the deprecation of the `req-resp` P2P sync in `op-node`. The latest comments highlight the limitations of the current `req-resp` protocol, including its slowness, susceptibility to race conditions, and networking complexities (e.g., UDP issues, lack of domain name support). An alternative approach was proposed, suggesting a complementary system where multiple \"drivers\" can gossip blocks, including a centralized driver using Redis for latest unsafe block propagation and an EL query for block fetching on restarts. This alternative aims for cheaper operation, simpler networking, and faster scale-out and recovery.", "2025-09-04T03:30:19.682Z"]
["ethereum-optimism/optimism_day_2025-08-30", "ethereum-optimism/optimism", "day", "2025-08-30", "# ethereum-optimism/optimism Daily Update (Aug 30, 2025)\n## OVERVIEW \nThe day's development focused on internal tooling improvements, specifically removing Codecov from Go tests. Several new pull requests were opened, addressing p2p healthchecks, CLI flag simplification, and general testing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### CI/CD Improvements\n*   Removed Codecov integration from Go tests to streamline the CI process ([#17291](https://github.com/ethereum-optimism/optimism/pull/17291)).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#17292](https://github.com/ethereum-optimism/optimism/pull/17292) \"Test\" - A general test PR.\n*   [#17293](https://github.com/ethereum-optimism/optimism/pull/17293) \"refactor: simplify time.Duration(0) to 0 in CLI flags\" - A refactoring PR to simplify CLI flag usage.\n*   [#17294](https://github.com/ethereum-optimism/optimism/pull/17294) \"op-conductor: p2p healthcheck fix and execution_p2p_healthcheck_api_type\" - Addresses a p2p healthcheck fix and API type in op-conductor.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were opened on this date.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified for this date.", "2025-09-04T03:30:20.765Z"]
["ethereum-optimism/superchain-ops_day_2025-08-29", "ethereum-optimism/superchain-ops", "day", "2025-08-29", "# ethereum-optimism/superchain-ops Daily Update (Aug 29, 2025)\n## OVERVIEW \nThe day saw progress on documentation with a new pull request for liveness templates. A significant issue regarding the deprecation of the `req-resp` p2p sync in `op-node` received detailed discussion, highlighting alternative sync mechanisms. The `min-base-fee` specification issue was closed, indicating completion of its documentation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Protocol Specification & Documentation:** A draft for liveness templates was initiated to enhance operational documentation. The specification for `min-base-fee` was finalized and the corresponding issue closed, indicating completion of its formal documentation.\n    *   [#1175](https://github.com/ethereum-optimism/superchain-ops/pull/1175)\n    *   [#742](https://github.com/ethereum-optimism/superchain-ops/issues/742)\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1175](https://github.com/ethereum-optimism/superchain-ops/pull/1175), titled \"Draft liveness templates,\" was opened. This PR aims to introduce new documentation for liveness templates.\n\n## CLOSED ISSUES\n\n*   **Protocol Specification Finalization:** The issue [#742](https://github.com/ethereum-optimism/superchain-ops/issues/742), \"min-base-fee: write specification,\" was closed. This indicates that the specification for the minimum base fee has been completed and ratified, with the final documentation available via a linked pull request in the `specs` repository.\n\n## NEW ISSUES\nNo new issues were opened on Aug 29, 2025.\n\n## ACTIVE ISSUES\n\n*   **Deprecation of `req-resp` P2P Sync in `op-node`:** Issue [#14108](https://github.com/ethereum-optimism/superchain-ops/issues/14108) discusses the removal of the `req-resp` p2p sync protocol from `op-node` to address existing sync problems. The latest comment provides extensive context and alternative ideas from @emilianobonassi, who prototyped an alternate unsafe block sync mechanism. This alternative is described as cheaper, simpler, and faster for scale-out and recovery compared to `req-resp` due to its simpler networking (avoiding UDP and static IP limitations) and better handling of race conditions. The proposed alternative is complementary to p2p, allowing multiple \"drivers\" for block gossiping, including a centralized one where the sequencer leader publishes the latest unsafe block via Redis, and other nodes subscribe and inject it via the `admin_postUnsafePayload` API. On restarts, a sidecar checks sync status and fetches blocks from the EL.", "2025-09-04T03:30:20.579Z"]
["ethereum-optimism/optimism_day_2025-08-29", "ethereum-optimism/optimism", "day", "2025-08-29", "# ethereum-optimism/optimism Daily Update (Aug 29, 2025)\n## OVERVIEW \nThe day saw critical bug fixes in `op-devstack` for improved stability, alongside new integration tests for `op-deployer`. Development also focused on preparing for the Kona + Cannon upgrade with numerous new issues opened for game type, tooling, and infrastructure support.\n## KEY TECHNICAL DEVELOPMENTS\n\n### Stability and Testing Enhancements\n- Fixed flakiness in `op-devstack`'s `AwaitTimestamp` function by ensuring the waiter specifically targets the block where the fork should activate, improving test reliability ([#17270](https://github.com/ethereum-optimism/optimism/pull/17270)).\n- Enabled the embedded artifacts integration test for `op-deployer` across all branches, ensuring consistent testing of contract deployments ([#17276](https://github.com/ethereum-optimism/optimism/pull/17276)).\n\n### Contract Simplification\n- Simplified the `LivenessModule2.sol` contract by replacing a `for` loop with a `while` loop and making `sentinel` a constant, improving code readability and potentially efficiency ([#17277](https://github.com/ethereum-optimism/optimism/pull/17277)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17269](https://github.com/ethereum-optimism/optimism/pull/17269) proposes making the data availability footprint configurable.\n- [#17272](https://github.com/ethereum-optimism/optimism/pull/17272) introduces a draft implementation for `LivenessModule2`.\n- [#17274](https://github.com/ethereum-optimism/optimism/pull/17274) aims to fix an issue where `Value` is not propagated for `BroadcastCreate` transactions in `op-deployer`.\n- [#17279](https://github.com/ethereum-optimism/optimism/pull/17279) suggests updating the `op-geth` dependency.\n- [#17290](https://github.com/ethereum-optimism/optimism/pull/17290) introduces `PermissionedDisputeGame v2` for proofs.\n\n## CLOSED ISSUES\n\n### Flashblocks Public Enablement\n- Coordinated and completed GTM tasks for the public enablement of Flashblocks, including documentation and coordination with RaaS providers ([#17027](https://github.com/ethereum-optimism/optimism/issues/17027)).\n- Reviewed and finalized public documentation drafts for Flashblocks ([#17141](https://github.com/ethereum-optimism/optimism/issues/17141)).\n\n## NEW ISSUES\n\n### Kona + Cannon Upgrade Preparation\n- Multiple issues were opened to prepare for the Kona + Cannon upgrade, including adding a new game type in `Types.sol` ([#17282](https://github.com/ethereum-optimism/optimism/issues/17282)), integrating standard prestates into tooling ([#17283](https://github.com/ethereum-optimism/optimism/issues/17283)), and developing tools for prestate verification ([#17284](https://github.com/ethereum-optimism/optimism/issues/17284)).\n- Further issues address support for Kona + Cannon in `OPContractsManager` ([#17285](https://github.com/ethereum-optimism/optimism/issues/17285)), `op-dispute-mon` ([#17286](https://github.com/ethereum-optimism/optimism/issues/17286)), runbook updates ([#17287](https://github.com/ethereum-optimism/optimism/issues/17287)), and Kubernetes support ([#17288](https://github.com/ethereum-optimism/optimism/issues/17288)).\n\n### Data Availability Footprint Configuration\n- New issues were created to implement and test configurable data availability footprint limits, including writing an acceptance test ([#17278](https://github.com/ethereum-optimism/optimism/issues/17278)) and updating `SystemConfig` for DA footprint gas scalar updates ([#17280](https://github.com/ethereum-optimism/optimism/issues/17280)).\n\n### User Support\n- An inquiry was opened regarding funds sent to an unknown address on Optimism Mainnet, indicating a user support request ([#17273](https://github.com/ethereum-optimism/optimism/issues/17273)).\n\n## ACTIVE ISSUES\n\n### Deprecating Req-Resp P2P Sync ([#14108](https://github.com/ethereum-optimism/optimism/issues/14108))\nDiscussion continues on deprecating the request-response P2P sync in `op-node`. @tessr provided extensive context and ideas from @emilianobonassi regarding an alternate unsafe block sync mechanism. This alternative is highlighted as cheaper, simpler, faster for scale-out and recovery, and more robust than the current P2P approach, which suffers from issues like UDP networking complexities, static IP limitations, and race conditions. The proposed alternative involves a centralized driver where the sequencer leader publishes the latest unsafe block via Redis, and other nodes subscribe and inject it via `admin_postUnsafePayload`. On restarts, a sidecar checks sync status against the sequencer leader and fetches blocks from the EL. This method is complementary and does not replace P2P entirely.\n\n### Min-Base-Fee Specification ([#742](https://github.com/ethereum-optimism/optimism/issues/742))\nThis issue was closed as the specification for `min-base-fee` has been completed and merged via [#747](https://github.com/ethereum-optimism/specs/pull/747). Previously, there was a discussion about computing a rough estimate for the state growth implied by this feature, which was later decided to be better placed in the FMA and tracked in a separate design-docs issue.", "2025-09-04T03:30:22.574Z"]
["ethereum-optimism/ecosystem_week_2025-06-22", "ethereum-optimism/ecosystem", "week", "2025-06-22", "# ethereum-optimism/ecosystem Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant advancements in Superchain interoperability, with a major focus on building out the `GasTank` functionality for automated cross-chain message relaying. Development on the autorelayer and supporting APIs saw substantial progress, enabling automated fund checking and claims processing. Alongside this, a large-scale effort to refine and streamline Superchain-Ops tooling concluded, closing numerous issues and improving the operational workflow. While new features were rolled out, the team also dedicated effort to investigating critical performance and stability issues in core components like `op-geth`, `op-batcher`, and `op-node`, with active community participation in diagnostics.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week's completed work focused on enhancing Superchain interoperability and refining developer tooling.\n\n- **GasTank Interoperability Enhancements:** A series of pull requests significantly built out the automated systems for cross-chain interactions.\n  - The `GasTank` ABI was updated in Viem to align with the latest `interop-lib` ([#863](https://github.com/ethereum-optimism/ecosystem/pull/863)).\n  - The autorelayer was improved to only process messages that have sufficient funds in the GasTank, preventing failed relays ([#861](https://github.com/ethereum-optimism/ecosystem/pull/861), [#875](https://github", "2025-09-04T03:33:26.423Z"]
["ethereum-optimism/docs_week_2025-06-01", "ethereum-optimism/docs", "week", "2025-06-01", "# ethereum-optimism/docs Weekly Report (Jun 1 - 7, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was centered on critical discussions rather than code merges. While development on the documentation itself was limited to a new pull request for the data glossary, significant progress was made in issue discussions concerning the `op-supervisor` and fault proof system. Key conversations focused on resolving challenges with non-genesis interop upgrades and improving L1 origin validity handling, highlighting a preparatory phase for upcoming devnet migrations and protocol enhancements.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe sole development this week was a documentation enhancement.\n- A new pull request, [#1651](https://github.com/ethereum-optimism/docs/pull/1651), was opened to update the data glossary.\n\nNo new features, bug fixes, or other code changes were merged during this period.\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed this week. The focus remained on diagnosing and planning solutions for several complex, active issues.\n\n- **New & Active Issues:**\n  - **Fault Proofs for Non-Genesis Interop:** Discussions continued on [#16166](https://github.com/ethereum-optimism/docs/issues/16166), addressing how the `op-supervisor` provides data for fault proofs. The core issue is that `op-challenger` does not fully support non-genesis interop upgrades. A proposed solution to have the supervisor index its safe DB from the very first block it receives is currently being implemented, as this is considered a crucial fix before proceeding with devnets.\n  - **L1 Origin Validity in `op-supervisor`:** In [#16315](https://github.com/ethereum-optimism/docs/issues/16315), the conversation centered on improving how the `op-supervisor` handles L1 origin validity during resets. The consensus is shifting towards having the supervisor ensure all provided targets are valid, simplifying the logic in `op-node` and making the reset process more robust against L1 chain changes.\n  - **Incorrect Nonce Bug:** Users are seeking updates on [#623](https://github.com/ethereum-optimism/docs/issues/623), where `eth_getTransactionCount` reportedly returns an incorrect nonce for pending transactions, causing them to become stuck.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was concentrated within the issue tracker, with team members engaging in deep technical discussions to architect solutions for core protocol components. The active dialogue around the `op-supervisor`'s behavior in issues [#16166](https://github.com/ethereum-optimism/docs/issues/16166) and [#16315](https://github.com/ethereum-optimism/docs/issues/16315) demonstrates a focused effort on ensuring the stability and correctness of the fault proof system ahead of future network upgrades.", "2025-09-04T03:30:59.275Z"]
["ethereum-optimism/op-geth_week_2025-06-29", "ethereum-optimism/op-geth", "week", "2025-06-29", "# ethereum-optimism/op-geth Weekly Report (Jun 29 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity in `op-geth` centered on essential maintenance and foundational improvements. The most significant development was the initiation of a major update to merge the latest `go-ethereum` v1.16.1 release, ensuring the project stays synchronized with upstream advancements. Concurrently, work began on enhancing miner test reliability, and a long-standing performance issue related to slow block retrieval was successfully closed. Overall, it was a period of stabilization and groundwork rather than new feature development.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major features were completed this week, important work was initiated to maintain the health and reliability of the codebase.\n\n### Upstream Synchronization and Testing\n*   Work has begun to merge `go-ethereum` v1.16.1 into the `op-geth` codebase. This crucial update, tracked in PR [#638](https://github.com/ethereum-optimism/op-geth/pull/638), will bring the project current with the latest improvements and features from the upstream repository.\n*   A new pull request, [#637](https://github.com/ethereum-optimism/op-geth/pull/637), was opened to improve miner testing by ensuring transactions are added synchronously. This change aims to create more reliable and predictable test outcomes for the mining process.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on resolving a lingering performance problem, with no new issues being reported.\n\n*   **Closed Issues:** A significant, long-standing issue, [#555](https://github.com/ethereum-optimism/op-geth/issues/555), was closed. Opened in March 2025, this issue concerned slow block retrieval via HTTP or WebSocket, and its resolution marks a key improvement in node performance and responsiveness.\n*   **New & Active Issues:** No new issues were opened this week, and there was no significant activity on existing issues, indicating a period of stability.\n\n## \ud83d\udcac Community & Collaboration\nDevelopment activity was focused and minimal this week, with no reports of high-discussion pull requests or issues. The work appears to be concentrated on specific maintenance tasks, such as the upstream merge and resolving the performance issue, suggesting a \"heads-down\" period for the core contributors. No new community contributors or significant collaborative events were noted in the reports.", "2025-09-04T03:34:26.782Z"]
["ethereum-optimism/optimism_week_2025-06-15", "ethereum-optimism/optimism", "week", "2025-06-15", "# ethereum-optimism/optimism Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused on enhancing the stability and developer experience of the OP Stack. Key improvements were made to node components, including a simplification of the `op-batcher` and a new transaction rebroadcasting feature in the transaction manager. Significant effort was dedicated to investigating and debugging stability issues in `op-node` and `op-supervisor`, with new metrics and tests being introduced. Looking forward, the community initiated plans to expand flashblocks support, improve `op-node`'s interop capabilities for simpler configurations, and overhaul CI/CD processes to increase pipeline reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on refining core node components for better efficiency and flexibility.\n\n- **Node Component Enhancements:**\n    - The `op-batcher` was simplified by removing the `preferLocalSafeL2` flag, making its behavior more consistent and streamlined ([#16413](https://github.com/ethereum-optimism/optimism/pull/16413)).\n    - The transaction manager was updated to allow the rebroadcasting of signed transactions without a fee bump, providing more flexible transaction handling strategies ([#16310](https://github.com/ethereum-optimism/optimism/pull/16310)).\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week centered on node stability, testing infrastructure, and developer process improvements.\n\n- **Closed Issues:**\n    - A significant milestone was reached with the closure of the issue to enable flashblocks on the `eris-0` testnet ([#16468](https://github.com/ethereum-optimism/optimism/issues/16468)), paving the way for broader testing and adoption.\n\n- **New & Active Issues:**\n    - **Node Stability:** Active investigation continues into critical stability issues, including `op-node` getting stuck with thousands of goroutines ([#16332](https://github.com/ethereum-optimism/optimism/issues/16332)) and `op-supervisor` crashing from event overflows ([#16335](https://github.com/ethereum-optimism/optimism/issues/16335)). To aid debugging, a PR was proposed to add detailed event counters to the supervisor ([#16473](https://github.com/ethereum-optimism/optimism/pull/16473)), and new work was started to fix duplicate event handling ([#16501](https://github.com/ethereum-optimism/optimism/pull/16501)) and add consistency testing ([#16518](https://github.com/ethereum-optimism/optimism/pull/16518)).\n    - **`op-node` Interop Flexibility:** A series of new issues ([#16519](https://github.com/ethereum-optimism/optimism/issues/16519), [#16520](https://github.com/ethereum-optimism/optimism/issues/16520), [#16521](https://github.com/ethereum-optimism/optimism/issues/16521)) were opened to explore adding modes to `op-node` that would allow it to handle trivial interop cases without requiring a full `op-supervisor`, simplifying deployments for certain use cases.\n    - **Testing & Tooling Expansion:**\n        - Building on recent progress, new issues were created to enable flashblocks on `op-sepolia` ([#16496](https://github.com/ethereum-optimism/optimism/issues/16496)) and add flashblocks support to the Kurtosis devnet ([#16514](https://github.com/ethereum-optimism/optimism/issues/16514)).\n        - A new service, `op-sync-tester`, was proposed to facilitate long-range mock EL sync testing without needing a full EL deployment ([#16452](https://github.com/ethereum-optimism/optimism/issues/16452)).\n    - **CI/CD & Release Process:** An active discussion is underway to establish internal SLAs for the CI pipeline ([#16437](https://github.com/ethereum-optimism/optimism/issues/16437]), with community feedback highlighting concerns around flaky tests and specific metrics. Separately, the conversation on improving release pipelines ([#16097](https://github.com/ethereum-optimism/optimism/issues/16097)) has shifted towards using `git cliff` for automated changelog generation.\n\n## \ud83d\udcac Community & Collaboration\nThis week saw strong collaborative engagement on improving core infrastructure and development processes. The discussion around CI/CD SLAs in issue [#16437](https://github.com/ethereum-optimism/optimism/issues/16437) was particularly active, with developers providing candid feedback on proposed metrics and emphasizing the need to aggressively tackle flaky tests.\n\nThe coordinated effort to debug `op-node` and `op-supervisor` stability ([#16332](https://github.com/ethereum-optimism/optimism/issues/16332), [#16335](https://github.com/ethereum-optimism/optimism/issues/16335)) demonstrates a healthy feedback loop between users reporting issues and maintainers responding with targeted diagnostic tools and fixes. Furthermore, the creation of a focused set of issues ([#16519-16521](https://github.com/ethereum-optimism/optimism/issues/16519)) for `op-node` interop modes suggests a proactive and collaborative approach to planning future architectural", "2025-09-04T03:32:55.608Z"]
["ethereum-optimism/optimism_week_2025-06-08", "ethereum-optimism/optimism", "week", "2025-06-08", "# ethereum-optimism/optimism Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the robustness of the OP Stack and improving developer infrastructure. Key progress was made in preparing for future network upgrades with added support for v4.0.0 in `op-deployer`. Significant work was also done to improve the resilience of core components, including `op-batcher`'s sync detection and `op-node`'s reorg handling. However, the week also saw the emergence of critical new stability concerns, with reports of goroutine leaks in `op-node` and event overflow issues in `op-supervisor`. A major ongoing focus remains on tackling CI and acceptance test flakiness to improve development velocity and reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on bolstering the core stack's stability, preparing for future upgrades, and adding new administrative capabilities.\n\n-   **Stack Robustness and Upgrade Preparedness:**\n    -   To prepare for future network upgrades, `op-deployer` was updated to support the validation and deployment of v4.0.0 configurations ([#16048]).\n    -   `op-batcher`'s stability was improved with a more robust method for detecting \"not yet ready\" sync statuses, preventing issues from incomplete L2 data ([#16298]).\n    -   `op-node`'s handling of L1 reorgs was optimized by modifying its unsafe head search to work backwards during supervisor-instructed resets ([#16312]).\n\n-   **New Proposer Functionality:**\n    -   A new `admin_propose` RPC method was added to `op-proposer`, providing an administrative interface for controlling the proposal process ([#16408]).\n\n## \ud83d\udc1b Issues & Triage\nThis week saw the resolution of dependency and documentation issues, but also the emergence of critical new stability reports and a continued, concerted effort to address test flakiness.\n\n-   **Closed Issues:**\n    -   A dependency issue causing import errors due to a missing `dist` directory in `@eth-optimism/tokenlist` was resolved ([#1146]).\n    -   An issue regarding outdated documentation for the deprecated `L2OutputOracleProxy` was closed, clarifying its status for developers ([#1614]).\n\n-   **New & Active Issues:**\n    -   **Critical Stability Concerns:** Two significant issues were reported:\n        -   `op-node` v1.13.3 is experiencing a critical issue where thousands of goroutines become stuck, leading to sync failures over time ([#16332]).\n        -   `op-supervisor` is reportedly entering a non-recoverable crash-loop due to event overflow when the unsafe head gap with a managed node becomes too large ([#16335]).\n    -   **CI & Test Reliability:** A major focus of the week was investigating and improving CI reliability. Discussions in [#16271] and [#16378] centered on identifying the top flaky tests and infrastructure-related failures. A new \"Flakiness Report\" was introduced to provide better debugging clues.\n    -   **Developer Experience & Tooling:**\n        -   A bug report highlighted insufficient documentation for developers implementing custom bridges following recent interop updates ([#16331]).\n        -   A long-standing issue regarding an incorrect nonce returned by `eth_getTransactionCount` ([#623]) continues to see community members asking for updates.\n        -   New proposals were opened to improve clarity by renaming supervisor-node modes ([#16379]) and to establish monitoring for flashblocks integration ([#16388]).\n    -   **Future Work & Refactoring:**\n        -   A detailed plan of action was outlined for the Fault Proof creator contract OPCM changes ([#15789]).\n        -   A new PR proposes to decouple `AnchorStateRegistry` from `SystemConfig` for a more modular architecture ([#16383]).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was prominent in tackling complex technical challenges and refining development processes. The active discussions around CI flakiness ([#16271], [#16378]) and the `op-supervisor` event overflow issue ([#16335]) involved multiple team members working together to diagnose root causes and propose solutions. The introduction of a PR review policy proposal ([#16339]) signals a move towards more formalized and mature contribution guidelines. Furthermore, the continued engagement from the community on long-standing issues like the incorrect nonce bug ([#623]) underscores the importance of addressing user-facing problems.", "2025-09-04T03:31:56.844Z"]
["ethereum-optimism/docs_week_2025-06-29", "ethereum-optimism/docs", "week", "2025-06-29", "# ethereum-optimism/docs Weekly Report (Jun 29 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for the `ethereum-optimism/docs` repository, with no new documentation or pull requests merged. The primary focus was on planning and maintenance. Several new issues were created to outline future documentation needs, particularly concerning the Movement Network integration, DAO governance visuals, and past audit reports. Additionally, a bug related to `op-deployer` was officially closed after a fix was confirmed in a newer release. The week's activity centered on identifying upcoming work and performing administrative tasks, such as creating issues to track monthly project metrics.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no documentation enhancements or pull requests merged during this period. All development activity was focused on issue management and triage.\n\n## \ud83d\udc1b Issues & Triage\nThe week's work revolved around managing the issue tracker, closing out a resolved bug, and opening new issues to scope future documentation updates.\n\n- **Closed Issues:**\n  - A bug report concerning an error in `op-deployer` v0.4.0-rc.2 ([#16618](https://github.com/ethereum-optimism/docs/issues/16618)) was closed. A community member confirmed the issue was resolved in a subsequent release candidate, allowing the ticket to be closed.\n\n- **New & Active Issues:**\n  - **Documentation Update Requests:** A significant portion of the week's activity involved creating tickets for new and updated content. Key requests include:\n    - Documentation for the Movement Network's integration with Optimism, focusing on MOVE token utility and staking ([#1674](https://github.com/ethereum-optimism/docs/issues/1674), [#1676](https://github.com/ethereum-optimism/docs/issues/1676)).\n    - An update related to a Q4 2024 audit ([#1673](https://github.com/ethereum-optimism/docs/issues/1673)).\n  - **Project Health & Metrics:** Issues were opened to track the generation of monthly metrics reports for June 2025, covering statistics for both closed issues ([#1681](https://github.com/ethereum-optimism/docs/issues/1681)) and opened pull requests ([#1682](https://github.com/ethereum-optimism/docs/issues/1682)).\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction was centered on issue reporting and feedback. The closure of the `op-deployer` issue ([#16618](https://github.com/ethereum-optimism/docs/issues/16618)) was a direct result of user feedback confirming the fix. Furthermore, the new issues requesting documentation updates demonstrate active community engagement in identifying areas for improvement in the project's resources. There was no significant pull request collaboration or high-discussion threads this week.", "2025-09-04T03:34:21.841Z"]
["ethereum-optimism/infra_week_2025-07-13", "ethereum-optimism/infra", "week", "2025-07-13", "# ethereum-optimism/infra Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant push to enhance the project's testing infrastructure and resolve long-standing issues. A major effort culminated in the successful porting of numerous acceptance tests to `devstack`, improving test consistency and maintainability. Key infrastructure decisions were made regarding sequencer configurations, and a critical bug in `op-acceptor` was fixed to ensure accurate test duration reporting. The team also began laying the groundwork for future initiatives, including a migration to Blockscout and efforts to align test environments more closely with production topology.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving test reporting, managing dependencies, and proposing new authentication features.\n\n- **Test Reporting Improvement:** A bug in `op-acceptor` that caused failed test runs to report a zero duration was fixed in [#425](https://github.com/ethereum-optimism/infra/pull/425). This change ensures that all test runs, regardless of their outcome, report a non-zero duration, leading to more accurate and reliable test metrics.\n\n- **New Functionality & Dependencies:**\n    - A new pull request, [#424](https://github.com/ethereum-optimism/infra/pull/424), was opened to enable public access and authentication, signaling a move towards more robust access control.\n    - A dependency update for `golang.org/x/oauth2` was submitted via [#427](https://github.com/ethereum-optimism/infra/pull/427) to keep components current.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a substantial cleanup of the issue tracker, with a focus on closing out completed test migrations and resolving old stability concerns.\n\n- **Closed Issues:**\n    - **Acceptance Test Migration to Devstack:** A major milestone was reached with the closure of several issues related to porting acceptance tests to `devstack`. This includes `TestChainFork` ([#413](https://github.com/ethereum-optimism/infra/issues/413)), `TestWithdrawalsRoot` ([#412](https://github.com/ethereum-optimism/infra/issues/412)), `TestERC20Bridge` ([#415](https://github.com/ethereum-optimism/infra/issues/415)), `TestOperatorFee` ([#414](https://github.com/ethereum-optimism/infra/issues/414)), and `TestPectra` ([#416](https://github.com/ethereum-optimism/infra/issues/416)).\n    - **Infrastructure Configuration Decisions:** Internal discussions concluded with the closure of two spike issues. The team decided to skip NVMe node deployment for `op-rbuilders` for now ([#16689](https://github.com/ethereum-optimism/infra/issues/16689)) and to keep flashblocks components in the same namespace as other sequencer components for simpler monitoring ([#16690](https://github.com/ethereum-optimism/infra/issues/16690)).\n    - **Sequencer Stability:** Long-standing issues concerning sequencer recovery from window expiration ([#11228](https://github.com/ethereum-optimism/infra/issues/11228)) and halting due to temporary errors ([#12240](https://github.com/ethereum-optimism/infra/issues/12240)) were closed.\n\n- **New & Active Issues:**\n    - **Test Environment Alignment:** A new issue, [#16746](https://github.com/ethereum-optimism/infra/issues/16746), was opened to align the local Kurtosis interop devnet topology with production, aiming to improve the fidelity of local testing.\n    - **Block Explorer Migration:** Discussion is active on [#1696](https://github.com/ethereum-optimism/infra/issues/1696) regarding the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia.\n    - **Ongoing Challenges & Blockers:**\n        - A persistent and hard-to-reproduce bug where invalid interop transactions are included in the `txpool` remains an active concern ([#635](https://github.com/ethereum-optimism/infra/issues/635)).\n        - An `op-geth` version bump has caused `TestExecMessageInvalidAttributes` and `TestRegularMessage` to fail, requiring them to be temporarily skipped ([#16731](https://github.com/ethereum-optimism/infra/issues/16731)).\n        - The plan to enable flashblocks on Sunnyside sequencers has been deprioritized ([#16688](https://github.com/ethereum-optimism/infra/issues/16688)) pending stabilization on OP Labs Sepolia infrastructure.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted strong cross-repository and inter-team collaboration. The successful porting of numerous acceptance tests was accomplished through pull requests in the `ethereum-optimism/optimism` repository, demonstrating tight coordination between the `infra` and core development teams. Similarly, the discussion around the Etherscan-to-Blockscout migration ([#1696](https://github.com/ethereum-optimism/infra/issues/1696)) involves a parallel effort in the `ethereum-optimism/docs` repository. The decision to hand off an interop acceptance test ([#298](https://github.com/ethereum-optimism/infra/issues/298)) to the Protocol team further illustrates effective task delegation between specialized teams.", "2025-09-04T03:36:10.078Z"]
["ethereum-optimism/superchain-ops_week_2025-07-20", "ethereum-optimism/superchain-ops", "week", "2025-07-20", "# ethereum-optimism/superchain-ops Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by significant progress in the U16 upgrade lifecycle, with several critical tasks moving from preparation to on-chain execution. Development efforts focused on ensuring the stability and correctness of the upgrade through documentation fixes, validation improvements, and crucial bug fixes for speedrun templates. Concurrently, the team advanced the integration of flashblocks by closing deployment issues and shifting focus to establishing robust monitoring and alerting. Preparations for the July 2025 Security Council rehearsals also moved forward with the creation of new playbook materials.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on executing the U16 upgrade, preparing for security operations, and fixing bugs related to upgrade testing infrastructure.\n\n- **U16 Upgrade Execution and Validation:**\n  - A series of pull requests tracked the progression of U16 tasks 016-021. The tasks were first marked as \"READY TO SIGN\" ([#1142]) and later updated to \"EXECUTED\" with their corresponding Etherscan transaction hashes, confirming their successful on-chain completion ([#1148]).\n  - To support this, initial work focused on correcting documentation ([#1139]) and fixing the interpretation of `AnchorStateRegistry` storage in validation files ([#1141]). Validation instructions for several tasks were also improved ([#1143]).\n\n- **Security Council Rehearsal Preparation:**\n  - New materials were prepared for the July 2025 Security Council Cohort B rehearsals. This included playbooks, READMEs, and simulation assets for \"Rehearsal 1 - Welcome,\" \"rehearsal-2-remove-signer,\" and \"rehearsal-3-nested-upgrade\" ([#1140]).\n\n- **Upgrade Tooling and Bug Fixes:**\n  - A key bug fix enhanced the `OPCMTaskBase` to support multiple OPCM targets, a necessary change for enabling speedrun templates from U13 to U16 ([#1146]).\n  - Another fix addressed creation collision errors in speedruns by enabling the use of historical prestates, preventing conflicts when testing multiple upgrades ([#1147]).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several infrastructure and operational issues, with active discussions now focused on monitoring and future configuration needs. No new issues were opened.\n\n- **Closed Issues:**\n  - **Flashblocks Integration:** Significant progress was made with the closure of issues related to flashblocks RPC configuration ([#16544]), non-public deployment on op-sepolia ([#16496]), and the deployment of a flashblocks-websocket-proxy ([#16686]).\n  - **Operational Readiness:** The fault proof \"Runbook v3 final review\" was completed and closed, with runbooks updated and versioned for clarity ([#16651]).\n  - **Component Cleanup:** Two long-standing issues were resolved. An issue to improve the `op-supervisor` reset target functionality was closed due to recent refactoring ([#16314]), and another concerning a reusable logger utility was closed after concluding the current implementation is sufficient ([#15139]).\n\n- **New & Active Issues:**\n  - **Flashblocks Monitoring:** With deployment tasks complete, focus has shifted to monitoring. A detailed discussion in issue [#16388] outlined requirements for alerts and metrics, including peer counts, pending transaction spikes, and performance SLAs for the `flashblocks-websocket-proxy` and related components.\n  - **Configuration & Tooling:** An issue regarding a configurable Data Availability (DA) type for the interop SuperSystem ([#15406]) was reopened after being closed by automation, noting it is a prerequisite for future cleanup but not a blocker for the current interop release.\n  - **Development Blocker:** An effort to add a semgrep rule for function naming conventions ([#15115]) is currently blocked because GitHub Actions is disabled for the repository, preventing the assigned agent from proceeding.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity demonstrates a highly coordinated and task-focused effort. The clear progression of the U16 upgrade\u2014from validation fixes ([#1141]) to marking tasks as ready ([#1142]) and finally executed ([#1148])\u2014highlights tight collaboration within the team. Similarly, the closure of multiple flashblocks deployment issues followed by an immediate, in-depth discussion on monitoring requirements ([#16388]) shows a seamless transition from implementation to operational stability. The resolution of older issues ([#16314], [#15139]) also suggests a collective effort to reduce technical debt and refine existing components.", "2025-09-04T03:37:20.745Z"]
["ethereum-optimism/optimism_week_2025-07-13", "ethereum-optimism/optimism", "week", "2025-07-13", "# ethereum-optimism/optimism Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant push to enhance the project's testing and validation infrastructure. Major efforts were dedicated to porting existing acceptance tests to `devstack`, introducing a new differential testing framework for Cannon, and laying the groundwork for a new `op-sync-tester` service. Alongside these testing improvements, work continued on bolstering the dispute game system and improving node stability. The team also focused on backlog management, closing numerous long-standing issues and opening detailed new ones that outline future architectural work, particularly around the modularization of `op-node`.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving robustness, test coverage, and developer tooling across the OP Stack.\n\n### Testing Infrastructure Overhaul\nA substantial effort was made to strengthen the project's testing capabilities, ensuring greater reliability and easier validation of new features.\n- **Test Migration to Devstack:** Several critical acceptance tests were ported to `op-devstack` for use in persistent devnets, including tests for the ERC20 bridge ([#16695]), withdrawals root ([#16547]), chain functionality ([#16594]), and Isthmus operator fees ([#16721]). Pectra and Ecotone feature tests were also integrated into the devstack acceptance suite ([#16744]).\n- **Cannon Differential Testing:** A new \"DiffTester\" framework was introduced for Cannon, enabling more robust differential testing of VM steps. Existing tests for noop/unsupported syscalls ([#16608]), memory reservation ([#16709]), and custom memory reservation ([#16727]) were migrated to this new framework.\n- **New Test Implementations:** New `sysgo` (in-memory) tests were added to CI ([#16550]), and new acceptance tests were introduced for the pre-interop super proposer system ([#16674]).\n- **Test Stability:** A temporary skip was added for interop acceptance tests failing due to an `op-geth` version bump ([#16732]), and a race condition in `op-dispute-mon`'s test suite was fixed ([#16697]).\n\n### Dispute System and Node Robustness\nImprovements were made to enhance protocol security and the stability of core components.\n- **Dispute Monitoring:** The dispute monitor (`op-dispute-mon`) was enhanced to check output roots against multiple rollup nodes, increasing monitoring robustness ([#16490]). A startup failure issue caused by the lazy dial option was also resolved ([#16720]).\n- **Dispute Game Testing:** A new Super Dispute Game test case was added to cover unsafe proposals where a game's root claim contains both valid and invalid output roots ([#16723]).\n- **Node Sanity Checks:** Sanity checks were added to `op-node` to prevent reorgs from supervisors when interop is not active and to limit the depth of reorgs ([#16554]).\n\n### Deployment Tooling and Code Quality\nThe developer experience was improved through better deployment tools and general code hygiene.\n- **Deployment:** A new command was added to `op-deployer` to simplify `OPCM.migrate` calls, streamlining a key chain management operation ([#16710]).\n- **CLI Enhancements:** The Gnosis CLI was updated with a new interface for sending transactions and was refactored for better modularity ([#16743], [#16745]).\n- **Code Refinements:** A duplicated struct was removed from `contracts-bedrock` ([#16621]), an unused function was removed from `op-service` ([#16622]), and a duplicate check was removed from `op-batcher` ([#16696]). Docker build speeds were also improved through better layer caching ([#16694]).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nA significant number of issues were closed, reflecting progress in testing, infrastructure deployment, and backlog cleanup.\n- **Testing & Devnet:** The porting of `TestChainFork` to devstack was completed ([#413]), as were the `op-proposer` acceptance tests for interop ([#15950]). An investigation into NAT tests for the fault proof system was also concluded ([#14118]).\n- **Infrastructure & Deployment:** Several issues related to Flashblocks deployment on op-sepolia and sunnyside sequencers were resolved ([#16686], [#16688]). Discussions on NVMe node deployment and dedicated namespacing for `op-rbuilders` were concluded, with both being deprioritized for now ([#16689], [#16690]).\n- **Backlog Cleanup:** Several older issues were closed, including those related to sequencer stability ([#11228], [#12240]), a PR-based release workflow ([#12683]), and an outdated NPM package ([#13459]).\n\n### New & Active Issues\nNew issues this week map out significant future work, while active discussions focus on resolving complex bugs and finalizing designs.\n- **`op-node` Modularization:** A comprehensive set of issues ([#16679], [#16680], [#16681], [#16682], [#16683]) was opened to track the refactoring of `op-node`. The goal is to split its components (CLI, service, backend, metrics) into more modular packages for better maintainability and encapsulation.\n- **`op-sync-tester` Development:** A new epic was created to build an `op-sync-tester` service for mock EL sync testing. This was broken down into several tracking issues covering session handling ([#16699]), namespace support ([#16700], [#16701]), and integration ([#16702], [#16704]). The design is being actively discussed in [#16452].\n- **Active Discussions:** An investigation continues into a flaky CI issue where invalid interop transactions are occasionally included in the txpool ([#635]). Discussions also continued around the design of `VerifyOPCM` ([#16653]) and the migration from Etherscan to Blockscout ([#1696]).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted both innovative and traditional forms of collaboration. Notably, a pull request to improve `SuperchainConfig` test coverage ([#16675]) was the first to be created entirely with AI assistance, showcasing an emerging development methodology.\n\nActive technical discussions were prominent across several issues. For instance, contributors @protolambda and @pcw109550 debated session management strategies for the new `op-sync-tester` ([#16452]), demonstrating collaborative design on future tooling. The coordinated creation of detailed, multi-issue epics for the `op-node` refactor and the `op-sync-tester` points to strong alignment and planning within the core team for significant upcoming architectural improvements.", "2025-09-04T03:36:21.260Z"]
["ethereum-optimism/op-analytics_week_2025-07-27", "ethereum-optimism/op-analytics", "week", "2025-07-27", "# ethereum-optimism/op-analytics Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts in `op-analytics` centered on enhancing data ingestion pipelines and expanding analytical capabilities. A significant new feature was the integration with Dune to pull top EVM contract data, immediately followed by maintenance updates to keep this data current. The team also improved ad-hoc analysis tooling by adding a new notebook for flashblocks analysis and updating existing ones. Meanwhile, important forward-looking discussions continued around protocol-level improvements, including the \"Min Base Fee\" initiative and congestion-based transaction reordering, indicating a dual focus on immediate data enhancements and long-term design.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving the data sources and analytical tools available within the repository.\n\n- **Dune Data Integration:** A new data ingestion process was established to pull top EVM contracts from Dune, enhancing the project's external data sources ([#1711](https://github.com/ethereum-optimism/op-analytics/pull/1711)). This was followed by a maintenance update to ensure the Dune Top Contracts data remains current ([#1712](https://github.com/ethereum-optimism/op-analytics/pull/1712)).\n\n- **Analytics Notebooks:** The repository's analytical tooling was expanded with the addition of a new notebook for flashblocks analysis ([#1714](https://github.com/ethereum-optimism/op-analytics/pull/1714)). Existing notebooks for daily aggregated traces and transactions were also modified and updated ([#1713](https://github.com/ethereum-optimism/op-analytics/pull/1713)).\n\n- **Data Pipeline Refinements:** A refinement was made to the data processing pipeline to exclude Celo and Ethereum data from being published by certain models, as they are not yet ready for that stage ([#1716](https://github.com/ethereum-optimism/op-analytics/pull/1716)).\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened this week, but progress was made on existing ones.\n\n- **Closed Issues:** A long-standing documentation issue ([#1401](https://github.com/ethereum-optimism/op-analytics/issues/1401)) requesting clarification for the L2 Testnet Tutorial was closed. The resolution confirms that the relevant documentation has been updated, addressing a blocker that multiple users had encountered since February.\n\n- **New & Active Issues:**\n    - **Min Base Fee Tracking ([#16807](https://github.com/ethereum-optimism/op-analytics/issues/16807)):** Discussions continue around the \"Min Base Fee\" initiative. The conversation highlights significant cross-repository work, with references to active pull requests in `reth`, `op-alloy`, and the core `optimism` repository, indicating coordinated effort across the ecosystem.\n    - **Congestion-Based Transaction Reordering ([#306](https://github.com/ethereum-optimism/op-analytics/issues/306)):** This design discussion saw renewed interest, with a community member expressing a desire to collaborate. The issue explores tracking data availability (DA) usage over time and applying an exponential cost penalty, a concept that could be tested outside the protocol.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was most visible in the active issue discussions. The \"Min Base Fee\" issue ([#16807](https://github.com/ethereum-optimism/op-analytics/issues/16807)) serves as a central tracking point for a feature being implemented across multiple repositories, demonstrating strong coordination. Additionally, the design discussion for transaction reordering ([#306](https://github.com/ethereum-optimism/op-analytics/issues/306)) attracted external interest, showing community engagement in the project's long-term architectural decisions. Finally, the closure of an old documentation issue ([#1401](https://github.com/ethereum-optimism/op-analytics/issues/1401)) reflects the team's responsiveness to community-reported developer experience hurdles.", "2025-09-04T03:38:03.472Z"]
["ethereum-optimism/docs_week_2025-07-27", "ethereum-optimism/docs", "week", "2025-07-27", "# ethereum-optimism/docs Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by maintenance, administrative cleanup, and preparation for future documentation efforts. While only one minor bug fix was merged, significant activity occurred in issue tracking and planning. The team closed out several monthly metrics reports and a past audit issue, clearing the way for new work. Notably, discussions around the `MinBaseFee` feature intensified, culminating in the creation of a new issue to begin its documentation, signaling a key focus for the upcoming period.\n\n## \ud83d\udee0\ufe0f Key Developments\nActivity this week focused on minor fixes and initiating new documentation updates.\n\n- **Documentation Bug Fixes:** A pull request ([#1709](https://github.com/ethereum-optimism/docs/pull/1709)) was merged to fix a broken link to the sequencer guide within the `spin-batcher` documentation, improving user navigation.\n- **Work in Progress:** Two new pull requests were opened to enhance developer resources: one providing quick fixes for Nethermind documentation ([#1704](https://github.com/ethereum-optimism/docs/pull/1704)) and another updating the L2 rollup testnet tutorial ([#1705](https://github.com/ethereum-optimism/docs/pull/1705)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved closing out administrative tasks and initiating documentation for new features.\n\n- **Closed Issues:**\n    - **Administrative Cleanup:** June 2025 monthly metrics reports for pull requests and issues were closed ([#1681](https://github.com/ethereum-optimism/docs/issues/1681), [#1682](https://github.com/ethereum-optimism/docs/issues/1682)), along with a tracking issue for a Q4 2024 page path audit ([#1701](https://github.com/ethereum-optimism/docs/issues/1701)).\n    - **Documentation Clarity:** A long-standing issue ([#1401](https://github.com/ethereum-optimism/docs/issues/1401)) regarding confusion over L1 contract deployment in the L2 Testnet Tutorial was closed, indicating the relevant documentation has been clarified.\n\n- **New & Active Issues:**\n    - **Future Documentation:** A new issue ([#1710](https://github.com/ethereum-optimism/docs/issues/1710)) was created to begin documenting the `MinBaseFee` feature, marking the start of a significant documentation effort. New issues were also opened to track July's monthly metrics ([#1707](https://github.com/ethereum-optimism/docs/issues/1707), [#1708](https://github.com/ethereum-optimism/docs/issues/1708)).\n    - **Min Base Fee Implementation:** Discussion continues on the `MinBaseFee` tracking issue ([#16807](https://github.com/ethereum-optimism/docs/issues/16807)), with comments highlighting active, cross-repository development in `reth`, `op-alloy`, and `optimism`. This indicates significant coordination on a core protocol feature.\n    - **Congestion Cost Proposal:** A discussion on congestion-based builder transaction reordering ([#306](https://github.com/ethereum-optimism/docs/issues/306)) saw renewed interest, with a community member offering to collaborate on the design.\n\n## \ud83d\udcac Community & Collaboration\nWhile the volume of merged contributions was low, collaboration was evident in ongoing technical discussions. The active conversation around the `MinBaseFee` feature ([#16807](https://github.com/ethereum-optimism/docs/issues/16807)) demonstrates strong cross-team coordination between different parts of the Optimism ecosystem. Additionally, the offer of collaboration on the congestion-cost proposal ([#306](https://github.com/ethereum-optimism/docs/issues/306)) highlights community engagement in complex, forward-looking protocol design.", "2025-09-04T03:37:45.578Z"]
["ethereum-optimism/op-geth_week_2025-07-27", "ethereum-optimism/op-geth", "week", "2025-07-27", "# ethereum-optimism/op-geth Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nAfter a quiet start to the period, development activity ramped up with a clear focus on enhancing network configurability. The primary theme was the introduction of new controls over gas mechanics, laying the groundwork for more flexible fee structures. Work began on implementing a configurable minimum base fee and configurable data gas, initiated through two new feature pull requests and several corresponding issues to track the detailed implementation requirements.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major features were completed, significant foundational work was started on configurable gas parameters. This effort aims to provide chain operators with more granular control over network fees.\n\n- **Configurable Gas Parameters Initiated:**\n  - A new pull request ([#648](https://github.com/ethereum-optimism/op-geth/pull/648)) was opened to introduce a configurable minimum base fee.\n  - A second feature PR ([#653](https://github.com/ethereum-optimism/op-geth/pull/653)) was created to implement configurable data gas per token.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this period was centered on planning and tracking the new gas configuration features.\n\n- **Closed Issues:**\n  - A single issue, [#647](https://github.com/ethereum-optimism/op-geth/issues/647), was opened and immediately closed. It contained a feature request template.\n\n- **New & Active Issues:**\n  - Two new issues were created to support the `min-base-fee` implementation:\n    - [#649](https://github.com/ethereum-optimism/op-geth/issues/649) tracks the work needed to add `minBaseFee` to the block header's `extraData` field.\n    - [#650](https://github.com/ethereum-optimism/op-geth/issues/650) details the extension of `PayloadAttributesV3` to include the new `minBaseFee` field.\n  - The main tracking issue for the Min Base Fee feature, [#16807](https://github.com/ethereum-optimism/op-geth/issues/16807), saw an update from `wlawt` noting related in-progress work in the `op-alloy` ([#580](https://github.com/alloy-rs/op-alloy/pull/580)) and `optimism` ([#16852](https://github.com/ethereum-optimism/optimism/pull/16852)) repositories.\n\n## \ud83d\udcac Community & Collaboration\nThe development activity, though concentrated over a short period, demonstrated strong coordination. The creation of specific implementation issues ([#649](https://github.com/ethereum-optimism/op-geth/issues/649), [#650](https://github.com/ethereum-optimism/op-geth/issues/650)) in tandem with the main feature pull request ([#648](https://github.com/ethereum-optimism/op-geth/pull/648)) indicates a well-planned approach. Furthermore, activity on the tracking issue [#16807](https://github.com/ethereum-optimism/op-geth/issues/16807) highlights cross-repository collaboration to ensure alignment across the broader Optimism ecosystem.", "2025-09-04T03:38:03.132Z"]
["ethereum-optimism/optimism_week_2025-07-20", "ethereum-optimism/optimism", "week", "2025-07-20", "# ethereum-optimism/optimism Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development was characterized by significant performance enhancements to the `op-batcher`, a major push to improve testing infrastructure, and extensive planning for the rollout of \"flashblocks\" functionality. Key achievements include reducing the batcher's memory footprint and introducing advanced data availability throttling. The team also made substantial progress in clearing technical debt by closing a large volume of issues related to interoperability and the `op-supervisor`, while simultaneously streamlining contract deployment scripts and improving test quality across the stack.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis section details the concrete work completed, grouped by theme.\n\n### `op-batcher` Performance and Throttling\nA primary focus this week was on optimizing the `op-batcher` for better memory efficiency, throughput, and operational control.\n- **Memory and Throughput:** The batcher's memory usage was massively reduced by discarding the channel compressor after frame generation ([#16597](https://github.com/ethereum-optimism/optimism/pull/16597)). It will also now start publishing sooner when processing a backlog, improving throughput during restarts ([#16648](https://github.com/ethereum-optimism/optimism/pull/16648)).\n- **Data Availability (DA) Throttling:** Advanced throttling controls were introduced, offering multiple strategies for more flexible DA management ([#16588](https://github.com/ethereum-optimism/optimism/pull/16588)). The batcher was also updated to consistently use blobs while throttling, preventing an unintended fallback to calldata ([#16773](https://github.com/ethereum-optimism/optimism/pull/16773)).\n- **Operational Visibility:** The maximum throttle threshold was made more visible in logs and APIs to improve transparency ([#16804](https://github.com/ethereum-optimism/optimism/pull/16804)).\n\n### Testing Infrastructure and Quality\nSignificant effort was invested in improving the speed, capability, and quality of the project's testing frameworks.\n- **Test Performance:** `op-acceptance-tests` were sped up by optimizing Forge build steps and enabling intelligent rebuilds ([#16784](https://github.com/ethereum-optimism/optimism/pull/16784)). The tests were also updated to `v1.1.1` ([#16802](https://github.com/ethereum-optimism/optimism/pull/16802)).\n- **New Test Tooling:** Scaffolding for a new `op-sync-tester` was introduced, including session handling and configuration loading ([#16780](https://github.com/ethereum-optimism/optimism/pull/16780)).\n- **Fault Proof Testing:** `cannon` fault tests were migrated to the `DiffTester` framework, enhancing post-step checks ([#16767](https://github.com/ethereum-optimism/optimism/pull/16767), [#16787](https://github.com/ethereum-optimism/optimism/pull/16787)).\n- **Test Refinements:** Test coverage for `L1StandardBridge` and `L1ERC721Bridge` was improved through refactoring ([#16772](https://github.com/ethereum-optimism/optimism/pull/16772)), and a bug in the OPCM test suite was fixed ([#16813](https://github.com/ethereum-optimism/optimism/pull/16813)).\n\n### Contract Deployment and Refinement\nWork was done to clean up and streamline deployment scripts for Bedrock contracts, improving clarity and maintainability. This involved removing redundant or unnecessary assertions for the system config ([#16585](https://github.com/ethereum-optimism/optimism/pull/16585)), `l1standardbridge` ([#16715](https://github.com/ethereum-optimism/optimism/pull/16715)), `l1erc721bridge` ([#16716](https://github.com/ethereum-optimism/optimism/pull/16716)), dispute game factory ([#16717](https://github.com/ethereum-optimism/optimism/pull/16717)), optimism mintable erc20 factory ([#16719](https://github.com/ethereum-optimism/optimism/pull/16719)), and other contracts like the Optimism Portal and OPCM ([#16819](https://github.com/ethereum-optimism/optimism/pull/16819)).\n\n### Interoperability and Monitoring\n- The `op-e2e` suite was updated to support blob DA types for the interop supersystem, a key step for fault proof testing ([#16788](https://github.com/ethereum-optimism/optimism/pull/16788)).\n- The `dispute-mon` tool was enhanced to support multiple supervisor RPCs, improving its reliability ([#16517](https://github.com/ethereum-optimism/optimism/pull/16517)).\n- A new flag was added to the `op-node` to allow operators to configure the gossip timestamp threshold for rejecting old payloads ([#16718](https://github.com/ethereum-optimism/optimism/pull/16718)).\n\n### Security and Documentation\n- Two new Spearbit security review reports from May and July 2025 were added to the documentation, covering the Upgrade 16 and VerifyOPCM reviews ([#16737](https://github.com/ethereum-optimism/optimism/pull/16737)).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nA significant number of issues were closed, indicating a concerted effort to resolve technical debt and finalize features.\n- **Interop and Supervisor:** A large batch of issues related to `op-supervisor` readiness, RPC improvements, testnet recovery, and reorg handling were closed, marking progress on interop functionality ([#15702](https://github.com/ethereum-optimism/optimism/issues/15702), [#15755](https://github.com/ethereum-optimism/optimism/issues/15755), [#15757](https://github.com/ethereum-optimism/optimism/issues/15757), [#15758](https://github.com/ethereum-optimism/optimism/issues/15758), [#16314](https://github.com/ethereum-optimism/optimism/issues/16314)).\n- **Batcher and Node Optimization:** Issues tracking the `op-batcher` memory optimization spike ([#16537](https://github.com/ethereum-optimism/optimism/issues/16537)) and other node refinements were resolved.\n- **Data Availability:** The long-standing issue to make the DA type configurable for the `op-e2e` interop SuperSystem was resolved with the implementation of blob support ([#15406](https://github.com/ethereum-optimism/optimism/issues/15406)).\n- **Runbook Finalization:** The Fault Proof Incident Runbook v3 was finalized and the \"draft\" label removed ([#16651](https://github.com/ethereum-optimism/optimism/issues/16651)).\n\n### New & Active Issues\n- **Flashblocks Rollout:** A series of new issues meticulously outlines the phased deployment and testing strategy for \"flashblocks.\" This includes enabling it on a single mainnet sequencer ([#16759](https://github.com/ethereum-optimism/optimism/issues/16759]), load testing ([#16756](https://github.com/ethereum-optimism/optimism/issues/16756)), and deploying necessary infrastructure like proxies and RPC nodes ([#16763](https://github.com/ethereum-optimism/optimism/issues/16763), [#16764](https://github.com/ethereum-optimism/optimism/issues/16764)).\n- **Future Protocol Work:** New tracking issues were created for major future initiatives, including Execution Multiplexing ([#16809](https://github.com/ethereum-optimism/optimism/issues/16809)) and the implementation of a Minimum Base Fee ([#16807](https://github.com/ethereum-optimism/optimism/issues/16807)).\n- **Active Discussion:** An active discussion on issue [#16388](https://github.com/ethereum-optimism/optimism/issues/16388) focuses on defining specific metrics and alerting for the flashblocks integration, covering everything from peer counts and block progression to RPC node health.\n\n## \ud83d\udcac Community & Collaboration\nThis week demonstrated strong internal coordination, particularly in the comprehensive planning for the flashblocks rollout, which was detailed across numerous interconnected issues. The large-scale closure of interop and `op-supervisor` issues suggests a successful, focused effort by the team to prepare for the next phase of development. An interesting collaborative note was the use of AI assistance to refactor and improve L1 bridge test coverage ([#16772](https://github.com/ethereum-optimism/optimism/pull/16772)). The detailed, cross-functional discussion around flashblocks monitoring metrics highlights proactive collaboration to ensure a smooth and observable deployment.", "2025-09-04T03:37:31.501Z"]
["ethereum-optimism/superchain-ops_week_2025-07-27", "ethereum-optimism/superchain-ops", "week", "2025-07-27", "# ethereum-optimism/superchain-ops Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on enhancing operational security and preparing for future upgrades. A major feature was introduced to support multi-level nested Gnosis Safe signing, significantly improving transaction workflow flexibility for op-stack chains. In preparation for the U16 upgrade, a new template was added to streamline the process of unpausing the SuperchainConfig. Additionally, the `MultisigTask` contract was a central point of activity, receiving both a critical bug fix and a simplification refactor, while Security Council procedures were strengthened with new and updated rehearsal playbooks.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving multisig functionality, operational readiness, and governance procedures.\n\n- **Multisig and Signing Enhancements**\n  - A significant new feature enables multi-level nesting for Gnosis Safe signing ([#1150](https://github.com/ethereum-optimism/superchain-ops/pull/1150)), moving beyond the previous single-level limitation to support more complex and secure transaction workflows.\n  - The `MultisigTask` contract was refactored to improve readability and reduce complexity by removing the `root address` state variable ([#1149](https://github.com/ethereum-optimism/superchain-ops/pull/1149)).\n  - A bug was fixed in `MultisigTask.sol` to ensure configuration overrides are applied earlier, allowing developers to reliably assert on them during template setup ([#1151](https://github.com/ethereum-optimism/superchain-ops/pull/1151)).\n\n- **Operational Readiness and Governance**\n  - To prepare for future network changes, a new template was added to facilitate unpausing the SuperchainConfig after the U16 upgrade ([#1137](https://github.com/ethereum-optimism/superchain-ops/pull/1137)).\n  - Security Council documentation was updated, and a new playbook for the \"Remove Signer\" rehearsal was added to bolster operational security practices ([#1153](https://github.com/ethereum-optimism/superchain-ops/pull/1153), [#1154](https://github.com/ethereum-optimism/superchain-ops/pull/1154)).\n\n- **New Work in Progress**\n  - A new pull request was opened to fix the `set respected game template` ([#1157](https://github.com/ethereum-optimism/superchain-ops/pull/1157)).\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened and no existing issues were closed this week. However, there was significant discussion on a key upcoming feature.\n\n- **New & Active Issues:**\n  - The \"Min Base Fee\" feature saw continued progress across two key issues. In the implementation tracking issue ([#16807](https://github.com/ethereum-optimism/superchain-ops/issues/16807)), a draft `reth` pull request was shared to gather early feedback.\n  - In the related specification issue ([#742](https://github.com/ethereum-optimism/superchain-ops/issues/742)), a request was made to compute and include an estimate for the state growth implied by the feature, highlighting a focus on understanding its full impact before finalization.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the active discussions surrounding the \"Min Base Fee\" specification and implementation. The sharing of a draft PR from the `reth` repository for early review on issue [#16807](https://github.com/ethereum-optimism/superchain-ops/issues/16807) indicates healthy cross-repository coordination. Furthermore, feedback on the specification in issue [#742](https://github.com/ethereum-optimism/superchain-ops/issues/742) demonstrates active review and a commitment to thorough planning. The concentrated work on the `MultisigTask` contract across multiple pull requests also suggests a focused effort by the core team on a critical piece of infrastructure.", "2025-09-04T03:38:24.354Z"]
["ethereum-optimism/superchain-registry_week_2025-07-27", "ethereum-optimism/superchain-registry", "week", "2025-07-27", "# ethereum-optimism/superchain-registry Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity in the `superchain-registry` was characterized by ongoing design discussions and ecosystem growth rather than major code changes. Development focused on advancing the \"Min Base Fee\" feature, with progress tracked across multiple repositories including `optimism`, `op-alloy`, and `reth`. A proposal to add a new mainnet chain to the Superchain was initiated, and community members showed active interest in collaborating on future protocol enhancements like congestion-based transaction reordering. The only merged code change was a minor bug fix, reflecting a period of steady maintenance and strategic planning.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on minor maintenance, with most effort directed towards planning and discussion for future features.\n\n*   **Configuration Fixes:** A minor bug was addressed by correcting a comment error in the standard configuration parameter files for both mainnet and Sepolia (`standard-config-params-mainnet.toml` and `standard-config-params-sepolia.toml`) in PR [#1089](https://github.com/ethereum-optimism/superchain-registry/pull/1089).\n\n## \ud83d\udc1b Issues & Triage\nDiscussions on active issues were the primary focus this week, with significant progress on feature planning and a new proposal to expand the Superchain.\n\n*   **Closed Issues:** No issues were closed this week.\n\n*   **New & Active Issues:**\n    *   **New Chain Proposal:** A pull request ([#1091](https://github.com/ethereum-optimism/superchain-registry/pull/1091)) was opened to add the \"Silent Data mainnet chain\" to the registry, signaling continued growth of the Superchain ecosystem.\n    *   **Min Base Fee Tracking:** Discussion continued on issue [#16807](https://github.com/ethereum-optimism/superchain-registry/issues/16807) to track the implementation of the \"Min Base Fee\" feature. Updates highlighted in-flight work in the `op-alloy` and `optimism` repositories, as well as an early `reth` draft for review. Related discussion on a closed issue ([#742](https://github.com/ethereum-optimism/superchain-registry/issues/742)) centered on the need to estimate the state growth implied by this feature, which is now being tracked in a separate design document.\n    *   **Congestion-Based Reordering:** Issue [#306](https://github.com/ethereum-optimism/superchain-registry/issues/306), which proposes a design for congestion-based builder transaction reordering, saw renewed interest from the community.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted active collaboration both within the core team and with the broader community.\n\n*   The ongoing work on the \"Min Base Fee\" feature ([#16807](https://github.com/ethereum-optimism/superchain-registry/issues/16807)) demonstrates significant cross-repository coordination, with contributor `wlawt` tracking related pull requests across the `optimism`, `op-alloy`, and `reth` projects.\n*   Community engagement was evident in the discussion on congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/superchain-registry/issues/306)), where community member `moonfury-ops` expressed interest in collaborating on the design document.", "2025-09-04T03:38:22.330Z"]
["ethereum-optimism/op-geth_week_2025-08-03", "ethereum-optimism/op-geth", "week", "2025-08-03", "# ethereum-optimism/op-geth Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was focused on investigation and community feedback rather than direct code merges. No new features or bug fixes were completed. The primary developments involved the opening of a new pull request ([#655](https://github.com/ethereum-optimism/op-geth/pull/655)) to investigate calldata footprint block limits and the swift resolution of a community-raised issue concerning project flagging within the Retro-Funding process. This highlights the team's responsiveness to community concerns and ongoing protocol maintenance efforts.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, no pull requests were merged this week, meaning no new features, bug fixes, or refactoring efforts were completed.\n\n- **Calldata Limit Investigation**\n  - A new pull request, [#655](https://github.com/ethereum-optimism/op-geth/pull/655), was opened to begin work on a spike related to calldata footprint block limits. This work is exploratory and has not yet been merged.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week centered on addressing a community concern related to public goods funding.\n\n- **Closed Issues:**\n  - **Project Flagging Resolution:** An issue ([#72](https://github.com/ethereum-optimism/op-geth/issues/72)) raised by a community member about their project being inappropriately flagged in a Retro-Funding allocation was acknowledged and resolved.\n\n- **New & Active Issues:**\n  - No new issues were opened this week. The only notable active issue was [#72](https://github.com/ethereum-optimism/op-geth/issues/72), which was opened and closed on the same day, indicating a quick response and resolution from the maintainers.\n\n## \ud83d\udcac Community & Collaboration\nThe primary collaborative activity observed this week was the interaction on issue [#72](https://github.com/ethereum-optimism/op-geth/issues/72). A community member (`sexychinese`) provided feedback on the Retro-Funding process, and a maintainer (`ccerv1`) promptly acknowledged, investigated, and confirmed the resolution. This demonstrates a healthy feedback loop between the project maintainers and the broader ecosystem, particularly around the critical area of public goods funding.", "2025-09-04T03:38:38.793Z"]
["ethereum-optimism/optimism_week_2025-07-27", "ethereum-optimism/optimism", "week", "2025-07-27", "# ethereum-optimism/optimism Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development activity centered on enhancing the configurability and robustness of the OP Stack. A significant push was made to introduce configurable protocol parameters, with new work initiated to allow for a minimum base fee and adjustable data gas costs. This effort is supported by active specification writing and implementation tracking across multiple repositories. Concurrently, proposals were made to improve system monitoring with new alerts for flashblocks, scale the Cannon VM runner for more extensive fault proof testing, and address mempool drift issues observed in the ecosystem.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile much of the week was dedicated to proposing new features, several maintenance tasks were completed, and significant new work was initiated across the stack.\n\n**Dependency & Maintenance Updates**\nRoutine maintenance saw the completion of several dependency bumps for Go modules, ensuring the project stays current with its tooling. Key updates included `urfave/cli/v2` to 2.27.7 ([#16924](https://github.com/ethereum-optimism/optimism/pull/16924)), `prometheus/client_golang` to 1.23.0 ([#16928](https://github.com/ethereum-optimism/optimism/pull/16928)), and `doublestar/v4` to 4.9.1 ([#16921](https://github.com/ethereum-optimism/optimism/pull/16921)).\n\n**Proposed Protocol & Governance Enhancements**\nA major focus was on increasing the flexibility of the protocol's economic parameters.\n- **Configurable Fees:** New pull requests aim to introduce a configurable minimum base fee ([#16852](https://github.com/ethereum-optimism/optimism/pull/16852)) and a configurable calldata gas cost ([#16854](https://github.com/ethereum-optimism/optimism/pull/16854)), giving chain operators more control over their fee markets.\n- **Superchain & Governance:** Work was proposed to improve `superchainConfig` upgrades ([#16838](https://github.com/ethereum-optimism/optimism/pull/16838)) and implement a proposal validator for the governance system ([#16861](https://github.com/ethereum-optimism/optimism/pull/16861)).\n\n**Node & Service Improvements**\nSeveral pull requests were opened to advance the capabilities of core services:\n- **Execution Multiplexing:** An initial implementation for execution multiplexing in `op-node` and `op-devstack` was introduced ([#16873](https://github.com/ethereum-optimism/optimism/pull/16873)).\n- **Go Implementations:** Updates were made for the CWIA creator pattern ([#16869](https://github.com/ethereum-optimism/optimism/pull/16869)) and `op-node` was updated to use the more modern `math/rand/v2` package ([#16937](https://github.com/ethereum-optimism/optimism/pull/16937)).\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week focused on future protocol features, system stability, and developer experience.\n\n- **Closed Issues:** A long-standing documentation issue ([#1401](https://github.com/ethereum-optimism/optimism/issues/1401)) regarding clarity on L1 contract deployment was finally closed, marking an improvement for developers setting up new testnets.\n\n- **New & Active Issues:**\n    - **Minimum Base Fee:** This feature is a major point of discussion. A new issue ([#16839](https://github.com/ethereum-optimism/optimism/issues/16839)) formally proposes the configuration change, while active tracking issue [#16807](https://github.com/ethereum-optimism/optimism/issues/16807) saw updates with links to a draft `reth` implementation. The related specification issue ([#742](https://github.com/ethereum-optimism/optimism/issues/742)) highlighted the need to analyze the state growth impact of the feature.\n    - **System Health & Scalability:** New issues were created to enhance monitoring and performance. These include proposals for alerts on flashblocks sequencer health ([#16867](https://github.com/ethereum-optimism/optimism/issues/16867), [#16868](https://github.com/ethereum-optimism/optimism/issues/16868)), a plan to scale the Cannon VM runner to improve fault proof coverage ([#16910](https://github.com/ethereum-optimism/optimism/issues/16910)), and a task to deploy a mempool rebroadcaster to prevent drift ([#16932](https://github.com/ethereum-optimism/optimism/issues/16932)).\n    - **Congestion Research:** An older issue on congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/optimism/issues/306)) saw renewed interest, indicating ongoing research into advanced fee market mechanisms.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted the interconnected nature of the Superchain ecosystem. The issue to address mempool drift ([#16932](https://github.com/ethereum-optimism/optimism/issues/16932)) was opened in direct response to observations from the Base team, demonstrating effective cross-chain collaboration. Furthermore, the extensive discussion around the minimum base fee feature ([#16807](https://github.com/ethereum-optimism/optimism/issues/16807)) showed tight coordination between the Optimism, `reth`, and `op-alloy` development efforts. Finally, a community member expressed interest in collaborating on the complex topic of congestion-based transaction reordering ([#306](https://github.com/ethereum", "2025-09-04T03:38:24.321Z"]
["ethereum-optimism/specs_week_2025-07-27", "ethereum-optimism/specs", "week", "2025-07-27", "# ethereum-optimism/specs Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a strong focus on refining and clarifying existing specifications, alongside laying the groundwork for new protocol features. Significant progress was made in improving documentation accuracy, aligning interoperability terminology, and advancing the `min-base-fee` specification through cross-repository collaboration. Key maintenance tasks were also completed, including the removal of a deprecated feature from the specs and streamlining the repository's review process, reflecting a commitment to both quality and efficiency.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving the clarity, accuracy, and consistency of the project's specifications and documentation.\n\n- **Specification and Documentation Refinements:** A series of pull requests were merged to enhance the quality of the documentation. This included fixing a broken link in the predeploys documentation ([#716](https://github.com/ethereum-optimism/specs/pull/716)), correcting a typo ([#721](https://github.com/ethereum-optimism/specs/pull/721)), and making minor grammatical improvements ([#704](https://github.com/ethereum-optimism/specs/pull/704)). The Supervisor API specification was updated to clarify how null block references are represented ([#739](https://github.ethereum-optimism/specs/pull/739)), and the Optimism Portal fault-proof specs received minor cleanups to better align with the implementation ([#745](https://github.com/ethereum-optimism/specs/pull/745)).\n\n- **Interop Specification Alignment:** To improve consistency between the specification and implementation, the `SafetyLevel` terminology in the interop specs was clarified. A change was made to explicitly state that the `unsafe` safety level corresponds to `local-unsafe`, resolving a point of ambiguity ([#722](https://github.com/ethereum-optimism/specs/pull/722)).\n\n- **Repository Maintenance and Cleanup:** General maintenance included removing the spec for the custom gas token feature, which is no longer being pursued ([#689](https://github.com/ethereum-optimism/specs/pull/689)). Based on team feedback, the `CODEOWNERS` file was removed to streamline the review process ([#743](https://github.com/ethereum-optimism/specs/pull/743)). Additionally, a standardized legal footer was added to the documentation site ([#595](https://github.com/ethereum-optimism/specs/pull/595)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on defining new features and resolving inconsistencies in existing specifications.\n\n- **Closed Issues:** Two issues related to interoperability terminology were resolved. Issue [#714](https://github.com/ethereum-optimism/specs/issues/714) concerning the `interop_ready` RPC and issue [#717](https://github.com/ethereum-optimism/specs/issues/717) addressing inconsistencies in safety level naming (e.g., `Unsafe` vs. `LocalUnsafe`) were both closed, bringing greater clarity to the interop specifications.\n\n- **New & Active Issues:**\n    - **New Specifications:** Two issues were opened to kickstart the definition of new specifications. [#741](https://github.com/ethereum-optimism/specs/issues/741) proposes porting the `SuperchainConfig` type into the specs, while [#742](https://github.com/ethereum-optimism/specs/issues/742) initiates the process of writing the specification for the `min-base-fee` feature.\n    - **Min Base Fee Progress:** The `min-base-fee` feature saw significant activity. The main tracking issue ([#16807](https://github.com/ethereum-optimism/specs/issues/16807)) was updated with links to draft implementations in the `reth`, `op-alloy`, and `optimism` repositories, indicating coordinated, cross-repository development. A discussion on the related spec issue ([#742](https://github.com/ethereum-optimism/specs/issues/742)) highlighted the need to consider the state growth impact of the feature.\n    - **Congestion Control Discussion:** An older issue regarding a design for congestion-based builder transaction reordering ([#306](https://github.com/ethereum-optimism/specs/issues/306)) saw renewed interest, with a community member offering to collaborate on the design document.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the multi-repository effort to implement the `min-base-fee` feature, with draft pull requests shared across `reth`, `op-alloy`, and `optimism` to gather early feedback. The discussion on issue [#306](https://github.com/ethereum-optimism/specs/issues/306) also highlighted community engagement, with an offer to collaborate on a new design. Internally, the decision to remove the `CODEOWNERS` file was noted as a response to team feedback, demonstrating a focus on improving internal development workflows.", "2025-09-04T03:38:17.844Z"]
["ethereum-optimism/specs_week_2025-08-03", "ethereum-optimism/specs", "week", "2025-08-03", "# ethereum-optimism/specs Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on protocol specification and governance process maintenance. A new pull request was introduced to define block calldata limits, representing forward movement on core protocol rules. Additionally, the team demonstrated responsiveness to community feedback by investigating and resolving an issue related to project flagging within the RetroPGF process. Overall, it was a period of foundational work and process refinement rather than merged feature development.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged this week. However, work was initiated on a new protocol specification:\n\n- A new proposal, [#746](https://github.com/ethereum-optimism/specs/pull/746), was opened to add a formal specification for block calldata limits. This work is currently awaiting review and aims to solidify a key constraint within the protocol.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on resolving a community-reported problem within the RetroPGF governance process.\n\n- **Closed Issues:** An issue concerning the RetroPGF process, [#72](https://github.com/ethereum-optimism/specs/issues/72), was resolved. A community member reported that their project, \"World Mini Apps,\" had been inappropriately flagged. The issue was acknowledged, investigated, and confirmed as resolved by the team.\n- **New & Active Issues:** No new issues were opened during this period, and no other significant active issues were reported.\n\n## \ud83d\udcac Community & Collaboration\nThe primary collaboration observed this week was the interaction between the community and maintainers regarding the RetroPGF process. The discussion in issue [#72](https://github.com/ethereum-optimism/specs/issues/72) highlighted a healthy feedback loop, where a user (\"sexychinese\") reported a problem and a maintainer (\"ccerv1\") provided updates and confirmed the resolution. This interaction underscores the project's commitment to community governance and public goods funding mechanisms.", "2025-09-04T03:38:43.762Z"]
["ethereum-optimism/optimism_week_2025-08-03", "ethereum-optimism/optimism", "week", "2025-08-03", "# ethereum-optimism/optimism Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by the initiation of new work across the stack, with a strong focus on performance, robustness, and developer tooling. While no major features were completed, numerous pull requests were opened to enhance core components like `op-batcher` and `op-challenger`, and to investigate cost optimizations. The team demonstrated responsiveness to community feedback by quickly resolving an issue related to OP allocation flagging. Overall, the period reflects a phase of proactive maintenance, optimization, and groundwork for future development.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no pull requests were merged this week, significant new work was proposed across several key areas:\n\n-   **Performance and Optimization:** Several new initiatives aim to improve efficiency. Proposals include using `bytes.Buffer` in `op-service` ([#16964](https://github.com/ethereum-optimism/optimism/pull/16964)), preallocating resources in `op-challenger` ([#16978](https://github.com/ethereum-optimism/optimism/pull/16978)), and optimizing the Kurtosis devnet with preallocated slices ([#16990](https://github.com/ethereum-optimism/optimism/pull/16990)). A spike was also started to analyze the calldata footprint cost ([#16970](https://github.com/ethereum-optimism/optimism/pull/16970)).\n\n-   **`op-batcher` Enhancements:** Work began on improving the robustness and observability of the `op-batcher`. One PR introduces a metric to track channel closure reasons ([#16984](https://github.com/ethereum-optimism/optimism/pull/16984)), while another aims to make the AltDA `SetInput` function more resilient through per-request context and backoff mechanisms ([#16985](https://github.com/ethereum-optimism/optimism/pull/16985)).\n\n-   **Tooling and Code Refinements:** Efforts to refine development tools and code correctness were initiated. A fix was proposed for L1 validator wallet generation to ensure it correctly uses the `Count` field from `mnemonics.yaml` ([#16953](https://github.com/ethereum-optimism/optimism/pull/16953)). Another PR addresses an issue with method name translation to ensure accuracy when parameters differ ([#16974](https://github.com/ethereum-optimism/optimism/pull/16974)).\n\n-   **Dependency Management:** Routine dependency maintenance continued with several automated pull requests to update Go modules, including `go-multiaddr` ([#16980](https://github.com/ethereum-optimism/optimism/pull/16980]), `go-connections` ([#16982](https://github.com/ethereum-optimism/optimism/pull/16982]), `golang.org/x/mod` ([#16983](https://github.com/ethereum-optimism/optimism/pull/16983]), and `w3` ([#16989](https://github.com/ethereum-optimism/optimism/pull/16989)).\n\n-   **Documentation:** A minor fix for the documentation's Table of Contents was proposed in PR [#16956](https://github.com/ethereum-optimism/optimism/pull/16956).\n\n## \ud83d\udc1b Issues & Triage\n-   **Closed Issues:**\n    -   A long-standing developer tooling issue ([#49](https://github.com/ethereum-optimism/optimism/issues/49)) concerning direct vs. transitive dependencies was closed, marking progress in improving the developer experience.\n    -   An issue raised by a community member regarding a project being inappropriately flagged for OP allocation ([#72](https://github.com/ethereum-optimism/optimism/issues/72)) was swiftly investigated and resolved by the team.\n\n-   **New & Active Issues:**\n    -   No significant new issues were opened this week, apart from the quickly resolved allocation issue mentioned above.\n    -   An older documentation issue ([#1675](https://github.com/ethereum-optimism/optimism/issues/1675)) saw unusual activity, with a user posting the same wallet address multiple times in the comments. The purpose of these comments is unclear from the provided data.\n\n## \ud83d\udcac Community & Collaboration\nThe week highlighted a positive feedback loop between the project and its community. In issue [#72](https://github.com/ethereum-optimism/optimism/issues/72), a user (\"sexychinese\") reported a problem with the OP allocation process, and team member \"ccerv1\" acknowledged and confirmed its resolution within the same day. This interaction demonstrates the team's commitment to addressing community concerns promptly. Otherwise, development activity was primarily driven by core contributors and automated dependency updates, with no other significant collaborative discussions noted in the reports.", "2025-09-04T03:38:45.149Z"]
["ethereum-optimism/superchain-registry_week_2025-08-03", "ethereum-optimism/superchain-registry", "week", "2025-08-03", "# ethereum-optimism/superchain-registry Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on expanding the Superchain ecosystem with the proposed addition of a new testnet. Development focused on initiating this new integration, with a pull request opened to add the Sova Sepolia Testnet. Based on the available data, there were no completed features, bug fixes, or closed issues during this period, indicating a week of foundational work rather than final deliverables.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo features or bug fixes were completed during the reporting period. The primary development activity was the initiation of a new chain integration.\n\n**New Chain Integration**\n*   Work has begun to add the Sova Sepolia Testnet to the Superchain registry. A pull request, [#1094](https://github.com/ethereum-optimism/superchain-registry/pull/1094), was opened to facilitate this addition.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was minimal this week, with no new issues opened and none being closed.\n\n*   **Closed Issues:** No issues were resolved during this period.\n*   **New & Active Issues:** No new issues were opened. Discussion continued on the active documentation issue [#1675](https://github.com/ethereum-optimism/superchain-registry/issues/1675), which requests clarification on PR titles. The issue saw several comments from a user consisting solely of the repeated hash `0xaed4b681fb202fed67f47e8580303f871db37ada`, though the context for these comments is unclear.\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction was observed through the submission of the pull request for the Sova Sepolia Testnet ([#1094](https://github.com/ethereum-optimism/superchain-registry/pull/1094)) and the ongoing comments in issue [#1675](https://github.com/ethereum-optimism/superchain-registry/issues/1675). The activity suggests external interest in both expanding the Superchain and clarifying contribution guidelines.", "2025-09-04T03:38:44.919Z"]
["ethereum-optimism/docs_week_2025-08-10", "ethereum-optimism/docs", "week", "2025-08-10", "# ethereum-optimism/docs Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis week saw no new code contributions or merged pull requests. Instead, the focus was on strategic planning, discussion, and re-evaluation of existing work items. Key efforts involved reviving and tracking progress on testing infrastructure for the Superchain, including `op-challenger` and `op-sync-tester`. Additionally, significant discussions continued around future protocol enhancements like the Data Availability Footprint Limit and tooling upgrades such as Go 1.24 support in Cannon, indicating a period of groundwork for upcoming development cycles.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features, bug fixes, or other code changes were merged into the repository this week. All development activity was centered on discussions and management of existing issues.\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were created and no existing issues were closed this week. The primary activity involved re-opening and discussing existing issues to track necessary future work.\n\n- **New & Active Issues:**\n    - **Testing Infrastructure:** A significant portion of the week's activity focused on bolstering testing capabilities. Issue [#15948](https://github.com/ethereum-optimism/docs/issues/15948) was re-opened to continue work on `op-challenger` acceptance tests for interop chains, ensuring it can properly dispute invalid proposals. Similarly, [#16700](https://github.com/ethereum-optimism/docs/issues/16700) was re-opened to track the implementation of `eth` namespace support in `op-sync-tester`.\n    - **Protocol Design & Tooling:** Discussions continued on the Data Availability Footprint Limit design ([#17009](https://github.com/ethereum-optimism/docs/issues/17009)) and specification ([#17087](https://github.com/ethereum-optimism/docs/issues/17087)). The issue for adding Go 1.24 support in Cannon ([#14760](https://github.com/ethereum-optimism/docs/issues/14760)) was also re-opened to track progress.\n    - **Strategic Deprioritization:** In the discussion for an \"Event Call Graph\" ([#16874](https://github.com/ethereum-optimism/docs/issues/16874)), it was noted that the team is leaning towards removing the entire event system, making the associated PR unlikely to be merged.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was characterized by internal planning and strategic alignment rather than broad community contributions. Discussions were concentrated within specific issues, with team members like `mbaxter` and `pcw109550` re-opening issues to organize and track future work. The focused discussions on core protocol design and testing infrastructure suggest a period of internal coordination to prepare for the next phase of development.", "2025-09-04T03:38:58.186Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-08-10", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-08-10", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was centered on planning, specification refinement, and architectural discussions rather than code implementation. Key conversations involved the potential deprecation of the event system, which surfaced during a review of a community contribution. Progress was made in defining the `min-base-fee` feature by creating a dedicated issue to analyze its state growth impact. Additionally, a new token was proposed for the Superchain List, and discussions continued on improving the testing infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major features or bug fixes were merged this week, a new pull request was opened to expand the Superchain ecosystem:\n\n- **Superchain Token List Expansion:** A proposal was submitted to add the $PAGE token and its logo to the Superchain List ([#1186](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1186)).\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed this week. The focus was on triaging new issues and advancing discussions on existing ones, highlighting future work on protocol specifications, testing, and internal tooling.\n\n- **Closed Issues:** No issues were closed during this period.\n\n- **New & Active Issues:**\n    - **`min-base-fee` Specification:** To better quantify the impact of the `min-base-fee` feature, a new issue ([#316](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/316)) was opened to track the state growth estimation, separating it from the main specification ticket ([#742](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/742)). The estimate projects approximately 16MB of state growth per year.\n    - **Event System Deprecation:** A significant discussion occurred in [#16874](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16874) regarding an event call graph. While a contributor offered a PR, the team indicated a preference for removing the entire event system, suggesting the contribution might not be merged but could still inform the removal process.\n    - **Testing Infrastructure:** Discussion continued on integrating `op-test-sequencer` into the devnet environment to enable reorg tests ([#15265](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15265)).\n    - **Internal Task Migration:** A new issue ([#1162](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1162)) was created to track the migration of blacklist games tasks and the removal of old FP recovery tasks.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted transparent communication and collaboration on key architectural decisions and tasks.\n\n- In the discussion around the event system ([#16874](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16874)), team member @pcw109550 provided clear feedback to contributor @sashass1315 about the project's strategic direction, even though it meant a submitted PR might not be merged.\n- On the new task migration issue ([#1162](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1162)), contributor @blmalone proactively offered assistance with the work, demonstrating a collaborative spirit within the community.", "2025-09-04T03:39:01.107Z"]
["ethereum-optimism/specs_week_2025-08-10", "ethereum-optimism/specs", "week", "2025-08-10", "# ethereum-optimism/specs Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on specification development and bolstering the project's testing infrastructure. While no new code was merged, significant progress was made in planning for future network upgrades. A key development was the introduction of a pull request for the Jovian release's Data Availability (DA) footprint. Concurrently, discussions around the `min-base-fee` feature led to the creation of a dedicated issue for estimating its state growth. A notable trend was the re-opening of several issues related to testing, indicating a concerted effort to ensure the completeness and robustness of `op-challenger`, `op-sync-tester`, and `op-test-sequencer`.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile there were no merged pull requests this week, work began on a significant specification for a future release.\n\n*   **Jovian Release Specification**\n    *   A new pull request, [#748](https://github.com/ethereum-optimism/specs/pull/748), was opened to define the \"DA Footprint\" for the upcoming Jovian release. This marks the beginning of formalizing specifications for the next major network upgrade.\n\n## \ud83d\udc1b Issues & Triage\nThe focus this week was on refining existing work and planning for future features, with no issues being closed. Activity was concentrated on creating new targeted issues and revisiting existing ones to ensure all requirements are met.\n\n*   **Closed Issues:**\n    *   No issues were closed this week.\n\n*   **New & Active Issues:**\n    *   **`min-base-fee` State Growth:** A new issue, [#316](https://github.com/ethereum-optimism/specs/issues/316), was created to formally estimate the state growth impact of the proposed `min-base-fee` feature. This task was spun out of the main specification discussion ([#742](https://github.com/ethereum-optimism/specs/issues/742)) to ensure the feature's resource implications are thoroughly analyzed.\n    *   **Testing Infrastructure Refinements:** A clear theme emerged around improving test coverage and capabilities. Several key issues were re-opened to address outstanding tasks:\n        *   **`op-challenger` Acceptance Tests ([#15948](https://github.com/ethereum-optimism/specs/issues/15948))**: Re-opened to address remaining TODOs for testing dispute resolution on interop chains.\n        *   **`op-sync-tester` RPC Support ([#16700](https://github.com/ethereum-optimism/specs/issues/16700))**: Re-opened to track the implementation of test cases for serving `eth` namespace methods.\n        *   **`op-test-sequencer` Integration ([#15265](https://github.com/ethereum-optimism/specs/issues/15265))**: Ongoing discussion highlighted the component's necessity for running reorg tests in the devnet environment.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity demonstrates a collaborative process of refinement and due diligence. The re-opening of issues [#15948](https://github.com/ethereum-optimism/specs/issues/15948) and [#16700](https://github.com/ethereum-optimism/specs/issues/16700) by different team members points to a culture of internal review and a commitment to completing all work items thoroughly. Furthermore, the decision to break out the state growth estimation for `min-base-fee` into a separate issue ([#316](https://github.com/ethereum-optimism/specs/issues/316)) from the main discussion ([#742](https://github.com/ethereum-optimism/specs/issues/742)) showcases a structured approach to tackling complex feature specifications.", "2025-09-04T03:39:06.268Z"]
["ethereum-optimism/infra_week_2025-08-10", "ethereum-optimism/infra", "week", "2025-08-10", "# ethereum-optimism/infra Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week focused on planning future improvements to the project's testing infrastructure. No new code was merged or pull requests opened. The primary activity involved creating new issues to track the porting of several existing `devnet sdk` tests to the Devstack environment, signaling a push towards consolidating and enhancing development tooling.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged this week, and no new technical developments were completed.\n\n## \ud83d\udc1b Issues & Triage\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:** The week's focus on planning was reflected in the creation of three new issues aimed at improving the Devstack testing environment. This work involves porting existing tests from the `devnet sdk` to Devstack to enhance test coverage and consistency. The new issues are:\n    - Porting `TestBalanceSnapshot` ([#442](https://github.com/ethereum-optimism/infra/issues/442))\n    - Porting `TestInteropReadiness` ([#443](https://github.com/ethereum-optimism/infra/issues/443))\n    - Porting `TestSmokeTestFailure` and `TestInteropSystemNoop` ([#444](https://github.com/ethereum-optimism/infra/issues/444))\n\n## \ud83d\udcac Community & Collaboration\nCommunity and collaborative activity was minimal this week. The work was limited to the creation of new issues for future development, with no pull requests or significant issue discussions taking place.", "2025-09-04T03:39:20.385Z"]
["ethereum-optimism/superchain-ops_week_2025-08-10", "ethereum-optimism/superchain-ops", "week", "2025-08-10", "# ethereum-optimism/superchain-ops Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on improving the developer experience and managing technical debt. A key initiative was opened to enhance the stability of the development workflow by addressing intermittent failures in forge scripts. Additionally, planning for future refactoring work began with the creation of an issue to migrate and clean up Fault Proof (FP) recovery tasks. Progress was also noted on an active issue related to event flow tracing, indicating steady work on foundational tooling.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on foundational stability rather than new features.\n\n- **Developer Workflow Improvements**\n  - To combat intermittent failures that slow down development, a new pull request ([#1161](https://github.com/ethereum-optimism/superchain-ops/pull/1161)) was opened. This change introduces retries for forge scripts, aiming to create a more resilient and reliable workflow for contributors.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved planning for future cleanup and advancing discussions on existing technical challenges.\n\n- **Closed Issues:**\n  - No issues were closed during this period.\n\n- **New & Active Issues:**\n  - **Task Migration:** A new issue, [#1162](https://github.com/ethereum-optimism/superchain-ops/issues/1162), was created to track the migration of blacklist games tasks to a new template framework. This effort also includes the removal of old FP recovery tasks, signaling a move towards code cleanup and modernization.\n  - **Event Tracing:** Discussion continued on issue [#16874](https://github.com/ethereum-optimism/superchain-ops/issues/16874), which concerns adding logic to trace event flow. A contributor noted that a pull request has been submitted for review, moving this task forward.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the proactive planning and communication around new and active issues. The creation of issue [#1162](https://github.com/ethereum-optimism/superchain-ops/issues/1162) included an offer of assistance for synchronous and asynchronous work, as well as for PR review, fostering a supportive environment for tackling the migration task. Similarly, the update on issue [#16874](https://github.com/ethereum-optimism/superchain-ops/issues/16874) demonstrates clear communication as a contributor advanced the discussion by providing a concrete PR for the team to review.", "2025-09-04T03:39:13.385Z"]
["ethereum-optimism/community-hub_week_2025-08-17", "ethereum-optimism/community-hub", "week", "2025-08-17", "# ethereum-optimism/community-hub Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on maintenance, cleanup, and strategic planning. Significant progress was made in resolving long-standing technical debt, most notably by closing key issues related to proof system acceptance testing for interop chains. The team also streamlined documentation by removing outdated contribution guides. While no new features were shipped, active discussions around improving contract verification and validation testing signal a focus on enhancing the robustness and developer experience of the core infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe sole code-related changes this week involved repository maintenance and cleanup.\n\n- **Documentation Cleanup:** Outdated documentation files concerning contributor paths were removed to streamline the `pages/contribute` section. This included the deletion of `ambassador-req.mdx` and `translators.mdx`, with corresponding updates to the navigation metadata ([#1174](https://github.com/ethereum-optimism/community-hub/pull/1174), [#1175](https://github.com/ethereum-optimism/community-hub/pull/1175), [#1176](https://github.com/ethereum-optimism/community-hub/pull/1176)).\n\n## \ud83d\udc1b Issues & Triage\nThe focus this week was on closing out completed work and advancing discussions on future improvements. No new issues were opened.\n\n- **Closed Issues:** Several important issues were closed, marking the completion of significant tasks:\n    - **Proof System Acceptance Testing:** Issues for interop acceptance testing ([#15946](https://github.com/ethereum-optimism/community-hub/issues/15946)) and `op-challenger` acceptance tests ([#15948](https://github.com/ethereum-optimism/community-hub/issues/15948)) were closed, indicating a milestone in validating the proof system.\n    - **System Maintenance:** An issue tracking the removal of events from the event system was closed ([#17001](https://github.com/ethereum-optimism/community-hub/issues/17001)). Additionally, an issue regarding test target setup was closed, noting a strategic shift from Kurtosis to Sysgo for network testing ([#375](https://github.com/ethereum-optimism/community-hub/issues/375)).\n\n- **New & Active Issues:** Discussions on active issues point to upcoming development priorities:\n    - **Contract Verification:** In [#14813](https://github.com/ethereum-optimism/community-hub/issues/14813), discussion continues on improving contract verification. The current plan is to leverage `forge verify-contract` once forge binary support is available, which would reduce custom code and streamline the verification process.\n    - **Validation Test Planning:** A discussion is planned to review the scope of validation tests for chain configuration, as tracked in [#686](https://github.com/ethereum-optimism/community-hub/issues/686). This follows earlier suggestions to formalize and improve the testability of TOML file parsing.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was primarily visible through strategic discussions within issues rather than through code reviews. The planning conversation in [#686](https://github.com/ethereum-optimism/community-hub/issues/686) between `alfonso-op`, `@bitwiseguy`, and `Tess` highlights the team's coordinated effort to define the scope of future validation testing. Similarly, the ongoing dialogue in [#14813](https://github.com/ethereum-optimism/community-hub/issues/14813) shows a focus on refining core developer tooling. The week's activity reflects a period of internal alignment and planning for future work.", "2025-09-04T03:39:29.194Z"]
["ethereum-optimism/optimism_week_2025-08-10", "ethereum-optimism/optimism", "week", "2025-08-10", "# ethereum-optimism/optimism Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused heavily on internal refinement, tooling enhancements, and laying the groundwork for significant future features. While no major features were merged, substantial progress was made through new pull requests aimed at refactoring the `op-node` event system for simplicity and performance. Key new initiatives were kicked off to define Data Availability (DA) footprint limits and advance the Dispute Game with \"Multi-proofs.\" The team also addressed developer experience by improving test stability, standardizing development environments, and triaging user-reported issues with the `op-proposer`.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major pull requests were merged this week, a significant amount of new work was initiated across the stack, focusing on refactoring, performance, and tooling.\n\n-   **`op-node` and Event System Refactoring:** A clear trend emerged towards simplifying the `op-node`'s internal logic. Multiple pull requests were opened to remove event system components, such as `driver.StepEvent` ([#17024](https://github.com/ethereum-optimism/optimism/pull/17024), [#17097](https://github.com/ethereum-optimism/optimism/pull/17097)) and other events ([#17100](https://github.com/ethereum-optimism/optimism/pull/17100)). This effort is complemented by improvements to logging ([#17022](https://github.com/ethereum-optimism/optimism/pull/17022)) and context handling ([#17026](https://github.com/ethereum-optimism/optimism/pull/17026)), signaling a strategic move to streamline the service.\n\n-   **Development and Testing Infrastructure:** Efforts were made to improve the developer workflow and test reliability. This included adding lockfiles for `mise` ([#17017](https://github.com/ethereum-optimism/optimism/pull/17017)) and Cargo ([#17020](https://github.com/ethereum-optimism/optimism/pull/17020]) to standardize environments. A fix was proposed to resolve flakiness in acceptance tests during initialization ([#17103](https://github.com/ethereum-optimism/optimism/pull/17103)), and work began on adding local `op-geth` images for Kurtosis ([#17030](https://github.com/ethereum-optimism/optimism/pull/17030)).\n\n-   **Performance and Bug Fixes:** Several pull requests targeted specific improvements. A fix was opened for an HTTP response body leak during Etherscan verification polling ([#16992](https://github.com/ethereum-optimism/optimism/pull/16992)). Performance was also a focus, with a refactor to optimize nested `fmt.Sprintf` calls ([#17102](https://github.com/ethereum-optimism/optimism/pull/17102)).\n\n-   **New Feature Prototypes:** Work on new functionality was initiated, including a PR to introduce disabled and unlimited controller types to the `op-batcher` ([#17067](https://github.com/ethereum-optimism/optimism/pull/17067)) and another to add a network upgrade transaction feature ([#17062](https://github.com/ethereum-optimism/optimism/pull/17062)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the closure of a long-standing analysis task and the creation of numerous issues that outline the project's near-term roadmap, particularly around DA limits, tooling, and the dispute game.\n\n-   **Closed Issues:** The primary closure was issue [#311](https://github.com/ethereum-optimism/optimism/issues/311), marking the completion of the failure modes analysis for `min-base-fee`. The analysis is now documented, concluding a significant research task.\n\n-   **New & Active Issues:**\n    -   **DA Footprint Limit Initiative:** A major new workstream was established with a series of issues to track the implementation of Data Availability footprint limits. This includes a general tracking issue ([#16998](https://github.com/ethereum-optimism/optimism/issues/16998)), productionizing hackathon work ([#16999](https://github.com/ethereum-optimism/optimism/issues/16999)), and writing the design document ([#17009](https://github.com/ethereum-optimism/optimism/issues/17009)) and specification ([#17087](https://github.com/ethereum-optimism/optimism/issues/17087)).\n    -   **Dispute Game and Security:** Planning for the next phase of the Dispute Game began with an issue for \"Multi-proofs\" ([#17013](https://github.com/ethereum-optimism/optimism/issues/17013)), which aims to combine multiple proof systems. A related issue ([#17069](https://github.com/ethereum-optimism/optimism/issues/17069)) was created to track the audit process for the Dispute Game Creator Pattern refactor.\n    -   **Tooling and Test Enhancements:** Several issues were opened to improve developer tools. The `op-up` tool is set for an initial release and enhancements ([#17003](https://github.com/ethereum-optimism/optimism/issues/17003), [#17005](https://github.com/ethereum-optimism/optimism/issues/17005), [#17076](https://github.com/ethereum-optimism/optimism/issues/17076)). The `op-sync-tester` is slated for performance improvements through caching and batching ([#17046](https://github.com/ethereum-optimism/optimism/issues/17046), [#17047](https://github.com/ethereum-optimism/optimism/issues/17047)).\n    -   **`op-proposer` Instability:** User-facing issues with the `op-proposer` continue to be a focus. A previously closed issue ([#13502](https://github.com/ethereum-optimism/optimism/issues/13502)) received new reports, and a new issue ([#17042](https://github.com/ethereum-optimism/optimism/issues/17042)) was opened for similar `GameAlreadyExists` errors.\n    -   **Event System Deprecation:** A key strategic discussion occurred in [#16874](https://github.com/ethereum-optimism/optimism/issues/16874), where the team indicated a preference for removing the `op-service` event system entirely. This provides important context for the multiple PRs opened this week to remove event-related code.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was characterized by active discussions on", "2025-09-04T03:39:22.005Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-08-17", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-08-17", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the stability and reliability of core infrastructure. A significant milestone was achieved with the confirmation that Flashblocks are now fully enabled and operational on all Sunnyside sequencers for Sepolia, completing a key infrastructure upgrade. Concurrently, work was done to improve the robustness of the CI/CD pipeline by implementing a more resilient RPC provider factory to mitigate timeouts and rate-limiting issues. While development was focused on stability, active issue triage continued, addressing a new CI logging problem and seeing community interest in resolving older RPC-related bugs.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on bug fixes and reliability improvements rather than new features.\n\n- **RPC Provider Reliability in CI/CD**\n  To improve the stability of the CI/CD pipeline, a bug fix was merged to make RPC communication more resilient. PR [#1187](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1187) introduced a robust provider factory that helps prevent failures from RPC timeouts and rate limiting by providing fallback mechanisms when primary endpoints fail.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week saw the resolution of a major infrastructure task and the prompt investigation of a new CI-related problem.\n\n- **Closed Issues:**\n  - **Flashblocks on Sepolia Sequencers:** The primary resolution was the closure of issue [#16688](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16688), which confirmed that all Sunnyside sequencers (both voting and non-voting) for Sepolia are successfully running with Flashblocks enabled and connected to the websocket proxy. Failover capabilities were also successfully tested.\n\n- **New & Active Issues:**\n  - **Missing CI Test Logs:** A new issue, [#17151](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17151), was opened regarding missing logs for failed `op-acceptance-tests`. A maintainer quickly identified that the tests were running in a workflow not designed to capture these specific logs and noted that work is underway to move the tests, which should resolve the issue.\n  - **Ongoing Discussions:** Active discussion continued in [#17001] concerning the refinement of the event system. Additionally, an older issue ([#389](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/389)) regarding RPC response content types received a comment from a community member asking how to contribute a fix, signaling external interest in helping improve the project.\n\n## \ud83d\udcac Community & Collaboration\n- The resolution of the Flashblocks issue ([#16688](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16688)) demonstrated effective coordination between team members to validate and close out a critical infrastructure task.\n- A notable instance of community engagement occurred on issue [#389](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/389), where a user proactively sought guidance on how to contribute a solution, highlighting interest from the wider community in improving the codebase.\n- The quick diagnostic response from a maintainer on the newly opened issue [#17151](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17151) showcases an active and responsive triage process within the team.", "2025-09-04T03:39:39.875Z"]
["ethereum-optimism/docs_week_2025-08-17", "ethereum-optimism/docs", "week", "2025-08-17", "# ethereum-optimism/docs Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a strong focus on documentation accuracy and usability for both chain operators and developers. Significant effort went into refining core technical explainers, such as the Fault Proofs documentation, and updating critical tutorials to prevent user friction. Key infrastructure progress was also noted with the successful enablement of Flashblocks on Sunnyside sequencers. The team balanced these proactive enhancements with diligent maintenance, closing out monthly metric reports and addressing audit follow-ups.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving the quality, accuracy, and accessibility of the documentation.\n\n- **Operator Documentation Enhancements:** A major push was made to improve resources for chain operators. This included a comprehensive refactor of the `op-challenger` documentation for better clarity ([#1702]), a correction to misleading information in the Fault Proofs Explainer ([#1706]), and the addition of a promotional banner to operator pages to increase visibility of the one-click deploy site ([#1719]).\n\n- **Developer Tutorial and Tooling Updates:** Several updates were merged to improve the developer experience. An outdated `chain-dev-net.mdx` tutorial was fixed, unblocking users from launching a devnet ([#1714]). The \"Adding a precompile\" tutorial was corrected to ensure compliance with EIP-7587 ([#1715]), and the faucets page was updated with a new Sepolia link and alphabetized for better usability ([#1703]).\n\n- **Documentation Maintenance and Cleanup:** To keep the documentation current, an outdated deprecation notice for Custom Gas Tokens was removed ([#1721]).\n\n- **New Initiatives:** Work has begun on a redesign of the documentation homepage ([#1718]) and the creation of a new `npm-gulp.yml` workflow file ([#1720]).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on resolving infrastructure challenges, closing out administrative tasks, and advancing discussions on long-standing technical items.\n\n- **Closed Issues:**\n    - **Infrastructure:** A significant issue was closed confirming that Flashblocks are now enabled on all Sunnyside sequencers for Sepolia, with failover successfully tested ([#16688]).\n    - **Event System:** An issue concerning the removal of two events from the event system was resolved ([#17001]).\n    - **Reporting & Audits:** Monthly metrics reports for July 2025 were closed ([#1707], [#1708]), as was an issue related to the 2024 Q4 audit ([#1713]).\n\n- **New & Active Issues:**\n    - No critical new issues were opened this week.\n    - **Validation Test Refinement ([#686]):** A long-running discussion on adding validation tests for chain configurations saw renewed activity, with a planned meeting to review and prioritize which tests should be implemented.\n    - **RPC Response Content Type ([#389]):** An older issue regarding missing content types in RPC responses received new community interest, with a user inquiring about contributing a fix.\n    - **Missing Test Logs ([#17151]):** An investigation into missing logs for failed `op-acceptance-tests` is ongoing. A potential solution has been identified, which involves moving the tests to a different workflow where logs are properly captured.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the multi-contributor effort to diagnose and resolve complex issues. The discussion around missing test logs in [#17151] involved several team members working together to pinpoint the cause. Similarly, the plan to hold a dedicated meeting for issue [#686] shows a collaborative approach to tackling long-standing technical debt. The external interest in contributing a fix for issue [#389] highlights healthy community engagement with the project's ongoing technical challenges.", "2025-09-04T03:39:41.461Z"]
["ethereum-optimism/infra_week_2025-08-17", "ethereum-optimism/infra", "week", "2025-08-17", "# ethereum-optimism/infra Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a strong focus on stabilization and cleanup, particularly within the project's testing infrastructure. A significant code refactoring in `op-acceptor` removed over 600 lines of unused code, improving maintainability. Numerous long-standing issues related to acceptance testing, devnet tooling, and the proofs system were closed, signaling the completion of key testing milestones. While new feature development was minimal, a work-in-progress pull request for a consensus-aware proxy poller was initiated, and active discussions continued on improving validation test strategies and contract verification tooling.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development effort this week involved significant code refactoring and the start of a new feature.\n\n- **`op-acceptor` Codebase Optimization:** A major cleanup effort within the `op-acceptor` component resulted in the removal of approximately 600 lines of unused code identified by static analysis. This refactoring improves the codebase's footprint and maintainability ([#447](https://github.com/ethereum-optimism/infra/pull/447)).\n- **New Consensus Layer Poller (WIP):** A new work-in-progress pull request was opened to introduce a `consensus_aware_consensus_layer proxyd poller`. This feature is currently under active development ([#449](https://github.com/ethereum-optimism/infra/pull/449)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw substantial progress in resolving outstanding issues, with a large number of closures focused on testing and infrastructure.\n\n- **Closed Issues:**\n    - **Testing & Devstack Migration:** Several issues related to porting tests from the legacy devnet SDK to Devstack were resolved, including `TestBalanceSnapshot` ([#442](https://github.com/ethereum-optimism/infra/issues/442)) and `TestInteropReadiness` ([#443](https://github.com/ethereum-optimism/infra/issues/443)).\n    - **Acceptance Test Cleanup:** Key issues for the proofs system were closed, marking the completion of interop acceptance testing ([#15946](https://github.com/ethereum-optimism/infra/issues/15946), [#15948](https://github.com/ethereum-optimism/infra/issues/15948)). An issue to integrate test setup/teardown into `op-acceptor` was also closed as focus shifts from Kurtosis to Sysgo ([#375](https://github.com/ethereum-optimism/infra/issues/375)).\n    - **Infrastructure & Feature Completion:** The task to enable Flashblocks on Sunnyside sequencers for Sepolia was completed ([#16688](https://github.com/ethereum-optimism/infra/issues/16688]). A persistent devnet faucet wallet for `netchef` was implemented ([#396](https://github.com/ethereum-optimism/infra/issues/396)), and an event system cleanup was finalized ([#17001](https://github.com/ethereum-optimism/infra/issues/17001)).\n\n- **New & Active Issues:**\n    - **Missing Test Logs:** A new issue was opened regarding missing logs for failed acceptance tests ([#17151](https://github.com/ethereum-optimism/infra/issues/17151)). A quick response clarified that the tests are being moved to a different workflow, which is expected to resolve the problem.\n    - **Validation Test Strategy:** Discussion continued on improving validation test coverage ([#686](https://github.com/ethereum-optimism/infra/issues/686)), with recent comments suggesting a review of previously unplanned tests to see if they should be implemented.\n    - **RPC Content Type:** An issue regarding missing content type headers in RPC responses ([#389](https://github.com/ethereum-optimism/infra/issues/389)) saw a community member ask for guidance on how to contribute a fix.\n    - **Contract Verification:** The conversation on improving contract verification ([#14813](https://github.com/ethereum-optimism/infra/issues/14813)) is leaning towards leveraging `forge verify-contract` in the future to reduce custom code.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active discussions on several key issues. Team members like `alfonso-op`, `bitwiseguy`, and `geoknee` are coordinating on the long-term strategy for validation testing in issue [#686](https://github.com/ethereum-optimism/infra/issues/686). The prompt clarification from `scharissis` on the new test log issue ([#17151](https://github.com/ethereum-optimism/infra/issues/17151)) demonstrates responsive maintenance. Additionally, community engagement was highlighted by contributor `OBlackmon3` proactively seeking to help resolve the RPC content type issue ([#389](https://github.com/ethereum-optimism/infra/issues/389)).", "2025-09-04T03:39:47.286Z"]
["ethereum-optimism/op-analytics_week_2025-08-17", "ethereum-optimism/op-analytics", "week", "2025-08-17", "# ethereum-optimism/op-analytics Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on enhancing data integrity and core infrastructure. A critical bug fix was merged to correct the stablecoin data schema, ensuring data accuracy, while new work was initiated to evolve this schema further. On the infrastructure front, a significant milestone was reached with the confirmation that flashblocks are now successfully enabled on all Sunnyside sequencers for Sepolia. Efforts also included code cleanup and addressing issues related to test logging and outdated documentation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving the data schema and general code quality.\n\n- **Stablecoin Schema Integrity:** A key bug fix ([#1725](https://github.com/ethereum-optimism/op-analytics/pull/1725)) was implemented to ensure the successful execution of the stablecoin schema, directly addressing data integrity. This was complemented by a new proposal to evolve the stablecoin schema ([#1724](https://github.com/ethereum-optimism/op-analytics/pull/1724)), indicating a continued focus on refining this data source.\n\n- **Code Maintenance:** A pull request ([#1726](https://github.com/ethereum-optimism/op-analytics/pull/1726)) was opened for general code cleanup, aiming to improve readability by removing redundant words from the codebase.\n\n## \ud83d\udc1b Issues & Triage\nIssue management saw the resolution of key infrastructure and tooling problems, while discussion continues on content audits.\n\n- **Closed Issues:**\n    - **Flashblocks on Sunnyside:** The effort to enable flashblocks on Sunnyside sequencers was successfully closed ([#16688](https://github.com/ethereum-optimism/op-analytics/issues/16688)). It was confirmed that all voting and non-voting sequencers for Sepolia are running with Flashblocks, and failover has been tested.\n    - **Acceptance Test Logging:** An issue regarding missing logs in `op-acceptance-tests` was resolved ([#17151](https://github.com/ethereum-optimism/op-analytics/issues/17151)) after the logs were located. Work is ongoing to improve the workflow for better log capture in the future.\n\n- **New & Active Issues:**\n    - No new issues were opened during this period.\n    - The content audit issue ([#1673](https://github.com/ethereum-optimism/op-analytics/issues/1673)) remains active. A recent comment requested clarification on the specific page needing updates for outdated information on MOVE token utility and DAO governance, indicating the triage process is ongoing.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active management of issues. For instance, issue [#1673](https://github.com/ethereum-optimism/op-analytics/issues/1673) saw direct communication from a maintainer (`krofax`) seeking clarification from the issue reporter to move the content audit forward. This highlights the team's process of engaging with community feedback to maintain documentation accuracy.", "2025-09-04T03:39:46.471Z"]
["ethereum-optimism/specs_week_2025-08-17", "ethereum-optimism/specs", "week", "2025-08-17", "# ethereum-optimism/specs Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by the successful completion of major testing and implementation milestones, significantly strengthening the protocol's reliability. The team closed the umbrella issue for proofs interop acceptance testing and confirmed the successful rollout of Flashblocks on all Sunnyside sequencers. Alongside these stability wins, work began on future protocol enhancements with a new proposal for custom gas token support. Ongoing refinements to supervisor and managed node specifications underscore a continued focus on improving interoperability within the Superchain ecosystem.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment efforts focused on both new features and refining existing interoperability specifications.\n\n- **Protocol Feature Enhancement:** A new pull request ([#749](https://github.com/ethereum-optimism/specs/pull/749)) was opened to introduce support for custom gas tokens, signaling a move towards greater flexibility in the protocol's economic model.\n\n- **Interop & Node Specification Refinements:** Several changes were made to improve the clarity and functionality of interoperability components.\n    - A `resetPreInterop` method was added to the managed node specification to enhance interoperation capabilities ([#744](https://github.com/ethereum-optimism/specs/pull/744)).\n    - The supervisor specification (`specs/interop/supervisor.md`) was improved by refactoring data availability error codes ([#724](https://github.com/ethereum-optimism/specs/pull/724)) and linking RPC error codes for better navigation ([#685](https://github.com/ethereum-optimism/specs/pull/685)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several significant, long-standing issues, particularly in the realm of testing and protocol implementation.\n\n- **Closed Issues:**\n    - **Proofs Interop Testing Completed:** The umbrella issue for \"proofs: Interop Acceptance Testing\" ([#15946](https://github.com/ethereum-optimism/specs/issues/15946)) was closed, marking the completion of all sub-tasks. This includes the finalization of `op-challenger` acceptance tests on interop chains ([#15948](https://github.com/ethereum-optimism/specs/issues/15948)).\n    - **Flashblocks Enabled:** It was confirmed that all Sunnyside sequencers for Sepolia are now running with Flashblocks, successfully closing issue [#16688](https://github.com/ethereum-optimism/specs/issues/16688).\n    - **Cleanup and Deprecation:** The event system was cleaned up with the removal of two events ([#17001](https://github.com/ethereum-optimism/specs/issues/17001)). An older issue regarding test target setup was closed, noting a strategic shift away from Kurtosis in favor of Sysgo for network testing ([#375](https://github.com/ethereum-optimism/specs/issues/375)).\n\n- **New & Active Issues:**\n    - No new issues were opened this week.\n    - **Contract Verification Strategy:** A notable discussion on issue [#14813](https://github.com/ethereum-optimism/specs/issues/14813) proposed leveraging the `forge verify-contract` command for contract verification. This approach would reduce custom code by shelling out to `forge`'s capabilities for verification against Etherscan and Blockscout.\n    - **Documentation and RPC:** Discussions continued on updating an outdated audit page ([#1673](https://github.com/ethereum-optimism/specs/issues/1673)) and an older issue regarding missing content types in RPC responses ([#389](https://github.com/ethereum-optimism/specs/issues/389)) saw renewed interest from a contributor asking how to propose a fix.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in active issue discussions involving multiple contributors. The resolution of the event system cleanup ([#17001](https://github.com/ethereum-optimism/specs/issues/17001)) highlighted cross-repository coordination, with participants linking to several merged pull requests in the main `optimism` repository. Furthermore, the strategic suggestion on the contract verification issue ([#14813](https://github.com/ethereum-optimism/specs/issues/14813)) and a contributor's inquiry about fixing an RPC issue ([#389](https://github.com/ethereum-optimism/specs/issues/389)) demonstrate healthy engagement and proactive problem-solving within the community.", "2025-09-04T03:40:02.152Z"]
["ethereum-optimism/superchain-registry_week_2025-08-17", "ethereum-optimism/superchain-registry", "week", "2025-08-17", "# ethereum-optimism/superchain-registry Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by significant progress in bolstering the Superchain's operational stability and testing infrastructure. Key achievements include the successful rollout of flashblocks for all Sunnyside sequencers, enhancing network resilience. The team also closed out several long-standing issues related to the proofs system and acceptance testing, clearing technical debt and improving protocol reliability. Alongside these infrastructure wins, routine maintenance continued with registry updates, and work began on integrating Celo-sepolia, signaling ongoing ecosystem growth.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on registry maintenance and expansion, ensuring the data remains current and the Superchain continues to grow.\n\n- **Registry Data Synchronization:** Codegen results were updated to synchronize `chainList.json`, `chainList.toml`, and `superchain/extra/addresses/addresses.json` with the latest onchain data, ensuring the registry's accuracy ([#1098](https://github.com/ethereum-optimism/superchain-registry/pull/1098)).\n- **Celo Integration:** A new pull request was opened to integrate Celo-sepolia into the Superchain Registry, representing the initial steps for adding a new chain to the ecosystem ([#1099](https://github.com/ethereum-optimism/superchain-registry/pull/1099)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of major operational and testing issues, while new discussions centered on CI improvements and community contributions.\n\n- **Closed Issues:**\n    - **Flashblocks Enabled:** A critical operational issue was resolved by enabling flashblocks for all Sunnyside sequencers on Sepolia, with successful failover testing completed ([#16688](https://github.com/ethereum-optimism/superchain-registry/issues/16688)).\n    - **Acceptance Testing Milestones:** Several major testing epics were concluded. This includes closing issues for adding proofs system acceptance tests ([#15946](https://github.com/ethereum-optimism/superchain-registry/issues/15946)) and `op-challenger` tests ([#15948](https://github.com/ethereum-optimism/superchain-registry/issues/15948)), marking a significant improvement in test coverage.\n    - **System Cleanup:** An issue to remove two events from the event system was closed ([#17001](https://github.com/ethereum-optimism/superchain-registry/issues/17001)), and an older issue regarding test target setup was closed after a re-evaluation of testing strategies ([#375](https://github.com/ethereum-optimism/superchain-registry/issues/375)).\n\n- **New & Active Issues:**\n    - **Missing CI Logs:** A new issue was opened regarding missing logs in `op-acceptance-tests` ([#17151](https://github.com/ethereum-optimism/superchain-registry/issues/17151)). It was quickly clarified that the tests were running in an incorrect workflow, and a plan is in place to move them, which is expected to resolve the issue.\n    - **RPC Response Bug:** An ongoing discussion regarding missing content types in RPC responses ([#389](https://github.com/ethereum-optimism/superchain-registry/issues/389)) saw renewed community interest, with a user asking for guidance on how to contribute a fix.\n    - **Contract Verification:** A long-term discussion on improving contract verification ([#14813](https://github.com/ethereum-optimism/superchain-registry/issues/14813)) continued, with a proposal to leverage `forge verify-contract` in the future to simplify the process.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in both internal issue resolution and external community engagement. The rapid clarification and proposed solution for the missing test logs issue ([#17151](https://github.com/ethereum-optimism/superchain-registry/issues/17151)) highlighted effective team communication. Furthermore, the event system cleanup ([#17001](https://github.com/ethereum-optimism/superchain-registry/issues/17001)) required linking to work in the main `optimism` repository, demonstrating cross-project coordination. Community interest in contributing was visible in the RPC content type issue ([#389](https://github.com/ethereum-optimism/superchain-registry/issues/389)), where a user actively sought to help resolve a problem affecting tools like wagmi.", "2025-09-04T03:40:12.712Z"]
["ethereum-optimism/ecosystem_week_2025-08-17", "ethereum-optimism/ecosystem", "week", "2025-08-17", "# ethereum-optimism/ecosystem Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant planning and groundwork for future development, with a strong focus on enhancing the user experience across Optimism's web properties. While no new code was merged, a large batch of issues was created to orchestrate a major overhaul of the documentation site, the main optimism.io website, and the developer console. In parallel, progress was made on existing technical discussions, including the refinement of the event system and strategies for improving chain configuration validation. The closure of an issue related to implementing a \"lend\" verb also marked the conclusion of a key planning phase.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged during the reported period, indicating a focus on planning and issue management rather than code implementation.\n\n## \ud83d\udc1b Issues & Triage\nActivity this week centered on defining future work and advancing discussions on existing technical challenges.\n\n- **Closed Issues:**\n    - **Lending Verb Implementation:** The planning phase for a new \"lend\" verb was completed with the closure of issue [#915](https://github.com/ethereum-optimism/ecosystem/issues/915). The issue outlined the necessary steps, including wrapping the Morpho SDK and defining API endpoints for lending operations.\n\n- **New & Active Issues:**\n    - **Major Web Property Overhaul:** A coordinated effort began to modernize Optimism's web presence. New issues were opened to plan a complete homepage redesign ([#925](https://github.com/ethereum-optimism/ecosystem/issues/925)) and a new navigation structure ([#926](https://github.com/ethereum-optimism/ecosystem/issues/926)) for the documentation site. Foundational work for the main optimism.io site is also underway, with issues created to investigate a new CMS architecture ([#930](https://github.com/ethereum-optimism/ecosystem/issues/930)) and a potential migration to React ([#929](https://github.com/ethereum-optimism/ecosystem/issues/929)).\n    - **Branding and UI Enhancements:** To align with a new brand kit, issues were created to update the fonts on `docs.optimism.io` ([#923](https://github.com/ethereum-optimism/ecosystem/issues/923)) and `console.optimism.io` ([#924](https://github.com/ethereum-optimism/ecosystem/issues/924)). Additionally, a new feature to add heatmap metrics to the localchain interface was proposed in [#927](https://github.com/ethereum-optimism/ecosystem/issues/927).\n    - **Ongoing Technical Discussions:**\n        - Progress continues on refining the event system in [#17001](https://github.com/ethereum-optimism/ecosystem/issues/17001), with an expected resolution by August 21.\n        - Discussion was revived in [#686](https://github.com/ethereum-optimism/ecosystem/issues/686) regarding the addition of negative testing for chain configurations to improve validation code robustness.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the strategic planning and discussion around long-standing issues. The creation of a large, interconnected set of issues for the web property redesigns points to a coordinated effort within the front-end team. Furthermore, the discussion on issue [#686](https://github.com/ethereum-optimism/ecosystem/issues/686) involved multiple team members (@alfonso-op, @bitwiseguy, @geoknee, and Tess), highlighting ongoing collaboration to address foundational code quality and testing strategies.", "2025-09-04T03:40:15.883Z"]
["ethereum-optimism/optimism_week_2025-08-17", "ethereum-optimism/optimism", "week", "2025-08-17", "# ethereum-optimism/optimism Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a deep focus on enhancing system robustness and developer velocity. Major strides were made in overhauling the testing infrastructure, particularly with significant upgrades to the `op-sync-tester` and the migration of tests to `op-devstack`. A large-scale refactoring effort successfully simplified the `op-node`'s internal event system, improving code maintainability. Concurrently, development on next-generation fault proofs advanced with the introduction of `FaultDisputeGameV2`, and a concerted push was made to prepare Flashblocks for operational readiness.\n\n## \ud83d\udee0\ufe0f Key Developments\n\n### Testing Infrastructure Overhaul\nA massive effort was dedicated to improving test reliability, coverage, and developer experience.\n- **`op-sync-tester` Enhancements:** The sync tester was significantly upgraded with the addition of Verifier Engine APIs for Isthmus, Ecotone, Fjord, Granite, and Holocene ([#17072]), and the full implementation of the `eth` namespace ([#17117]). It was also integrated into `op-devstack` for initial E2E testing ([#17132]).\n- **Test Migration & Reliability:** Key tests, including operator fee acceptance tests ([#17130]) and interop readiness tests ([#17160]), were migrated from legacy frameworks to the modern `op-devstack`. Several fixes were merged to address flaky tests ([#17106], [#17127]) and optimize CI execution ([#17105], [#17126]).\n- **Dispute Game Testing:** A new `GameHelper` contract was introduced to allow multiple moves in a dispute game within a single transaction, making tests more efficient ([#16994]).\n\n### `op-node` Event System Refactoring\nA major architectural simplification was completed within `op-node` to reduce complexity and improve maintainability. This involved the removal of numerous event types across several pull requests, including:\n- `CrossUpdateRequestEvent`, `CrossUnsafeUpdateEvent`, and `CrossSafeUpdateEvent` ([#17101])\n- `ForceResetEvent` ([#17061])\n- `PromoteSafeEvent`, `PendingSafeRequestEvent`, and `PromoteFinalizedEvent` ([#17161], [#17122], [#17165])\n\n### Fault Proofs & Dispute Games\nProgress was made on the fault proof system with the introduction of `FaultDisputeGameV2` to validate the creator pattern flow ([#16929]), a foundational step for future dispute resolution mechanisms.\n\n### Core Protocol Stability & Enhancements\n- **Bug Fixes:** Critical bugs were resolved, including an `op-devstack` IPv6 binding issue causing connection errors ([#17114]), a resource leak in `op-program`'s `pebbleKV.Get` ([#17166]), and an incorrect execution payload creation bug in `op-service/eth` ([#17154]).\n- **Cannon VM:** The Cannon VM was updated to include i-cache miss metrics for better performance monitoring ([#17123]) and had its version 7 feature flags removed to streamline the codebase ([#17167]).\n- **Batcher Improvements:** The `op-batcher`'s default throttle parameters were adjusted to prevent premature throttling ([#17148]), and work began to improve the accuracy of data availability estimates ([#17104]).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\n- **Testing Milestones:** A significant number of issues related to interoperability and proofs acceptance testing were closed ([#15946], [#15948], [#16168]), marking the completion of a major validation effort for the dispute game system.\n- **Event System Refactor:** The tracking issue for the large-scale event system cleanup was closed ([#17001]), confirming the successful completion of the refactoring initiative.\n- **Flashblocks Progress:** Issues to enable Flashblocks on Sunnyside sequencers ([#16688]) and expose its websocket for RPC providers ([#16811]) were closed, moving the feature closer to production.\n- **Dispute Game Management:** An issue for creating a template to invalidate existing dispute games was resolved ([#16827]), an important step for the fault proofs recovery runbook.\n\n### New & Active Issues\n- **Flashblocks Operationalization:** A new cluster of issues was created to track the final steps for Flashblocks readiness, including public documentation ([#17141]), on-call planning ([#17142]), monitoring and alerts ([#17143]), and infrastructure threat modeling ([#17144]).\n- **Developer Experience Focus:** A clear trend emerged toward improving developer tooling. New issues propose adding usage metrics to `op-up` ([#17164]), standardizing development tools ([#17146]), and enabling `op-deployer` to generate Gnosis Safe wrapped calldata for easier use ([#17173]).\n- **Future Cleanup:** Planning has begun for the eventual removal of Cannon version 7 support and associated feature flags ([#17177], [#17178]), ensuring the codebase remains modern.\n- **Community Engagement:** A long-standing issue regarding a missing `Content-Type` header in RPC responses ([#389]) saw renewed community discussion, with users asking for guidance on how to contribute a fix.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted strong internal collaboration, particularly on the multi-PR effort to refactor the `op-node` event system ([#17001]). The coordinated work required to remove several interconnected events demonstrated a focused push toward architectural simplification. Similarly, the incremental enhancements to the `op-sync-tester` across multiple PRs show a cohesive strategy to bolster the project's testing capabilities. The renewed activity on older issues like [#389] indicates healthy engagement from the wider community, with contributors actively looking for ways to resolve long-standing problems.", "2025-09-04T03:40:17.487Z"]
["ethereum-optimism/community-hub_week_2025-08-24", "ethereum-optimism/community-hub", "week", "2025-08-24", "# ethereum-optimism/community-hub Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by strategic refinement and planning, with a focus on prioritizing impactful work and cleaning up the backlog. While direct code contributions involved minor but important updates to community hub content and governance documentation, significant progress was made in discussions. Key decisions included deprioritizing flashblocks support in Kurtosis and several `op-up` enhancements to focus resources elsewhere. A major new initiative, the \"Forge Deployer\" migration, kicked off with strong community engagement, and efforts continued to improve flashblocks monitoring and expand hardfork test coverage.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving the content and presentation of the community hub, ensuring information is accurate and accessible for contributors and community members.\n\n- **Governance and Community Content Updates:** Several changes were made to keep documentation current. The `govnerds.mdx` page was updated with S8 Charter information ([#1181]), and the techNERD contribution page was refreshed ([#1177]). To prevent confusion, a clarification was added to distinguish between Citizenship eligibility and grant eligibility criteria ([#1180]).\n- **Visual and Asset Refinements:** The project's visual identity received minor updates, including a new favicon ([#1183]) and updated font files ([#1182]), contributing to a polished user experience on the hub.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week reflected a clear effort to focus development priorities and resolve outstanding investigations.\n\n- **Closed Issues:**\n    - **Strategic Deprioritization:** Several issues were closed to align with current priorities. Support for the challenger in `op-up` was deemed not worth the effort for `sysgo` ([#17005]), and an `op-up` logging cleanup was shelved pending upstream changes in `op-geth` ([#17007]). A tracking issue for \"Consensus influencing event nonces\" was also closed as the feature is not planned for the near future ([#13543]).\n    - **Investigation & Housekeeping:** An issue regarding an \"Event Call Graph\" was closed as the team is moving away from that system ([#16874]). A postmortem for a scalar fix was closed after its completion ([#17012]), and an issue about missing test logs was resolved when the logs were located ([#17151]).\n\n- **New & Active Issues:**\n    - **Forge Deployer Migration:** A significant new effort to migrate to a \"Forge Deployer\" is underway, tracked in issue [#17213]. Multiple sub-tasks have been created and claimed by a community contributor, covering the creation of a CLI wrapper and the conversion of various deployment and verification scripts ([#17214] - [#17218]).\n    - **Flashblocks Monitoring & Testing:** Progress continues on improving observability for flashblocks. Discussions indicate that work is advancing on alerts for sequencer status ([#16867]) and peer health ([#16868]). In a strategic shift, adding flashblocks support to Kurtosis has been officially deprioritized ([#16514]).\n    - **Test Coverage Expansion:** The sync test issue ([#16703]) was reopened to ensure all OP Stack Hardfork transitions are adequately tested, highlighting a continued focus on protocol robustness.\n    - **Configuration Bug Resolution:** A user confirmed that setting the correct `--game-type` flag resolved their `op-proposer` transaction creation failure, underscoring the importance of proper configuration ([#13502]).\n\n## \ud83d\udcac Community & Collaboration\nThis week saw strong evidence of active community collaboration and engagement on significant technical initiatives. The \"Forge Deployer\" migration stands out, with contributor `tooshiNoko` proactively offering to lead several complex implementation tasks, prompting discussion around coordinating the effort to avoid duplicate work. Additionally, the resolution of the `op-proposer` issue ([#13502]) demonstrated a healthy feedback loop between users and the development team in debugging and confirming solutions.", "2025-09-04T03:40:23.470Z"]
["ethereum-optimism/docs_week_2025-08-24", "ethereum-optimism/docs", "week", "2025-08-24", "# ethereum-optimism/docs Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a major push to enhance documentation for core Superchain functionalities. Significant progress was made with the addition of a comprehensive tutorial for upgrading ERC-20 tokens for Superchain interoperability and the introduction of detailed documentation for Flashblocks. Alongside these content additions, the team focused on internal process refinement by closing outdated issues, improving documentation workflows, and planning for Q4 audits. Discussions around tooling, particularly the migration of `op-deployer` to Forge, saw notable community engagement.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused heavily on creating and refining documentation to support developers and chain operators within the Superchain ecosystem.\n\n- **Superchain Interoperability Documentation:** A key achievement was the addition of a new tutorial on upgrading existing ERC-20 tokens for Superchain interoperability ([#1577](https://github.com/ethereum-optimism/docs/pull/1577)). This guide provides crucial steps for contract upgrades and custom bridging. The Superchain operations guide was also updated with new information ([#1725](https://github.com/ethereum-optimism/docs/pull/1725)).\n\n- **Flashblocks Documentation:** Comprehensive documentation for Flashblocks was introduced ([#1716](https://github.com/ethereum-optimism/docs/pull/1716)), creating new resources that detail its features and use cases for both application developers and chain operators.\n\n- **General Maintenance & Refinements:** The project's font assets were updated to \"Reforma\" ([#1723](https://github.com/ethereum-optimism/docs/pull/1723)), and a minor bug fix removed a reference to a deprecated SDK, ensuring documentation accuracy ([#1724](https://github.com/ethereum-optimism/docs/pull/1724)).\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:** A significant amount of housekeeping was completed.\n    - **Process & Housekeeping:** Several issues were closed to streamline processes, including those related to `op-up` logging cleanup ([#17007](https://github.com/ethereum-optimism/docs/issues/17007)), event system tracing ([#16874](https://github.com/ethereum-optimism/docs/issues/16874)), and enforcing PR titles for better clarity ([#1675](https://github.com/ethereum-optimism/docs/issues/1675), [#1728](https://github.com/ethereum-optimism/docs/issues/1728)).\n    - **Deprioritized & Resolved:** The task to add Flashblocks support in Kurtosis was closed as deprioritized ([#16514](https://github.com/ethereum-optimism/docs/issues/16514)), and a tracking issue for Jovian + Karst consensus was closed as it will not be implemented for now ([#13543](https://github.com/ethereum-optimism/docs/issues/13543)).\n    - **Audit & Postmortems:** An issue tracking a 2024 Q4 audit was closed ([#1722](https://github.com/ethereum-optimism/docs/issues/1722)), as was a postmortem for a Scalar fix ([#17012](https://github.com/ethereum-optimism/docs/issues/17012)).\n\n- **New & Active Issues:**\n    - **Future Work & Planning:** New issues were opened to track 2024 Q4 audit requirements ([#1722](https://github.com/ethereum-optimism/docs/issues/1722), [#1727](https://github.com/ethereum-optimism/docs/issues/1727)), signaling a focus on upcoming verification work.\n    - **Tooling & CI Discussions:** Active discussions continued on several key technical issues. A major overhaul of the `op-deployer` documentation is underway ([#1530](https://github.com/ethereum-optimism/docs/issues/1530)), with a \"rich PR\" in review. Relatedly, a series of issues tracking the migration of the deployer to Forge ([#17213](https://github.com/ethereum-optimism/docs/issues/17213) and others) has attracted significant community interest. There is also an ongoing discussion about the best approach for running the monorepo CI suite on `op-geth` PRs to ensure compatibility ([#665](https://github.com/ethereum-optimism/docs/issues/665)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted strong community interest in contributing to core tooling. A series of issues related to migrating the `op-deployer` to use Forge ([#17213](https://github.com/ethereum-optimism/docs/issues/17213) - [#17218](https://github.com/ethereum-optimism/docs/issues/17218)) saw a community member, `tooshiNoko`, proactively express a desire to take on the entire set of tasks, demonstrating a high level of engagement. Additionally, ongoing technical discussions in issues like the `op-deployer` documentation overhaul ([#1530](https://github.com/ethereum-optimism/docs/issues/1530)) and `op-geth` CI integration ([#665](https://github.com/ethereum-optimism/docs/issues/665)) show healthy collaboration between team members and the wider community to solve complex technical challenges.", "2025-09-04T03:40:36.711Z"]
["ethereum-optimism/ecosystem_week_2025-08-24", "ethereum-optimism/ecosystem", "week", "2025-08-24", "# ethereum-optimism/ecosystem Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant housekeeping and strategic discussions on future protocol architecture. While direct code contributions were minimal, the team made substantial progress by closing numerous long-standing issues related to protocol mechanics, tooling, and logging. Key conversations centered on a major proposal to overhaul the `op-node` sync mechanism for better scalability and reliability. Additionally, groundwork was laid for future UI/UX enhancements and security hardening across the project's web properties, and discussions continued on improving the OP Stack's testing infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe week's development work focused on minor but important maintenance tasks within the project's documentation.\n\n### Documentation and Maintenance\nTwo pull requests were opened to address documentation upkeep. One fixed a broken link to the protocol specs repository ([#935](https://github.com/ethereum-optimism/ecosystem/pull/935)), and another updated the license date to keep legal information current ([#936](https://github.com/ethereum-optimism/ecosystem/pull/936)).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nA significant number of issues were resolved, reflecting a focus on cleaning up the backlog and finalizing decisions:\n- **Protocol Specifications & Mechanics:** The specification for `min-base-fee` was finalized and closed ([#742](https://github.com/ethereum-optimism/ecosystem/issues/742)). An issue regarding a claim contract deployment process was also closed ([#868](https://github.com/ethereum-optimism/ecosystem/issues/868)), and a proposal to influence event nonces was deferred for the time being ([#13543](https://github.com/ethereum-optimism/ecosystem/issues/13543)).\n- **Tooling & Logging:** Several issues were closed after investigation revealed they were no longer viable or worthwhile. This includes adding challenger support to `op-up` ([#17005](https://github.com/ethereum-optimism/ecosystem/issues/17005)), tracing event flow in `op-service` ([#16874](https://github.com/ethereum-optimism/ecosystem/issues/16874)), and cleaning up `op-up` logging ([#17007](https://github.com/ethereum-optimism/ecosystem/issues/17007)).\n- **Testing & Postmortems:** An issue concerning missing test logs in `op-acceptance-tests` was resolved after the logs were located ([#17151](https://github.com/ethereum-optimism/ecosystem/issues/17151)), and a postmortem for a Scalar fix was completed ([#17012](https://github.com/ethereum-optimism/ecosystem/issues/17012)).\n\n### New & Active Issues\nDiscussions this week centered on significant architectural improvements and user-facing enhancements:\n- **`op-node` Sync Mechanism:** A major discussion is underway in [#14108](https://github.com/ethereum-optimism/ecosystem/issues/14108) to deprecate the current req-resp p2p sync. A proposed alternative involves a simpler, faster, and more scalable mechanism using Redis for the sequencer to publish unsafe blocks, which other nodes can then subscribe to. This aims to resolve existing sync speed and race condition problems.\n- **Testing Infrastructure:** Conversations continued on improving test coverage. Issue [#16703](https://github.com/ethereum-optimism/ecosystem/issues/16703) was reopened to ensure the `op-sync-tester` validates all OP Stack Hard Fork transitions, not just Isthmus. In [#665](https://github.com/ethereum-optimism/ecosystem/issues/665), the team is exploring alternatives for running the monorepo CI suite on `op-geth` PRs, such as a periodic check-and-notify job.\n- **Website Enhancements:** Several new issues were opened to improve the ecosystem's web presence, including implementing a design system for optimism.io ([#931](https://github.com/ethereum-optimism/ecosystem/issues/931)), adding a Content Security Policy (CSP) to oplabs.co ([#934](https://github.com/ethereum-optimism/ecosystem/issues/934)), and other UI/UX tweaks ([#932](https://github.com/ethereum-optimism/ecosystem/issues/932), [#933](https://github.com/ethereum-optimism/ecosystem/issues/933)).\n- **Flashblocks:** Progress continues on flashblocks integration, with work underway on a load test summary report ([#16756](https://github.com/ethereum-optimism/ecosystem/issues/16756)) and the creation of new alerts for sequencer status and peer counts ([#16867](https://github.com/ethereum-optimism/ecosystem/issues/16867), [#16868](https://github.com/ethereum-optimism/ecosystem/issues/16868)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted deep technical collaboration within the core team. The detailed discussion around a new `op-node` sync mechanism ([#14108](https://github.com/ethereum-optimism/ecosystem/issues/14108)) showcased proactive problem-solving, with ideas and prototypes being shared between team members to address a fundamental protocol challenge. Similarly, ongoing dialogues about improving testnet documentation ([#1530](https://github.com/ethereum-optimism/ecosystem/issues/1530)) and CI for `op-geth` ([#665](https://github.com/ethereum-optimism/ecosystem/issues/665)) demonstrate a collaborative effort to enhance developer experience and infrastructure robustness. The resolution of a user-reported configuration issue with `op-proposer` ([#13502](https://github.com/ethereum-optimism/ecosystem/issues/13502)) also points to a healthy feedback loop with the broader community.", "2025-09-04T03:40:46.888Z"]
["ethereum-optimism/infra_week_2025-08-24", "ethereum-optimism/infra", "week", "2025-08-24", "# ethereum-optimism/infra Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in protocol specification and architectural planning, alongside substantial housekeeping efforts. The most notable achievement was the finalization and closure of the `min-base-fee` specification, marking a key step for a planned protocol feature. Concurrently, a critical discussion emerged around deprecating the `req-resp` P2P sync in `op-node`, with a detailed alternative proposed to improve sync stability and performance. The team also focused on reducing technical debt by closing numerous issues related to logging, event systems, and runbook refactoring.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe week's code contributions focused on routine maintenance, ensuring the stability and security of project dependencies.\n\n*   **Dependency Maintenance**: A dependency update was merged for the `op-acceptor` component, bumping `github.com/ulikunitz/xz` to version 0.5.14 to incorporate the latest fixes and improvements ([#451](https://github.com/ethereum-optimism/infra/pull/451)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was a primary focus, with several key issues resolved and important strategic discussions taking place in active issues. No new issues were opened this week.\n\n*   **Closed Issues:**\n    *   **Protocol Specification Finalized**: The specification for `min-base-fee` was formally written and ratified, bringing issue [#742](https://github.com/ethereum-optimism/infra/issues/742) to a close.\n    *   **System Cleanup and Simplification**: A significant cleanup effort resulted in the closure of several issues. The team decided against implementing consensus-influencing event nonces ([#13543](https://github.com/ethereum-optimism/infra/issues/13543)) and adding an event call graph ([#16874](https://github.com/ethereum-optimism/infra/issues/16874)), leaning towards removing the event system entirely. Efforts to clean up logging in `op-up` ([#17007](https://github.com/ethereum-optimism/infra/issues/17007)) and refactor the upgrade runbook ([#347](https://github.com/ethereum-optimism/infra/issues/347)) were also concluded.\n    *   **Operational Housekeeping**: The postmortem for a Scalar fix ([#17012](https://github.com/ethereum-optimism/infra/issues/17012)) and an investigation into missing test logs ([#17151](https://github.com/ethereum-optimism/infra/issues/17151)) were closed as completed.\n\n*   **New & Active Issues:**\n    *   **`op-node` Sync Mechanism Debate**: A major discussion is underway in [#14108](https://github.com/ethereum-optimism/infra/issues/14108) regarding the deprecation of the `req-resp` P2P sync mechanism to solve persistent sync problems. A detailed alternative was proposed by @emilianobonassi, suggesting a simpler, faster, and more reliable method where the sequencer publishes the latest unsafe block via Redis, and other nodes subscribe to it. This approach aims to bypass issues with UDP, domain names, and race conditions found in the current protocol.\n    *   **CI and Documentation Improvements**: Discussions continued on improving the developer experience. In [#665](https://github.com/ethereum-optimism/infra/issues/665), the team is exploring options for a periodic CI job to catch integration issues with `op-geth` sooner. In [#1530](https://github.com/ethereum-optimism/infra/issues/1530), the focus is on improving `op-deployer` documentation, with a \"rich PR\" in the docs repository highlighted as a major overhaul for chain operators.\n\n## \ud83d\udcac Community & Collaboration\nWhile light on new code, the week was heavy on collaboration and strategic planning. The discussion around deprecating `req-resp` sync in `op-node` ([#14108](https://github.com/ethereum-optimism/infra/issues/14108)) showcased deep technical engagement, with a comprehensive alternative prototyped and proposed by a contributor. Similarly, the effort to improve `op-deployer` documentation ([#1530](https://github.com/ethereum-optimism/infra/issues/1530)) demonstrated active collaboration between multiple team members and across repositories, reflecting a strong focus on improving the experience for external ecosystem participants.", "2025-09-04T03:40:44.189Z"]
["ethereum-optimism/op-analytics_week_2025-08-24", "ethereum-optimism/op-analytics", "week", "2025-08-24", "# ethereum-optimism/op-analytics Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week saw a significant expansion of analytical capabilities with the integration of \"jovian analysis\" tooling, providing new methods for data usage and gas limit analysis. The data pipeline underwent substantial refinement, with a focus on improving data quality for account abstraction, optimizing performance for Dune queries, and implementing critical bug fixes for l2beat data schemas. On the protocol front, the `min-base-fee` specification was formally ratified, marking a key milestone. Discussions around future architectural changes, such as deprecating the req-resp P2P sync mechanism in `op-node`, and improving developer tooling like `op-deployer` were also prominent.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on enhancing the project's analytical toolkit and ensuring the stability and accuracy of the data pipeline.\n\n-   **Expansion of Analytical Capabilities**: A comprehensive suite of tools for \"jovian analysis\" was added to the repository, including core Python scripts for data fetching and analysis, along with Jupyter notebooks for ad-hoc investigations ([#1728](https://github.com/ethereum-optimism/op-analytics/pull/1728)). These new tools were quickly refined to improve base fee display and chart visualizations ([#1735](https://github.com/ethereum-optimism/op-analytics/pull/1735), [#1737](https://github.com/ethereum-optimism/op-analytics/pull/1737)).\n\n-   **Data Pipeline Integrity and Optimization**:\n    -   **Data Quality:** Significant effort was invested in improving data quality checks for account abstraction, adding regression tests for reverted user operations ([#1732](https://github.com/ethereum-optimism/op-analytics/pull/1732)) and relaxing checks for failed operations to prevent false positives ([#1738](https://github.com/ethereum-optimism/op-analytics/pull/1738)).\n    -   **Bug Fixes & Refinements:** A critical bug was fixed in the schema migration for l2beat TVS breakdown data ([#1730](https://github.com/ethereum-optimism/op-analytics/pull/1730)). The pipeline was also updated to exclude Celo from pending batches to improve data specificity ([#1727](https://github.com/ethereum-optimism/op-analytics/pull/1727)).\n    -   **Performance:** A change was introduced to reduce the run time for the \"All Transactions\" data query on Dune Analytics, improving efficiency ([#1729](https://github.com/ethereum-optimism/op-analytics/pull/1729)).\n\n-   **Infrastructure and Maintenance**: The analytics pipeline's core dependencies were updated with a bump to Dagster ([#1734](https://github.com/ethereum-optimism/op-analytics/pull/1734), [#1739](https://github.com/ethereum-optimism/op-analytics/pull/1739)). OP Mainnet Explorer links were updated across the codebase ([#1715](https://github.com/ethereum-optimism/op-analytics/pull/1715)), and a minor duplicate issue in the CircleCI configuration was resolved ([#1736](https://github.com/ethereum-optimism/op-analytics/pull/1736)).\n\n## \ud83d\udc1b Issues & Triage\n\n-   **Closed Issues:** The most significant closure was the ratification of the `min-base-fee` feature specification, finalizing a key piece of protocol development ([#742](https://github.com/ethereum-optimism/op-analytics/issues/742)). Several internal tracking and cleanup issues were also resolved, including a postmortem of a scalar fix ([#17012](https://github.com/ethereum-optimism/op-analytics/issues/17012)) and logging cleanup in `op-up` ([#17007](https://github.com/ethereum-optimism/op-analytics/issues/17007)). Strategic decisions were made to deprioritize adding challenger support to `op-up` ([#17005](https://github.com/ethereum-optimism/op-analytics/issues/17005)) and flashblocks support in Kurtosis ([#16514](https://github.com/ethereum-optimism/op-analytics/issues/16514)).\n\n-   **New & Active Issues:** Discussions this week highlighted several key areas for future work:\n    -   **`op-deployer` Enhancements:** A major ongoing effort is the migration of `op-deployer` to use Forge, with a tracking issue ([#17213](https://github.com/ethereum-optimism/op-analytics/issues/17213)) and several sub-tasks attracting community interest. Separately, the need for clearer documentation for `op-deployer` was a major topic, with a comprehensive documentation overhaul in progress to address feedback from external chain operators ([#1530](https://github.com/ethereum-optimism/op-analytics/issues/1530)).\n    -   **`op-node` Sync Mechanism:** A significant architectural discussion is underway regarding the deprecation of the req-resp P2P sync mechanism in `op-node` ([#14108](https://github.com/ethereum-optimism/op-analytics/issues/14108)). An alternative, simpler unsafe block sync mechanism has been prototyped, which could improve recovery times and simplify operations.\n    -   **User Support:** Troubleshooting `op-proposer` failures due to misconfiguration of the game type ([#13502](https://github.com/ethereum-optimism/op-analytics/issues/13502)) continues to be an active area of community support.\n\n## \ud83d\udcac Community & Collaboration\nThis week demonstrated healthy collaboration between the core team and the wider community.\n\n-   Community member `tooshiNoko` showed strong initiative by expressing interest in tackling multiple issues related to the migration of `op-deployer` to Forge, coordinating with the team to avoid duplicate work ([#17213](https://github.com/ethereum-optimism/op-analytics/issues/17213)).\n-   The active discussion around improving `op-deployer` documentation ([#1530](https://github.com/ethereum-optimism/op-analytics/issues/1530)) highlights a productive feedback loop, with comments from several external users directly influencing a major documentation update.\n-   Community members actively helped each other troubleshoot common issues, as seen in the `op-proposer` configuration thread ([#13502](https://github.com/ethereum-optimism/op-analytics/issues/13502)), where users shared solutions to resolve transaction creation failures.", "2025-09-04T03:41:01.617Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-08-24", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-08-24", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's focus was on expanding the Superchain ecosystem and refining development processes. The Superchain token list grew with the addition of several new assets, including PEPE, EL, and Wrapped WIT. A key improvement was made to the token validation CI, adding retry logic to enhance reliability for contributors. The team also engaged in significant backlog grooming, closing several long-standing issues related to deprioritized features and logging, thereby sharpening focus. Active discussions continued on major future work, including the migration of deployment tools to Forge, improvements to sync mechanisms, and the implementation of flashblock testing and monitoring.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on expanding token support and improving the contributor experience through more robust tooling.\n\n- **Superchain Token List Expansion:** The ecosystem's supported assets were broadened with several new additions.\n    - The Pepe Community ($PEPE) token was added for bridging between Ethereum and Base ([#1188](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1188)).\n    - The EL token was added to Soneium ([#1190](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1190)).\n    - The Wrapped WIT token (beta) was added to multiple testnets ([#1183](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1183)).\n    - The bwAJNA token was added on Mode ([#1019](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1019)).\n    - A new pull request was opened to add the \"fort token\" ([#1193](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1193)).\n\n- **Improved Contributor Tooling:** A bug fix was implemented to improve the reliability of the token submission process. Retry logic was added to contract validation calls in the CI pipeline, reducing intermittent failures for legitimate submissions ([#1189](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1189)).\n\n- **Tokenomics Data Maintenance:** The circulating supply data was updated as part of routine maintenance ([#1192](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1192)).\n\n## \ud83d\udc1b Issues & Triage\nThis week saw the resolution of a key protocol specification and the closure of numerous deprioritized or resolved maintenance issues, alongside active planning for future development.\n\n- **Closed Issues:**\n    - **Protocol Specification:** The design document for `min-base-fee` was ratified, and the corresponding issue was closed, marking the completion of this specification ([#742](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/742)).\n    - **Deprioritized Features:** Several issues were closed to reflect a shift in priorities, including consensus-influencing event nonces ([#13543](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/13543)), an event call graph for `op-service` ([#16874](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16874)), `op-up` support for the challenger ([#17005](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17005)), and flashblocks support in Kurtosis ([#16514](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16514)).\n    - **Logging & Debugging:** Issues related to cleaning up `op-up` logging ([#17007](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17007)) and locating missing test logs ([#17151](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17151)) were resolved.\n\n- **New & Active Issues:**\n    - **Forge Deployer Migration:** A significant discussion is underway to migrate deployment scripts to Forge. Contributor `tooshiNoko` has shown strong interest in taking on multiple related tasks ([#17213](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17213), [#17214](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17214), [#17215](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17215), [#17216](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17216), [#17217](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17217), [#17218](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17218)), indicating a major community-involved refactoring effort.\n    - **Syncing Mechanisms:** A proposal to deprecate the req-resp P2P sync in `op-node` in favor of a simpler, more cost-effective unsafe block sync mechanism is being actively discussed ([#14108](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/14108)). New test cases for `op-sync-tester` were also proposed ([#16703](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16703)).\n    - **Flashblocks:** Planning continues for flashblocks, with discussions on setting up monitoring and alerts ([#16867](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16867), [#16868](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16868)), summarizing load test results ([#16756](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16756)), and enabling tests on persistent devnets ([#17248](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17248)).\n    - **Documentation & CI:** A user contributed a significant overhaul to the OP Stack rollup deployment guide ([#1530](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1530)), and a new CI strategy was proposed to periodically check for `op-geth` integration issues ([#665](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/665)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted strong community engagement and proactive contribution.\n- User `krofax` submitted a comprehensive pull request to overhaul the OP Stack deployment documentation ([#1530](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1530)), addressing a key pain point for new developers.\n- Contributor `tooshiNoko` demonstrated significant initiative by expressing interest in tackling the entire suite of issues related to the Forge Deployer migration ([#17213](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17213)), showcasing a desire from the community to take ownership of major refactoring efforts.\n- The resolution of an `op-proposer` transaction failure for a user after they correctly set the game type ([#13502](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/13502)) exemplifies effective community-driven support within issue threads.", "2025-09-04T03:40:41.355Z"]
["ethereum-optimism/op-geth_week_2025-08-24", "ethereum-optimism/op-geth", "week", "2025-08-24", "# ethereum-optimism/op-geth Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by a significant integration effort, bringing `op-geth` up to date with `go-ethereum v1.16.1`. This foundational work ensures the project stays aligned with upstream developments. Attention was also given to hardening existing features, with ongoing work to improve alerting and testing for flashblocks. A new feature to implement a minimum base fee was introduced, moving from specification to implementation. The week also saw strong community engagement, with a contributor taking the lead on a major migration to the Forge Deployer, and deep technical discussions taking place around the future of `op-node`'s sync mechanism.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week's development focused on upstream integration and introducing a new fee mechanism.\n\n- **Upstream Geth Integration:** A major merge of `go-ethereum v1.16.1` was completed, updating numerous files across the codebase. This crucial update incorporates the latest improvements and security patches from the upstream Geth project, maintaining compatibility and stability ([#652](https://github.com/ethereum-optimism/op-geth/pull/652)).\n\n- **Minimum Base Fee Feature:** Following the ratification of the specification ([#742](https://github.com/ethereum-optimism/op-geth/issues/742)), a new pull request was opened to implement a minimum base fee in `op-geth` ([#666](https://github.com/ethereum-optimism/op-geth/pull/666)). This feature is a key step in evolving the project's fee market.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved strategic decisions on tooling, finalizing specifications, and initiating discussions on future architectural changes and CI improvements.\n\n- **Closed Issues:**\n    - **Tooling & Testing Deprioritization:** Strategic decisions were made to close issues related to adding flashblocks support in Kurtosis ([#16514](https://github.com/ethereum-optimism/op-geth/issues/16514)) and supporting the challenger in `op-up` ([#17005](https://github.com/ethereum-optimism/op-geth/issues/17005)), focusing development efforts elsewhere.\n    - **Operational Cleanup:** Several tracking, postmortem, and logging issues were closed, including tasks related to consensus nonces, event tracing, and improving test log visibility ([#13543](https://github.com/ethereum-optimism/op-geth/issues/13543), [#16874](https://github.com/ethereum-optimism/op-geth/issues/16874), [#17007](https://github.com/ethereum-optimism/op-geth/issues/17007), [#17012](https://github.com/ethereum-optimism/op-geth/issues/17012), [#17151](https://github.com/ethereum-optimism/op-geth/issues/17151)).\n\n- **New & Active Issues:**\n    - **New Investigations:** A new issue was opened to investigate gas cost discrepancies observed with `debug_traceCall` ([#664](https://github.com/ethereum-optimism/op-geth/issues/664)). Another new issue proposes running the monorepo CI suite on `op-geth` PRs to prevent cross-repository regressions ([#665](https://github.com/ethereum-optimism/op-geth/issues/665)).\n    - **Sync Mechanism Architecture:** A significant discussion is underway to deprecate the req-resp p2p sync in `op-node` ([#14108](https://github.com/ethereum-optimism/op-geth/issues/14108)). A detailed alternative for unsafe block sync was proposed, aiming for a simpler, faster, and more robust mechanism for node recovery and scaling.\n    - **Flashblocks Hardening:** Active discussions continued around improving flashblocks reliability. This includes creating alerts for sequencer health and peer counts ([#16867](https://github.com/ethereum-optimism/op-geth/issues/16867), [#16868](https://github.com/ethereum-optimism/op-geth/issues/16868)), preparing a report on load testing results ([#16756](https://github.com/ethereum-optimism/op-geth/issues/16756)), and ensuring test enablement on devnets ([#17248](https://github.com/ethereum-optimism/op-geth/issues/17248)).\n    - **Forge Deployer Migration:** A series of issues related to migrating deployment scripts to use the Forge Deployer saw active discussion and community interest ([#17213](https://github.com/ethereum-optimism/op-geth/issues/17213) - [#17218](https://github.com/ethereum-optimism/op-geth/issues/17218)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted strong community collaboration. Community member **tooshiNoko** showed significant initiative by expressing interest in taking on the entire \"Forge Deployer\" migration effort, coordinating with maintainers to avoid duplicate work ([#17213](https://github.com/ethereum-optimism/op-geth/issues/17213)). This demonstrates a healthy and engaged contributor ecosystem. Additionally, the in-depth technical exchange on issue [#14108] regarding `op-node`'s sync mechanism, with detailed ideas shared between team members, points to a collaborative approach to solving complex architectural challenges.", "2025-09-04T03:40:58.370Z"]
["ethereum-optimism/specs_week_2025-08-24", "ethereum-optimism/specs", "week", "2025-08-24", "# ethereum-optimism/specs Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in formalizing core protocol specifications. Key advancements were made for the upcoming Jovian release with the integration of the minimum base fee design. The team also introduced comprehensive specifications for Flashblocks, an out-of-protocol preconfirmation system, and laid the groundwork for future feature flags with the U16a spec. Alongside these specification updates, active discussions continued on major architectural shifts, including the migration of OP Deployer to Forge and a proposal to deprecate the `req-resp` P2P sync mechanism in favor of a more robust alternative.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused heavily on enhancing and formalizing the protocol specifications, preparing for both near-term releases and long-term evolution.\n\n*   **Jovian Release Preparations:** The design for the minimum base fee was formally integrated into the Jovian protocol specifications, a critical step in defining the release's economic model ([#747](https://github.com/ethereum-optimism/specs/pull/747)).\n*   **Flashblocks Specification:** A detailed specification for Flashblocks, a system for rapid out-of-protocol preconfirmations, was officially added to the documentation, providing clarity on its design and integration ([#754](https://github.com/ethereum-optimism/specs/pull/754)).\n*   **Future-Proofing the Protocol:** The U16a specification was merged, introducing changes to `OptimismPortal` and `SystemConfig` to streamline the addition of future protocol features ([#750](https://github.com/ethereum-optimism/specs/pull/750)).\n*   **Superchain Interoperability:** To improve cross-chain functionality, a new `supervisor_localSafe` feature was added to the interop specifications, enhancing the supervisor's capabilities within the Superchain ([#753](https://github.com/ethereum-optimism/specs/pull/753)).\n*   **Upcoming Features:** New proposals were opened for a `LivenessModule` ([#751](https://github.com/ethereum-optimism/specs/pull/751)) and a `TimelockGuard` ([#752](https://github.com/ethereum-optimism/specs/pull/752)), signaling work on system monitoring and security mechanisms.\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nSeveral key issues were resolved, marking the completion of specification work and the deprioritization of other tasks.\n\n*   **Specification Finalized:** The tracking issue to formalize the `min-base-fee` design was closed, confirming the completion of this work for the Jovian release ([#742](https://github.com/ethereum-optimism/specs/issues/742)).\n*   **Deprioritized Features:** A number of features were formally deprioritized and their issues closed, including consensus-influencing event nonces for Jovian + Karst ([#13543](https://github.com/ethereum-optimism/specs/issues/13543)), Flashblocks support in Kurtosis ([#16514](https://github.com/ethereum-optimism/specs/issues/16514)), and distributing the challenger via `op-up` ([#17005](https://github.com/ethereum-optimism/specs/issues/17005)).\n*   **Operational Cleanup:** Issues related to logging improvements, test log visibility, and a postmortem were closed, clearing out backlog tasks ([#17007](https://github.com/ethereum-optimism/specs/issues/17007), [#17151](https://github.com/ethereum-optimism/specs/issues/17151), [#17012](https://github.com/ethereum-optimism/specs/issues/17012)).\n\n### New & Active Issues\nDiscussions this week centered on significant tooling migrations, architectural changes, and improving system reliability.\n\n*   **OP Deployer Forge Migration:** A major ongoing discussion revolves around migrating OP Deployer to use Forge. A contributor, `tooshiNoko`, showed significant initiative by expressing interest in taking on several related tasks to help drive the effort forward ([#17213](https://github.com/ethereum-optimism/specs/issues/17213), [#17214](https://github.com/ethereum-optimism/specs/issues/17214), [#17215](https://github.com/ethereum-optimism/specs/issues/17215), [#17216](https://github.com/ethereum-optimism/specs/issues/17216), [#17217](https://github.com/ethereum-optimism/specs/issues/17217), [#17218](https://github.com/ethereum-optimism/specs/issues/17218)).\n*   **Deprecation of Req-Resp P2P Sync:** A significant architectural discussion is underway to deprecate the `req-resp` P2P sync in `op-node` ([#14108](https://github.com/ethereum-optimism/specs/issues/14108)). A detailed alternative was proposed that aims to be cheaper, simpler, and faster by using a combination of a centralized gossip driver and EL queries.\n*   **Testing and Alerting:** Conversations continued on enhancing system robustness. This includes defining new sync test cases for OP Stack hard forks ([#16703](https://github.com/ethereum-optimism/specs/issues/16703)) and refining sequencer alerting for Flashblocks ([#16867](https://github.com/ethereum-optimism/specs/issues/16867), [#16868](https://github.com/ethereum-optimism/specs/issues/16868)).\n\n## \ud83d\udcac Community & Collaboration\nThe week highlighted strong collaborative momentum, particularly around the proposed migration of OP Deployer to Forge. Contributor `tooshiNoko`'s proactive engagement across multiple issues ([#17213](https://github.com/ethereum-optimism/specs/issues/17213) - [#17218](https://github.com/ethereum-optimism/specs/issues/17218)) demonstrated healthy community involvement in a major tooling refactor. Furthermore, the in-depth technical debate on deprecating the `req-resp` P2P sync ([#14108](https://github.com/ethereum-optimism/specs/issues/14108)) showcases a high degree of collaboration among core developers on critical architectural decisions for the future of the OP Stack.", "2025-09-04T03:41:14.836Z"]
["ethereum-optimism/superchain-registry_week_2025-08-24", "ethereum-optimism/superchain-registry", "week", "2025-08-24", "# ethereum-optimism/superchain-registry Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on expanding the Superchain's testing infrastructure and improving foundational developer tooling. The most significant development was the addition of the Arena Z testnet, broadening the available environments for ecosystem participants. Concurrently, important discussions took place around enhancing the CI/CD pipeline for better integration testing and overhauling documentation to simplify the rollup deployment process for external operators.\n\n## \ud83d\udee0\ufe0f Key Developments\n### Superchain Registry Expansion\nThe Superchain was expanded with the addition of a new testnet. This effort involved adding the configuration, chain list entries, and genesis data for Arena Z, providing another valuable testing environment for developers building on the OP Stack ([#1092](https://github.com/ethereum-optimism/superchain-registry/pull/1092)).\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed this week based on the available data. The focus remained on discussing improvements to testing, CI, and documentation.\n\n### New & Active Issues\nKey discussions this week revolved around improving the project's core infrastructure and developer experience:\n\n*   **CI/CD Enhancements:** A new issue ([#665](https://github.com/ethereum-optimism/superchain-registry/issues/665)) was opened to explore running the monorepo CI suite on `op-geth` pull requests to catch integration issues earlier. An alternative proposal involves a periodic job to check for failures against the latest `op-geth` commit, aiming to provide rapid feedback.\n*   **Rollup Deployment Documentation:** Discussions continued on improving the documentation for deploying an OP Stack Rollup testnet ([#1530](https://github.com/ethereum-optimism/superchain-registry/issues/1530)). A significant overhaul is reportedly in progress via a \"rich PR\" to clarify the process for external chain operators and address confusion between old and new deployment methods.\n*   **Enabling Flashblock Tests:** A smaller task to enable flashblock tests against persistent devnets is being tracked in issue [#17248](https://github.com/ethereum-optimism/superchain-registry/issues/17248), with recent comments confirming the work is ready for final verification.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active issue discussions this week. Contributors like krofax, Ajsutton, and Stevmark11 were involved in driving conversations forward on key topics. The discussion on CI improvements in [#665](https://github.com/ethereum-optimism/superchain-registry/issues/665) saw active problem-solving with alternative approaches being suggested. Similarly, the focus on improving documentation in [#1530](https://github.com/ethereum-optimism/superchain-registry/issues/1530) highlights the community's commitment to making the Superchain more accessible to external developers.", "2025-09-04T03:41:16.344Z"]
["ethereum-optimism/optimism_week_2025-08-24", "ethereum-optimism/optimism", "week", "2025-08-24", "# ethereum-optimism/optimism Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant push to advance the OP Stack's fault proof system and testing infrastructure. Major planning and initial development began for integrating Kona and Cannon as a fallback proof mechanism and for a version 2 upgrade of the Fault Dispute Game. Concurrently, the team modernized deployment tooling by migrating `op-deployer` to use Forge, while substantially refactoring the `op-sync-tester` to improve test reliability and maintainability. These parallel efforts in core protocol security, developer tooling, and testing signal a focused drive towards a more robust and developer-friendly Superchain ecosystem.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on enhancing the fault proof system, overhauling testing infrastructure, and modernizing deployment tools.\n\n### Fault Proof System Enhancements\nProgress was made on improving the performance and capabilities of the fault proof system.\n- **Cannon Performance:** Cannon's logging frequency was reduced to improve performance during long-running executions ([#17186](https://github.com/ethereum-optimism/optimism/pull/17186)), and its memory footprint was optimized by reducing heap/code cache size to allow more parallel instances on a single machine ([#17246](https://github.com/ethereum-optimism/optimism/pull/17246)).\n- **Challenger Improvements:** The `op-challenger` gained an option to limit the frequency of its update cycles, reducing calls to L1 nodes ([#17233](https://github.com/ethereum-optimism/optimism/pull/17233)).\n- **Bug Fixes:** A critical bug in `op-program` related to a length check during the state consolidation step was fixed ([#17220](https://github.com/ethereum-optimism/optimism/pull/17220)).\n\n### Testing Infrastructure Overhaul\nSignificant effort was invested in making the project's testing frameworks more robust, reliable, and capable.\n- **Sync Tester Refactoring:** The `op-sync-tester` was heavily refactored to implement the `L2ELNode` interface ([#17200](https://github.com/ethereum-optimism/optimism/pull/17200)) and its API interfaces were moved to `op-service/eth` to resolve circular dependencies ([#17252](https://github.com/ethereum-optimism/optimism/pull/17252)). It also gained support for Verifier Engine APIs across multiple hardforks ([#17234](https://github.com/ethereum-optimism/optimism/pull/17234)).\n- **Devnet Enhancements:** Flashblocks support was added to the Kurtosis devnet ([#17172](https://github.com/ethereum-optimism/optimism/pull/17172)), and `op-devstack` was improved to verify contract deployment inclusion, preventing race conditions ([#17232](https://github.com/ethereum-optimism/optimism/pull/17232)). A flakiness issue in `op-devstack`'s `AwaitTimestamp` function was also resolved ([#17270](https://github.com/ethereum-optimism/optimism/pull/17270)).\n- **Acceptance Tests:** A new feature was added to `op-acceptance-tests` to generate a flaky test report, aiding in debugging and improving test reliability ([#17250](https://github.com/ethereum-optimism/optimism/pull/17250)).\n\n### Deployment Tooling Modernization\nThe migration of `op-deployer` to use Forge as its backend saw significant progress.\n- **Forge Integration:** A CLI wrapper for the Forge binary was introduced ([#17235](https://github.com/ethereum-optimism/optimism/pull/17235), [#17231](https://github.com/ethereum-optimism/optimism/pull/17231)), and work began to convert deployment functions like `DeployImplementations` to use Forge ([#17264](https://github.com/ethereum-optimism/optimism/pull/17264)). The system now also enforces specific Forge versions for consistency ([#17242](https://github.com/ethereum-optimism/optimism/pull/17242)).\n\n### Core Protocol and Dependency Updates\n- The `op-geth` dependency was updated to include upstream Geth v1.16.1 changes ([#16785](https://github.com/ethereum-optimism/optimism/pull/16785)).\n- The `op-node` driver package was reorganized for better code structure ([#17098](https://github.com/ethereum-optimism/optimism/pull/17098)).\n- Cannon deployment was updated to support Go 1.24 ([#17155](https://github.com/ethereum-optimism/optimism/pull/17155)).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nSeveral key initiatives and bugs were resolved this week:\n- **Flashblocks Enablement:** The go-to-market tasks and public documentation for the public enablement of Flashblocks were completed ([#17027](https://github.com/ethereum-optimism/optimism/issues/17027), [#17141](https://github.com/ethereum-optimism/optimism/issues/17141)).\n- **Fault Proofs & Testing:** The tracking issue for the Interop proofs U17 workstream was closed ([#15980](https://github.com/ethereum-optimism/optimism/issues/15980)), and the `op-sync-tester` gained support for the engine namespace ([#16701](https://github.com/ethereum-optimism/optimism/issues/16701)).\n- **Tooling & Developer Experience:** Several improvements to the `op-up` developer tool were completed, including logging cleanup and adding CLI flags ([#17007](https://github.com/ethereum-optimism/optimism/issues/17007), [#17076](https://github.com/ethereum-optimism/optimism/issues/17076)).\n\n### New & Active Issues\nThis week saw the creation of several large workstreams that will define near-term development priorities:\n- **Dispute Game V2:** A comprehensive set of issues ([#17254](https://github.com/ethereum-optimism/optimism/issues/17254) through [#17263](https://github.com/ethereum-optimism/optimism/issues/17263)) was opened to track the development and deployment of version 2 of the FaultDisputeGame and PermissionedDisputeGame contracts. This represents a major upgrade to the dispute system.\n- **Kona + Cannon Integration:** A new initiative to ship Kona + Cannon as a fallback fault proof option was kicked off with a series of tracking issues for integration into `vm-runner`, `op-challenger`, and other tooling ([#17237](https://github.com/ethereum-optimism/optimism/issues/17237), [#17238](https://github.com/ethereum-optimism/optimism/issues/17238), [#17239](https://github.com/ethereum-optimism/optimism/issues/17239), [#17282](https://github.com/ethereum-optimism/optimism/issues/17282)-[#17288](https://github.com/ethereum-optimism/optimism/issues/17288)).\n- **P2P Sync Deprecation:** A significant architectural discussion continued in [#14108](https://github.com/ethereum-optimism/optimism/issues/14108) regarding the deprecation of the request-response P2P sync in `op-node`. A detailed alternative proposal for a simpler, more robust unsafe block sync mechanism using a centralized driver was presented, highlighting a potential shift in node architecture.\n- **`op-node` Instability:** A new issue was opened to investigate `op-node` instability that is triggered by L1 RPC delays, a critical area for network resilience ([#17245](https://github.com/ethereum-optimism/optimism/issues/17245)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted strong collaborative momentum on key strategic initiatives.\n- The migration of `op-deployer` to Forge saw significant community engagement, with contributor `tooshiNoko` expressing interest in leading the effort across multiple issues ([#17213](https://github.com/ethereum-optimism/optimism/issues/17213) - [#17218](https://github.com/ethereum-optimism/optimism/issues/17218)) and coordinating with `bitwiseguy` to avoid overlapping work.\n- The architectural discussion around deprecating P2P sync ([#14108](https://github.com/ethereum-optimism/optimism/issues/14108)) showcased deep technical collaboration, with `tessr` providing extensive context and relaying ideas from `emilianobonassi` for a new sync mechanism. This points to a healthy process for debating and evolving core protocol design.", "2025-09-04T03:41:08.323Z"]
["ethereum-optimism/superchain-ops_week_2025-08-24", "ethereum-optimism/superchain-ops", "week", "2025-08-24", "# ethereum-optimism/superchain-ops Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant codebase modernization and strategic planning for future protocol enhancements. A major milestone was the removal of the legacy `superchain-ops` system, streamlining the repository for future development. Concurrently, work began on preparing for future network upgrades with a new U13-to-U16 template, and active discussions took place around migrating the OP Deployer to use Forge. The team also focused on improving protocol reliability, with discussions on a new `op-node` sync mechanism and the finalization of the `min-base-fee` specification.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on refactoring, preparing for future upgrades, and improving CI reliability.\n\n*   **Codebase Modernization & Refactoring**\n    *   The legacy `superchain-ops` system was completely removed from the `main` branch, marking a significant cleanup of the repository. A tag was created to preserve historical access ([#1163](https://github.com/ethereum-optimism/superchain-ops/pull/1163)).\n\n*   **Upgrade & Action Templating**\n    *   To streamline future network upgrades, a template and example task were introduced to allow chains to upgrade directly from U13 to U16 ([#1144](https://github.com/ethereum-optimism/superchain-ops/pull/1144)).\n    *   A new template was added to facilitate L2 actions initiated from L1 through the OptimismPortal ([#1173](https://github.com/ethereum-optimism/superchain-ops/pull/1173)).\n    *   A draft pull request was opened to introduce liveness templates, aiming to improve operational documentation ([#1175](https://github.com/ethereum-optimism/superchain-ops/pull/1175)).\n\n*   **CI & Testing Reliability**\n    *   To combat CI flakiness, fork retries were added to simulation scripts, improving the reliability of the test suite ([#1172](https://github.com/ethereum-optimism/superchain-ops/pull/1172)).\n\n*   **Dependency Management**\n    *   A routine bump of the monorepo commit was performed to keep dependencies up to date ([#1174](https://github.com/ethereum-optimism/superchain-ops/pull/1174)).\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week centered on major upcoming architectural changes, protocol specifications, and improving cross-repository testing.\n\n*   **Closed Issues:**\n    *   **Protocol Specification:** The issue to write the specification for `min-base-fee` was closed, indicating the formal documentation is now complete and ratified ([#742](https://github.com/ethereum-optimism/superchain-ops/issues/742)).\n\n*   **New & Active Issues:**\n    *   **Forge Deployer Migration:** A significant new effort is being planned to migrate the OP Deployer to use Forge. A series of tracking issues ([#17213](https://github.com/ethereum-optimism/superchain-ops/issues/17213) - [#17218](https://github.com/ethereum-optimism/superchain-ops/issues/17218)) were opened to outline the required work, attracting immediate community interest.\n    *   **`op-node` Sync Mechanism:** A critical discussion is underway to deprecate the `req-resp` p2p sync protocol in `op-node` ([#14108](https://github.com/ethereum-optimism/superchain-ops/issues/14108)). A detailed alternative was proposed, suggesting a simpler and faster mechanism using Redis for block gossiping and an `admin` API for injection, which could improve node recovery and scale-out.\n    *   **CI/CD Enhancements:** A new issue proposes running the monorepo CI suite on `op-geth` pull requests to catch regressions before they are merged, highlighting a focus on tighter cross-repository integration ([#665](https://github.com/ethereum-optimism/superchain-ops/issues/665)).\n    *   **Documentation & User Experience:** An ongoing discussion highlighted confusion among external chain operators regarding the `op-deployer` documentation. A community-submitted PR aims to overhaul the docs to provide clearer instructions ([#1530](https://github.com/ethereum-optimism/superchain-ops/issues/1530)).\n    *   **Flashblocks:** While support for flashblocks in Kurtosis was officially deprioritized ([#16514](https://github.com/ethereum-optimism/superchain-ops/issues/16514)), discussions continued around creating new sequencer alerts ([#16867](https://github.com/ethereum-optimism/superchain-ops/issues/16867), [#16868](https://github.com/ethereum-optimism/superchain-ops/issues/16868)) and documenting load test results ([#16756](https://github.com/ethereum-optimism/superchain-ops/issues/16756)).\n\n## \ud83d\udcac Community & Collaboration\nThis week saw strong community engagement, particularly around future development efforts.\n\n*   Contributor `tooshiNoko` showed significant initiative by expressing interest in taking ownership of the entire \"Forge Deployer\" migration effort across a half-dozen related issues ([#17213](https://github.com/ethereum-optimism/superchain-ops/issues/17213) - [#17218](https://github.com/ethereum-optimism/superchain-ops/issues/17218)).\n*   The discussion around deprecating the `req-resp` sync protocol ([#14108](https://github.com/ethereum-optimism/superchain-ops/issues/14108)) was enriched by a detailed proposal from `emilianobonassi`, who had prototyped an alternative solution, demonstrating deep community involvement in core protocol design.\n*   Feedback from external chain operators in the `op-deployer` documentation issue ([#1530](https://github.com/ethereum-optimism/superchain-ops/issues/1530)) underscores the project's growing user base and the importance of clear, actionable documentation.", "2025-09-04T03:41:13.767Z"]
["ethereum-optimism/ecosystem_month_2025-06-01", "ethereum-optimism/ecosystem", "month", "2025-06-01", "# ethereum-optimism/ecosystem Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of focused execution on Superchain interoperability and developer experience, balanced with critical investigations into system stability. Significant progress was made on the GasTank mechanism, with new features for event indexing, message relaying, and automated fund claiming to bolster cross-chain operations. Developer tooling saw major enhancements, including improved documentation for `@eth-optimism/viem` and numerous refinements to Superchain-Ops. Concurrently, the team initiated deep dives into performance bottlenecks, with active discussions and profiling efforts targeting memory consumption in `op-batcher`, goroutine leaks in `op-node`, and event overflows in `op-supervisor`, setting the stage for future reliability improvements.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on enhancing cross-chain functionality and improving the developer toolkit.\n\n- **Superchain Interoperability via GasTank:** A significant effort was dedicated to building out the GasTank infrastructure. Development included indexing `GasTank` events and integrating its ABI to track provider operations ([#833](https://github.com/ethereum-optimism/ecosystem/pull/833), [#834](https://github.com/ethereum-optimism/ecosystem/pull/834), [#863](https://github.com/ethereum-optimism/ecosystem/pull/863)). The `autorelayer` was enhanced to only process messages with sufficient GasTank funds ([#861](https://github.com/ethereum-optimism/ecosystem/pull/861)) and to automatically claim funds for relayed messages ([#870](https://github.com/ethereum-optimism/ecosystem/pull/870)). An API endpoint was also added to fetch pending messages and claims ([#860](https://github.com/ethereum-optimism/ecosystem/pull/860), [#869](https://github.com/ethereum-optimism/ecosystem/pull/869)).\n\n- **Developer Tooling & Experience:**\n    - **`@eth-optimism/viem` Documentation:** A long-standing issue was resolved by significantly improving documentation generation for the Viem package, ensuring that non-interop actions are now correctly auto-documented ([#859](https://github.com/ethereum-optimism/ecosystem/pull/859)).\n    - **`supersim` Releases:** The `supersim` package for local multi-chain development received several alpha releases throughout the month, advancing its capabilities ([#835](https://github.com/ethereum-optimism/ecosystem/pull/835), [#873](https://github.com/ethereum-optimism/ecosystem/pull/873), [#880](https://github.com/ethereum-optimism/ecosystem/pull/880)).\n    - **Superchain-Ops Refinements:** A large batch of improvements were merged for the Superchain-Ops tooling, streamlining operational tasks by addressing issues related to task simulation, nonce handling, and address registry integration ([#337](https://github.com/ethereum-optimism/ecosystem/pull/337), [#342](https://github.com/ethereum-optimism/ecosystem/pull/342), [#448](https://github.com/ethereum-optimism/ecosystem/pull/448), and others).\n\n- **Package Maintenance:** Routine version updates were applied across the ecosystem, including for `ponder-interop`, `viem`, `wagmi`, and `autorelayer-interop` to keep dependencies current ([#852](https://github.com/ethereum-optimism/ecosystem/pull/852), [#853](https://github.com/ethereum-optimism/ecosystem/pull/853), [#878](https://github.com/ethereum-optimism/ecosystem/pull/878)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month reflected a dual focus on shipping new features and addressing foundational stability.\n\n- **Closed Issues:**\n    - **CI/CD & Testing:** A major investigation into CI flakiness was concluded after implementing a test flake report generator and other improvements ([#16271](https://github.com/ethereum-optimism/ecosystem/issues/16271)). Following extensive discussion, a spike to define CI SLAs was closed with the decision not to implement them at this time ([#16437](https://github.com/ethereum-optimism/ecosystem/issues/16437)).\n    - **Feature Completion:** Issues corresponding to the month's development work were closed, including GasTank claim automation ([#840](https://github.com/ethereum-optimism/ecosystem/issues/840)), relayer fund checks ([#839](https://github.com/ethereum-optimism/ecosystem/issues/839)), and several tasks for the Superstacks Mini App claim flow ([#847](https://github.com/ethereum-optimism/ecosystem/issues/847), [#848](https://github.com/ethereum-optimism/ecosystem/issues/848), [#851](https://github.com/ethereum-optimism/ecosystem/issues/851)).\n    - **Tooling & Bugs:** The `@eth-optimism/viem` documentation gap was closed ([#731](https://github.com/ethereum-optimism/ecosystem/issues/731]), and a build issue with `@eth-optimism/tokenlist` was resolved ([#1146](https://github.com/ethereum-optimism/ecosystem/issues/1146)).\n\n- **New & Active Issues:**\n    - **Performance & Stability:** This was a dominant theme in active discussions. Investigations are ongoing for a critical `op-node` goroutine leak causing sync failures ([#16332](https://github.com/ethereum-optimism/ecosystem/issues/16332]), an `op-supervisor` event overflow crash loop ([#16335](https://github.com/ethereum-optimism/ecosystem/issues/16335)), and abnormal CPU usage in `op-geth` potentially related to log indexing ([#613](https://github.com/ethereum-optimism/ecosystem/issues/613)). A new spike was created to profile and optimize significant memory consumption in the `op-batcher` during L1 congestion ([#16537](https://github.com/ethereum-optimism/ecosystem/issues/16537)).\n    - **Superchain Architecture:** A notable discussion emerged around creating a \"trivial-interop mode\" for `op-node` that would not require a supervisor, aiming to reduce operational overhead for chain operators with simple dependency sets ([#16519](https://github.com/ethereum-optimism/ecosystem/issues/16519)).\n    - **New Feature Planning:** A cluster of new issues was opened to scope out the next phase of work, including the Gas Tank contract implementation ([#836](https://github.com/ethereum-optimism/ecosystem/issues/836)), enhancements to logging and alerting ([#841](https://github.com/ethereum-optimism/ecosystem/issues/841), [#844](https://github.com/ethereum-optimism/ecosystem/issues/844)), and the Superstacks claim flow UI and contract deployment ([#867](https://github.com/ethereum-optimism/ecosystem/issues/867), [#868](https://github.com/ethereum-optimism/ecosystem/issues/868)).\n\n## \ud83d\udcac Community & Collaboration\nJune showcased a healthy mix of internal execution and external community engagement.\n\n- **Deep Technical Discussions:** Core contributors engaged in detailed, multi-day discussions on complex topics. The debate around CI SLAs ([#16437](https://github.com/ethereum-optimism/ecosystem/issues/16437)) involved multiple team members weighing the pros and cons of formal metrics. Similarly, the `op-batcher` memory investigation ([#16537](https://github.com/ethereum-optimism/ecosystem/issues/16537)) saw contributors sharing `pprof` analysis and collaborating on optimization strategies.\n\n- **Community-Driven Diagnostics:** Several issues saw valuable input from the wider community. In the `op-geth` high CPU usage thread ([#613](https://github.com/ethereum-optimism/ecosystem/issues/613)), multiple users confirmed the issue, shared their system specs, and provided `pprof` data to help diagnose the problem. This collaborative debugging is crucial for identifying and resolving real-world performance issues.\n\n- **New Contributor Interest:** The issue to reduce noisy terminal output from a script ([#781](https://github.com/ethereum-optimism/ecosystem/issues/781)) attracted interest from several new community members, who offered to take on the task, signaling a welcoming environment for new contributors.", "2025-09-04T03:42:49.425Z"]
["ethereum-optimism/infra_month_2025-07-01", "ethereum-optimism/infra", "month", "2025-07-01", "# ethereum-optimism/infra Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of significant refinement and stabilization for the project's infrastructure, with a strong focus on enhancing the testing framework and improving the robustness of core services. The `op-acceptor` tool received major upgrades, including parallel test execution and more flexible test handling, which dramatically improves CI efficiency and reliability. Concurrently, `proxyd` was enhanced with more granular controls for rate limiting and timeouts, bolstering its performance and configurability. The team also made substantial progress in migrating acceptance tests to `devstack`, closing out a large volume of legacy issues and paving the way for more consistent testing environments.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis month's development work centered on improving the testing pipeline and core infrastructure components.\n\n-   **Testing Framework (`op-acceptor`) Overhaul:** A series of updates significantly improved the `op-acceptor` tool, making the testing process faster and more reliable.\n    -   **Performance:** Parallel test execution was introduced as a default behavior, automatically scaling with system cores to improve testing efficiency ([#438](https://github.com/ethereum-optimism/infra/pull/438)).\n    -   **Features:** A new \"gateless\" mode allows for automatic discovery and execution of tests within a directory ([#428](https://github.com/ethereum-optimism/infra/pull/428]), and a flag was added to allow test skips to be treated as skips instead of failures ([#435](https://github.com/ethereum-optimism/infra/pull/435]).\n    -   **Bug Fixes:** Several fixes addressed flaky tests and reporting inaccuracies, including one that caused failed runs to report zero duration ([#425](https://github.com/ethereum-optimism/infra/pull/425), [#430](https://github.com/ethereum-optimism/infra/pull/430), [#431](https://github.com/ethereum-optimism/infra/pull/431)).\n\n-   **`proxyd` Enhancements:** The `proxyd` service received several key features to improve its robustness, control, and observability.\n    -   A new feature for flashblocks-aware routing was introduced ([#418](https://github.com/ethereum-optimism/infra/pull/418)).\n    -   Error handling was improved with a \"499\" error code to specifically track client-canceled requests ([#420](https://github.com/ethereum-optimism/infra/pull/420)).\n    -   Conditional rate limiting for transaction senders was added ([#421](https://github.com/ethereum-optimism/infra/pull/421)).\n    -   Configuration was made more granular, allowing backend response timeouts to be set in milliseconds on a per-backend basis ([#436](https://github.com/ethereum-optimism/infra/pull/436)).\n\n-   **New Components & Service Updates:**\n    -   The initial commit for `op-spamoor` was made, marking the start of a new component ([#422](https://github.com/ethereum-optimism/infra/pull/422)).\n    -   The `op-ufm` package was updated to improve logging for \"transaction not found\" errors and to functionally ignore them in certain contexts ([#433](https://github.com/ethereum-optimism/infra/pull/433), [#437](https://github.com/ethereum-optimism/infra/pull/437)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in July focused on clearing a backlog of testing-related tasks and addressing long-standing stability concerns, while also initiating discussions on future infrastructure work.\n\n-   **Closed Issues:**\n    -   **Acceptance Test Migration:** A major effort was completed to port numerous acceptance tests to `devstack`, resolving a series of related issues. This included tests for `ChainFork` ([#413](https://github.com/ethereum-optimism/infra/issues/413)), `WithdrawalsRoot` ([#412](https://github.com/ethereum-optimism/infra/issues/412)), `ERC20Bridge` ([#415](https://github.com/ethereum-optimism/infra/issues/415)), `OperatorFee` ([#414](https://github.com/ethereum-optimism/infra/issues/414)), and `Pectra` ([#416](https://github.com/ethereum-optimism/infra/issues/416)).\n    -   **Stability and Reliability:** Several long-standing issues concerning sequencer stability ([#11228](https://github.com/ethereum-optimism/infra/issues/11228), [#12240](https://github.com/ethereum-optimism/infra/issues/12240)]) and test flakiness ([#348](https://github.com/ethereum-optimism/infra/issues/348), [#244](https://github.com/ethereum-optimism/infra/issues/244)]) were closed, indicating improved system reliability.\n    -   **Flashblocks Deployment:** The task to deploy the `flashblocks-websocket-proxy` in op-sepolia was completed ([#16686](https://github.com/ethereum-optimism/infra/issues/16686)), and strategic discussions around flashblocks infrastructure were concluded ([#16496](https://github.com/ethereum-optimism/infra/issues/16496), [#16689](https://github.com/ethereum-optimism/infra/issues/16689)]).\n\n-   **New & Active Issues:**\n    -   **Future Work:** New issues were opened to guide upcoming efforts, including aligning the Kurtosisnet test topology with production ([#16746](https://github.com/ethereum-optimism/infra/issues/16746)), migrating from Etherscan to Blockscout ([#1696](https://github.com/ethereum-optimism/infra/issues/1696)), and porting `TestFjord` to devstack ([#440](https://github.com/ethereum-optimism/infra/issues/440)).\n    -   **Ongoing Discussions:** Key active discussions include establishing comprehensive monitoring and alerting for flashblocks ([#16388](https://github.com/ethereum-optimism/infra/issues/16388)), tracking the implementation of a minimum base fee ([#16807](https://github.com/ethereum-optimism/infra/issues/16807)), and designing a system for congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/infra/issues/306)).\n    -   **Persistent Bugs:** A difficult-to-reproduce bug where invalid interop transactions are occasionally included in the mempool remains an active area of investigation ([#635](https://github.com/ethereum-optimism/infra/issues/635)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed planning and cross-repository coordination throughout the month. The extensive discussion on establishing flashblocks monitoring and alerting ([#16388](https://github.com/ethereum-optimism/infra/issues/16388)) highlights a proactive approach to operational readiness, with clear definitions of metrics and SLAs. The frequent cross-referencing of pull requests between the `infra` and `optimism` repositories, particularly for the acceptance test porting effort, demonstrates strong alignment between teams. Additionally, community interest in contributing to future designs was seen in the discussion around congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/infra/issues/306)), indicating healthy external engagement with the project's roadmap.", "2025-09-04T03:44:21.221Z"]
["ethereum-optimism/docs_month_2025-07-01", "ethereum-optimism/docs", "month", "2025-07-01", "# ethereum-optimism/docs Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of significant enhancement and refinement for the Optimism documentation, with a strong focus on improving the experience for node operators and developers. The most notable achievement was the integration of comprehensive support for the Nethermind client ([#1615](https://github.com/ethereum-optimism/docs/pull/1615)), broadening the options for network participants. This was complemented by extensive maintenance work, including a repository-wide migration of explorer links from Etherscan to Blockscout ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)), standardization of terminology, and preparations for the upcoming Upgrade 16. A forward-looking proposal to migrate the entire documentation platform to Mintlify ([#1691](https://github.com/ethereum-optimism/docs/pull/1691)) was also introduced, signaling a potential major investment in the documentation's infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on expanding operator guides, ensuring documentation consistency, and preparing for a network upgrade.\n\n- **Node Operator Documentation Expansion:**\n  - A major effort was completed to add comprehensive support for the Nethermind client, updating numerous pages related to node configuration, management, and architecture ([#1615](https://github.com/ethereum-optimism/docs/pull/1615)).\n  - New guides were added to assist chain operators, including a complete batcher deployment guide ([#1665](https://github.com/ethereum-optimism/docs/pull/1665)) and a tutorial for setting up a proposer ([#1645](https://github.com/ethereum-optimism/docs/pull/1645)).\n  - The list of RPC providers was updated to include Grove ([#1685](https://github.com/ethereum-optimism/docs/pull/1685)).\n\n- **Documentation Consistency and Maintenance:**\n  - A significant cleanup effort standardized terminology and capitalization across the documentation for terms like \"cross-chain,\" \"Superchain,\" and \"L2ToL2\" ([#1672](https://github.com/ethereum-optimism/docs/pull/1672), [#1677](https://github.com/ethereum-optimism/docs/pull/1677), [#1678](https://github.com/ethereum-optimism/docs/pull/1678)).\n  - All explorer links were standardized, migrating references from Etherscan to Blockscout for OP Mainnet and OP Sepolia ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)).\n  - Several bug fixes were merged to correct broken image links ([#1694](https://github.com/ethereum-optimism/docs/pull/1694]), a broken external link ([#1683](https://github.com/ethereum-optimism/docs/pull/1683]), and display issues in upgrade notices ([#1699](https://github.com/ethereum-optimism/docs/pull/1699)).\n\n- **Upgrade 16 Preparations:**\n  - Documentation was updated to prepare for the upcoming network upgrade, including corrections to instructions ([#1684](https://github.com/ethereum-optimism/docs/pull/1684]), the addition of consensus configurations for Holocene and Isthmus ([#1686](https://github.com/ethereum-optimism/docs/pull/1686)), and the inclusion of the upgrade's execution date ([#1689](https://github.com/ethereum-optimism/docs/pull/1689)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in July focused on closing out long-standing items related to infrastructure and tooling, while new issues and discussions pointed towards future improvements in testing and documentation platforms.\n\n- **Closed Issues:**\n  - **Infrastructure & Tooling:** Several issues concerning flashblocks deployment and enablement were closed, marking progress on their integration ([#16686](https://github.com/ethereum-optimism/docs/issues/16686), [#16544](https://github.com/ethereum-optimism/docs/issues/16544), [#16496](https://github.com/ethereum-optimism/docs/issues/16496)). Issues related to sequencer stability ([#11228](https://github.com/ethereum-optimism/docs/issues/11228), [#12240](https://github.com/ethereum-optimism/docs/issues/12240)) and improving `op-node` reset logic ([#16314](https://github.com/ethereum-optimism/docs/issues/16314)) were also closed as resolved or no longer actionable.\n  - **Documentation & Process:** The tracking issue for the Etherscan-to-Blockscout migration was closed following the merge of the corresponding PR ([#1696](https://github.com/ethereum-optimism/docs/issues/1696)). A long-standing issue clarifying L1 contract deployment in a tutorial was also resolved ([#1401](https://github.com/ethereum-optimism/docs/issues/1401)). Administrative issues for June's metrics reports were closed as well ([#1681](https://github.com/ethereum-optimism/docs/issues/1681), [#1682](https://github.com/ethereum-optimism/docs/issues/1682)).\n\n- **New & Active Issues:**\n  - **Documentation Platform:** A significant new pull request was opened to migrate the documentation site to Mintlify ([#1691](https://github.com/ethereum-optimism/docs/pull/1691]), representing a major potential future direction for the project's documentation.\n  - **Testing Improvements:** A new issue was opened to align the acceptance test topology with the production environment, addressing a discrepancy in how the sequencer is exposed ([#16746](https://github.com/ethereum-optimism/docs/issues/16746)). Active discussion continued on designing a service for mock EL sync testing ([#16452](https://github.com/ethereum-optimism/docs/issues/16452)).\n  - **Protocol Design:** An older issue proposing a system for congestion-based builder transaction reordering ([#306](https://github.com/ethereum-optimism/docs/issues/306)) saw renewed interest, with community members expressing a desire to collaborate on the concept.\n\n## \ud83d\udcac Community & Collaboration\nJuly's activities highlighted a structured and collaborative approach to improving the Optimism ecosystem. The creation of administrative issues for monthly metrics and audits reflects a commitment to process and quality. Discussions on active issues, such as those related to testing infrastructure ([#16452](https://github.com/ethereum-optimism/docs/issues/16452), [#16746](https://github.com/ethereum-optimism/docs/issues/16746)), show focused collaboration on improving the reliability of the OP Stack", "2025-09-04T03:44:09.843Z"]
["ethereum-optimism/docs_month_2025-06-01", "ethereum-optimism/docs", "month", "2025-06-01", "# ethereum-optimism/docs Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of significant progress in both external-facing documentation and internal development stability. A major effort was dedicated to enhancing documentation for chain operators and developers, with the addition of a new sequencer setup guide and several tutorials focused on Superchain interoperability. Concurrently, a substantial push was made to improve the CI/CD pipeline and Superchain-ops tooling, resolving a large number of long-standing issues and leading to a more stable and efficient development process. While these improvements were being made, deep technical investigations continued into the performance and behavior of core components like `op-geth`, `op-supervisor`, and `op-batcher`.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on refining documentation for accuracy, expanding guides for operators, and updating tooling references.\n\n- **Operator & Developer Documentation:**\n    - A detailed guide for setting up sequencer nodes for custom OP Stack chains was added, providing crucial instructions for new chain deployments ([#1632](https://github.com/ethereum-optimism/docs/pull/1632)).\n    - Interoperability documentation was enhanced with a new tutorial on relaying arbitrary log messages using attestations ([#1613](https://github.com/ethereum-optimism/docs/pull/1613)).\n    - A critical bug in the deposit flow tutorial was fixed, resolving a long-standing issue that prevented users from completing the steps ([#1648](https://github.com/ethereum-optimism/docs/pull/1648)).\n    - Numerous smaller fixes were merged, correcting typos ([#1652](https://github.com/ethereum-optimism/docs/pull/1652), [#1653](https://github.com/ethereum-optimism/docs/pull/1653)), fixing broken navigation links ([#1638](https://github.com/ethereum-optimism/docs/pull/1638), [#1659](https://github.com/ethereum-optimism/docs/pull/1659)), and removing outdated devnet information ([#1670](https://github.com/ethereum-optimism/docs/pull/1670)).\n\n- **Node Configuration & Tooling Updates:**\n    - The proposer configuration page was updated to reflect the latest setup from a recent config review ([#1668](https://github.com/ethereum-optimism/docs/pull/1668)).\n    - Node operator documentation was updated to align `devp2p/disc` defaults with OP EL's topology ([#1565](https://github.com/ethereum-optimism/docs/pull/1565)) and to update the challenger version for Upgrade 16 ([#1658](https://github.com/ethereum-optimism/docs/pull/1658)).\n    - Reference documentation for `supersim` was updated with missing commands and help text, improving its usability for app developers ([#1669](https://github.com/ethereum-optimism/docs/pull/1669)).\n    - The data glossary was expanded with new logic related to resolving dispute game costs ([#1655](https://github.com/ethereum-optimism/docs/pull/1655)).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw the resolution of a massive backlog of tooling and CI issues, while new discussions focused on core component performance and documentation needs.\n\n- **Closed Issues:**\n    - **CI/CD and Superchain-Ops Tooling Overhaul:** A significant number of issues were closed, marking a major milestone in improving internal tooling. This included implementing \"stacked\" simulations in CI ([#342](https://github.com/ethereum-optimism/docs/issues/342)), improving the OPCM Migrate Script ([#16326](https://github.com/ethereum-optimism/docs/issues/16326)), refactoring `MultisigTask` architecture ([#636](https://github.com/ethereum-optimism/docs/issues/636)), and enhancing CI job performance ([#648](https://github.com/ethereum-optimism/docs/issues/648)). The overarching issue to investigate and improve CI flakiness was also closed, noting the release of a test flake report generator ([#16271](https://github.com/ethereum-optimism/docs/issues/16271)).\n    - **Developer Tooling & Features:** Issues related to the implementation and testing of flashblocks were closed ([#16468](https://github.com/ethereum-optimism/docs/issues/16468), [#354](https://github.com/ethereum-optimism/docs/issues/354)), as was a feature request for deterministic gas testing ([#408](https://github.com/ethereum-optimism/docs/issues/408)).\n    - **Bug Fixes & Documentation:** Key closures included the fix for the deposit flow tutorial ([#1226](https://github.com/ethereum-optimism/docs/issues/1226)), an outdated L2 rollup testnet guide ([#1614](https://github.com/ethereum-optimism/docs/issues/1614)), and a bug in `op-deployer` that was resolved in a newer release candidate ([#16618](https://github.com/ethereum-optimism/docs/issues/16618)).\n\n- **New & Active Issues:**\n    - **Core Component Performance:** Several critical discussions are ongoing regarding the performance of OP Stack components. These include investigations into abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/docs/issues/613)), memory spikes in `op-batcher` during L1 congestion ([#16537](https://github.com/ethereum-optimism/docs/issues/16537)), and `op-node` getting stuck with thousands of goroutines ([#16332](https://github.com/ethereum-optimism/docs/issues/16332)).\n    - **`op-supervisor` Behavior:** Complex discussions continued around improving the `op-supervisor`'s behavior during resets, particularly concerning L1 origin validity handling ([#16315](https://github.com/ethereum-optimism/docs/issues/16315)) and fault proof data provisioning for non-genesis interop upgrades ([#16166](https://github.com/ethereum-optimism/docs/issues/16166)).\n    - **New Documentation Requests:** New issues were opened requesting a tutorial for updating a fee vault ([#1671](https://github.com/ethereum-optimism/docs/issues/1671)) and updated documentation for Movement Network's integration ([#1676](https://github.com/ethereum-optimism/docs/issues/1676)), highlighting areas for future content.\n    - **Persistent Bugs:** The issue of `eth_getTransactionCount` returning an incorrect nonce for pending transactions remains active, with users continuing to seek updates ([#623](https://github.com/ethereum-optimism/docs/issues/623)).\n\n## \ud83d\udcac Community & Collaboration\nCommunity engagement was evident in both issue reporting and contribution interest. The active discussion around abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/docs/issues/613)) saw users providing detailed `pprof` data and system observations to help diagnose the problem. In a positive sign of open-source collaboration, multiple community members (`JoseValperga`, `Mau1401`, `nsancheznez`) expressed interest and offered to work on an issue to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/docs/issues/781)), demonstrating a healthy and engaged contributor community.", "2025-09-04T03:42:48.616Z"]
["ethereum-optimism/op-analytics_month_2025-07-01", "ethereum-optimism/op-analytics", "month", "2025-07-01", "# ethereum-optimism/op-analytics Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of significant enhancement and stabilization for the `op-analytics` data pipelines. Development focused on expanding data ingestion to new chains like Celo, integrating new data sources such as Dune and Goldsky, and substantially improving the reliability of existing processes like ETH transfers and revenue share calculations. The team also dedicated considerable effort to infrastructure maintenance, including frequent Dagster version upgrades and the addition of new analytics notebooks. This work was complemented by resolving numerous long-standing issues related to sequencer stability, test suite porting, and interoperability, clearing the path for future development.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis month's work centered on broadening data coverage and improving the robustness of the analytics platform.\n\n- **Data Pipeline & Ingestion Enhancements:**\n    - **Revenue Share (Revshare) Logic:** A major effort was made to improve Revshare transfer logic. Work unified L2 transaction handling ([#1651](https://github.com/ethereum-optimism/op-analytics/pull/1651)), expanded the system to capture all inbound transfers across all chains ([#1678](https://github.com/ethereum-optimism/op-analytics/pull/1678), [#1680](https://github.com/ethereum-optimism/op-analytics/pull/1680)), and fixed a critical data insertion bug ([#1681](https://github.com/ethereum-optimism/op-analytics/pull/1681)).\n    - **New Data Sources & Chains:** The pipeline's scope was expanded by adding support for the Celo chain ([#1694](https://github.com/ethereum-optimism/op-analytics/pull/1694)), integrating Ethereum into the Goldsky ingestion process ([#1696](https://github.com/ethereum-optimism/op-analytics/pull/1696)), and adding a new process to pull top EVM contracts from Dune ([#1711](https://github.com/ethereum-optimism/op-analytics/pull/1711)).\n    - **ETH Transfer Reliability:** Several fixes were implemented for ETH transfers, including resolving an issue with null values being dropped ([#1665](https://github.com/ethereum-optimism/op-analytics/pull/1665)), correcting data type inconsistencies ([#1670](https://github.com/ethereum-optimism/op-analytics/pull/1670)), and enabling backfilling through the Dagster UI ([#1667](https://github.com/ethereum-optimism/op-analytics/pull/1667)).\n    - **External API Adaptations:** The pipelines were updated to handle changes in the L2Beat API's `provider` field and the Dune API's date format, ensuring uninterrupted data flow ([#1685](https://github.com/ethereum-optimism/op-analytics/pull/1685), [#1688](https://github.com/ethereum-optimism/op-analytics/pull/1688)).\n\n- **Infrastructure & Tooling:**\n    - **Dagster Upgrades:** The project's core data orchestrator, Dagster, received numerous version bumps throughout the month to improve functionality and stability ([#1672](https://github.com/ethereum-optimism/op-analytics/pull/1672), [#1675](https://github.com/ethereum-optimism/op-analytics/pull/1675), [#1708](https://github.com/ethereum-optimism/op-analytics/pull/1708), [#1710](https://github.com/ethereum-optimism/op-analytics/pull/1710)).\n    - **New Analytics Notebooks:** Several new notebooks were added to enhance analysis capabilities, including tools for DefiLlama full backfills ([#1703](https://github.com/ethereum-optimism/op-analytics/pull/1703)) and flashblocks analysis ([#1714](https://github.com/ethereum-optimism/op-analytics/pull/1714)).\n    - **Pipeline Maintenance:** The team performed necessary maintenance by removing the decommissioned Kroma chain from ingestion ([#1671](https://github.com/ethereum-optimism/op-analytics/pull/1671)) and temporarily disabling block batch processing for Ethereum and Celo to address processing issues ([#1698](https://github.com/ethereum-optimism/op-analytics/pull/1698), [#1699](https://github.com/ethereum-optimism/op-analytics/pull/1699), [#1701](https://github.com/ethereum-optimism/op-analytics/pull/1701)).\n\n- **Data Quality & Refinements:**\n    - **Bug Fixes:** Critical bugs were addressed, including implementing retry logic for collective balance retrieval to prevent nulls ([#1663](https://github.com/ethereum-optimism/op-analytics/pull/1663)) and correcting L2 priority fee calculations ([#1704](https://github.com/ethereum-optimism/op-analytics/pull/1704)).\n    - **Metadata Updates:** Chain metadata was updated with new data for Celo and Frax ([#1683](https://github.com/ethereum-optimism/op-analytics/pull/1683]), and the Dune Top Contracts list was refreshed ([#1712](https://github.com/ethereum-optimism/op-analytics/pull/1712)).\n\n## \ud83d\udc1b Issues & Triage\nJuly saw the resolution of many long-standing issues and the start of important new initiatives.\n\n- **Closed Issues:**\n    - **Sequencer & Node Stability:** A significant number of older issues related to sequencer stability were closed, including recovery from sequence window expiration ([#11228](https://github.com/ethereum-optimism/op-analytics/issues/11228]), sequencer halting on temporary errors ([#12240](https://github.com/ethereum-optimism/op-analytics/issues/12240)), and decisions around flashblocks deployment configurations ([#16688](https://github.com/ethereum-optimism/op-analytics/issues/16688), [#16689](https://github.com/ethereum-optimism/op-analytics/issues/16689)).\n    - **Test Suite & Interoperability:** Progress was made in testing by closing tasks to port `TestERC20Bridge` and `TestChainFork` to devstack ([#415](https://github.com/ethereum-optimism/op-analytics/issues/415), [#413](https://github.com/ethereum-optimism/op-analytics/issues/413)). An interop acceptance test issue was also closed and handed over to the Protocol team ([#298](https://github.com/ethereum-optimism/op-analytics/issues/298)).\n    - **Documentation & Workflow:** Key documentation issues were resolved, including the final review of Runbook v3 ([#16651](https://github.com/ethereum-optimism/op-analytics/issues/16651)) and a clarification for the L2 Testnet Tutorial that had been open since February ([#1401](https://github.com/ethereum-optimism/op-analytics/issues/1401)).\n\n- **New & Active Issues:**\n    - **Etherscan to Blockscout Migration:** A new initiative was started to migrate OP Mainnet and OP Sepolia references from Etherscan to Blockscout, tracked in issue [#1697](https://github.com/ethereum-optimism/op-analytics/issues/1697).\n    - **Invalid Interop Transaction Bug:** A high-priority investigation continues into a flaky bug where invalid interop transactions are sometimes included in the txpool ([#635](https://github.com/ethereum-optimism/op-analytics/issues/635)). Team members are actively trying to reproduce the issue using detailed CI artifacts.\n    - **Future Initiatives:** Active discussions point to significant future work, including the design of a sync tester service ([#16452](https://github.com/ethereum-optimism/op-analytics/issues/16452)), tracking the \"Min Base Fee\" initiative ([#16807](https://github.com/ethereum-optimism/op-analytics/issues/16807)), and exploring congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/op-analytics/issues/306)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was strong this month, particularly in debugging complex issues and planning future architecture.\n\n- **Deep Dive Debugging:** The extensive discussion on the invalid interop transaction bug ([#635](https://github.com/ethereum-optimism/op-analytics/issues/635)) showcased deep collaboration, with members like `pcw109550` providing detailed artifacts and `axelKingsley` conducting in-depth analysis of `geth`'s transaction flow.\n- **Cross-Team Coordination:** The tracking issue for the \"Min Base Fee\" ([#16807](https://github.com/ethereum-optimism/op-analytics/issues/16807)) highlights coordination across multiple repositories (`reth`, `op-alloy`, `optimism`), demonstrating the project's role within the broader ecosystem.\n- **Proactive Code Improvement:** The identification of duplicate code in `op-batcher` ([#16677](https://github.com/ethereum-optimism/op-analytics/issues/16677)) by `chuwt` and the welcoming response from", "2025-09-04T03:44:40.330Z"]
["ethereum-optimism/optimism_month_2025-06-01", "ethereum-optimism/optimism", "month", "2025-06-01", "# ethereum-optimism/optimism Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of significant progress in bolstering the Superchain's robustness, testability, and deployment capabilities. Development efforts were heavily concentrated on enhancing the testing infrastructure, with the introduction of new acceptance tests for flashblocks, withdrawals, and interop load scenarios. Core components like `op-supervisor` and `op-node` received critical updates to improve stability, particularly around reset logic and event handling. The `op-deployer` was enhanced to support v4.0.0 upgrades and custom Superchain configurations, while the team actively triaged and addressed stability issues like `op-node` goroutine leaks and `op-supervisor` event overflows.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on strengthening the core stack, improving deployment tooling, and expanding test coverage for advanced features.\n\n### Enhanced Testing and Acceptance Framework\nThe project's testing infrastructure saw major enhancements to improve reliability and expand coverage for Superchain functionalities.\n- **New Acceptance Tests:** New tests were added to validate flashblocks transfer functionality ([#16515](https://github.com/ethereum-optimism/optimism/pull/16515)), withdrawals with super roots ([#16491](https://github.com/ethereum-optimism/optimism/pull/16491)), and an adversarial load test for interop scenarios ([#16433](https://github.com/ethereum-optimism/optimism/pull/16433)).\n- **Test Validation and Compliance:** A new validation script was introduced to enforce consistent Forge test conventions ([#16543](https://github.com/ethereum-optimism/optimism/pull/16543)), and numerous test files were updated to align with these new rules ([#16561](https://github.com/ethereum-optimism/optimism/pull/16561), [#16590](https://github.com/ethereum-optimism/optimism/pull/16590), [#16596](https://github.com/ethereum-optimism/optimism/pull/16596)).\n- **Interop Testing:** An `interop-loadtest` gate was added to manage load test execution ([#16564](https://github.com/ethereum-optimism/optimism/pull/16564)), and support for different block times in interop load tests was introduced ([#16611](https://github.com/ethereum-optimism/optimism/pull/16611)).\n\n### `op-supervisor` and `op-node` Robustness\nSignificant effort was invested in making the supervisor and node more resilient, particularly in handling resets, reorgs, and interop events.\n- **Reset and Reorg Logic:** `op-node` was modified to search backwards for the latest valid unsafe head during resets, optimizing for L1 reorgs ([#16312](https://github.com/ethereum-optimism/optimism/pull/16312)). The `op-supervisor` now determines the local unsafe target itself, enabling it to initiate resets when needed ([#16557](https://github.com/ethereum-optimism/optimism/pull/16557)).\n- **System Renaming and Event Handling:** Supervisor and op-node modes were renamed for better clarity ([#16464](https://github.com/ethereum-optimism/optimism/pull/16464)). A new gauge was added to monitor inflight events by type, aiding in debugging performance issues ([#16473](https://github.com/ethereum-optimism/optimism/pull/16473)).\n- **Failsafe API:** A new API was introduced for the `op-supervisor`'s Failsafe mode, allowing for better administrative control ([#16582](https://github.com/ethereum-optimism/optimism/pull/16582)).\n\n### Deployment Tooling (`op-deployer`)\nThe `op-deployer` was a key focus, with enhancements to support network upgrades and custom chain deployments.\n- **V4.0.0 Upgrade Support:** Support was added for upgrading and validating v4.0.0 configurations, crucial for future network upgrades ([#16048](https://github.com/ethereum-optimism/optimism/pull/16048)).\n- **Bug Fixes and Enhancements:** A bug was fixed to correctly handle the L1 contracts release flag ([#16316](https://github.com/ethereum-optimism/optimism/pull/16316)), and incorrect artifact hashes were corrected ([#16562](https://github.com/ethereum-optimism/optimism/pull/16562), [#16565](https://github.com/ethereum-optimism/optimism/pull/16565)). New end-to-end bootstrap tests were also added ([#16575](https://github.com/ethereum-optimism/optimism/pull/16575)).\n- **Custom Superchains:** New documentation was added to guide users on custom Superchain deployments ([#16309](https://github.com/ethereum-optimism/optimism/pull/16309]), and support for custom OPCM was integrated ([#16546](https://github.com/ethereum-optimism/optimism/pull/16546)).\n\n### Core Component and CI/CD Improvements\n- **`op-batcher`:** The batcher was improved to better detect \"not yet ready\" sync statuses ([#16298](https://github.com/ethereum-optimism/optimism/pull/16298)) and simplified by removing a redundant flag ([#16413](https://github.com/ethereum-optimism/optimism/pull/16413)).\n- **Transaction Management:** A feature was added to allow rebroadcasting of signed transactions without a fee bump, improving flexibility ([#16310](https://github.com/ethereum-optimism/optimism/pull/16310)).\n- **CI Pipeline:** The CI pipeline was optimized by caching `solc` compiler versions ([#16317](https://github.com/ethereum-optimism/optimism/pull/16317)) and Rust installations ([#16480](https://github.com/ethereum-optimism/optimism/pull/16480)) to speed up builds.\n\n## \ud83d\udc1b Issues & Triage\nThe month saw a focus on resolving CI instability, advancing flashblocks integration, and triaging critical node and supervisor stability reports.\n\n- **Closed Issues:**\n  - **CI/CD:** The investigation into CI flakiness concluded with the release of a flake report generator and improved test stability ([#16271](https://github.com/ethereum-optimism/optimism/issues/16271)). The proposal to adopt formal CI SLAs was explored and closed for now ([#16437](https://github.com/ethereum-optimism/optimism/issues/16437)).\n  - **Flashblocks:** The issue to enable flashblocks on the `eris-0` testnet was completed, marking a key milestone ([#16468](https://github.com/ethereum-optimism/optimism/issues/16468)).\n  - **Testing:** Several testing-related issues were closed, including the completion of withdrawal path acceptance testing ([#15958](https://github.com/ethereum-optimism/optimism/issues/15958)) and the addition of a test to maximize executing messages across chains ([#16434](https://github.com/ethereum-optimism/optimism/issues/16434)).\n  - **Superchain Operations:** A large number of issues related to `superchain-ops` task management, simulation, and validation were resolved, streamlining operational workflows ([#337](https://github.com/ethereum-optimism/optimism/issues/337), [#342](https://github.com/ethereum-optimism/optimism/issues/342), [#654](https://github.com/ethereum-optimism/optimism/issues/654)).\n\n- **New & Active Issues:**\n  - **Node and Supervisor Stability:** A critical issue regarding `op-node` v1.13.3 getting stuck with thousands of goroutines remains active, with multiple users reporting sync failures ([#16332](https://github.com/ethereum-optimism/optimism/issues/16332)). Similarly, an `op-supervisor` crash-loop caused by event overflow is under active investigation, with PRs opened to add better monitoring ([#16335](https://github.com/ethereum-optimism/optimism/issues/16335)).\n  - **Future Architecture:** A series of new issues ([#16519](https://github.com/ethereum-optimism/optimism/issues/16519), [#16520](https://github.com/ethereum-optimism/optimism/issues/16520), [#16521](https://github.com/ethereum-optimism/optimism/issues/16521)) were opened to explore a \"trivial-interop\" mode for `op-node` that would not require a supervisor, sparking discussion on the future upgrade path for single-chain deployments.\n  - **Persistent Bugs:** The long-standing issue of `eth_getTransactionCount` returning an incorrect nonce for pending transactions ([#623](https://github.com/ethereum-optimism/optimism/issues/623)) continues to receive comments from affected users, highlighting its ongoing impact.\n  - **Flashblocks Progression:** New issues were created to track the non-public enablement of flashblocks on `op-sepolia` ([#16496](https://github.com", "2025-09-04T03:43:28.056Z"]
["ethereum-optimism/superchain-ops_month_2025-07-01", "ethereum-optimism/superchain-ops", "month", "2025-07-01", "# ethereum-optimism/superchain-ops Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of execution and refinement for the Superchain. The primary focus was on finalizing the U16 network upgrade, with development shifting from preparation to execution. Numerous bug fixes, configuration updates, and validation corrections culminated in the successful on-chain execution of several key U16 tasks. Concurrently, the team invested heavily in operational maturity by overhauling the Security Council rehearsal system, preparing new playbooks for the next cohort of signers. This dual focus on immediate upgrade delivery and long-term operational excellence defined the month's progress.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on the U16 upgrade, security operations, and core tooling enhancements.\n\n### U16 Upgrade Finalization and Execution\nThe team dedicated significant effort to ensuring a smooth U16 upgrade, moving from preparation to final execution.\n- **Preparation:** Early in the month, state diffs were generated for Op & Ink, Soneium, and Unichain to prepare for the upgrade ([#1110], [#1111], [#1112]).\n- **Bug Fixes:** A series of critical bug fixes were implemented for U16 configurations on both Sepolia and mainnet. This included resolving issues in `config.toml` files ([#1114]), adding state overrides for simulation ([#1115]), and correcting configurations for DPM/DGM features ([#1113], [#1123], [#1127]).\n- **Validation & Documentation:** Accuracy was a key focus, with updates to READMEs ([#1134]), validation files for `approvedHashes` ([#1135]), and corrections to `AnchorStateRegistry` storage interpretation ([#1141]).\n- **Execution:** By the end of the month, U16 tasks 016-021 were successfully moved from \"READY TO SIGN\" ([#1142]) to \"EXECUTED,\" with on-chain transaction hashes recorded ([#1148]).\n- **Speedrun Templates:** To support future upgrades, bug fixes were introduced to allow speedrun templates to handle multiple OPCM targets and use historical prestates, preventing creation collisions ([#1146], [#1147]).\n\n### Security Council Rehearsal System Overhaul\nSignificant progress was made in maturing the Security Council's operational readiness.\n- **Integration & Enhancement:** Rehearsals were integrated into the new `superchain-ops` system ([#1121]), and old CI configurations were streamlined ([#1130]). The system was enhanced with new templates for removing signers and performing nested upgrades ([#1128], [#1132]).\n- **Playbook Development:** New playbooks and documentation were created for the July 2025 Cohort B signers, covering welcome procedures, signer removal, and nested upgrades ([#1140], [#1153], [#1154]).\n\n### Core Tooling and Contract Refactoring\nThe underlying tooling for managing multisig operations and upgrades saw substantial improvements.\n- **`MultisigTask` Refinements:** The `MultisigTask` contract was heavily refactored to improve modularity by moving Gnosis Safe logic into a library ([#1092]), enhancing readability ([#1090], [#1129]), and simplifying the contract by removing the `root address` state variable ([#1149]). A key bug was fixed to ensure configuration overrides are applied early, improving the developer workflow ([#1151]).\n- **Superchain Configuration:** A new template was added to unpause the SuperchainConfig post-U16, streamlining future administrative tasks ([#1137]).\n- **Performance:** A small but notable performance improvement was made in state diff decoding by optimizing `AccountAccessParser.sol` ([#1138]).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month focused on closing out legacy problems related to network stability and testing, while opening new issues for future infrastructure work.\n\n### Closed Issues\nA significant number of issues were resolved, hardening the system and cleaning up the backlog.\n- **Network Stability & Infrastructure:** Several long-standing issues concerning sequencer stability, recovery from sequence window expiration, and node startup problems were closed ([#11228], [#12240], [#15411]). Key progress was made on the flashblocks rollout, with the closure of issues related to RPC configuration, non-public deployment, and the websocket-proxy deployment ([#16544], [#16496], [#16686]).\n- **Testing & Validation:** The team resolved issues related to acceptance test reliability ([#16378]), failures from an `op-geth` version bump ([#16731]), and the porting of several tests to the `devstack` environment ([#413], [#415]).\n- **Tooling & Configuration:** An issue regarding CrossL2Inbox configuration was closed, as improvements in `op-deployer` tooling mitigated the original risk ([#15765]). An issue to improve the logger utility was also closed, with the conclusion that existing functionality is sufficient ([#15139]).\n\n### New & Active Issues\nDiscussions this month highlighted key areas for future development and ongoing challenges.\n- **Infrastructure Migration:** A new issue was opened to track the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia block explorers, representing a significant upcoming infrastructure project ([#1131]).\n- **Flashblocks Monitoring:** A critical active discussion focuses on establishing comprehensive monitoring and alerting for flashblocks ahead of its full enablement, defining key metrics for peer counts, transaction processing, and component health ([#16388]).\n- **Test Environment Alignment:** An important issue was raised to align the acceptance test network topology with the production environment, which is crucial for catching configuration-related bugs before they reach production ([#16746]).\n- **Potential Blockers:** An effort to add a semgrep rule for code style was blocked by a disabled GitHub Actions configuration ([#15115]), highlighting how repository settings can impact development velocity.\n\n## \ud83d\udcac Community & Collaboration\nWhile the reports do not indicate a large number of external contributions, they reveal strong internal collaboration among the core team. Detailed technical discussions on active issues like the `op-sync-tester` ([#16452]), interop stress testing ([#15285]), and flashblocks monitoring ([#16388]) show multiple team members engaging to solve complex problems.\n\nA positive example of community interaction was seen when a code duplication issue in `op-batcher` was pointed out by a user ([#16677]), who was then invited to submit a pull request to fix it. This demonstrates a welcoming and responsive approach to external feedback. The detailed checklists and planning evident in issues like the Fault Proof creator contract changes ([#15789]) further underscore a culture of thorough and collaborative engineering.", "2025-09-04T03:44:52.549Z"]
["ethereum-optimism/op-geth_month_2025-07-01", "ethereum-optimism/op-geth", "month", "2025-07-01", "# ethereum-optimism/op-geth Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of significant refinement and preparation for `op-geth`. Development focused on enhancing the robustness of interop transaction handling, with key optimizations to the block building path and the introduction of supervisor failsafe detection. The transaction pool received critical updates to improve validation and ensure correct filtering of re-injected transactions after reorgs. A major effort was also made to clean up the issue backlog, closing numerous long-standing items related to sequencer stability and testing. Towards the end of the month, development shifted to laying the groundwork for a major new feature: configurable base fees and data gas.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on improving stability, performance, and compatibility within the Superchain ecosystem.\n\n-   **Interop & Transaction Handling:**\n    -   The block building path was optimized by removing the `checkInterop` function, which was found to consume excessive time during block construction ([#585](https://github.com/ethereum-optimism/op-geth/pull/585)).\n    -   To improve security, the system was enhanced to detect supervisor failsafe states and reject interop transactions if the failsafe is active ([#636](https://github.com/ethereum-optimism/op-geth/pull/636)).\n\n-   **Transaction Pool Enhancements:**\n    -   A new `MaxTxGasLimit` feature was introduced to the transaction pool, allowing sequencers to enforce a per-transaction gas limit ([#626](https://github.com/ethereum-optimism/op-geth/pull/626)).\n    -   The transaction pool was refactored to ensure that transactions re-injected into the mempool after a reorg are correctly re-evaluated by ingress filters ([#642](https://github.com/ethereum-optimism/op-geth/pull/642)).\n\n-   **Superchain Compatibility & Tracing:**\n    -   Tracing capabilities were improved to display the `OptimismBaseFeeRecipient` in prestate results, providing better debugging information for Optimism-specific transactions ([#407](https://github.com/ethereum-optimism/op-geth/pull/407)).\n    -   The Superchain Registry commit was updated to align `op-geth` with the latest configurations ([#640](https://github.com/ethereum-optimism/op-geth/pull/640)).\n    -   To ensure broader compatibility, `op-geth` was updated to skip Celo Mainnet's non-standard genesis processing ([#646](https://github.com/ethereum-optimism/op-geth/pull/646)).\n\n-   **Preparatory & Upstream Work:**\n    -   Work began on merging `go-ethereum` v1.16.1 to keep `op-geth` synchronized with upstream improvements ([#638](https://github.com/ethereum-optimism/op-geth/pull/638)).\n    -   Groundwork was laid for future economic features with new pull requests to introduce a configurable minimum base fee ([#648](https://github.com/ethereum-optimism/op-geth/pull/648)) and configurable data gas ([#653](https://github.com/ethereum-optimism/op-geth/pull/653)).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw a concerted effort to address both new and long-standing issues, significantly improving the project's health.\n\n-   **Closed Issues:** A large number of issues were closed, reflecting progress in stability and maintenance.\n    -   **Sequencer Stability:** Several long-standing issues concerning sequencer halting ([#12240](https://github.com/ethereum-optimism/op-geth/issues/12240)) and recovery from sequence window expiration ([#11228](https://github.com/ethereum-optimism/op-geth/issues/11228)) were closed as no longer relevant.\n    -   **Performance & Bugs:** A long-standing issue regarding slow block retrieval was resolved ([#555](https://github.com/ethereum-optimism/op-geth/issues/555)). An issue where re-injected transactions could bypass filters was identified and promptly fixed ([#641](https://github.com/ethereum-optimism/op-geth/issues/641)).\n    -   **Configuration & Testing:** Issues related to flashblocks deployment strategy ([#16689](https://github.com/ethereum-optimism/op-geth/issues/16689), [#16690](https://github.com/ethereum-optimism/op-geth/issues/16690)) and interop prestate configuration ([#15765](https://github.com/ethereum-optimism/op-geth/issues/15765)) were resolved, clarifying project direction.\n\n-   **New & Active Issues:**\n    -   **Configurable Fees:** The most significant new work is centered around the \"Min Base Fee\" feature, with new issues opened to track its implementation in the block header ([#649](https://github.com/ethereum-optimism/op-geth/issues/649)) and payload attributes ([#650](https://github.ethereum-optimism/op-geth/issues/650)).\n    -   **Potential Blockers:** An investigation into abnormal CPU usage reported by users ([#613](https://github.com/ethereum-optimism/op-geth/issues/613)) remains active. Additionally, a flaky CI test where an invalid interop transaction is conditionally included in the mempool ([#635](https://github.com/ethereum-optimism/op-geth/issues/635)) is proving difficult to reproduce and resolve.\n    -   **Future Work:** Active discussions on designing a `sync-tester` service for mock EL testing ([#16452](https://github.com/ethereum-optimism/op-geth/issues/16452)) and stress-testing the interop expiry window ([#15285](https://github.com/ethereum-optimism/op-geth/issues/15285)) highlight upcoming development priorities.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was strong this month, with detailed discussions driving design decisions and issue resolution. The active dialogue around the `Min Base Fee` feature ([#16807](https://github.com/ethereum-optimism/op-geth/issues/16807)) demonstrated cross-repository coordination with work happening in `op-alloy` and `reth`. The resolution of issues like the interop prestate configuration ([#15765](https://github.com/ethereum-optimism/op-geth/issues/15765)) showcased thoughtful debate on where responsibilities should lie within the stack. Finally, community engagement was evident as a new contributor expressed interest in taking on a task to add a spelling linter ([#680](https://github.com/ethereum-optimism/op-geth/issues/680)), a positive sign for the project's contributor ecosystem.", "2025-09-04T03:44:38.138Z"]
["ethereum-optimism/specs_month_2025-07-01", "ethereum-optimism/specs", "month", "2025-07-01", "# ethereum-optimism/specs Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of focused refinement and foundational work for the OP Stack. Development centered on enhancing the Superchain's interoperability specifications, with key updates to improve cross-chain block referencing and API clarity. Significant progress was made in deploying and monitoring infrastructure for flashblocks on op-sepolia, as evidenced by the closure of several related tracking issues. Alongside these infrastructure advancements, the team dedicated substantial effort to documentation hygiene, specification cleanup, and laying the groundwork for future protocol upgrades like the `min-base-fee` specification.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on improving the clarity, accuracy, and robustness of the core specifications.\n\n- **Interoperability & Superchain Specification Refinements:**\n  - Enhancements were made to improve cross-chain operations, including adding `DerivationCurrentL1Update` and extending `interop_blockRefByNumber` to better track the L1 origin of L2 blocks ([#733](https://github.com/ethereum-optimism/specs/pull/733), [#735](https://github.com/ethereum-optimism/specs/pull/735)).\n  - The Supervisor API specification was updated to clarify how null block references are handled, ensuring more robust interactions ([#739](https://github.com/ethereum-optimism/specs/pull/739)).\n  - Terminology was aligned by explicitly stating that the `unsafe` safety level corresponds to `local-unsafe`, resolving an inconsistency between the specification and implementation ([#722](https://github.com/ethereum-optimism/specs/pull/722)).\n\n- **Documentation & Repository Maintenance:**\n  - A major effort to improve documentation structure began with a pull request to centralize all RPC specifications ([#736](https://github.com/ethereum-optimism/specs/pull/736)).\n  - Numerous small but important fixes were merged to correct broken links, typos, and grammatical errors across the documentation ([#716](https://github.com/ethereum-optimism/specs/pull/716), [#721](https://github.com/ethereum-optimism/specs/pull/721), [#740](https://github.com/ethereum-optimism/specs/pull/740)).\n  - The specification was cleaned up by removing the deprecated custom gas token feature ([#689](https://github.com/ethereum-optimism/specs/pull/689]).\n  - Repository management was streamlined by removing the `CODEOWNERS` file to simplify the review process ([#743](https://github.com/ethereum-optimism/specs/pull/743)).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw a significant cleanup of the issue tracker, with many older issues being closed, alongside the creation of new issues to scope out future work.\n\n- **Closed Issues:**\n  - **Flashblocks Deployment:** Several issues related to the deployment and configuration of flashblocks on op-sepolia were closed, including tasks for enabling flashblocks, deploying a websocket-proxy, and configuring the RPC ([#16544](https://github.com/ethereum-optimism/specs/issues/16544), [#16496](https://github.com/ethereum-optimism/specs/issues/16496), [#16686](https://github.com/ethereum-optimism/specs/issues/16686)).\n  - **Specification & Terminology Alignment:** Issues concerning the `interop_ready` RPC and inconsistencies in safety level terminology (`Unsafe` vs. `LocalUnsafe`) were resolved ([#714](https://github.com/ethereum-optimism/specs/issues/714), [#717](https://github.com/ethereum-optimism/specs/issues/717)).\n  - **Backlog Cleanup:** A number of older issues related to sequencer stability, outdated packages, and node startup problems were closed to clear the backlog ([#11228](https://github.com/ethereum-optimism/specs/issues/11228), [#12240](https://github.com/ethereum-optimism/specs/issues/12240), [#13459](https://github.com/ethereum-optimism/specs/issues/13459)).\n\n- **New & Active Issues:**\n  - **Future Protocol Features:** New issues were created to formally specify the `SuperchainConfig` type ([#741](https://github.com/ethereum-optimism/specs/issues/741)) and the `min-base-fee` mechanism ([#742](https://github.com/ethereum-optimism/specs/issues/742)), signaling the start of work on these important upgrades. The \"Min Base Fee\" tracking issue ([#16807](https://github.com/ethereum-optimism/specs/issues/16807)) saw active discussion and coordination of work across multiple repositories.\n  - **Testing and Monitoring:** There were detailed discussions on improving testing infrastructure, including developing a sync tester service ([#16452](https://github.com/ethereum-optimism/specs/issues/16452)), creating an E2E test for invalid transaction reinjection ([#16656](https://github.com/ethereum-optimism/specs/issues/16656)), and establishing comprehensive monitoring and alerting for flashblocks ([#16388](https://github.com/ethereum-optimism/specs/issues/16388)).\n  - **Ecosystem Tooling:** An active issue tracks the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia, a key change for the user-facing ecosystem ([#1696](https://github.com/ethereum-optimism/specs/issues/1696)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions on active issues. For example, the design of session management for the `op-sync-tester` ([#16452](https://github.com/ethereum-optimism/specs/issues/16452)) and the review process for `VerifyOPCM` ([#16653](https://github.com/ethereum-optimism/specs/issues/16653)) involved multiple contributors sharing proposals and feedback. There were also signs of community engagement, with contributors expressing interest in taking on tasks like adding a spelling lint ([#680](https://github.com/ethereum-optimism/specs/issues/680)) and collaborating on a design document for transaction reordering ([#306](https://github.com/ethereum-optimism/specs/issues/306)). The concerted effort to close stale issues indicates active maintenance and a healthy triage process within the core team.", "2025-09-04T03:44:37.638Z"]
["ethereum-optimism/optimism_month_2025-07-01", "ethereum-optimism/optimism", "month", "2025-07-01", "# ethereum-optimism/optimism Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month dedicated to planning and foundational work, with a strong emphasis on enhancing the OP Stack's testing infrastructure and preparing for major feature rollouts. While no major features were completed, significant progress was made in designing and initiating work on flashblocks deployment, a configurable minimum base fee, and substantial improvements to the `op-sync-tester`. This period of focused preparation sets the stage for upcoming releases aimed at increasing network robustness, improving developer experience, and advancing protocol capabilities.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile the daily reports indicated no major completed features, development activity was evident through numerous new pull requests initiating work across testing, protocol configuration, and component refactoring.\n\n*   **Testing Infrastructure Enhancements:** A significant effort was made to bolster the project's testing capabilities. This included introducing Supervisor Fuzzing to improve component robustness ([#16791](https://github.com/ethereum-optimism/optimism/pull/16791)), adding more `sysgo` tests to `op-acceptance-tests` ([#16817](https://github.com/ethereum-optimism/optimism/pull/16817)), and porting Fjord/Holocene acceptance tests to the devstack ([#16920](https://github.com/ethereum-optimism/optimism/pull/16920)). Work was also done to improve code clarity by renaming test contract harnesses ([#16781](https://github.com/ethereum-optimism/optimism/pull/16781), [#16782](https://github.com/ethereum-optimism/optimism/pull/16782)).\n\n*   **Protocol & Configuration Work-in-Progress:** Several pull requests laid the groundwork for future protocol adjustments. A key feature was initiated to allow for configurable minimum base fees ([#16852](https://github.com/ethereum-optimism/optimism/pull/16852)). Other foundational work included a fix for `superchainConfig` upgrades ([#16838](https://github.com/ethereum-optimism/optimism/pull/16838)), a simplification of the `OpChainConfig` struct ([#16798](https://github.com/ethereum-optimism/optimism/pull/16798)), and initial work on execution multiplexing for `op-node` and `op-devstack` ([#16873](https://github.com/ethereum-optimism/optimism/pull/16873)).\n\n*   **Component Improvements & Maintenance:** Smaller-scale improvements were initiated, such as addressing a visibility issue with the `NextFrame` method in `op-batcher` ([#16830](https://github.com/ethereum-optimism/optimism/pull/16830)). Routine dependency updates were also managed, including bumps for `urfave/cli` ([#16924](https://github.com/ethereum-optimism/optimism/pull/16924)) and `prometheus/client_golang` ([#16928](https://github.com/ethereum-optimism/optimism/pull/16928)).\n\n## \ud83d\udc1b Issues & Triage\nNo issues were reported as closed in July, but the month saw a flurry of new issues that outline the project's near-term roadmap and priorities.\n\n*   **Closed Issues:** No issues were closed during the reporting period.\n\n*   **New & Active Issues:**\n    *   **Flashblocks Deployment & Monitoring:** A major focus was on preparing for flashblocks. New issues were created to plan the production mainnet deployment ([#16759](https://github.com/ethereum-optimism/optimism/issues/16759]) and conduct devnet load testing ([#16756](https://github.com/ethereum-optimism/optimism/issues/16756)). Extensive discussion in [#16388](https://github.com/ethereum-optimism/optimism/issues/16388) detailed requirements for monitoring and alerting, covering peer counts, block progression SLAs, and connection errors. This led to new issues for specific alerts, such as detecting when a non-flashblocks sequencer is active ([#16867](https://github.com/ethereum-optimism/optimism/issues/16867]) or when peer counts are low ([#16868](https://github.com/ethereum-optimism/optimism/issues/16868)).\n    *   **`op-sync-tester` Expansion:** The capabilities of the `op-sync-tester` were a key area of planning. New issues propose adding support for the `engine` namespace to validate payloads ([#16701](https://github.com/ethereum-optimism/optimism/issues/16701]), integrating `sysgo` for easier configuration ([#16702](https://github.com/ethereum-optimism/optimism/issues/16702]), and adding a `sync` namespace for session management ([#16778](https://github.com/ethereum-optimism/optimism/issues/16778)). An active discussion in [#16703](https://github.com/ethereum-optimism/optimism/issues/16703) outlined future test cases, including validation of all OP Stack hard fork transitions.\n    *   **Protocol Design & Tracking:** The \"Min Base Fee\" feature moved into the planning phase with a new tracking issue ([#16807](https://github.com/ethereum-optimism/optimism/issues/16807]) and a corresponding issue detailing the required changes to the `SystemConfig` contract ([#16839](https://github.com/ethereum-optimism/optimism/issues/16839)). Tracking issues were also created for the `op-batcher` rollout ([#16843](https://github.com/ethereum-optimism/optimism/issues/16843)) and the Geth v1.16.1 merge ([#16825](https://github.com/ethereum-optimism/optimism/issues/16825)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration in July was characterized by intensive planning and design discussions within GitHub issues, laying the groundwork for future implementation. While there was limited back-and-forth on pull requests, the detailed conversations in issues demonstrate strong internal alignment and community input.\n\nThe detailed breakdown of monitoring requirements for flashblocks in [#16388](https://github.com/ethereum-optimism/optimism/issues/16388) and the outlining of test cases for the sync tester in [#16703](https://github.com/ethereum-optimism/optimism/issues/16703) highlight a collaborative approach to feature specification. Similarly, the discussion around event tracing in `op-service` ([#16874](https://github.com/ethereum-optimism/optimism/issues/16874)) showed multiple team members weighing in to align on the best path forward, ultimately deciding to leverage existing work and potentially deprecate the system in question. This pattern of using issues as a forum for detailed planning was the dominant collaborative dynamic of the month.", "2025-08-30T06:35:24.422Z"]
["ethereum-optimism/community-hub_month_2025-08-01", "ethereum-optimism/community-hub", "month", "2025-08-01", "# ethereum-optimism/community-hub Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of refinement and strategic planning. Development focused on maintenance and cleanup, particularly within the community hub's documentation and the project's testing frameworks. Key issues related to proof system acceptance testing were closed, marking significant progress in validating interop chain functionality. The team also made decisive moves to deprioritize older initiatives, such as the event system and certain testing tools like Kurtosis, in favor of focusing resources on upcoming priorities. Notably, planning for a major migration to a \"Forge Deployer\" gained momentum, with community members actively coordinating to tackle this significant piece of future work.\n\n## \ud83d\udee0\ufe0f Key Developments\nConcrete development work this month centered on improving the content and presentation of the community hub. There were no major new features or bug fixes merged.\n\n-   **Documentation and Content Cleanup:** Several pull requests streamlined the contributor-facing documentation. Outdated pages for ambassador and translator contribution paths were removed ([#1174](https://github.com/ethereum-optimism/community-hub/pull/1174), [#1175](https://github.com/ethereum-optimism/community-hub/pull/1175), [#1176](https://github.com/ethereum-optimism/community-hub/pull/1176)). Content was also updated to clarify Citizens' House eligibility ([#1180](https://github.com/ethereum-optimism/community-hub/pull/1180)) and refresh the techNERD ([#1177](https://github.com/ethereum-optimism/community-hub/pull/1177)) and govNERDS ([#1181](https://github.com/ethereum-optimism/community-hub/pull/1181)) pages.\n\n-   **Visual and Asset Updates:** Minor visual enhancements were made, including updates to font files ([#1182](https://github.com/ethereum-optimism/community-hub/pull/1182)) and a new favicon for the site ([#1183](https://github.com/ethereum-optimism/community-hub/pull/1183)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month was characterized by the closure of long-standing tasks and active planning for future development efforts. No new issues were opened during this period.\n\n-   **Closed Issues:**\n    -   **Proof System & Testing:** A significant milestone was reached with the closure of issues for interop proof system acceptance testing ([#15946](https://github.com/ethereum-optimism/community-hub/issues/15946), [#15948](https://github.com/ethereum-optimism/community-hub/issues/15948)), indicating the validation work is complete.\n    -   **Strategic Deprioritization:** Several issues were closed as the work was deemed no longer necessary or was superseded by new strategies. This includes cleanup of the event system ([#17001](https://github.com/ethereum-optimism/community-hub/issues/17001), [#16874](https://github.com/ethereum-optimism/community-hub/issues/16874)), adding challenger support to `op-up` ([#17005](https://github.com/ethereum-optimism/community-hub/issues/17005)), and a decision to favor Sysgo over Kurtosis for network testing ([#375](https://github.com/ethereum-optimism/community-hub/issues/375)).\n    -   **Housekeeping:** A postmortem for a scalar fix was closed ([#17012](https://github.com/ethereum-optimism/community-hub/issues/17012)), and an issue regarding missing test logs was resolved ([#17151](https://github.com/ethereum-optimism/community-hub/issues/17151)).\n\n-   **New & Active Issues:**\n    -   **Forge Deployer Migration:** The most significant active discussion revolves around migrating to a \"Forge Deployer\" ([#17213](https://github.com/ethereum-optimism/community-hub/issues/17213)). This has spurred the creation of several sub-tasks for converting deployment and verification logic ([#17214](https://github.com/ethereum-optimism/community-hub/issues/17214) - [#17218](https://github.com/ethereum-optimism/community-hub/issues/17218)), representing a major upcoming refactoring effort.\n    -   **Testing Scope & Flashblocks:** Discussions continued on refining the scope of validation tests for chain configuration ([#686](https://github.com/ethereum-optimism/community-hub/issues/686]). The sync test issue was reopened to include more Hardfork transition scenarios ([#16703](https://github.com/ethereum-optimism/community-hub/issues/16703)). Progress was also noted on creating new alerts for flashblocks monitoring ([#16867](https://github.com/ethereum-optimism/community-hub/issues/16867), [#16868](https://github.com/ethereum-optimism/community-hub/issues/16868)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was highly visible in issue discussions, particularly in planning for future work.\n\n-   The \"Forge Deployer\" migration ([#17213](https://github.com/ethereum-optimism/community-hub/issues/17213)) stands out as a prime example of community engagement. User `tooshiNoko` proactively offered to take ownership of several large tasks, prompting coordination among team members to organize the effort and prevent overlapping work.\n-   In issue [#13502](https://github.com/ethereum-optimism/community-hub/issues/13502), a user confirmed that a community-suggested fix resolved their `op-proposer` configuration problem, demonstrating effective peer-to-peer support.\n-   Internal team collaboration was evident in the planning for validation testing ([#686](https://github.com/ethereum-optimism/community-hub/issues/686)), where team members scheduled discussions to review and define the scope of future tests.", "2025-09-04T03:45:16.345Z"]
["ethereum-optimism/docs_month_2025-08-01", "ethereum-optimism/docs", "month", "2025-08-01", "# ethereum-optimism/docs Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of significant documentation enhancement and refinement, focused on supporting the latest OP Stack and Superchain capabilities. Major efforts were dedicated to creating comprehensive guides for advanced features, including a new tutorial for upgrading ERC-20 tokens for Superchain interoperability and detailed documentation for Flashblocks. Alongside new content, the team prioritized documentation health by updating outdated tutorials, correcting inaccuracies in the Fault Proofs Explainer, and refactoring operator guides for `op-challenger`. This combination of new feature support and rigorous maintenance demonstrates a commitment to providing a clear, accurate, and robust resource for developers and operators in the ecosystem.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis month's development work centered on expanding and improving the documentation to keep pace with the evolving Optimism ecosystem.\n\n### Superchain and Interoperability Documentation\nTo support the growing Superchain, significant new content was added to guide developers through interoperability features:\n- A new, detailed tutorial was introduced to guide users on upgrading existing ERC-20 tokens for use across the Superchain, covering contract upgrades and bridging mechanisms ([#1577](https://github.com/ethereum-optimism/docs/pull/1577)).\n- The core Superchain operations guide was also updated with new information ([#1725](https://github.com/ethereum-optimism/docs/pull/1725)).\n\n### Operator and Fault Proof Documentation\nClarity and accuracy for chain operators were a key focus, with several improvements made to fault proof and deployment guides:\n- The `op-challenger` documentation underwent a comprehensive refactor to improve clarity for operators ([#1702](https://github.com/ethereum-optimism/docs/pull/1702)).\n- Misleading information in the Fault Proofs Explainer was corrected to accurately reflect the `op-challenger` tool's functionality ([#1706](https://github.com/ethereum-optimism/docs/pull/1706)).\n- A promotional banner was added to chain operator documentation to increase the visibility of the one-click deploy site ([#1719](https://github.com/ethereum-optimism/docs/pull/1719)).\n\n### New Feature Documentation\n- Comprehensive documentation for Flashblocks was added, providing guides for both application developers and chain operators on its features and implementation ([#1716](https://github.com/ethereum-optimism/docs/pull/1716)).\n\n### Documentation Maintenance and Bug Fixes\nA steady stream of maintenance work ensured the documentation remained accurate and up-to-date:\n- The `chain-dev-net.mdx` tutorial was updated to fix issues preventing users from launching a devnet ([#1714](https://github.com/ethereum-optimism/docs/pull/1714)).\n- A precompile address conflict in a tutorial was fixed to ensure compliance with EIP-7587 ([#1715](https://github.com/ethereum-optimism/docs/pull/1715)).\n- An outdated deprecation notice for Custom Gas Tokens was removed ([#1721](https://github.com/ethereum-optimism/docs/pull/1721)).\n- Other fixes included correcting a broken link in the `spin-batcher` docs ([#1709](https://github.com/ethereum-optimism/docs/pull/1709)), updating faucet links ([#1703](https://github.com/ethereum-optimism/docs/pull/1703)), and removing a reference to a deprecated SDK ([#1724](https://github.com/ethereum-optimism/docs/pull/1724)).\n\n### Site and Dependency Management\n- The project's font assets were updated to \"Reforma\" ([#1723](https://github.com/ethereum-optimism/docs/pull/1723)).\n- Dependency updates were managed through pull requests for Snyk ([#1726](https://github.com/ethereum-optimism/docs/pull/1726)) and the `next` framework ([#1729](https://github.com/ethereum-optimism/docs/pull/1729)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in August focused on cleanup, process improvement, and planning for future work.\n\n- **Closed Issues:** A significant number of issues were closed, reflecting progress in process refinement and technical resolution. This included closing out July's monthly metrics reports ([#1707](https://github.com/ethereum-optimism/docs/issues/1707), [#1708](https://github.com/ethereum-optimism/docs/issues/1708)), completing several 2024 Q4 audit-related tasks ([#1713](https://github.com/ethereum-optimism/docs/issues/1713), [#1722](https://github.com/ethereum-optimism/docs/issues/1722)), and implementing a new requirement for PR titles ([#1728](https://github.com/ethereum-optimism/docs/issues/1728)). On the technical side, issues were closed for the successful enablement of Flashblocks on Sunnyside sequencers ([#16688](https://github.com/ethereum-optimism/docs/issues/16688)) and the resolution of missing test logs ([#17151](https://github.com/ethereum-optimism/docs/issues/17151)). Several features were also formally deprioritized, such as Flashblocks support in Kurtosis ([#16514](https://github.com/ethereum-optimism/docs/issues/16514)).\n\n- **New & Active Issues:** New issues indicate a forward-looking approach to documentation and tooling. A task was created to begin documenting the `MinBaseFee` feature ([#1710](https://github.com/ethereum-optimism/docs/issues/1710)), and several new issues were opened to track ongoing 2024 Q4 audit items ([#1722](https://github.com/ethereum-optimism/docs/issues/1722), [#1727](https://github.com/ethereum-optimism/docs/issues/1727)). A major new initiative surfaced with a series of issues tracking the migration of the OP Deployer to use Forge ([#17213](https://github.com/ethereum-optimism/docs/issues/17213), [#17214](https://github.com/ethereum-optimism/docs/issues/17214), etc.). Important ongoing discussions include a complete overhaul of the `op-deployer` documentation ([#1530](https://github.com/ethereum-optimism/docs/issues/1530)) and strategies for running the monorepo CI suite on `op-geth` PRs to ensure cross-repository stability ([#665](https://github.com/ethereum-optimism/docs/issues/665)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was highlighted by a significant expression of community interest in a major development effort. A community member, `tooshiNoko`, proactively offered to take ownership of the entire suite of tasks related to migrating the OP Deployer to Forge ([#17213](https://github.com/ethereum-optimism/docs/issues/17213) and related issues), demonstrating strong external engagement. Internal collaboration was also evident, with team members re-opening issues like `op-challenger` acceptance tests ([#15948](https://github.com/ethereum-optimism/docs/issues/15948)) to ensure all work was fully completed. Ongoing discussions in issues like the `op-proposer` transaction failures ([#13502](https://github.com/ethereum-optimism/docs/issues/13502)) show a healthy feedback loop between users and the core team in debugging technical challenges.", "2025-09-04T03:45:30.516Z"]
["ethereum-optimism/ecosystem_month_2025-08-01", "ethereum-optimism/ecosystem", "month", "2025-08-01", "# ethereum-optimism/ecosystem Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a period of strategic planning and maintenance, with a strong focus on future development rather than immediate code merges. A significant effort was dedicated to planning a comprehensive modernization of Optimism's web properties, including the main website, documentation, and developer console. Concurrently, the team performed substantial housekeeping by closing numerous long-standing issues, making key decisions to de-prioritize or supersede old tasks. While new feature delivery was light, critical discussions progressed on core infrastructure, particularly concerning `op-node` sync mechanisms and testing strategies for future OP Stack hard forks.\n\n## \ud83d\udee0\ufe0f Key Developments\nCompleted work this month consisted of minor but necessary maintenance updates.\n\n- **Documentation Maintenance:** Two pull requests were merged to maintain the health of project documentation. One fixed a broken link to the protocol specs repository ([#935](https://github.com/ethereum-optimism/ecosystem/pull/935)), and another updated the license date ([#936](https://github.com/ethereum-optimism/ecosystem/pull/936)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in August was characterized by extensive planning for new initiatives and decisive closure of older, lingering tasks.\n\n- **Closed Issues:**\n    - **Protocol & Feature Decisions:** Several key issues were closed after strategic decisions were made. The `min-base-fee` specification was finalized ([#742](https://github.com/ethereum-optimism/ecosystem/issues/742)), and the implementation of a \"lend verb\" was marked as complete ([#915](https://github.com/ethereum-optimism/ecosystem/issues/915)). A proposal to have consensus influence event nonces was closed with a decision not to implement it for now ([#13543](https://github.com/ethereum-optimism/ecosystem/issues/13543)).\n    - **Tooling & Infrastructure Housekeeping:** A number of issues were closed to reduce noise and focus efforts. This included dropping support for the challenger in `op-up` ([#17005](https://github.com/ethereum-optimism/ecosystem/issues/17005)), shelving a cleanup of `op-up` logging ([#17007](https://github.com/ethereum-optimism/ecosystem/issues/17007)), and closing an issue for tracing event flow in `op-service` as the functionality was found to be duplicative ([#16874](https://github.com/ethereum-optimism/ecosystem/issues/16874)).\n    - **Incident Resolution:** A postmortem for a Scalar fix was completed ([#17012](https://github.com/ethereum-optimism/ecosystem/issues/17012)), and an investigation into missing test logs in CI was resolved after the logs were located ([#17151](https://github.com/ethereum-optimism/ecosystem/issues/17151)).\n\n- **New & Active Issues:**\n    - **Web Ecosystem Modernization:** A major new initiative was kicked off to overhaul Optimism's web presence. New issues were created to plan a homepage redesign ([#925](https://github.com/ethereum-optimism/ecosystem/issues/925)) and new navigation for the documentation site ([#926](https://github.com/ethereum-optimism/ecosystem/issues/926)). For the main `optimism.io` site, planning began for a React migration ([#929](https://github.com/ethereum-optimism/ecosystem/issues/929)), a CMS architecture spike ([#930](https://github.com/ethereum-optimism/ecosystem/issues/930)), and the implementation of a unified design system ([#931](https://github.com/ethereum-optimism/ecosystem/issues/931)). This effort also includes unifying the brand font across all web properties ([#922](https://github.com/ethereum-optimism/ecosystem/issues/922), [#923](https://github.com/ethereum-optimism/ecosystem/issues/923), [#924](https://github.com/ethereum-optimism/ecosystem/issues/924), [#933](https://github.com/ethereum-optimism/ecosystem/issues/933)).\n    - **Core Infrastructure Discussions:** A critical discussion continued around deprecating the req-resp p2p sync in `op-node` ([#14108](https://github.com/ethereum-optimism/ecosystem/issues/14108)). A promising alternative was proposed involving a centralized driver for gossiping unsafe blocks, which could offer a simpler and faster sync mechanism.\n    - **Testing and Tooling:** Discussions advanced on improving testing infrastructure. The `op-sync-tester` issue was reopened to ensure it tests every OP Stack Hard Fork transition, not just Isthmus ([#16703](https://github.com/ethereum-optimism/ecosystem/issues/16703)). For developers, a new issue was opened to add heatmap metrics to the `localchain.optimism.io` interface ([#927](https://github.com/ethereum-optimism/ecosystem/issues/927)).\n\n## \ud83d\udcac Community & Collaboration\nWhile there were few pull requests to review, collaboration was evident in the detailed discussions within issues. The debate on the `op-node` sync mechanism ([#14108](https://github.com/ethereum-optimism/ecosystem/issues/14108)) showcased deep technical collaboration, with team members providing detailed context and prototyping alternative solutions. Similarly, planning for improved CI integration with `op-geth` ([#665](https://github.com/ethereum-optimism/ecosystem/issues/665)) and refining validation test strategies ([#686](https://github.com/ethereum-optimism/ecosystem/issues/686)) highlighted active coordination between team members. The resolution of a user's `op-proposer` configuration problem ([#13502](https://github.com/ethereum-optimism/ecosystem/issues/13502)) also demonstrated effective community support.", "2025-09-04T03:45:34.835Z"]
["ethereum-optimism/ethereum-optimism.github.io_month_2025-08-01", "ethereum-optimism/ethereum-optimism.github.io", "month", "2025-08-01", "# ethereum-optimism/ethereum-optimism.github.io Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of focused execution, marked by the finalization of the `min-base-fee` specification, a significant milestone for the protocol's economic model. Development efforts also centered on enhancing developer experience and infrastructure robustness, with key improvements to CI reliability and token validation processes. The Superchain ecosystem continued to expand with the addition of several new tokens. Looking forward, the team initiated a major effort to migrate the OP Deployer to Forge and continued to advance the stability and monitoring of core features like flashblocks.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on expanding the Superchain token list and improving the reliability of the development pipeline.\n\n- **Superchain Token Ecosystem Growth:** The project continued to broaden its token support across the Superchain. New additions included the Pepe Community (PEPE) token for the Ethereum to Base bridge ([#1188](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1188)), the EL token on Soneium ([#1190](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1190)), the Wrapped WIT token on multiple testnets ([#1183](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1183)), bwAJNA on Mode ([#1019](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1019)), and the $PAGE token ([#1186](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1186)).\n\n- **Improved CI and Validation Reliability:** Significant bug fixes were implemented to bolster the development pipeline. A robust provider factory was introduced to mitigate RPC timeouts and rate-limiting issues in CI ([#1187](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1187)). Additionally, retry logic was added to contract validation calls, reducing intermittent failures and improving the experience for contributors submitting new tokens ([#1189](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1189)).\n\n- **Tokenomics Data Update:** Routine maintenance was performed with an update to the circulating supply data ([#1192](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1192)).\n\n## \ud83d\udc1b Issues & Triage\nThis month saw the resolution of a major specification issue, strategic deprioritization of older features, and the launch of a new migration effort.\n\n- **Closed Issues:**\n    - **`min-base-fee` Specification Finalized:** The long-running issue to define the `min-base-fee` specification was closed after the design document was ratified, marking the completion of this important protocol enhancement ([#742](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/742)).\n    - **Feature Deprioritization & Cleanup:** Several issues were closed to focus development efforts. This included shelving the implementation of consensus-influencing event nonces ([#13543](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/13543)), deciding against adding challenger support to `op-up` ([#17005](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17005]), and deprioritizing flashblocks support in Kurtosis ([#16514](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16514)). The team is also leaning towards removing the event system entirely ([#16874](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16874)).\n    - **Operational & Testing Resolutions:** An issue confirming the successful enablement of Flashblocks on Sunnyside Sepolia sequencers was closed ([#16688](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16688)). An issue regarding missing `op-acceptance-tests` logs was also resolved after the logs were located ([#17151](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17151)).\n\n- **New & Active Issues:**\n    - **Forge Deployer Migration:** A significant new initiative was kicked off to migrate the OP Deployer to use Forge, with a main tracking issue ([#17213](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17213)) and several sub-tasks created.\n    - **Flashblocks Enhancements:** Discussions are ongoing to improve flashblocks, with a focus on load testing on devnets ([#16756](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16756)) and establishing proper monitoring and alerts ([#16867](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16867), [#16868](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16868)).\n    - **P2P Sync Deprecation:** A forward-looking architectural discussion continues around deprecating the req-resp P2P sync in `op-node` in favor of a more efficient unsafe block sync mechanism ([#14108](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/14108)).\n    - **Documentation Overhaul:** A community member shared a comprehensive pull request to overhaul the guide for deploying an OP Stack Rollup, addressing confusion in the existing documentation ([#1530](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1530)).\n\n## \ud83d\udcac Community & Collaboration\nAugust showcased strong community engagement in key development areas. The newly created \"OP Deployer Forge Migration\" initiative saw immediate interest, with contributor `tooshiNoko` proactively offering to take on the entire set of related tasks ([#17213](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17213), [#17214](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17214)). In another example of valuable community contribution, user `krofax` submitted a \"rich PR\" to significantly improve the OP Stack Rollup deployment documentation ([#1530](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1530)). These efforts highlight a healthy and active contributor base invested in improving both the core codebase and developer resources.", "2025-09-04T03:45:35.634Z"]
["ethereum-optimism/infra_month_2025-08-01", "ethereum-optimism/infra", "month", "2025-08-01", "# ethereum-optimism/infra Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of focused stabilization and strategic planning for the Optimism infrastructure. Significant progress was made in hardening core components, with the `op-acceptor` module receiving substantial code refactoring, stability fixes, and dependency updates. A major milestone was achieved with the finalization and ratification of the `min-base-fee` specification. The team also made concrete strides in improving the developer environment by porting several `devnet sdk` tests to Devstack. Discussions around future architectural improvements gained momentum, particularly concerning the deprecation of the `req-resp` P2P sync mechanism in `op-node` and enhancements to CI and documentation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on improving the reliability and maintainability of existing infrastructure, with a clear focus on the `op-acceptor` component.\n\n*   **`op-acceptor` Stability and Maintenance:**\n    *   A flaky test in the `op-acceptor/runner` module was fixed, enhancing the reliability of the test suite ([#439]).\n    *   A major refactoring effort removed approximately 600 lines of unused code from the `op-acceptor` codebase, improving maintainability ([#447]).\n    *   A routine dependency update for `github.com/ulikunitz/xz` was performed to keep the component secure and up-to-date ([#451]).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month reflected a theme of cleanup and preparation for future work. Numerous long-standing issues were closed, while active discussions laid the groundwork for significant upcoming changes.\n\n*   **Closed Issues:**\n    *   **Protocol Specification:** The specification for the `min-base-fee` feature was formally written and ratified, marking the completion of a key design phase ([#742]).\n    *   **Devstack Test Migration:** Progress was made on improving the test environment, with issues for porting `TestBalanceSnapshot` ([#442]) and `TestInteropReadiness` ([#443]) to Devstack being closed.\n    *   **Acceptance Testing Cleanup:** Several issues related to testing infrastructure were resolved. This included closing out acceptance tests for the proofs system ([#15946], [#15948]), streamlining test setup within `op-acceptor` ([#375]), and resolving an issue with missing test logs ([#17151]).\n    *   **Infrastructure & System Simplification:** The task to enable Flashblocks on Sunnyside sequencers was completed ([#16688]). Issues related to a persistent devnet faucet wallet ([#396]), runbook refactoring ([#347]), and the removal of events from the event system ([#17001]) were also closed, with discussion indicating a broader move to simplify or remove the event system entirely ([#16874]).\n\n*   **New & Active Issues:**\n    *   **P2P Sync Deprecation:** A significant discussion emerged around deprecating the `req-resp` P2P sync in `op-node` to solve sync instability ([#14108]). A detailed alternative was proposed involving a simpler, centralized driver for gossiping unsafe blocks, which could improve recovery speed and scaling.\n    *   **Tooling and CI:** New work was initiated to introduce a GitHub event manager ([#441]) and a consensus-aware proxy poller ([#449]). Discussions are ongoing to improve the CI process for `op-geth` to catch integration issues more quickly ([#665]).\n    *   **Developer Experience:** An important discussion continues around creating better documentation and examples for `op-deployer` to assist external chain operators ([#1530]). Additionally, an issue regarding missing content-type headers in RPC responses, which affects developer libraries, remains active ([#389]).\n    *   **`Min Base Fee` Implementation:** While the spec is finalized, an active issue tracks the implementation work, with early drafts being shared for review ([#16807]).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was evident in the detailed technical discussions on key architectural issues. The conversation around deprecating `req-resp` P2P sync ([#14108]) involved a thorough proposal from `@emilianobonassi`, demonstrating deep engagement in solving core protocol challenges. Similarly, the finalization of the `min-base-fee` spec ([#742]) and planning for its implementation ([#16807]) involved collaborative input from `wlawt` and `geoknee`.\n\nTeam members `alfonso-op`, `bitwiseguy`, and `tess` were noted coordinating on the future of validation testing ([#686]). The effort to improve `op-deployer` documentation ([#1530]) also highlighted active collaboration between team members and feedback from the wider community, underscoring a commitment to improving the developer experience for Superchain builders.", "2025-09-04T03:45:39.416Z"]
["ethereum-optimism/optimism_month_2025-08-01", "ethereum-optimism/optimism", "month", "2025-08-01", "# ethereum-optimism/optimism Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\n\nAugust was a month of significant groundwork and infrastructure enhancement, focusing on bolstering the OP Stack's long-term stability, testability, and developer experience. Major strides were made in overhauling the testing framework, with extensive refactoring of `op-sync-tester` and `op-devstack` to improve reliability and expand capabilities. The fault proof system continued to evolve with the introduction of `FaultDisputeGameV2` and substantial planning for the \"Kona + Cannon\" upgrade. Concurrently, the team advanced the public rollout of Flashblocks, improved developer tooling like `op-up` and `op-deployer`, and executed a major codebase simplification by systematically removing the legacy event system from `op-node`.\n\n## \ud83d\udee0\ufe0f Key Developments\n\nThis section details the concrete work completed and merged in August.\n\n### Testing Infrastructure & Reliability\n\nA primary focus this month was on making the testing suite more robust, reliable, and comprehensive.\n\n*   **Sync Tester Overhaul:** The `op-sync-tester` underwent a major refactor to implement the `L2ELNode` interface, simplifying network setup for testing ([#17200]). It was enhanced with Verifier Engine APIs for numerous hardforks, including Isthmus, Ecotone, and Granite ([#17072]), and integrated into `op-devstack` for E2E testing ([#17132]).\n*   **Acceptance Test Enhancements:** `op-acceptance-tests` saw the migration of legacy tests to the new `op-devstack` framework ([#17130]), the addition of a flaky test report generator ([#17250]), and fixes for test flakiness during initialization ([#17103]) and fork activation ([#17270]).\n*   **Devnet Stability:** A critical bug causing connection errors in `op-devstack` was resolved by explicitly setting IPv4 binding ([#17114]). Flashblocks support was also added to the Kurtosis devnet, enabling more realistic testing environments ([#17172]).\n*   **CI Optimization:** The CI pipeline was improved by reducing `go-tests` timeouts ([#17126]) and ensuring tests run only on relevant changes ([#17105]).\n\n### Fault Proof System & Cannon Enhancements\n\nWork continued on advancing the dispute game and optimizing the Cannon fault proof VM.\n\n*   **Dispute Game V2:** A new version of the fault dispute game, `FaultDisputeGameV2`, was introduced to validate the creator pattern flow, a foundational step for future dispute resolution mechanisms ([#16929]).\n*   **Cannon Performance:** Cannon's performance and monitoring were improved by adding i-cache miss metrics ([#17123]), reducing logging frequency for long-running proofs ([#17186]), and optimizing its heap/code cache size to allow more parallel instances on a single machine ([#17246]).\n*   **Challenger Improvements:** The `op-challenger` gained an option to restrict the frequency of its update cycles, reducing calls to L1 nodes ([#17233]).\n\n### Code Refactoring & Core Protocol Updates\n\nSignificant effort was dedicated to simplifying the codebase and updating core dependencies.\n\n*   **Event System Removal:** A systematic effort was made to remove the legacy event system from `op-node` and other components, simplifying the codebase and improving maintainability. This included the removal of `ForceResetEvent` ([#17061]), `CrossUpdateRequestEvent` ([#17101]), `PromoteSafeEvent`, and `PromoteFinalizedEvent` ([#17161], [#17122], [#17165]).\n*   **Dependency Upgrades:** The `op-geth` dependency was updated to include upstream Geth v1.16.1 changes ([#16785]), and Cannon deployment was updated to support Go 1.24 ([#17155]).\n*   **Bug Fixes:** Critical bugs were fixed in `op-program` to prevent resource leaks ([#17166]) and in `op-service/eth` to ensure correct execution payload creation ([#17154]).\n\n### Developer Tooling & Experience\n\nImprovements were made to tools used by developers building on and with the OP Stack.\n\n*   **`op-deployer` Forge Integration:** Work began on migrating `op-deployer` to use Forge, with the integration of a Forge CLI wrapper ([#17231], [#17242]) and forge autodiscovery capabilities ([#17152]).\n*   **`op-up` Enhancements:** The new `op-up` local development tool received several UX improvements, including an ASCII art welcome message ([#17205]), a survey link on shutdown ([#17206]), and basic CLI argument handling ([#17208]).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\n\nSeveral key initiatives and long-standing issues were resolved in August:\n\n*   **Flashblocks Rollout:** Multiple issues related to the public enablement of Flashblocks were closed, covering Go-To-Market coordination ([#17027]), documentation review ([#17141]), and sequencer enablement ([#16688]).\n*   **Testing Milestones:** Major testing-related issues were completed, including the implementation of `op-challenger` acceptance tests on interop ([#15948]), support for the `eth` namespace in `op-sync-tester` ([#16700]), and the initial release of the `op-up` tool ([#17003]).\n*   **Core Protocol & Cleanup:** The Geth v1.16.1 merge was completed ([#16825]), the `min-base-fee` failure modes analysis was finalized ([#311]), and the effort to remove two events from the event system was concluded ([#17001]).\n\n### New & Active Issues\n\nNew issues opened this month outline the roadmap for the next phase of development, focusing on fault proofs and developer tooling.\n\n*   **Forge Deployer Migration:** A comprehensive set of issues ([#17213] - [#17218]) was created to track the migration of `op-deployer` to use Forge. This represents a significant strategic shift to standardize deployment tooling.\n*   **Kona + Cannon Upgrade:** A large batch of issues ([#17237], [#17282], etc.) was opened to plan the integration of Kona + Cannon as a fallback fault proof system, detailing work needed in `op-challenger`, `vm-runner`, and other tooling.\n*   **Dispute Game V2 Roadmap:** A detailed plan for developing and integrating version 2 of the FaultDisputeGame and PermissionedDisputeGame was laid out in a series of new issues ([#17254] - [#17263]).\n*   **Architectural Discussions:** An ongoing discussion on deprecating the request-response P2P sync in `op-node` ([#14108]) in favor of a simpler, more robust unsafe block sync mechanism highlights a key architectural consideration for future scalability.\n*   **User Pain Points:** The recurring `op-proposer` transaction failure issue ([#13502]) continues to see activity, indicating a persistent user configuration challenge that may require better documentation or tooling.\n\n## \ud83d\udcac Community & Collaboration\n\nAugust saw strong collaborative energy, particularly around major upcoming initiatives. The planned migration of `op-deployer` to Forge sparked immediate interest, with contributor `tooshiNoko` proactively offering to lead the effort across multiple tracking issues ([#17213], [#17214]), demonstrating healthy community engagement and ownership.\n\nDiscussions around improving the CI/CD pipeline ([#686], [#17184]) and local development experience showed active collaboration between team members to reduce friction for all contributors. The multi-faceted Flashblocks rollout required tight coordination between engineering, documentation, and external RaaS providers, showcasing effective cross-functional teamwork to deliver a major feature. Finally, long-standing issues like the missing RPC content type header ([#389]) continued to draw community attention, with users offering to help diagnose and fix the problem.", "2025-09-04T03:46:06.211Z"]
["ethereum-optimism/op-analytics_month_2025-08-01", "ethereum-optimism/op-analytics", "month", "2025-08-01", "# ethereum-optimism/op-analytics Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of significant refinement and expansion for the `op-analytics` project. Development centered on enhancing the integrity and stability of the data pipeline through numerous schema fixes, data quality checks, and targeted data exclusions. A major highlight was the introduction of the comprehensive \"jovian analysis\" suite, expanding the repository's analytical capabilities. Concurrently, important groundwork was laid for future infrastructure improvements, with active discussions and community engagement around migrating `op-deployer` to Forge and evolving the `op-node`'s sync mechanism.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on improving data pipeline robustness, expanding analytical tooling, and general housekeeping.\n\n*   **Data Pipeline and Schema Integrity**: A series of critical fixes and enhancements were implemented to ensure data accuracy and pipeline stability. This included correcting schema migrations for stablecoins ([#1725](https://github.com/ethereum-optimism/op-analytics/pull/1725)) and l2beat TVS data ([#1730](https://github.com/ethereum-optimism/op-analytics/pull/1730)). To refine data processing, Celo and Ethereum were excluded from certain model publishing jobs ([#1716](https://github.com/ethereum-optimism/op-analytics/pull/1716), [#1727](https://github.com/ethereum-optimism/op-analytics/pull/1727)). Data quality checks for account abstraction were also improved by adding regression tests and relaxing checks for failed user operations ([#1732](https://github.com/ethereum-optimism/op-analytics/pull/1732), [#1738](https://github.com/ethereum-optimism/op-analytics/pull/1738)). The pipeline's core was updated with a bump to the Dagster dependency ([#1734](https://github.com/ethereum-optimism/op-analytics/pull/1734), [#1739](https://github.com/ethereum-optimism/op-analytics/pull/1739)).\n\n*   **Expansion of Analytical Tooling**: The project's analytical capabilities were significantly expanded with the addition of the \"jovian analysis\" suite ([#1728](https://github.com/ethereum-optimism/op-analytics/pull/1728)). This new tooling includes scripts for data fetching, core analysis functions, and visualization notebooks for data usage, compression, and gas limit analysis. Existing analytics were also refined, with optimizations to reduce the run time for Dune queries ([#1729](https://github.com/ethereum-optimism/op-analytics/pull/1729)) and updates to the Jovian analysis notebooks for better presentation ([#1735](https://github.com/ethereum-optimism/op-analytics/pull/1735), [#1737](https://github.com/ethereum-optimism/op-analytics/pull/1737)). Additionally, OP Mainnet explorer links were updated across the repository ([#1715](https://github.com/ethereum-optimism/op-analytics/pull/1715)).\n\n*   **Code and Configuration Cleanup**: Minor but important housekeeping tasks were completed, including removing redundant words from the codebase ([#1726](https://github.com/ethereum-optimism/op-analytics/pull/1726)) and fixing a duplicate issue in the CircleCI configuration ([#1736](https://github.com/ethereum-optimism/op-analytics/pull/1736)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in August focused on finalizing protocol specifications, improving infrastructure, and planning for significant future work.\n\n*   **Closed Issues**:\n    *   **Protocol Specification**: A major milestone was reached with the finalization and ratification of the min-base-fee specification ([#742](https://github.com/ethereum-optimism/op-analytics/issues/742)).\n    *   **Infrastructure & Testing**: Progress was made on the infrastructure front with the confirmation that flashblocks were successfully enabled on Sunnyside sequencers ([#16688](https://github.com/ethereum-optimism/op-analytics/issues/16688)). Several development tasks were also formally deprioritized, including adding challenger support to `op-up` ([#17005](https://github.com/ethereum-optimism/op-analytics/issues/17005)) and flashblocks support in Kurtosis ([#16514](https://github.com/ethereum-optimism/op-analytics/issues/16514)).\n    *   **Cleanup & Process**: A number of cleanup and process-related issues were closed, addressing logging in `op-up` and `op-acceptance-tests` ([#17007](https://github.com/ethereum-optimism/op-analytics/issues/17007), [#17151](https://github.com/ethereum-optimism/op-analytics/issues/17151)) and internal tracking tickets ([#13543](https://github.com/ethereum-optimism/op-analytics/issues/13543), [#17012](https://github.com/ethereum-optimism/op-analytics/issues/17012)).\n\n*   **New & Active Issues**:\n    *   **Forge Deployer Migration**: A significant new initiative is the migration of `op-deployer` to use Forge, tracked in [#17213](https://github.com/ethereum-optimism/op-analytics/issues/17213). This effort has been broken down into several sub-tasks and has already attracted strong community interest.\n    *   **Node Sync Mechanism**: A critical architectural discussion is ongoing in [#14108](https://github.com/ethereum-optimism/op-analytics/issues/14108) about deprecating the req-resp p2p sync in `op-node` in favor of a simpler, faster alternative to address existing sync problems.\n    *   **Flashblocks Monitoring**: Work continues on improving the operational robustness of flashblocks, with active discussions on creating alerts for when a non-flashblocks sequencer becomes active ([#16867](https://github.com/ethereum-optimism/op-analytics/issues/16867)) and for low peer counts ([#16868](https://github.com/ethereum-optimism/op-analytics/issues/16868)).\n    *   **Documentation & CI**: Discussions are active around improving the documentation for `op-deployer` to better support external chain operators ([#1530](https://github.com/ethereum-optimism/op-analytics/issues/1530)) and enhancing the CI process for `op-geth` PRs within the monorepo ([#665](https://github.com/ethereum-optimism/op-analytics/issues/665)).\n\n## \ud83d\udcac Community & Collaboration\nAugust saw notable collaboration, particularly around future infrastructure development. Community member `tooshiNoko` showed strong initiative by expressing interest in tackling the entire suite of issues related to the `op-deployer` migration to Forge ([#17213](https://github.com/ethereum-optimism/op-analytics/issues/17213), [#17214](https://github.com/ethereum-optimism/op-analytics/issues/17214), etc.), demonstrating healthy external contributor engagement. Furthermore, detailed technical discussions in issues like the `op-node` sync mechanism ([#14108](https://github.com/ethereum-optimism/op-analytics/issues/14108)) and `op-deployer` documentation ([#1530](https://github.com/ethereum-optimism/op-analytics/issues/1530)) highlight active problem-solving between core team members and the wider community.", "2025-09-04T03:45:48.913Z"]
["ethereum-optimism/op-geth_month_2025-08-01", "ethereum-optimism/op-geth", "month", "2025-08-01", "# ethereum-optimism/op-geth Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of significant foundational work and strategic planning for `op-geth`. The most impactful achievement was the successful merge of `go-ethereum v1.16.1`, aligning the project with the latest upstream developments and ensuring long-term stability. Progress continued on the Flashblocks integration, with enablement confirmed on Sunnyside sequencers and ongoing work on load testing and alerting. Key protocol enhancements were initiated, including a new feature for a minimum base fee, while important architectural discussions began around replacing the `op-node` p2p sync mechanism. The month also saw strong community engagement, particularly around the migration to a new \"Forge Deployer\" tooling.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on upstream integration and critical protocol fixes and features.\n\n-   **Upstream Geth Integration:** A major effort was completed to merge `go-ethereum v1.16.1` into the `op-geth` codebase ([#652](https://github.com/ethereum-optimism/op-geth/pull/652)). This extensive update, touching numerous directories, brings `op-geth` up to date with the latest Geth version, incorporating crucial upstream improvements and ensuring future compatibility.\n\n-   **Protocol Enhancements & Fixes:**\n    -   A critical bug fix was implemented in the engine API to correct errors and improve checks related to execution payload creation in `beacon/engine` and `eth/catalyst` ([#662](https://github.com/ethereum-optimism/op-geth/pull/662)).\n    -   Work began on a new feature to introduce a minimum base fee, with a pull request opened for its implementation ([#666](https://github.com/ethereum-optimism/op-geth/pull/666)).\n    -   A pull request was opened to address a spike related to calldata footprint block limits, aiming to improve network stability ([#655](https://github.com/ethereum-optimism/op-geth/pull/655)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in August focused on finalizing specifications, making strategic decisions on tooling, and investigating new bugs and architectural improvements.\n\n-   **Closed Issues:**\n    -   **Flashblocks Progress:** An issue was closed confirming that all Sunnyside sequencers for Sepolia are now running with Flashblocks enabled ([#16688](https://github.com/ethereum-optimism/op-geth/issues/16688)). In a strategic shift, support for Flashblocks in Kurtosis was deprioritized and the corresponding issue was closed ([#16514](https://github.com/ethereum-optimism/op-geth/issues/16514)).\n    -   **Specification Finalization:** The specification for the minimum base fee was ratified and the tracking issue was closed ([#742](https://github.com/ethereum-optimism/op-geth/issues/742)), paving the way for its implementation.\n    -   **Tooling & Cleanup:** A decision was made not to pursue challenger support within `op-up`, closing the related issue to focus on other backend solutions ([#17005](https://github.com/ethereum-optimism/op-geth/issues/17005)). Several other operational and tracking issues were also closed, improving project hygiene ([#13543](https://github.com/ethereum-optimism/op-geth/issues/13543), [#17007](https://github.com/ethereum-optimism/op-geth/issues/17007), [#17151](https://github.com/ethereum-optimism/op-geth/issues/17151)).\n\n-   **New & Active Issues:**\n    -   **Sync Mechanism Architecture:** A significant discussion continued around deprecating the req-resp p2p sync in `op-node` ([#14108](https://github.com/ethereum-optimism/op-geth/issues/14108)). A detailed alternative for unsafe block sync was proposed, suggesting a simpler and faster mechanism that could improve node recovery and scale-out.\n    -   **CI/CD & Developer Experience:** A new issue was opened to explore running the monorepo CI suite on `op-geth` pull requests to prevent regressions ([#665](https://github.com/ethereum-optimism/op-geth/issues/665)). Active discussions also took place around improving `op-deployer` documentation ([#1530](https://github.com/ethereum-optimism/op-geth/issues/1530)).\n    -   **Investigation & Debugging:** A new issue was opened to investigate gas cost discrepancies observed when using `debug_traceCall` ([#664](https://github.com/ethereum-optimism/op-geth/issues/664)). Community interest remains in resolving an issue where some RPC responses are missing content types ([#389](https://github.com/ethereum-optimism/op-geth/issues/389)).\n\n## \ud83d\udcac Community & Collaboration\nAugust highlighted strong collaboration both within the core team and with the broader community.\n\n-   The migration to a \"Forge Deployer\" saw significant community interest, with contributor `tooshiNoko` proactively offering to take on multiple related tasks and coordinating with the team to avoid duplicate work ([#17213](https://github.com/ethereum-optimism/op-geth/issues/17213), [#17214](https://github.com/ethereum-optimism/op-geth/issues/17214), [#17215](https://github.com/ethereum-optimism/op-geth/issues/17215)).\n-   The discussion on replacing the p2p sync mechanism ([#14108](https://github.com/ethereum-optimism/op-geth/issues/14108)) was enriched by detailed technical context and an alternative proposal from `@emilianobonassi`, demonstrating deep engagement from subject matter experts.\n-   The team showed responsiveness to community feedback by quickly addressing and resolving an issue where a project was inappropriately flagged in a Retro-Funding process ([#72](https://github.com/ethereum-optimism/op-geth/issues/72)).", "2025-09-04T03:45:58.176Z"]
["ethereum-optimism/specs_month_2025-08-01", "ethereum-optimism/specs", "month", "2025-08-01", "# ethereum-optimism/specs Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of significant progress in formalizing core protocol features for the upcoming Jovian release and enhancing the Superchain's interoperability framework. Key achievements include integrating the minimum base fee design into the official specifications, introducing a comprehensive specification for the Flashblocks preconfirmation system, and completing a major milestone in proofs interoperability acceptance testing. Discussions also advanced on strategic architectural decisions, such as the migration of `op-deployer` to Forge and a potential redesign of the P2P sync mechanism in `op-node`.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on translating design documents into concrete specifications and improving the systems that ensure cross-chain reliability.\n\n*   **Jovian Release Specifications:**\n    *   The design for the minimum base fee was formally converted into specifications for the Jovian release, defining economic parameters in `exec-engine.md`, `overview.md`, and `system-config.md` ([#747]).\n    *   The U16a specification was introduced, updating `OptimismPortal` and `SystemConfig` to streamline future feature additions ([#750]).\n    *   A proposal for the Jovian Data Availability (DA) Footprint was opened ([#748]).\n\n*   **Protocol & Feature Enhancements:**\n    *   A detailed specification for Flashblocks, an out-of-protocol system for rapid preconfirmations, was added to the protocol documentation ([#754]).\n    *   New proposals were opened to add specifications for block calldata limits ([#746]), custom gas tokens ([#749]), a `LivenessModule` ([#751]), and a `TimelockGuard` ([#752]).\n    *   Minor cleanups were made to the Optimism Portal specifications to better align the documentation with the existing code ([#745]).\n\n*   **Supervisor & Interoperability Improvements:**\n    *   The managed node specification was enhanced with a new `resetPreInterop` method ([#744]).\n    *   A `supervisor_localSafe` feature was added to the interop specifications, improving the supervisor's capabilities ([#753]).\n    *   Supervisor data availability and RPC error codes were refactored and linked for better clarity and navigation ([#724], [#685]).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in August focused on finalizing specifications, completing testing milestones, and initiating discussions on major future work.\n\n*   **Closed Issues:**\n    *   **Specification & Feature Completion:** The issue to write the `min-base-fee` specification was closed, marking the completion of this critical task ([#742]). The implementation of Flashblocks on Sunnyside sequencers was confirmed, closing the related tracking issue ([#16688]).\n    *   **Testing Infrastructure:** A significant milestone was reached with the closure of the umbrella issue for \"proofs: Interop Acceptance Testing\" ([#15946]) and its sub-task for `op-challenger` tests ([#15948]).\n    *   **Strategic Deprecation:** Issues related to adding Flashblocks support in Kurtosis ([#16514]) and `op-up` support for the challenger ([#17005]) were closed, reflecting a strategic decision to prioritize other testing backends like Sysgo and Docker.\n    *   **Cleanup:** Several issues were closed as part of ongoing maintenance, including the removal of two events from the event system ([#17001]) and the decision not to implement consensus-influencing event nonces for Jovian ([#13543]).\n\n*   **New & Active Issues:**\n    *   **`op-deployer` to Forge Migration:** A major new initiative to migrate `op-deployer` to use Forge gained significant traction. A central tracking issue ([#17213]) was created, along with several sub-tasks for converting specific components ([#17214], [#17215], [#17216], [#17217], [#17218]), which saw active community interest.\n    *   **P2P Sync Architecture:** A critical discussion continued around deprecating the `req-resp` P2P sync in `op-node` ([#14108]). A detailed alternative was proposed, suggesting a move towards a more robust and simpler system using gossiped blocks and a centralized driver.\n    *   **Flashblocks Operationalization:** With Flashblocks now live, discussions turned to operational readiness, including requests for a detailed load testing report ([#16756]) and the implementation of sequencer alerting ([#16867], [#16868]).\n    *   **Sync Testing Expansion:** Ideas were proposed to enhance OP Stack sync testing by covering all hard fork transitions and incorporating multiple consensus layer clients ([#16703]).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was strong this month, highlighted by cross-team efforts and active community participation in new initiatives. The discussion around the `min-base-fee` specification involved feedback and related work across multiple repositories, including `reth` and `op-alloy` ([#16807]). The resolution of a RetroPGF project flagging issue ([#72]) demonstrated responsiveness to community feedback. Most notably, the new effort to migrate `op-deployer` to Forge saw immediate engagement, with contributor `tooshiNoko` volunteering to take on multiple core tasks, signaling healthy interest in contributing to the project's tooling evolution.", "2025-09-04T03:45:58.951Z"]
["ethereum-optimism/superchain-ops_month_2025-08-01", "ethereum-optimism/superchain-ops", "month", "2025-08-01", "# ethereum-optimism/superchain-ops Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of significant modernization and preparation for future upgrades within the `superchain-ops` repository. Development was heavily focused on expanding and migrating to a new templating framework, which saw the addition of several new templates for upgrades and contract interactions. A major cleanup effort resulted in the removal of the legacy `superchain-ops` system, streamlining the codebase. Concurrently, substantial work was done to improve CI/CD reliability and developer workflows by increasing test coverage and mitigating flaky tests. Key discussions this month laid the groundwork for future architectural changes, including a planned migration of the OP Deployer to use Forge and a re-evaluation of the `op-node` P2P sync mechanism.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on enhancing the templating system, improving developer tooling, and introducing new core functionalities.\n\n- **Templating Framework Expansion & Migration:** The new templating framework was a primary focus, with several additions to support upgrades and new functionalities.\n    - A template was introduced to streamline upgrades from U13 directly to U16, simplifying the process for chains on older versions ([#1144]).\n    - New templates were added for `BlacklistGamesV400` ([#1170]), `UpdateRetirementTimestampV400` ([#1171]), and executing L2 actions via the L1 `OptimismPortal` ([#1173]).\n    - Migration efforts continued with the creation of a new blacklist game template ([#1168]), leading to the closure of the corresponding migration task ([#1162]).\n    - A fix was implemented for the `set respected game template` ([#1157]).\n\n- **CI/CD and Developer Workflow Improvements:** Several PRs aimed to make the development and testing process more robust and efficient.\n    - The CI configuration was cleaned up by removing obsolete jobs and tasks ([#1164]).\n    - To reduce CI flakiness, retries were implemented for both forge scripts ([#1161]) and simulation scripts ([#1172]).\n    - Test coverage was significantly increased for core contracts like `SimpleAddressRegistry.sol`, `StackedSimulator.sol`, and `TaskManager.sol` ([#1166]).\n\n- **Core Functionality and Refactoring:**\n    - A major security and flexibility enhancement was merged, enabling multi-level nesting for Gnosis Safe signing ([#1150]).\n    - In a significant cleanup effort, the entire legacy `superchain-ops` system was removed from the `main` branch, simplifying the repository structure ([#1163]).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month saw the resolution of major testing and specification tasks, while new discussions paved the way for future architectural shifts.\n\n- **Closed Issues:** Key problems resolved this month include:\n    - **Protocol Specification:** The issue to write the `min-base-fee` specification was closed, marking the completion of its formal documentation ([#742]).\n    - **Testing & Validation:** The umbrella issue for proofs interop acceptance testing ([#15946]) and its sub-task for `op-challenger` tests ([#15948]) were closed, confirming the functionality of the dispute system on interop chains.\n    - **System Operations:** An issue confirming that all Sunnyside sequencers are running with Flashblocks was closed ([#16688]).\n    - **Task Migration:** The issue tracking the migration of blacklist games tasks to the new template framework was successfully closed ([#1162]).\n\n- **New & Active Issues:** Discussions this month highlighted several areas of future work and ongoing challenges:\n    - **Forge Deployer Migration:** A series of new tracking issues ([#17213], [#17214], [#17215], [#17216], [#17217], [#17218]) were created to plan the migration of the OP Deployer to use Forge. This represents a significant upcoming effort to modernize deployment tooling.\n    - **`op-node` Sync Protocol:** A critical discussion emerged around the deprecation of the `req-resp` p2p sync protocol in `op-node` ([#14108]). An alternative, simpler sync mechanism was prototyped and discussed as a potential replacement to address existing sync problems and improve performance.\n    - **CI Integration:** A new issue was opened to explore running the monorepo CI suite on `op-geth` PRs to prevent regressions ([#665]).\n    - **Flashblocks Monitoring:** Active discussions continued around creating alerts for flashblocks-enabled sequencers, focusing on peer count and activation status ([#16867], [#16868]).\n\n## \ud83d\udcac Community & Collaboration\nAugust saw strong engagement from the community, particularly in planning future development and improving documentation.\n\n- A notable example of community initiative was seen in the \"Forge Deployer\" migration planning, where contributor `tooshiNoko` proactively offered to take on all related tasks to accelerate the effort ([#17213] - [#17218]).\n- The technical discussion around deprecating the `req-resp` sync protocol ([#14108]) was enriched by a detailed proposal and prototype from `@emilianobonassi`, demonstrating deep community involvement in core protocol architecture.\n- Collaborative efforts to improve documentation were also evident, with a \"rich PR\" noted in issue [#1530] that aims to overhaul the documentation for creating an OP Stack Rollup testnet, addressing confusion for external chain operators.", "2025-09-04T03:46:04.095Z"]
["ethereum-optimism/superchain-registry_month_2025-08-01", "ethereum-optimism/superchain-registry", "month", "2025-08-01", "# ethereum-optimism/superchain-registry Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of steady progress, focusing on expanding the Superchain ecosystem, advancing key protocol features, and refining testing infrastructure. The registry grew with the addition of the Arena Z testnet, and integrations for Sova Sepolia and Celo-sepolia were initiated. Significant discussion and cross-repository coordination continued for the \"Min Base Fee\" feature, a key technical priority. Concurrently, the team closed out major testing initiatives for the proofs system and cleaned up legacy components, improving the overall health and stability of the development environment.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on registry expansion and routine maintenance to keep the project's data current.\n\n- **Superchain Registry Expansion:** The registry was expanded with the addition of the Arena Z testnet, including its configuration and genesis data, providing a new environment for the ecosystem ([#1092](https://github.com/ethereum-optimism/superchain-registry/pull/1092)).\n- **Codegen Maintenance:** Codegen results were updated to synchronize `chainList.json`, `chainList.toml`, and address files with the latest on-chain data, ensuring the registry remains accurate ([#1098](https://github.com/ethereum-optimism/superchain-registry/pull/1098)).\n\nAdditionally, several pull requests were opened to further expand the registry, including adding the Sova Sepolia Testnet ([#1094](https://github.com/ethereum-optimism/superchain-registry/pull/1094)), integrating Celo-sepolia ([#1099](https://github.com/ethereum-optimism/superchain-registry/pull/1099)), and updating an address for Celo ([#1095](https://github.com/ethereum-optimism/superchain-registry/pull/1095)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in August focused on resolving long-standing testing tasks, addressing CI/CD pipeline gaps, and progressing discussions on major new features.\n\n- **Closed Issues:**\n    - **Testing & Infrastructure:** A significant effort in acceptance testing was concluded with the closure of issues for the proofs system ([#15946](https://github.com/ethereum-optimism/superchain-registry/issues/15946)) and `op-challenger` on interop chains ([#15948](https://github.com/ethereum-optimism/superchain-registry/issues/15948)). The team also cleaned up the event system ([#17001](https://github.com/ethereum-optimism/superchain-registry/issues/17001)) and re-evaluated test setup logic ([#375](https://github.com/ethereum-optimism/superchain-registry/issues/375)).\n    - **Sequencer Enhancements:** A key operational improvement was completed by enabling flashblocks on all Sunnyside sequencers for Sepolia, with successful failover testing ([#16688](https://github.com/ethereum-optimism/superchain-registry/issues/16688)).\n\n- **New & Active Issues:**\n    - **\"Min Base Fee\" Feature:** This feature saw continued discussion across multiple issues ([#16807](https://github.com/ethereum-optimism/superchain-registry/issues/16807), [#742](https://github.com/ethereum-optimism/superchain-registry/issues/742)). Work is being coordinated across several repositories, including `reth`, `op-alloy`, and `optimism`, with early drafts shared for review. A related discussion on estimating state growth was initiated and moved to a dedicated design document.\n    - **CI/CD & Testing:** A new issue was opened to explore running the monorepo CI suite on `op-geth` PRs to improve end-to-end testing ([#665](https://github.com/ethereum-optimism/superchain-registry/issues/665)). Another issue regarding missing test logs in `op-acceptance-tests` was opened, investigated, and resolved ([#17151](https://github.com/ethereum-optimism/superchain-registry/issues/17151)).\n    - **Documentation & Maintenance:** A significant documentation overhaul for deploying OP Stack Rollup testnets is in progress to address community confusion ([#1530](https://github.com/ethereum-optimism/superchain-registry/issues/1530)). A new task was created to migrate legacy FP recovery tasks to a new framework ([#1162](https://github.com/ethereum-optimism/superchain-registry/issues/1162)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the cross-repository coordination for the \"Min Base Fee\" feature, with wlawt sharing progress from `reth` and `op-alloy` to facilitate early review. Community engagement was highlighted by OBlackmon3 seeking guidance on contributing a fix for an RPC issue ([#389](https://github.com/ethereum-optimism/superchain-registry/issues/389)).\n\nMaintainers provided clear guidance on project direction, as seen when @pcw109550 informed a contributor that their PR might not be merged due to a strategic shift away from the event system, while still acknowledging the value of their work ([#16874](https://github.com/ethereum-optimism/superchain-registry/issues/16874)). Proactive contribution was also visible, with @blmalone offering to assist with a newly created task for migrating FP recovery tasks ([#1162](https://github.com/ethereum-optimism/superchain-registry/issues/1162)). These interactions reflect a healthy and communicative development environment.", "2025-09-04T03:46:09.411Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2024-12-05", "ethereum-optimism/ethereum-optimism.github.io", "day", "2024-12-05", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Dec 5, 2024)\n## OVERVIEW \nNo development activity was recorded for the ethereum-optimism/ethereum-optimism.github.io repository on December 5, 2024.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified.", "2025-08-30T06:29:36.014Z"]
["ethereum-optimism/optimism_day_2024-12-02", "ethereum-optimism/optimism", "day", "2024-12-02", "# ethereum-optimism/optimism Daily Update (Dec 2, 2024)\n## OVERVIEW \nOn December 2, 2024, development activity for the `ethereum-optimism/optimism` repository was minimal, with no new features, bug fixes, code refactoring, documentation enhancements, or tests added. The primary activity involved the creation of a new issue related to implementing a \"Creator\" pattern.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n### Creator Pattern Implementation\nA new issue, [#13168](https://github.com/ethereum-optimism/optimism/issues/13168), was opened to track the implementation of a new \"Creator\" pattern. The initial scope includes finishing the design document, finalizing the implementation for `Creator` contracts, and identifying necessary OPCM changes. This issue was later closed on May 22, 2025, as its tracking was consolidated into a main parent issue.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this day.", "2025-08-30T06:29:36.407Z"]
["ethereum-optimism/optimism_day_2024-11-25", "ethereum-optimism/optimism", "day", "2024-11-25", "# ethereum-optimism/optimism Daily Update (Nov 25, 2024)\n## OVERVIEW \nThe day saw no direct code changes, refactoring, or documentation enhancements. The primary activity was the creation of a new issue concerning `op-challenger` performance, specifically regarding its L1 node interaction and game processing frequency.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n### op-challenger Performance Optimization\nA new issue was opened to address the `op-challenger`'s frequent calls to the L1 node and its processing of games. The issue proposes adding an option to limit how often games are processed to reduce the load on the L1 node, as `op-challenger` currently tracks all games from the last 28 days and loads all claims for each game, leading to excessive calls. [#13090](https://github.com/ethereum-optimism/optimism/issues/13090)\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments on this day.", "2025-08-30T06:29:36.553Z"]
["ethereum-optimism/optimism_day_2024-12-29", "ethereum-optimism/optimism", "day", "2024-12-29", "# ethereum-optimism/optimism Daily Update (Dec 29, 2024)\n## OVERVIEW \nThe day's activity primarily involved the creation of a new tracking issue related to consensus-influencing event nonces, indicating ongoing strategic planning for protocol enhancements.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\n### Consensus Event Nonce Tracking\nA new tracking issue, [#13543](https://github.com/ethereum-optimism/optimism/issues/13543), was opened to monitor the implementation of a nonce for L1 events that impact consensus, specifically `SystemConfig.ConfigUpdate` and `OptimismPortal2.Transact`. This issue was later closed on 2025-08-25, with a note indicating that implementation was not planned for the time being.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments on this date.", "2025-08-30T06:29:37.549Z"]
["ethereum-optimism/optimism_day_2024-10-11", "ethereum-optimism/optimism", "day", "2024-10-11", "# ethereum-optimism/optimism Daily Update (Oct 11, 2024)\n## OVERVIEW \nThe day's activity focused on identifying a critical refactoring need for fault proof contracts to support `Creator` contracts, aiming to improve upgrade processes and reduce deployment costs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Fault Proof Contract Refactoring\nA new issue, [#12421](https://github.com/ethereum-optimism/optimism/issues/12421), was opened to address the need for refactoring fault proof contracts to support `Creator` contracts. This is crucial because current fault proof contracts must be redeployed for each new L2 chain due to changing constructor arguments, leading to high deployment costs and bottlenecks in upgrade processes.\n\n## ACTIVE ISSUES\n\n### Refactor proofs contracts to support `Creator` contracts\nDiscussion on [#12421](https://github.com/ethereum-optimism/optimism/issues/12421) highlights the ongoing need to refactor dispute game contracts to remove immutables, allowing for shared implementations across chains. The current deployment cost of these large contracts (3-5M gas) significantly limits the number of chains that can be updated in a single transaction, making it a bottleneck for scaling upgrade processes. While the `AnchorStateRegistry` no longer has immutables, the dispute game contracts still require this refactoring. The issue's priority was temporarily paused but is now being re-evaluated due to its impact on upgrade efficiency. A related design document ([https://github.com/ethereum-optimism/design-docs/pull/275](https://github.com/ethereum-optimism/design-docs/pull/275)) has been updated based on the latest direction.", "2025-08-30T06:29:37.127Z"]
["ethereum-optimism/optimism_day_2024-12-20", "ethereum-optimism/optimism", "day", "2024-12-20", "# ethereum-optimism/optimism Daily Update (Dec 20, 2024)\n## OVERVIEW \nThe day saw no new code contributions, features, or bug fixes. The primary activity was the creation of a new issue related to `op-proposer` configuration.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### op-proposer Configuration Issues\n* A new issue [#13502](https://github.com/ethereum-optimism/optimism/issues/13502) was opened regarding the `op-proposer` failing to create a transaction, specifically encountering an `execution reverted` error. The issue highlights a problem with deploying `op-proposer` using a specific command and private key.\n\n## ACTIVE ISSUES\n### op-proposer Transaction Failure\nThe issue [#13502](https://github.com/ethereum-optimism/optimism/issues/13502) is active and discusses the `op-proposer` failing to create transactions. The latest comment from `dariusL3` (Aug 26, 2025) suggests that upgrading the game factory address proxy implementation and setting the correct `--game-type` (specifically `1` for `PermissionedFaultDisputeGame` when deploying with `op-deployer`) resolved the issue. This confirms an earlier suggestion by `mw2000` (Feb 7, 2025). `asymmetric` (Feb 25, 2025) also investigated the `gameImpls` mapping not being initialized for game types `0` and `1`. `protolambda` (Feb 4, 2025) initially pointed to a `NoImplementation` error, suggesting misconfigured contracts or `op-proposer` with the wrong game-type.", "2025-08-30T06:29:37.239Z"]
["ethereum-optimism/optimism_day_2025-02-04", "ethereum-optimism/optimism", "day", "2025-02-04", "# ethereum-optimism/optimism Daily Update (Feb 4, 2025)\n## OVERVIEW \nThe day's activity focused on resolving a critical `op-proposer` issue related to transaction creation failures, specifically addressing misconfigurations in game type and contract implementations.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n### Resolution of `op-proposer` Transaction Creation Failure\nA significant issue concerning `op-proposer` failing to create transactions was closed today. The root cause was identified as a misconfiguration related to the dispute game type or contract implementation. The resolution involved ensuring the correct `game-type` is passed to `op-proposer` and verifying the proper configuration of the underlying contracts. This fix is crucial for the stability and functionality of the dispute game system. ([#13502](https://github.com/ethereum-optimism/optimism/issues/13502))\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo issues with more than 3 comments are currently active.", "2025-08-30T06:29:38.068Z"]
["ethereum-optimism/optimism_day_2025-02-03", "ethereum-optimism/optimism", "day", "2025-02-03", "# ethereum-optimism/optimism Daily Update (Feb 3, 2025)\n## OVERVIEW \nThe primary development focus for the day was on addressing sync problems within the `op-node` by proposing the removal of the `req-resp` P2P sync protocol. A new issue was opened to track this significant change, with detailed discussions on alternative unsafe block sync mechanisms.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Deprecation of `req-resp` P2P Sync\nA new issue was opened to track the removal of the `req-resp` P2P sync protocol from `op-node` to resolve existing sync problems.\n- The issue references a design document outlining the deprecation.\n- Related `op-node` CLI flags will also be deprecated.\n- [#14108](https://github.com/ethereum-optimism/optimism/issues/14108)\n\n## ACTIVE ISSUES\n\n### Discussion on `op-node` Sync Protocol Alternatives\nDiscussions on issue [#14108](https://github.com/ethereum-optimism/optimism/issues/14108) centered on the benefits of an alternative unsafe block sync mechanism prototyped by @emilianobonassi, compared to the existing `req-resp` over P2P.\n- **Cost and Simplicity:** The proposed alternative is described as cheaper and simpler to run, requiring fewer components and simpler networking due to avoiding UDP and its associated issues (e.g., NAT punching, lack of domain name support).\n- **Faster Scale Out and Recovery:** `req-resp` is noted for being slow, particularly for syncing small ranges of unsafe blocks, and suffers from race conditions that can lead to instability and slow convergence, especially with multiple nodes. The alternative aims to improve this.\n- **Complementary Approach:** The proposed alternative is complementary to P2P, allowing for multiple \"drivers\" to gossip blocks.\n- **Centralized Driver Mechanism:** One proposed driver involves the sequencer leader publishing the latest unsafe block via Redis, with other nodes subscribing and injecting payloads via `admin_postUnsafePayload`. On restarts, a sidecar checks sync status against the sequencer leader and queries the EL for blocks.", "2025-08-30T06:29:39.053Z"]
["ethereum-optimism/optimism_day_2025-03-20", "ethereum-optimism/optimism", "day", "2025-03-20", "# ethereum-optimism/optimism Daily Update (Mar 20, 2025)\n## OVERVIEW \nThe day's activity primarily focused on identifying areas for developer experience improvement, specifically regarding the interaction between Go and Solidity development. A new issue was opened to address friction in this workflow.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n### Developer Experience Improvements\nA new issue was opened to reduce friction for developers working with Go and Solidity. The EVM Safety team highlighted the need for automatic updates of Go structs when Solidity contracts change and the desire to replace input/output contracts with Solidity structs [#14976](https://github.com/ethereum-optimism/optimism/issues/14976).\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments.", "2025-08-30T06:29:38.392Z"]
["ethereum-optimism/optimism_day_2025-03-10", "ethereum-optimism/optimism", "day", "2025-03-10", "# ethereum-optimism/optimism Daily Update (Mar 10, 2025)\n## OVERVIEW \nThe day's development focused on future compatibility, with a new issue opened to track support for Go 1.24 in Cannon, indicating proactive planning for toolchain updates.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Cannon Toolchain Updates\nA new issue was opened to track the necessary updates for Cannon to support Go 1.24, following previous efforts to support Go 1.23. This is a proactive step to ensure compatibility with newer Go versions for the Cannon proving system [#14760](https://github.com/ethereum-optimism/optimism/issues/14760).\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments today.", "2025-08-30T06:29:38.442Z"]
["ethereum-optimism/optimism_day_2025-04-03", "ethereum-optimism/optimism", "day", "2025-04-03", "# ethereum-optimism/optimism Daily Update (Apr 3, 2025)\n## OVERVIEW \nThe day's activity focused on identifying potential issues, with a new issue opened regarding an invalid pending progress length check in `op-program: stateTransition`, stemming from Spearbit audit findings.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Audit Findings and Protocol Integrity\nA new issue, [#15217](https://github.com/ethereum-optimism/optimism/issues/15217), was opened concerning an invalid pending progress length check within the `op-program: stateTransition` function. This finding originated from a Spearbit audit and highlights a potential vulnerability during the consolidation step. Discussion on the issue confirmed its validity and suggested a corresponding fix to the spec regarding the maximum number of chains.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-08-30T06:29:39.552Z"]
["ethereum-optimism/infra_day_2025-04-14", "ethereum-optimism/infra", "day", "2025-04-14", "# ethereum-optimism/infra Daily Update (Apr 14, 2025)\n## OVERVIEW \nThe day's development focused on dependency updates within the `infra` repository, specifically bumping the `golang.org/x/crypto` version in two key components. This work contributes to maintaining the security and stability of the Optimism infrastructure.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- **Dependency Updates for Go Modules:** Two new pull requests were opened to update the `golang.org/x/crypto` dependency. [#281](https://github.com/ethereum-optimism/infra/pull/281) updates the version from 0.23.0 to 0.35.0 in `/op-ufm`, and [#282](https://github.com/ethereum-optimism/infra/pull/282) updates it from 0.24.0 to 0.35.0 in `/op-conductor-mon`. Both are chore-related and aim to keep dependencies current.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-08-30T06:29:39.765Z"]
["ethereum-optimism/docs_day_2025-04-16", "ethereum-optimism/docs", "day", "2025-04-16", "# ethereum-optimism/docs Daily Update (Apr 16, 2025)\n## OVERVIEW \nNo new development activity was observed in the ethereum-optimism/docs repository on April 16, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were observed.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments.", "2025-08-30T06:29:39.976Z"]
["ethereum-optimism/docs_day_2025-03-24", "ethereum-optimism/docs", "day", "2025-03-24", "# ethereum-optimism/docs Daily Update (Mar 24, 2025)\n## OVERVIEW \nThe day saw the creation of a new issue focused on improving documentation for creating an OP Stack Rollup testnet using `op-deployer`, aiming to streamline the process for external chain operators.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n### Documentation for OP Stack Rollup Testnet Creation\nA new issue was opened to address the need for updated documentation on creating an OP Stack Rollup testnet with `op-deployer`. This aims to provide clearer guidance for external chain operators. [#1530](https://github.com/ethereum-optimism/docs/issues/1530)\n\n## ACTIVE ISSUES\n### Documentation for OP Stack Rollup Testnet Creation [#1530](https://github.com/ethereum-optimism/docs/issues/1530)\nThe discussion on this newly opened issue highlights the current challenges with existing documentation, which mixes old manual deployment methods with the new `op-deployer` approach, making it difficult for external chain operators to launch their chains. There's also a question about `op-deployer` defaulting to FaultDisputeGame instead of L2OO. A user noted a high number of RPC calls on Alchemy when using the permissioned fault-proof system, primarily `eth_call` requests targeting Permissioned Dispute Game contracts, suggesting the challenger might be contributing to the high RPC load. Another comment clarifies that `op-deployer` currently only deploys the permissioned dispute game (game type 1) with a placeholder for the absolute prestate hash, creating a circular dependency. A related pull request ([#1539](https://github.com/ethereum-optimism/docs/pull/1539)) is in progress to detail these aspects.", "2025-08-30T06:29:39.479Z"]
["ethereum-optimism/superchain-registry_day_2025-04-15", "ethereum-optimism/superchain-registry", "day", "2025-04-15", "# ethereum-optimism/superchain-registry Daily Update (Apr 15, 2025)\n## OVERVIEW \nThe day's activity for the `superchain-registry` repository focused on identifying an area for improvement in chain configuration management, with a new issue opened to streamline the handling of frequently changing addresses.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n### Chain Configuration Optimization\nA new issue was opened to discuss reducing the number of addresses in chain configuration `.toml` files to a minimal set. The proposal suggests that frequently changing contract/role addresses should instead be read from the `addresses.json` codegen file to prevent the config files from becoming stale. This aims to improve the maintainability and accuracy of chain configurations. [#978](https://github.com/ethereum-optimism/superchain-registry/issues/978)\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments.", "2025-08-30T06:29:39.909Z"]
["ethereum-optimism/infra_day_2025-04-16", "ethereum-optimism/infra", "day", "2025-04-16", "# ethereum-optimism/infra Daily Update (Apr 16, 2025)\n## OVERVIEW \nThe day's activity in the `infra` repository was light, with the primary focus on dependency management. A new pull request was opened to update a Go dependency.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo significant technical developments occurred today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#283](https://github.com/ethereum-optimism/infra/pull/283), was opened to update the `golang.org/x/net` dependency from version 0.23.0 to 0.38.0 within the `/op-ufm` directory. This is a routine dependency bump.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments were identified.", "2025-08-30T06:29:40.738Z"]
["ethereum-optimism/optimism_day_2025-05-13", "ethereum-optimism/optimism", "day", "2025-05-13", "# ethereum-optimism/optimism Daily Update (May 13, 2025)\n## OVERVIEW \nNo development activity was recorded for the `ethereum-optimism/optimism` repository on May 13, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments.", "2025-08-30T06:29:40.710Z"]
["ethereum-optimism/optimism_day_2025-05-12", "ethereum-optimism/optimism", "day", "2025-05-12", "# ethereum-optimism/optimism Daily Update (May 12, 2025)\n## OVERVIEW \nThe day's activity focused on internal development, with a new pull request opened to begin the cleanup and restructuring of the L2 test suite. This indicates an ongoing effort to improve code quality and maintainability within the project.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#15862](https://github.com/ethereum-optimism/optimism/pull/15862), was opened to initiate the cleanup and documentation of the L2 test structure. This is a refactoring effort aimed at improving the organization and clarity of the test suite.\n\n## CLOSED ISSUES\n\nNo closed issues to report for this period.\n\n## NEW ISSUES\n\nNo new issues to report for this period.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments to report for this period.", "2025-08-30T06:29:40.993Z"]
["ethereum-optimism/optimism_day_2025-05-08", "ethereum-optimism/optimism", "day", "2025-05-08", "# ethereum-optimism/optimism Daily Update (May 8, 2025)\n## OVERVIEW \nThe day's activity focused on refining the Fault Proof system, with a new issue opened to address OPCM changes and an existing issue related to the Creator pattern being closed due to consolidation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**Creator Pattern Consolidation**\nThe issue [#13168](https://github.com/ethereum-optimism/optimism/issues/13168) related to implementing the new Creator Pattern was closed. This closure is due to the consolidation of all related sub-issues under a main parent issue, [#12421](https://github.com/ethereum-optimism/optimism/issues/12421).\n\n## NEW ISSUES\n\n**Fault Proof System Enhancements**\nA new issue, [#15789](https://github.com/ethereum-optimism/optimism/issues/15789), was opened to investigate and address the necessary OPCM (Optimism Protocol Compatibility Module) changes required for the Fault Proof creator contract, ensuring compatibility with recent updates.\n\n## ACTIVE ISSUES\n\n**Fault Proof Creator Contract OPCM Changes**\nThe issue [#15789](https://github.com/ethereum-optimism/optimism/issues/15789) was opened to address the OPCM changes for the Fault Proof creator contract. While the issue was created on May 8, 2025, subsequent comments indicate ongoing work and a detailed plan for resolution. A comment from stevennevins on July 9, 2025, outlines a comprehensive checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comments, addressing TODOs, rebasing updates from EVM safety, and fixing Go updates in integration tests. An earlier comment from stevennevins on June 10, 2025, links to a pull request, https://github.com/ethereum-optimism/optimism/pull/16340, which is likely related to the progress on this issue.", "2025-08-30T06:29:42.133Z"]
["ethereum-optimism/infra_day_2025-05-13", "ethereum-optimism/infra", "day", "2025-05-13", "# ethereum-optimism/infra Daily Update (May 13, 2025)\n## OVERVIEW \nThe day's activity for the `infra` repository was minimal, with no new features, bug fixes, code refactoring, documentation enhancements, or tests added. The primary activity involved the creation of a new issue focused on refactoring the upgrade runbook.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n### Documentation Refactoring\nA new issue was opened to refactor the upgrade runbook, aiming to align its format with the existing mainnet migration playbook for consistency and clarity [#347](https://github.com/ethereum-optimism/infra/issues/347).\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-08-30T06:29:41.333Z"]
["ethereum-optimism/specs_day_2025-05-15", "ethereum-optimism/specs", "day", "2025-05-15", "# ethereum-optimism/specs Daily Update (May 15, 2025)\n## OVERVIEW \nThe day's development focused on initiating new specification work, with a notable new pull request opened for the \"Flashblock Spec.\"\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for May 15, 2025.\n\n## NEWLY OPENED PULL REQUESTS\n- **New Specification Drafts:** A new pull request, [#703](https://github.com/ethereum-optimism/specs/pull/703) \"Flashblock Spec,\" was opened. This PR introduces a new specification, indicating the start of work on a new technical area.\n\n## CLOSED ISSUES\n\nNo closed issues to report for May 15, 2025.\n\n## NEW ISSUES\n\nNo new issues to report for May 15, 2025.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments to report for May 15, 2025.", "2025-08-30T06:29:42.257Z"]
["ethereum-optimism/optimism_day_2025-05-16", "ethereum-optimism/optimism", "day", "2025-05-16", "# ethereum-optimism/optimism Daily Update (May 16, 2025)\n## OVERVIEW \nThe day's activity primarily focused on strategic planning, with the creation of a new issue to track the Interop proofs U17 proof upgrade workstream, indicating future development in protocol security and cross-chain interoperability.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n### Interoperability Proofs Upgrade\nA new issue was opened to track the Interop proofs U17 proof upgrade workstream, which is a key initiative for enhancing cross-chain interoperability within the Superchain. This issue serves as a tracker for the U17 Proof Upgrade project. ([#15980](https://github.com/ethereum-optimism/optimism/issues/15980))\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments.", "2025-08-30T06:29:42.115Z"]
["ethereum-optimism/optimism_day_2025-05-22", "ethereum-optimism/optimism", "day", "2025-05-22", "# ethereum-optimism/optimism Daily Update (May 22, 2025)\n## OVERVIEW \nThe day saw the closure of an issue related to the \"New Creator Pattern\" implementation, which was consolidated into a main parent issue for better tracking.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Creator Pattern Implementation\nThe issue [#13168](https://github.com/ethereum-optimism/optimism/issues/13168), \"Implement The New Creator Pattern,\" was closed. This issue, which aimed to finalize the design and implementation of `Creator` contracts and identify necessary OPCM changes, was closed as its tracking has been consolidated under a main parent issue ([#12421](https://github.com/ethereum-optimism/optimism/issues/12421)).\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were reported.", "2025-08-30T06:29:42.246Z"]
["ethereum-optimism/optimism_day_2025-05-28", "ethereum-optimism/optimism", "day", "2025-05-28", "# ethereum-optimism/optimism Daily Update (May 28, 2025)\n## OVERVIEW \nThe day's development focused on a new pull request introducing a dependencySet API for the op-supervisor, indicating foundational work on system dependencies.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n- **Supervisor Enhancements**: A new pull request, [#16156](https://github.com/ethereum-optimism/optimism/pull/16156), was opened to add a `dependencySet` API to the `op-supervisor`. This suggests ongoing work to refine how dependencies are managed within the supervisor component.\n\n## CLOSED ISSUES\n\nNo closed issues to report for this period.\n\n## NEW ISSUES\n\nNo new issues to report for this period.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments to report for this period.", "2025-08-30T06:29:42.597Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2024-12-01", "ethereum-optimism/ethereum-optimism.github.io", "week", "2024-12-01", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Dec 1 - 7, 2024)\n\n## \ud83d\ude80 Highlights\nBased on the available development reports for the week of December 1-7, 2024, there was no recorded development activity in the `ethereum-optimism/ethereum-optimism.github.io` repository. The project saw no new pull requests, issues, or other code contributions during the monitored period.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo key developments, new features, or bug fixes were recorded in the provided reports for this week.\n\n## \ud83d\udc1b Issues & Triage\nThere was no activity related to issues this week. No new issues were opened, and no existing issues were closed, according to the available data.\n\n## \ud83d\udcac Community & Collaboration\nThe provided reports indicate no community interaction or collaboration within the repository this week, as there were no new pull requests or issues to generate discussion.", "2025-08-30T06:30:47.377Z"]
["ethereum-optimism/optimism_week_2024-12-01", "ethereum-optimism/optimism", "week", "2024-12-01", "# ethereum-optimism/optimism Weekly Report (Dec 1 - 7, 2024)\n\n## \ud83d\ude80 Highlights\nDevelopment activity was minimal during the week of December 1-7, 2024. No pull requests were opened or merged, and no code changes were committed. The sole activity of note was the initiation of planning for a new \"Creator\" pattern, captured in a new issue. This suggests a week focused on planning and design rather than active implementation.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no completed technical developments, new features, bug fixes, or code refactoring efforts reported during this period.\n\n## \ud83d\udc1b Issues & Triage\nThe management of issues was the primary focus of the week, with no issues being closed.\n\n- **New & Active Issues:** A single new issue was opened to track future work:\n    - **Creator Pattern Implementation ([#13168](https://github.com/ethereum-optimism/optimism/issues/13168)):** This issue was created to scope the work for a new \"Creator\" pattern. The initial plan includes finalizing the design document, implementing `Creator` contracts, and identifying required changes to the OPCM.\n\n## \ud83d\udcac Community & Collaboration\nBased on the provided data, there was no observable community collaboration this week. No pull requests were opened for review, and no significant discussions were noted on active issues.", "2025-08-30T06:30:47.863Z"]
["ethereum-optimism/optimism_week_2024-11-24", "ethereum-optimism/optimism", "week", "2024-11-24", "# ethereum-optimism/optimism Weekly Report (Nov 24 - 30, 2024)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for code contributions, with development activity focused on identifying and defining future work. The primary event was the creation of a new issue aimed at optimizing the performance of the `op-challenger`. This issue highlights an ongoing focus on system efficiency, specifically by addressing the high frequency of calls made to the L1 node during game processing.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no completed technical developments, code changes, or merged pull requests during this period.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was the sole activity this week, with no issues being closed.\n\n- **New & Active Issues:** A key performance concern was raised in a new issue.\n  - **`op-challenger` Performance:** Issue [#13090](https://github.com/ethereum-optimism/optimism/issues/13090) was opened to address the `op-challenger`'s excessive L1 node calls. The component currently processes all games from the last 28 days frequently, leading to a high load. The issue proposes adding a configuration option to limit the processing frequency of games to improve efficiency.\n\n## \ud83d\udcac Community & Collaboration\nThere was minimal public collaboration visible in the repository this week. No pull requests were opened or reviewed, and there were no significant discussions on active issues. The week's activity was centered on the single new issue filed.", "2025-08-30T06:30:46.139Z"]
["ethereum-optimism/optimism_week_2024-12-15", "ethereum-optimism/optimism", "week", "2024-12-15", "# ethereum-optimism/optimism Weekly Report (Dec 15 - 21, 2024)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for code contributions, with no new pull requests merged or features added. The development focus shifted entirely to issue triage and support. The primary activity centered on a newly reported configuration issue with the `op-proposer`, which failed to create transactions due to an `execution reverted` error. Collaborative discussion on this issue led to identifying a likely misconfiguration of the dispute game type and related contract addresses.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new code contributions, features, or bug fixes merged during this period. All development activity was focused on investigating the issue detailed below.\n\n## \ud83d\udc1b Issues & Triage\nThe week's activity was concentrated on understanding and resolving a single critical issue.\n\n- **Closed Issues:** No issues were reported as closed this week.\n\n- **New & Active Issues:**\n  - A significant new issue, **[#13502](https://github.com/ethereum-optimism/optimism/issues/13502)**, was opened concerning the `op-proposer`. Users reported it was failing to create transactions, encountering an `execution reverted` error when deployed with a specific command.\n  - The active discussion on this issue involved several contributors. The investigation pointed towards a `NoImplementation` error, suggesting a problem with contract configuration. The root cause appears to be an uninitialized `gameImpls` mapping for certain game types.\n  - The suggested resolution, confirmed by multiple users, is to upgrade the game factory address proxy implementation and ensure the correct `--game-type` is set (specifically `1` for `PermissionedFaultDisputeGame`).\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction was focused on collaborative problem-solving within issue **[#13502](https://github.com/ethereum-optimism/optimism/issues/13502)**. Contributors `protolambda`, `mw2000`, `asymmetric`, and `dariusL3` worked together to diagnose the `op-proposer` configuration problem, share findings, and confirm the solution. This highlights a responsive community effort to troubleshoot and resolve user-facing deployment issues, even during a period with no new code commits.", "2025-08-30T06:30:49.992Z"]
["ethereum-optimism/optimism_week_2024-10-06", "ethereum-optimism/optimism", "week", "2024-10-06", "# ethereum-optimism/optimism Weekly Report (Oct 6 - 12, 2024)\n\n## \ud83d\ude80 Highlights\nThis week's focus was on architectural planning to address a critical scalability bottleneck within the Superchain's upgrade process. A key discussion emerged around the need to refactor fault proof contracts to support `Creator` contracts, a change aimed at significantly reducing deployment costs and enabling more efficient, batched upgrades across the growing number of L2 chains. This strategic effort underscores the project's commitment to improving the long-term maintainability and scalability of the Superchain ecosystem.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no new features or pull requests were merged this week, development efforts were concentrated on strategic planning and architectural design. The primary focus was on addressing the inefficiencies in the current dispute game contract deployment process, as detailed in the issues section below.\n\n## \ud83d\udc1b Issues & Triage\nThe week's activity was centered on identifying and defining a crucial piece of future work related to protocol scalability.\n\n- **Closed Issues:** No issues were reported as closed this week.\n\n- **New & Active Issues:**\n  The most significant development was the opening of issue [#12421](https://github.com/ethereum-optimism/optimism/issues/12421), which highlights a major bottleneck for Superchain upgrades.\n    - **Problem:** The current fault proof contracts contain immutables, requiring a full, costly redeployment for each new L2 chain. With deployment costs ranging from 3-5 million gas per contract, this severely limits the number of chains that can be upgraded in a single transaction.\n    - **Proposed Solution:** The issue proposes refactoring the dispute game contracts to remove these immutables, allowing for a shared implementation across all chains. This would streamline the upgrade process and is a necessary step for scaling the Superchain.\n    - **Context:** This work is a continuation of previous efforts, such as the refactoring of the `AnchorStateRegistry`. Discussion on the issue indicates it is being re-prioritized due to its high impact on upgrade efficiency.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was focused on high-level architectural strategy. The discussion around issue [#12421](https://github.com/ethereum-optimism/optimism/issues/12421) and updates to a related design document ([design-docs/pull/275](https://github.com/ethereum-optimism/design-docs/pull/275)) show a coordinated effort to tackle foundational challenges. This indicates a proactive approach to ensuring the protocol's architecture can support the continued growth of the Superchain.", "2025-08-30T06:30:51.766Z"]
["ethereum-optimism/optimism_week_2024-12-29", "ethereum-optimism/optimism", "week", "2024-12-29", "# ethereum-optimism/optimism Weekly Report (Dec 29 - 4, 2024)\n\n## \ud83d\ude80 Highlights\nThis was a quiet period focused on forward-looking protocol design rather than active code development. The primary activity involved strategic planning around consensus mechanisms, highlighted by the creation of a new tracking issue. This issue proposes adding a nonce to specific L1 events to enhance protocol robustness, indicating a continued focus on long-term security and stability.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, or other code-level changes merged during this timeframe.\n\n## \ud83d\udc1b Issues & Triage\nThe project's issue tracker saw minimal activity, with the focus on planning for future enhancements.\n\n- **Closed Issues:** No issues were closed during this period.\n- **New & Active Issues:** A single new tracking issue, [#13543](https://github.com/ethereum-optimism/optimism/issues/13543), was opened. It proposes monitoring the implementation of a nonce for L1 events that influence consensus, specifically `SystemConfig.ConfigUpdate` and `OptimismPortal2.Transact`. This suggests planning for future protocol improvements, although the report notes this specific implementation was not prioritized for the immediate future.\n\n## \ud83d\udcac Community & Collaboration\nThe development activity was minimal, with no new pull requests or significant discussions on issues reported. This indicates a period of low collaborative activity, typical of holiday seasons or times of strategic planning between implementation cycles.", "2025-08-30T06:30:56.952Z"]
["ethereum-optimism/optimism_week_2025-03-09", "ethereum-optimism/optimism", "week", "2025-03-09", "# ethereum-optimism/optimism Weekly Report (Mar 9 - 15, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week focused on forward-looking maintenance and toolchain compatibility. While no new features were merged or bugs fixed, the project took proactive steps to ensure future stability. The primary activity involved planning for upcoming updates to the Go language, specifically creating a tracking issue to prepare the Cannon fault-proving system for the eventual release of Go 1.24. This reflects a continued commitment to maintaining the health and compatibility of the core infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no completed pull requests or new technical developments merged this week. Development activity was focused on planning rather than implementation.\n\n## \ud83d\udc1b Issues & Triage\nThe week's issue management centered on preparing for future toolchain updates.\n\n- **New & Active Issues:** A single new issue, [#14760](https://github.com/ethereum-optimism/optimism/issues/14760), was opened to track the necessary work for updating the Cannon proving system to support Go 1.24. This follows previous efforts to support Go 1.23 and demonstrates proactive planning to prevent future compatibility problems. No other issues saw significant discussion.\n- **Closed Issues:** No issues were closed this week.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was minimal this week, with no pull requests opened or significant discussions on issues. The activity observed was centered on internal planning for long-term maintenance of the project's toolchain.", "2025-08-30T06:30:58.296Z"]
["ethereum-optimism/optimism_week_2025-03-16", "ethereum-optimism/optimism", "week", "2025-03-16", "# ethereum-optimism/optimism Weekly Report (Mar 16 - 22, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for code contributions, with development activity centered on planning and identifying areas for improvement. The primary focus was on enhancing the developer experience, particularly at the intersection of Go and Solidity. The EVM Safety team initiated a key discussion by opening an issue to address friction in the development workflow, signaling a future focus on tooling and efficiency for engineers building on the OP Stack.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no new features, bug fixes, or other code changes merged during this period. The project's development activity was focused on issue triage and planning rather than implementation.\n\n## \ud83d\udc1b Issues & Triage\nThe week's activity was concentrated on defining future work through the issue tracker.\n\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:** A significant new issue, [#14976](https://github.com/ethereum-optimism/optimism/issues/14976), was opened to improve the developer experience for those working with both Go and Solidity. The proposal aims to reduce friction by automatically updating Go structs when Solidity contracts are modified and exploring the replacement of input/output contracts with native Solidity structs. No other issues saw significant discussion.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was internal and forward-looking. The EVM Safety team's initiative in opening issue [#14976](https://github.com/ethereum-optimism/optimism/issues/14976) highlights a proactive approach to improving internal development processes. There was no significant public discussion on pull requests or issues, indicating a period of focused planning within the core team.", "2025-08-30T06:31:00.446Z"]
["ethereum-optimism/optimism_week_2025-02-02", "ethereum-optimism/optimism", "week", "2025-02-02", "# ethereum-optimism/optimism Weekly Report (Feb 2 - 8, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the stability and efficiency of core protocol components. A significant architectural discussion was initiated to deprecate the `req-resp` P2P sync protocol in `op-node` in favor of a simpler, more robust mechanism to address ongoing sync issues. Concurrently, a critical bug in `op-proposer` related to transaction creation failures was resolved, restoring key functionality for the dispute game system. The overall theme was a focus on protocol reliability through both immediate fixes and long-term architectural planning.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features or pull requests were merged this week. Development activity was concentrated on resolving existing issues and planning future architectural changes, as detailed in the sections below.\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nA key operational issue was resolved, improving the stability of the proposal mechanism:\n- **`op-proposer` Transaction Creation Failure:** An issue where `op-proposer` failed to create transactions ([#13502](https://github.com/ethereum-optimism/optimism/issues/13502)) was closed. The root cause was identified as a misconfiguration, specifically passing an incorrect `game-type` or having an improperly configured contract. The resolution ensures the dispute game system functions as expected.\n\n### New & Active Issues\nA major new issue was opened, sparking discussion around a significant change to the node synchronization process:\n- **Deprecation of `req-resp` P2P Sync:** A proposal was opened ([#14108](https://github.com/ethereum-optimism/optimism/issues/14108)) to remove the `req-resp` P2P sync protocol from `op-node`. This change aims to solve persistent sync problems.\n- **Alternative Sync Mechanism Discussion:** The discussion on [#14108](https://github.com/ethereum-optimism/optimism/issues/14108) revolves around an alternative unsafe block sync mechanism. The proposed alternative is noted as being simpler and more cost-effective, avoiding the complexities and networking challenges of the current UDP-based protocol. It is designed to be faster for syncing small block ranges and less prone to race conditions, improving overall node stability and convergence speed.\n\n## \ud83d\udcac Community & Collaboration\nThis week's collaboration was characterized by deep technical discussions on architectural improvements. The conversation around the `op-node` sync protocol in issue [#14108](https://github.com/ethereum-optimism/optimism/issues/14108) highlighted a prototype developed by community member @emilianobonassi, demonstrating a collaborative approach to solving core infrastructure challenges. The activity indicates a focus on strategic planning and problem-solving among core contributors.", "2025-08-30T06:31:01.290Z"]
["ethereum-optimism/optimism_week_2025-03-30", "ethereum-optimism/optimism", "week", "2025-03-30", "# ethereum-optimism/optimism Weekly Report (Mar 30 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nBased on the available data, this week's activity centered on protocol integrity and security analysis. No new features or fixes were merged. The most significant event was the identification of a potential vulnerability within the `op-program` state transition logic, which was discovered as part of an external security audit by Spearbit. This finding has initiated discussions around strengthening the protocol's validation checks.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports for the week, there were no new features, bug fixes, or other code contributions merged into the repository. Development activity was focused on issue triage and analysis rather than implementation.\n\n## \ud83d\udc1b Issues & Triage\nThe primary focus this week was on identifying and understanding a new security-related issue.\n\n*   **New & Active Issues:** A critical new issue, [#15217](https://github.com/ethereum-optimism/optimism/issues/15217), was opened following a Spearbit audit. The finding points to an invalid pending progress length check in the `op-program: stateTransition` function during the consolidation step. Discussion on the issue has already confirmed its validity, and a potential fix involving the specification for the maximum number of chains has been suggested.\n\n*   **Closed Issues:** No issues were reported as closed this week.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was highlighted by the project's engagement with external security auditors. The findings from Spearbit and the subsequent internal discussion on issue [#15217](https://github.com/ethereum-optimism/optimism/issues/15217) demonstrate a proactive approach to identifying and addressing potential protocol vulnerabilities.", "2025-08-30T06:31:08.280Z"]
["ethereum-optimism/docs_week_2025-03-23", "ethereum-optimism/docs", "week", "2025-03-23", "# ethereum-optimism/docs Weekly Report (Mar 23 - 29, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's focus was on improving the developer experience for external chain operators building on the OP Stack. A significant new issue was raised to address outdated and confusing documentation for creating a rollup testnet. This sparked a critical discussion around the `op-deployer` tool, revealing technical details about its current implementation of fault-proof systems and its impact on RPC usage. The work initiated aims to streamline the onboarding process for new chains joining the Superchain ecosystem.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, development work this week centered on identifying and scoping documentation improvements rather than merging new features. An in-progress pull request ([#1539](https://github.com/ethereum-optimism/docs/pull/1539)) was noted as part of the effort to clarify the deployment process for OP Stack rollups.\n\n## \ud83d\udc1b Issues & Triage\nThe week's activity was driven by a new issue concerning the documentation for OP Stack testnet deployment.\n\n- **Closed Issues:** No issues were reported as closed this week.\n\n- **New & Active Issues:**\n  - **OP Stack Rollup Testnet Documentation ([#1530](https://github.com/ethereum-optimism/docs/issues/1530)):** A new issue was opened to create clear, updated documentation for setting up a testnet using `op-deployer`. The current documentation was identified as a blocker for external chain operators, as it mixes old manual deployment methods with the newer, preferred tool.\n  - The active discussion on this issue revealed several key technical points:\n    - `op-deployer` currently only deploys the permissioned dispute game (game type 1) and uses a placeholder for the absolute prestate hash.\n    - A user observed a high number of `eth_call` RPC requests when using the permissioned fault-proof system, suggesting a potential source of high operational costs.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was centered around issue [#1530](https://github.com/ethereum-optimism/docs/issues/1530), demonstrating a healthy feedback loop between the community and project maintainers. A user provided valuable, real-world feedback by reporting high RPC usage, which led to a deeper technical discussion about the `op-deployer`'s behavior. This interaction highlights the community's active role in identifying pain points and improving the tooling for the broader Superchain ecosystem.", "2025-08-30T06:31:06.643Z"]
["ethereum-optimism/docs_week_2025-04-13", "ethereum-optimism/docs", "week", "2025-04-13", "# ethereum-optimism/docs Weekly Report (Apr 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nBased on the provided development reports for the week, there was no observable development activity in the `ethereum-optimism/docs` repository. No new pull requests were opened, no issues were created or resolved, and there were no significant discussions on existing issues. The project remained static during the observed period.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new technical developments, features, or bug fixes were recorded in the provided reports for this week.\n\n## \ud83d\udc1b Issues & Triage\nThere was no issue-related activity this week. No new issues were opened, and no existing issues were closed or saw significant discussion.\n\n## \ud83d\udcac Community & Collaboration\nNo community collaboration, such as pull request reviews or active issue discussions, was noted in the development reports for this period.", "2025-08-30T06:31:05.115Z"]
["ethereum-optimism/infra_week_2025-04-13", "ethereum-optimism/infra", "week", "2025-04-13", "# ethereum-optimism/infra Weekly Report (Apr 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity within the `infra` repository was centered on routine maintenance and dependency management. Development focused on updating core Go modules to ensure the security and stability of the infrastructure. Specifically, `golang.org/x/crypto` and `golang.org/x/net` dependencies were bumped across several components. This foundational work, while not introducing new features, is crucial for the long-term health of the Optimism ecosystem.\n\n## \ud83d\udee0\ufe0f Key Developments\nAll development this week consisted of dependency updates aimed at keeping the project's components secure and up-to-date.\n\n- **Go Module Dependency Bumps:**\n  - Three pull requests were opened to update Go dependencies. Work was done to upgrade `golang.org/x/crypto` in both the `/op-ufm` ([#281](https://github.com/ethereum-optimism/infra/pull/281)) and `/op-conductor-mon` ([#282](https://github.com/ethereum-optimism/infra/pull/282)) modules.\n  - Additionally, the `golang.org/x/net` dependency was updated within `/op-ufm` ([#283](https://github.com/ethereum-optimism/infra/pull/283)).\n\n## \ud83d\udc1b Issues & Triage\nThere was no significant activity related to issues this week.\n\n- **Closed Issues:** No issues were closed during this period.\n- **New & Active Issues:** No new issues were opened, and there were no notable discussions on existing active issues.\n\n## \ud83d\udcac Community & Collaboration\nBased on the provided reports, the week was quiet with a focus on individual maintenance tasks. There were no significant discussions or collaborative efforts highlighted in pull requests or issues.", "2025-08-30T06:31:10.740Z"]
["ethereum-optimism/superchain-registry_week_2025-04-13", "ethereum-optimism/superchain-registry", "week", "2025-04-13", "# ethereum-optimism/superchain-registry Weekly Report (Apr 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for code contributions, with development activity centered on planning for future improvements to the registry's maintainability. The primary focus was on optimizing chain configuration management. A key proposal was introduced to streamline how contract addresses are handled, aiming to reduce the potential for stale configurations and improve the overall accuracy of the registry.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no new features, bug fixes, or other code changes merged into the repository this week. The development focus was on identifying areas for architectural improvement rather than implementing new code.\n\n## \ud83d\udc1b Issues & Triage\nThe week's activity was concentrated on issue management, with a focus on enhancing the configuration process.\n\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:** A significant new issue was opened to address the maintainability of chain configurations.\n  - **Chain Configuration Optimization ([#978](https://github.com/ethereum-optimism/superchain-registry/issues/978)):** A proposal was made to reduce the number of addresses stored in the chain configuration `.toml` files. The suggestion is to read frequently changing contract and role addresses from the `addresses.json` codegen file instead, preventing the `.toml` files from becoming stale and difficult to maintain.\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction was minimal this week, with no pull requests opened or significant discussions on existing issues. The primary activity consisted of the single new issue being filed, indicating a period of reflection and planning for future development work.", "2025-08-30T06:31:12.654Z"]
["ethereum-optimism/optimism_week_2025-05-04", "ethereum-optimism/optimism", "week", "2025-05-04", "# ethereum-optimism/optimism Weekly Report (May 4 - 10, 2025)\n\n## \ud83d\ude80 Highlights\nBased on the available data for this week, development efforts were concentrated on organizational and preparatory work for the Fault Proof system. No new code was merged, but significant progress was made in structuring the work ahead. A key new issue was created to investigate necessary changes for the Fault Proof creator contract, while an existing issue was closed to consolidate efforts under a single parent tracker, streamlining the project's focus on the Creator Pattern implementation.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, code refactorings, or documentation enhancements merged during this period. The focus was on issue management and planning for future development.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week centered on refining the project's approach to the Fault Proof system.\n\n- **Closed Issues:**\n  - **Creator Pattern Consolidation:** Issue [#13168](https://github.com/ethereum-optimism/optimism/issues/13168), related to the new Creator Pattern, was closed. This was an administrative action to consolidate all related sub-issues under the main parent issue, [#12421](https://github.com/ethereum-optimism/optimism/issues/12421), for better tracking.\n\n- **New & Active Issues:**\n  - **Fault Proof System Enhancements:** A new issue, [#15789](https://github.com/ethereum-optimism/optimism/issues/15789), was opened to investigate and address necessary OPCM (Optimism Protocol Compatibility Module) changes for the Fault Proof creator contract. The issue description indicates a detailed plan for resolution is already being formulated, suggesting this is a significant area of upcoming work.\n\n## \ud83d\udcac Community & Collaboration\nThe provided data for this week did not contain information regarding community collaboration, pull request discussions, or new contributor activity. The work appears to be focused on internal planning and issue organization.", "2025-08-30T06:31:22.641Z"]
["ethereum-optimism/specs_week_2025-05-11", "ethereum-optimism/specs", "week", "2025-05-11", "# ethereum-optimism/specs Weekly Report (May 11 - 17, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on initiating new protocol design work within the Optimism specification. The primary development was the introduction of a new draft for the \"Flashblock Spec\" ([#703](https://github.com/ethereum-optimism/specs/pull/703)), signaling the start of exploration into a new technical area. Overall, it was a quiet week in terms of completed work or issue resolution, suggesting a focus on planning and early-stage development for future protocol enhancements.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged or work completed during this period. The development focus was on proposing new specifications rather than iterating on existing ones.\n\n- **New Specification Drafts**\n  - Work began on a new \"Flashblock Spec\" with the opening of pull request [#703](https://github.com/ethereum-optimism/specs/pull/703). This marks the formal start of the design and review process for this new concept.\n\n## \ud83d\udc1b Issues & Triage\nThe issue tracker saw no activity this week. No new issues were opened, and no existing issues were closed or saw significant discussion.\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction was minimal this week, with development efforts concentrated on the single new specification proposal. There were no notable discussions on issues or pull requests reported.", "2025-08-30T06:31:20.173Z"]
["ethereum-optimism/infra_week_2025-05-11", "ethereum-optimism/infra", "week", "2025-05-11", "# ethereum-optimism/infra Weekly Report (May 11 - 17, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a very quiet week for the `infra` repository, with no code changes, pull requests, or bug fixes. The sole activity was the creation of a new issue aimed at improving operational documentation. This suggests a period of planning and preparation for future work, with a focus on standardizing procedures.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no completed pull requests or code contributions during this period.\n\n## \ud83d\udc1b Issues & Triage\nThe week's issue activity was minimal, focused on planning for documentation improvements.\n\n- **Closed Issues:** No issues were closed this week.\n- **New & Active Issues:** A single new issue was opened, proposing a refactor of the upgrade runbook to align its format with the mainnet migration playbook for better consistency [#347](https://github.com/ethereum-optimism/infra/issues/347). There were no notable discussions on other active issues.\n\n## \ud83d\udcac Community & Collaboration\nBased on the provided data, there was no observable collaboration in the form of pull request reviews or issue discussions this week.", "2025-08-30T06:31:20.293Z"]
["ethereum-optimism/optimism_week_2025-05-11", "ethereum-optimism/optimism", "week", "2025-05-11", "# ethereum-optimism/optimism Weekly Report (May 11 - 17, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week focused on internal planning and foundational improvements rather than new feature releases. Development activity centered on preparing for future workstreams and enhancing code maintainability. A key initiative for a future protocol upgrade, the \"Interop proofs U17 proof upgrade,\" was formally tracked, signaling a continued focus on Superchain interoperability. Additionally, work began on a significant refactoring of the L2 test suite to improve its structure and documentation.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged during this period, indicating a focus on ongoing development and planning rather than completed work.\n\nA new pull request was opened to begin a refactoring effort:\n*   **L2 Test Suite Refactor:** Work has started on cleaning up and documenting the L2 test structure in PR [#15862](https://github.com/ethereum-optimism/optimism/pull/15862). This effort aims to improve the long-term maintainability and clarity of the project's test suite.\n\n## \ud83d\udc1b Issues & Triage\n### Closed Issues\nNo issues were closed this week.\n\n### New & Active Issues\nThe primary activity in issues was related to strategic planning for a future protocol upgrade:\n*   **Interop Proofs Upgrade:** A new tracking issue, [#15980](https://github.com/ethereum-optimism/optimism/issues/15980), was created for the \"Interop proofs U17 proof upgrade\" workstream. This highlights a key technical priority related to enhancing cross-chain security and interoperability within the Superchain.\n\nNo other issues saw significant discussion during this period.\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction was minimal this week, with development activity appearing to be focused internally. The new work initiated, such as the L2 test suite cleanup ([#15862](https://github.com/ethereum-optimism/optimism/pull/15862)), reflects an internal focus on improving code quality and preparing the codebase for future contributions.", "2025-08-30T06:31:18.612Z"]
["ethereum-optimism/optimism_week_2025-05-18", "ethereum-optimism/optimism", "week", "2025-05-18", "# ethereum-optimism/optimism Weekly Report (May 18 - 24, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for the project, with no new code contributions, pull requests, or feature developments recorded in the provided reports. The primary activity involved project management and issue organization. A key task related to the \"New Creator Pattern\" was consolidated into a parent issue to streamline tracking, reflecting an ongoing focus on organizing larger development efforts.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the available reports, there were no new features, bug fixes, or other code-level changes merged this week.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on organization rather than resolution.\n\n-   **Closed Issues:** Issue [#13168](https://github.com/ethereum-optimism/optimism/issues/13168), concerning the implementation of the \"New Creator Pattern,\" was closed. This was an administrative action to consolidate tracking into the main parent issue, [#12421](https://github.com/ethereum-optimism/optimism/issues/12421), and does not signify completion of the work.\n-   **New & Active Issues:** No new issues were opened, and there were no significant discussions on existing issues reported during this period.\n\n## \ud83d\udcac Community & Collaboration\nThe provided data for the week shows no new pull requests or notable discussions on issues, indicating a period of low observable collaborative activity on the repository.", "2025-08-30T06:31:22.254Z"]
["ethereum-optimism/optimism_week_2025-05-25", "ethereum-optimism/optimism", "week", "2025-05-25", "# ethereum-optimism/optimism Weekly Report (May 25 - 31, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week focused on foundational development within the OP Stack. The primary activity centered on enhancing the `op-supervisor` component, with a new pull request opened to introduce a `dependencySet` API. This indicates ongoing efforts to refine how system dependencies are managed. No major features were completed or bugs fixed, suggesting a period of focused, in-progress work rather than shipping new functionality.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no completed pull requests or merged technical developments reported during this period. The development focus was on new, in-progress work.\n\n- **Supervisor Enhancements (In Progress)**: Work has begun on improving the `op-supervisor`. A new pull request ([#16156](https://github.com/ethereum-optimism/optimism/pull/16156)) was opened to add a `dependencySet` API, aiming to create a more robust framework for managing dependencies within the supervisor.\n\n## \ud83d\udc1b Issues & Triage\nIssue activity was minimal this week, with no new issues opened or existing ones closed.\n\n- **Closed Issues:** No issues were closed this week.\n- **New & Active Issues:** No new issues were opened, and there were no significant discussions reported on existing active issues.\n\n## \ud83d\udcac Community & Collaboration\nThe provided reports indicate a week of focused, heads-down development. Activity was centered on a single new pull request, with no significant public discussion or collaborative triage noted in the issues.", "2025-08-30T06:31:28.629Z"]
["ethereum-optimism/ethereum-optimism.github.io_month_2024-12-01", "ethereum-optimism/ethereum-optimism.github.io", "month", "2024-12-01", "# ethereum-optimism/ethereum-optimism.github.io Monthly Report (December 2024)\n\n## \ud83d\ude80 Highlights\nBased on the provided daily reports for December 2024, there was no development activity recorded in the `ethereum-optimism/ethereum-optimism.github.io` repository. No new pull requests were opened, no issues were created or resolved, and no code changes were made. The month appears to have been quiet with no recorded contributions.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo key technical developments, pull requests, or completed work were recorded in the daily reports for this month.\n\n## \ud83d\udc1b Issues & Triage\n- **Closed Issues:** No issues were closed during this period.\n- **New & Active Issues:** No new issues were reported, and there were no active issues with significant discussion noted in the provided data.\n\n## \ud83d\udcac Community & Collaboration\nThere was no recorded community activity, such as discussions on pull requests or issues, during December 2024.", "2025-08-30T06:34:14.232Z"]
["ethereum-optimism/optimism_month_2024-11-01", "ethereum-optimism/optimism", "month", "2024-11-01", "# ethereum-optimism/optimism Monthly Report (November 2024)\n\n## \ud83d\ude80 Highlights\nBased on the available data for November, development activity focused on identifying and addressing performance bottlenecks within the protocol's components. While no new code was merged, a key issue was raised concerning the `op-challenger`'s interaction with the L1 node. This points to an ongoing effort to optimize the efficiency and reduce the operational load of the fault-proof system.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no completed code changes, new features, or bug fixes merged during this period.\n\n## \ud83d\udc1b Issues & Triage\nThe primary focus in issue tracking this month was on performance optimization.\n\n- **Closed Issues:** No issues were reported as closed in November.\n\n- **New & Active Issues:** A significant new issue was opened to improve the performance of the `op-challenger`.\n    - **`op-challenger` Performance:** Issue [#13090](https://github.com/ethereum-optimism/optimism/issues/13090) was created to address the high frequency of calls the `op-challenger` makes to the L1 node. The component currently processes all games from the last 28 days, leading to excessive load. The proposal suggests adding an option to limit how often games are processed to mitigate this.\n\n## \ud83d\udcac Community & Collaboration\nThe provided reports for the month did not contain information regarding community discussions, pull request reviews, or contributor collaboration.", "2025-08-30T06:34:16.329Z"]
["ethereum-optimism/optimism_month_2025-02-01", "ethereum-optimism/optimism", "month", "2025-02-01", "# ethereum-optimism/optimism Monthly Report (February 2025)\n\n## \ud83d\ude80 Highlights\nDevelopment in February focused on enhancing the stability and reliability of core OP Stack components. A significant architectural discussion began around deprecating the `req-resp` P2P sync protocol in `op-node` to resolve persistent sync issues, with proposals for a simpler, more robust alternative. Concurrently, a critical bug affecting the `op-proposer` was resolved, improving the stability of the dispute game system. This month's efforts were centered on hardening the existing protocol and planning for future performance improvements.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features or code changes were merged this month based on the provided reports. Development activity was concentrated on resolving critical issues and engaging in architectural design discussions for future protocol enhancements.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month targeted both immediate bug fixes and long-term architectural improvements, particularly concerning node synchronization and the dispute game mechanism.\n\n- **Closed Issues:**\n    - **Dispute Game Stability:** A key issue ([#13502](https://github.com/ethereum-optimism/optimism/issues/13502)) causing `op-proposer` to fail when creating transactions was resolved. The problem was traced to a misconfiguration of the dispute game type or its underlying contract implementation, and the fix ensures the stability of this crucial component.\n\n- **New & Active Issues:**\n    - **Rethinking `op-node` Sync Protocol:** A major new issue ([#14108](https://github.com/ethereum-optimism/optimism/issues/14108)) was opened to track the proposed deprecation of the `req-resp` P2P sync protocol. Active discussions highlight the current protocol's drawbacks, including slowness, complexity, and race conditions that hinder node stability. An alternative, prototyped by a contributor, proposes a simpler and more efficient unsafe block sync mechanism, potentially using a centralized driver like Redis to publish blocks, which would complement the existing P2P gossip layer.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions surrounding future architectural changes. The proposal to improve the `op-node` sync mechanism in issue [#14108](https://github.com/ethereum-optimism/optimism/issues/14108) was notably driven by a prototype from community member @emilianobonassi, sparking a productive conversation about the trade-offs between the current P2P implementation and a simpler, centralized driver approach for syncing unsafe blocks. This highlights a healthy dynamic of community-driven innovation and open design discussion.", "2025-08-30T06:34:23.339Z"]
["ethereum-optimism/optimism_month_2024-12-01", "ethereum-optimism/optimism", "month", "2024-12-01", "# ethereum-optimism/optimism Monthly Report (December 2024)\n\n## \ud83d\ude80 Highlights\nDevelopment in December was characterized by planning and problem identification rather than active code contribution. Activity centered on opening strategic issues that outline future work on protocol design and consensus mechanisms. Key discussions emerged around troubleshooting core components, notably the `op-proposer`. While no new features or fixes were merged, the issues raised this month point to a focus on enhancing protocol robustness and developer experience in upcoming development cycles.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, or other code contributions merged during this period. Development activity was focused on issue creation and discussion.\n\n## \ud83d\udc1b Issues & Triage\nThe month's activity was concentrated on identifying and defining new work items and troubleshooting existing component configurations.\n\n- **Closed Issues:** No issues were reported as closed within December.\n\n- **New & Active Issues:** Three significant issues were opened, outlining future development and addressing immediate configuration problems:\n    - **Creator Pattern Implementation ([#13168](https://github.com/ethereum-optimism/optimism/issues/13168)):** A new issue was opened to track the design and implementation of a \"Creator\" pattern for contracts, including necessary changes to the OPCM (Optimism Payload Communication Manager). This signals planning for new smart contract architecture patterns.\n    - **Consensus Event Nonce Tracking ([#13543](https://github.com/ethereum-optimism/optimism/issues/13543)):** A tracking issue was created to monitor the potential implementation of a nonce for L1 events that influence consensus, such as `SystemConfig.ConfigUpdate` and `OptimismPortal2.Transact`. This indicates strategic thinking around improving the determinism and security of L1-L2 interactions.\n    - **`op-proposer` Configuration Failures ([#13502](https://github.com/ethereum-optimism/optimism/issues/13502)):** An important issue was raised concerning `op-proposer` failures, where it would encounter an `execution reverted` error. The subsequent discussion was crucial, with community members diagnosing the problem. The root cause was identified as a misconfiguration of the game factory address and an incorrect `--game-type` flag, which needed to be set properly for the `PermissionedFaultDisputeGame`.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration in December was most visible through community-driven troubleshooting. The discussion on the `op-proposer` issue ([#13502](https://github.com/ethereum-optimism/optimism/issues/13502)) showcased effective collaboration, with multiple contributors (`protolambda`, `mw2000`, `asymmetric`, `dariusL3`) working together to diagnose the configuration error and confirm the solution. Overall, the low volume of pull requests and merged code suggests a quiet month, typical for the end of the year, with the community's focus shifting from active coding to planning and support.", "2025-08-30T06:34:26.204Z"]
["ethereum-optimism/optimism_month_2024-10-01", "ethereum-optimism/optimism", "month", "2024-10-01", "# ethereum-optimism/optimism Monthly Report (October 2024)\n\n## \ud83d\ude80 Highlights\nOctober's development efforts centered on improving the scalability and efficiency of the Superchain's upgrade process. A critical need was identified to refactor fault proof contracts to support `Creator` contracts, addressing a significant bottleneck caused by high gas costs during deployment. This strategic focus aims to reduce the friction of onboarding new L2 chains and streamline future upgrades across the ecosystem, laying the groundwork for more efficient scaling.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major features were merged this month based on the provided data, significant planning and design work took place to address architectural challenges.\n\nThe primary focus was on the design for refactoring dispute game contracts. The current implementation requires a full redeployment for each new L2 chain due to immutable constructor arguments, costing 3-5 million gas per deployment. This creates a bottleneck, limiting the number of chains that can be upgraded in a single transaction. An updated design document ([design-docs/pull/275](https://github.com/ethereum-optimism/design-docs/pull/275)) reflects the latest direction for this refactoring effort, which aims to remove these immutables and allow for shared contract implementations across chains.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month highlighted a key area for future development focused on protocol efficiency and scalability.\n\n- **Closed Issues:** No issues were reported as closed in the provided data.\n\n- **New & Active Issues:** The most significant activity revolved around issue **[#12421](https://github.com/ethereum-optimism/optimism/issues/12421)**, which was opened to track the refactoring of fault proof contracts. Discussion on this issue emphasized its importance for the Superchain's upgrade process. The high deployment cost of the current contracts is a major impediment to scaling. This issue, previously paused, has been re-prioritized as it represents a critical path for improving the efficiency of managing a growing number of chains within the Superchain.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was characterized by strategic planning and technical design discussions. The activity around issue [#12421](https://github.com/ethereum-optimism/optimism/issues/12421) and its associated design document update indicates a focused effort by the team to address foundational architectural challenges necessary for the long-term health and scalability of the Superchain.", "2025-08-30T06:34:21.984Z"]
["ethereum-optimism/docs_month_2025-04-01", "ethereum-optimism/docs", "month", "2025-04-01", "# ethereum-optimism/docs Monthly Report (April 2025)\n\n## \ud83d\ude80 Highlights\nBased on the provided development reports for April 2025, the `ethereum-optimism/docs` repository saw no new development activity. There were no new pull requests, issues, or code commits recorded during this period. The project remained static, with no changes to documentation or ongoing discussions noted in the reports.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo technical developments, features, or bug fixes were recorded in the daily reports for this month. The repository did not have any new pull requests merged.\n\n## \ud83d\udc1b Issues & Triage\nThe issue tracker remained quiet according to the provided data.\n- **Closed Issues:** No issues were reported as closed.\n- **New & Active Issues:** No new issues were opened, and no significant discussions were observed on existing issues.\n\n## \ud83d\udcac Community & Collaboration\nThe provided reports indicate no new community contributions or collaborative discussions in pull requests or issues during this timeframe.", "2025-08-30T06:34:29.765Z"]
["ethereum-optimism/infra_month_2025-04-01", "ethereum-optimism/infra", "month", "2025-04-01", "# ethereum-optimism/infra Monthly Report (April 2025)\n\n## \ud83d\ude80 Highlights\nDevelopment in the `infra` repository during April focused on routine maintenance and proactive security updates. The primary theme was dependency management within Go modules, ensuring the stability and security of core infrastructure components. This period was characterized by steady, preventative maintenance rather than new feature development, reflecting a commitment to the long-term health of the project's codebase.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered exclusively on updating dependencies to keep the infrastructure secure and current.\n\n- **Go Module Dependency Updates:** A series of pull requests were opened to bump versions of critical Go dependencies. This effort helps mitigate potential vulnerabilities and ensures compatibility.\n    - The `golang.org/x/crypto` dependency was updated in both `/op-ufm` ([#281](https://github.com/ethereum-optimism/infra/pull/281)) and `/op-conductor-mon` ([#282](https://github.com/ethereum-optimism/infra/pull/282)).\n    - The `golang.org/x/net` dependency was also updated within the `/op-ufm` directory ([#283](https://github.com/ethereum-optimism/infra/pull/283)).\n\n## \ud83d\udc1b Issues & Triage\nBased on the provided reports, there was no activity related to issues this month.\n\n- **Closed Issues:** No issues were closed.\n- **New & Active Issues:** No new issues were opened, and there were no significant updates or discussions on existing active issues.\n\n## \ud83d\udcac Community & Collaboration\nThe development activity reported in April consisted of routine dependency updates, which did not generate significant discussion or collaboration. The work appears to have been handled through straightforward pull requests without extensive review cycles or community input noted in the reports.", "2025-08-30T06:34:33.000Z"]
["ethereum-optimism/docs_month_2025-03-01", "ethereum-optimism/docs", "month", "2025-03-01", "# ethereum-optimism/docs Monthly Report (March 2025)\n\n## \ud83d\ude80 Highlights\nMarch's documentation efforts centered on improving the developer experience for external chain operators within the Superchain ecosystem. A significant new initiative began to overhaul the documentation for creating an OP Stack Rollup testnet, focusing on the modern `op-deployer` tool. This work was prompted by community feedback highlighting confusion caused by outdated manual deployment instructions. Active discussions quickly surfaced key technical complexities related to the fault-proof system, high RPC usage, and specific `op-deployer` behaviors, setting the stage for crucial documentation updates.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major pull requests were merged according to the provided data, development work was initiated to address documentation gaps for OP Stack testnet deployment. The primary focus is on creating clear, updated guides for using the `op-deployer` tool. This effort, tracked in a related pull request ([#1539](https://github.com/ethereum-optimism/docs/pull/1539)), aims to detail the nuances of the deployment process, including the specifics of the permissioned dispute game implementation.\n\n## \ud83d\udc1b Issues & Triage\nThe month's activity was driven by identifying and defining new documentation requirements rather than closing existing issues.\n\n- **Closed Issues:** No issues were reported as closed in March.\n\n- **New & Active Issues:** The most significant activity revolved around a new issue, [#1530](https://github.com/ethereum-optimism/docs/issues/1530), which became the central point of discussion.\n    - **OP Stack Testnet Documentation ([#1530](https://github.com/ethereum-optimism/docs/issues/1530)):** This issue was opened to address the need for clear documentation on creating a testnet with `op-deployer`. The discussion revealed that current guides confusingly mix old manual methods with the new tool. Key technical points raised include the high volume of `eth_call` RPC requests observed when using the permissioned fault-proof system, and clarifications that `op-deployer` currently only deploys the permissioned dispute game (game type 1) and has a circular dependency related to the absolute prestate hash.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was evident in the active discussion surrounding the new testnet documentation issue ([#1530](https://github.com/ethereum-optimism/docs/issues/1530)). Community members and developers engaged in a technical deep-dive to diagnose the challenges external chain operators face. The detailed feedback, covering topics from RPC load to the specifics of dispute game deployment, demonstrates a healthy, technically proficient community actively working to improve the onboarding experience and support the growth of the Superchain.", "2025-08-30T06:34:33.639Z"]
["ethereum-optimism/optimism_month_2025-04-01", "ethereum-optimism/optimism", "month", "2025-04-01", "# ethereum-optimism/optimism Monthly Report (April 2025)\n\n## \ud83d\ude80 Highlights\nApril's development activity centered on protocol security and integrity analysis. The primary focus was on processing findings from an external security audit conducted by Spearbit. A key issue was identified and logged concerning a potential vulnerability in the `op-program`'s state transition logic, prompting discussion around a specification-level fix. Overall, the month was characterized by diligent review and planning based on audit feedback rather than new feature implementation.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, code refactoring, or documentation enhancements merged during this period. The development efforts were concentrated on identifying and analyzing potential issues.\n\n## \ud83d\udc1b Issues & Triage\nThe management of issues was a key activity in April, with a focus on addressing external audit findings.\n\n- **Closed Issues:** No issues were reported as closed this month.\n\n- **New & Active Issues:** A significant new issue was opened, highlighting a potential protocol vulnerability.\n    - **Audit Finding:** Issue [#15217](https://github.com/ethereum-optimism/optimism/issues/15217) was created to track an invalid pending progress length check within the `op-program: stateTransition` function. This finding, originating from a Spearbit audit, points to a potential vulnerability during the consolidation step. Initial discussion on the issue confirmed its validity and proposed a fix to the specification regarding the maximum number of chains.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was demonstrated through the engagement with external security auditors. The discussion and validation of the Spearbit audit finding in issue [#15217] was the most notable collaborative activity, showcasing the project's process for integrating external feedback to enhance protocol security.", "2025-08-30T06:34:38.935Z"]
["ethereum-optimism/optimism_month_2025-03-01", "ethereum-optimism/optimism", "month", "2025-03-01", "# ethereum-optimism/optimism Monthly Report (March 2025)\n\n## \ud83d\ude80 Highlights\nDevelopment in March focused on forward-looking planning and improving the developer toolchain. While no new features were merged, significant groundwork was laid for future enhancements. Key activities included initiating proactive compatibility updates for the Cannon proving system to support Go 1.24. Additionally, efforts began to streamline the developer experience by identifying and planning to reduce friction in the Go and Solidity development workflow.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no completed pull requests or major code changes merged during this period. The focus remained on identifying and scoping future work.\n\n## \ud83d\udc1b Issues & Triage\nThe month's activity centered on opening new issues to track upcoming technical initiatives and developer experience improvements.\n\n- **Closed Issues:** No issues were reported as closed in March.\n\n- **New & Active Issues:** Two key issues were opened, highlighting a focus on toolchain maintenance and developer workflow.\n    - **Cannon Toolchain Updates:** To ensure the Cannon proving system remains compatible with the latest toolchains, an issue was opened to track the work needed to support Go 1.24 [#14760](https://github.com/ethereum-optimism/optimism/issues/14760). This is a proactive measure to maintain system health and security.\n    - **Developer Experience Improvements:** The EVM Safety team opened an issue to address friction for developers working across Go and Solidity [#14976](https://github.com/ethereum-optimism/optimism/issues/14976). The proposal aims to automate the updating of Go structs when Solidity contracts change, improving efficiency and reducing potential errors.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was centered on internal planning and problem identification rather than code review. The EVM Safety team's initiative to improve the Go/Solidity workflow [#14976](https://github.com/ethereum-optimism/optimism/issues/14976) demonstrates cross-functional efforts to enhance the developer experience within the project. The reported activity did not show significant public discussion or contributions on issues or pull requests.", "2025-08-30T06:34:30.222Z"]
["ethereum-optimism/superchain-registry_month_2025-04-01", "ethereum-optimism/superchain-registry", "month", "2025-04-01", "# ethereum-optimism/superchain-registry Monthly Report (April 2025)\n\n## \ud83d\ude80 Highlights\nApril was a month focused on planning and architectural improvement rather than active code changes. The primary activity centered on a proposal to enhance the maintainability of chain configurations within the Superchain registry. This discussion, captured in a new issue, aims to streamline how contract addresses are managed, preventing stale configurations and improving the overall accuracy of the registry. No new features or bug fixes were merged this month.\n\n## \ud83d\udee0\ufe0f Key Developments\nThere were no new features, bug fixes, or other code contributions merged during April 2025.\n\n## \ud83d\udc1b Issues & Triage\nThe project's issue tracker saw targeted activity around improving configuration management.\n\n- **Closed Issues:** No issues were closed in April.\n- **New & Active Issues:** A key discussion was initiated in issue [#978](https://github.com/ethereum-optimism/superchain-registry/issues/978), which proposes a significant optimization for chain configuration. The suggestion is to reduce the number of addresses stored in `.toml` files to a minimal set. To improve maintainability, frequently changing contract and role addresses would instead be read from the `addresses.json` codegen file, ensuring configurations remain up-to-date and less prone to becoming stale.\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction this month was focused and strategic. The single new issue opened represents a forward-looking discussion on improving the core architecture of the registry. There was no significant pull request activity or high-volume discussion, indicating a period of planning over implementation.", "2025-08-30T06:34:38.471Z"]
["ethereum-optimism/infra_month_2025-05-01", "ethereum-optimism/infra", "month", "2025-05-01", "# ethereum-optimism/infra Monthly Report (May 2025)\n\n## \ud83d\ude80 Highlights\nMay was a quiet month for the `ethereum-optimism/infra` repository, with no code contributions or pull requests merged. The focus was on planning and process improvement rather than active development. The sole activity recorded was the creation of a new issue aimed at enhancing operational documentation, indicating a preparatory phase for future work. This effort centers on standardizing procedures to ensure clarity and consistency for network upgrades.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no completed technical developments, new features, bug fixes, or code refactoring efforts merged during May 2025.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was the primary activity this month, though it was minimal.\n\n-   **Closed Issues:** No issues were closed in May.\n-   **New & Active Issues:** A single new issue was opened, [#347](https://github.com/ethereum-optimism/infra/issues/347), proposing a refactor of the upgrade runbook. The goal is to align its format with the existing mainnet migration playbook, improving consistency and usability for maintainers. There were no reports of significant discussion on active issues.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration within the repository was very light in May. The data shows no pull requests were opened, reviewed, or discussed. The month's activity was limited to the creation of a single documentation-focused issue, suggesting a period of internal planning rather than broad community engagement.", "2025-08-30T06:34:42.250Z"]
["ethereum-optimism/specs_month_2025-05-01", "ethereum-optimism/specs", "month", "2025-05-01", "# ethereum-optimism/specs Monthly Report (May 2025)\n\n## \ud83d\ude80 Highlights\nDevelopment in May centered on initiating new protocol design work. The primary activity was the introduction of a draft for the \"Flashblock Spec,\" signaling the beginning of exploration into a new technical area for the protocol. No development work was completed, and no issues were resolved during this reporting period.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there was no completed technical work or merged pull requests in May. The focus was on initiating new specification drafts rather than finalizing existing ones.\n\n## \ud83d\udc1b Issues & Triage\nThere was no reported activity regarding issues this month. No new issues were opened, and no existing issues were closed.\n\n## \ud83d\udcac Community & Collaboration\nCommunity activity was focused on proposing new specifications. The most notable contribution was the submission of a new pull request for the \"Flashblock Spec\" ([#703](https://github.com/ethereum-optimism/specs/pull/703)), which represents the start of a new workstream.", "2025-08-30T06:34:41.806Z"]
["ethereum-optimism/optimism_month_2025-05-01", "ethereum-optimism/optimism", "month", "2025-05-01", "# ethereum-optimism/optimism Monthly Report (May 2025)\n\n## \ud83d\ude80 Highlights\nMay was a month of foundational planning and strategic groundwork for the Optimism protocol. Development activity focused on initiating key refactoring efforts and organizing future workstreams rather than shipping new features. Significant new initiatives were kicked off to enhance the Fault Proof system, improve the L2 test suite structure, and formally track the upcoming Interop proofs upgrade. This period reflects a deliberate focus on improving code quality, maintainability, and preparing for major future protocol enhancements related to security and the Superchain.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major features were completed and merged in May, several important pull requests were opened, signaling the start of new development cycles.\n\n- **Supervisor Enhancements**: Work began on refining the `op-supervisor` with the introduction of a `dependencySet` API in PR [#16156]. This effort aims to improve how dependencies are managed within this critical component.\n- **Test Suite Refactoring**: To improve code quality and maintainability, a pull request ([#15862](https://github.com/ethereum-optimism/optimism/pull/15862)) was opened to begin the cleanup, restructuring, and documentation of the L2 test suite.\n\n## \ud83d\udc1b Issues & Triage\nIssue management in May centered on organizing complex projects and defining the scope for future protocol upgrades.\n\n- **Closed Issues:** The primary action was organizational. The issue for implementing the \"New Creator Pattern\" ([#13168](https://github.com/ethereum-optimism/optimism/issues/13168)) was closed, as all related sub-tasks were consolidated under the main parent issue ([#12421](https://github.com/ethereum-optimism/optimism/issues/12421)) for more streamlined tracking.\n\n- **New & Active Issues:** Two significant issues were opened, outlining major areas of future work:\n    - **Fault Proof System:** A new issue ([#15789](https://github.com/ethereum-optimism/optimism/issues/15789)) was created to investigate and implement necessary OPCM (Optimism Protocol Compatibility Module) changes for the Fault Proof creator contract. This is a critical task for ensuring protocol compatibility and security.\n    - **Interoperability Planning:** To formalize a key Superchain initiative, a new tracking issue ([#15980](https://github.com/ethereum-optimism/optimism/issues/15980)) was established for the \"Interop proofs U17 proof upgrade\" workstream.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month appeared focused and strategic, centered on planning and project organization. The consolidation of the Creator Pattern issues into a single parent tracker demonstrates a commitment to improving project management clarity for contributors. Furthermore, the detailed planning checklist noted in the comments for the Fault Proof OPCM issue ([#15789](https://github.com/ethereum-optimism/optimism/issues/15789)) highlights the thorough and coordinated approach being taken for significant protocol upgrades. The activity suggests that core development teams are laying the groundwork for larger, more complex initiatives.", "2025-08-30T06:34:46.560Z"]
["ethereum-optimism/op-analytics_day_2025-06-06", "ethereum-optimism/op-analytics", "day", "2025-06-06", "# ethereum-optimism/op-analytics Daily Update (Jun 6, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions and analysis of existing issues, particularly concerning the `op-supervisor` and `op-challenger` components, with no new code contributions or immediate resolutions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\n### Supervisor L1 Origin Validity\nA new issue was opened to improve the `op-supervisor`'s handling of L1 origin validity during resets. The current reset logic only checks consistency between local and node safe databases, lacking a check for the canonical L1 origin of the target. Discussions suggest that all targets provided by the supervisor should be valid, and if not, the supervisor should realize the L1 chain changed and provide another reset target, reducing complexity and back-and-forth with the `op-node`. [#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315)\n\n## ACTIVE ISSUES\n### Fault Proof Data Provision for Non-Genesis Interop\nDiscussions continued on fixing the `op-supervisor`'s ability to provide data for fault proofs with non-genesis interop. The `op-challenger` currently struggles with non-genesis activation blocks. One proposed solution involves the `op-challenger` manually constructing pre-interop super roots from rollup nodes or via the supervisor. Another option, currently being implemented, suggests indexing the safe DB in the supervisor from the first derived block, even if pre-Interop, to serve super roots consistently. The issue's title was updated to clarify that the fix is needed in `op-supervisor`, as the fault proof side lacks the necessary information. The importance of fixing this before moving to devnets was emphasized. [#16166](https://github.com/ethereum-optimism/op-analytics/issues/16166)\n\n### Incorrect Nonce from eth_getTransactionCount\nA user reported that `eth_getTransactionCount` returned an incorrect nonce (0x1 instead of 0x0) for pending transactions on a Base node, causing transactions to get stuck in the mempool. The user requested an update on the issue. [#623](https://github.com/ethereum-optimism/op-analytics/issues/623)", "2025-09-04T03:25:44.481Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-06", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-06", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 6, 2025)\n## OVERVIEW \nToday's focus was on refining the `op-supervisor`'s handling of L1 origin validity during resets and addressing an `eth_getTransactionCount` issue. Discussions continued on fault proof data provision for non-genesis interop.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Supervisor L1 Origin Validity\nA new issue was opened to improve the `op-supervisor`'s handling of L1 origin validity during resets. The current reset logic only checks for consistency between its local safe and the node's safe databases, but not whether the L1 origin of the target it finds is canonical. This could lead to issues where the supervisor relies on an invalid L1 origin after a reset. [#16315](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16315)\n\n## ACTIVE ISSUES\n\n### op-supervisor: Fix ability to provide data for fault proofs with non-genesis interop\nDiscussions continued on how to enable `op-supervisor` to provide data for fault proofs with non-genesis interop. The core problem is that `op-challenger` currently doesn't fully support non-genesis interop upgrades, leading to invalid actions when proving the non-genesis activation block. A key point of discussion is whether the `op-challenger` should manually construct the root from rollup nodes or if the `op-supervisor` should handle this by indexing the safe DB from the first derived block it receives, even if pre-Interop. The latest comment suggests that allowing the `op-supervisor` to index pre-Interop data would also enable the removal of `op-node`'s safe DB for managed nodes. [#16166](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16166)\n\n### eth_getTransactionCount returns incorrect nonce (0x1 instead of 0x0) for pending txs\nUsers are reporting that `eth_getTransactionCount` is returning an incorrect nonce (0x1 instead of 0x0) for pending transactions, causing transactions to get stuck in the mempool. Users are actively seeking updates on this issue. [#623](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/623)\n\n### op-supervisor: Improve L1 origin validity handling during resets\nThis newly opened issue discusses improving the `op-supervisor`'s reset logic to ensure the L1 origin of the target found is canonical. The current logic only checks for consistency between local and node safe databases. There's a debate on whether the supervisor should perform walkbacks if an invalid L1 origin is found or if it should simply request another reset. The latest comment suggests that all targets provided by the supervisor should be valid, and if not, the supervisor should realize the L1 chain changed and provide a new reset target, reducing complexity. [#16315](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16315)", "2025-09-04T03:25:44.742Z"]
["ethereum-optimism/op-geth_day_2025-06-06", "ethereum-optimism/op-geth", "day", "2025-06-06", "# ethereum-optimism/op-geth Daily Update (Jun 6, 2025)\n\n## OVERVIEW\n\nToday's development focused on Superchain configuration updates, importing new rehearsal configurations, and addressing an issue with `op_contracts_manager_addr` unmarshaling. Discussions on active issues revolved around `op-supervisor` improvements for fault proofs and L1 origin validity during resets.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Configuration Updates\nThe Superchain registry import commit was updated to include the latest `rehearsal-0-bn` configurations. This update also identified an issue with the `op_contracts_manager_addr` field unmarshaling from `superchain.toml`. ([#625](https://github.com/ethereum-optimism/op-geth/pull/625))\n\n## NEWLY OPENED PULL REQUESTS\n\nA new pull request, [#628](https://github.com/ethereum-optimism/op-geth/pull/628) \"Karlb/only transfer precompile\", was opened. Its current status and progress are pending further review.\n\n## CLOSED ISSUES\n\n### Test Suite Fixes\nThe issue [#16187](https://github.com/ethereum-optimism/op-geth/issues/16187), \"op-acceptance-tests: Fix interop sync test which relied on supervisor multinode support,\" was closed. This fix addressed issues with `TestUnsafeChainKnownToL2CL` and `TestUnsafeChainUnknownToL2CL` which were previously skipped due to their dependency on supervisor multi-node support. An additional test, `TestL2CLAheadOfSupervisor`, was also identified as needing a fix due to similar dependencies.\n\n## NEW ISSUES\n\n### Supervisor L1 Origin Handling\nA new issue, [#16315](https://github.com/ethereum-optimism/op-geth/issues/16315) \"op-supervisor: Improve L1 origin validity handling during resets,\" was opened. This issue highlights that the supervisor's reset logic currently lacks checks for the canonical L1 origin of the target, potentially leading to inconsistencies. The discussion suggests that after bisecting to a common safe block, the L1 origin of the found reset target should be verified, and if not canonical, the safe chain should be walked back until a valid L1 origin is found.\n\n## ACTIVE ISSUES\n\n### Fault Proofs with Non-Genesis Interop\nDiscussions on [#16166](https://github.com/ethereum-optimism/op-geth/issues/16166) \"op-supervisor: Fix ability to provide data for fault proofs with non-genesis interop\" continued. The core problem is the `op-challenger`'s inability to fully support non-Genesis Interop upgrades, specifically when proving the non-genesis activation block.\n\n*   **Latest Comments:** `sebastianst` (2025-06-06T17:42:28Z) noted that fixing this issue would allow for the removal of the `op-node`'s safe DB for managed nodes. `ajsutton` (2025-06-06T01:12:00Z) emphasized that fixing this in the challenger would require it to aggregate sync status and super roots from multiple rollup node endpoints, suggesting it would be more logical to handle this in the supervisor, which already manages `op-node` endpoints and super root creation.\n\n### Incorrect Nonce for Pending Transactions\nIssue [#623](https://github.com/ethereum-optimism/op-geth/issues/623) \"eth_getTransactionCount returns incorrect nonce (0x1 instead of 0x0) for pending txs\" remains active. This bug causes `eth_getTransactionCount` to return an incorrect nonce (0x1 instead of 0x0) for pending transactions, leading to transactions getting stuck in the mempool.\n\n*   **Latest Comments:** `mukul3097` (2025-06-12T16:59:13Z) and `ntrzr` (2025-06-09T11:27:43Z) are awaiting updates on this issue.", "2025-09-04T03:25:45.572Z"]
["ethereum-optimism/optimism_day_2025-06-06", "ethereum-optimism/optimism", "day", "2025-06-06", "# ethereum-optimism/optimism Daily Update (Jun 6, 2025)\n## OVERVIEW \nThe day's development focused on critical bug fixes in the op-deployer, enhancements to CI processes for contract dependencies, and documentation updates for custom Superchains. Several new issues were opened concerning supervisor behavior and migration scripts.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Deployment Tooling Enhancements\nA bug fix was implemented in the `op-deployer` to correctly handle the L1 contracts release flag, ensuring proper deployment configurations.\n- [#16316](https://github.com/ethereum-optimism/optimism/pull/16316)\n\n### CI Pipeline Optimization\nImprovements were made to the CI pipeline to streamline the installation of contract dependencies, including caching `solc` compiler versions to prevent repeated downloads.\n- [#16317](https://github.com/ethereum-optimism/optimism/pull/16317)\n- [#16318](https://github.com/ethereum-optimism/optimism/pull/16318)\n\n### Documentation for Custom Superchains\nNew documentation was added to the `op-deployer` to guide users on custom Superchain deployments, replacing previous draft content.\n- [#16309](https://github.com/ethereum-optimism/optimism/pull/16309)\n\n## NEWLY OPENED PULL REQUESTS\n- [#16311](https://github.com/ethereum-optimism/optimism/pull/16311): Removed duplicated code in `IsCrossUnsafe` function.\n- [#16313](https://github.com/ethereum-optimism/optimism/pull/16313): `op-chain-ops`: Removed `GasTokenDeployConfig`.\n- [#16328](https://github.com/ethereum-optimism/optimism/pull/16328): `dependabot(gomod)`: Bumped `golang.org/x/crypto` from 0.35.0 to 0.39.0.\n\n## CLOSED ISSUES\n\n### Depset Validation Update\nThe issue regarding depset validation to check `EthLockboxProxy` consistency was closed, indicating that the necessary checks are now in place.\n- [#16058](https://github.com/ethereum-optimism/optimism/issues/16058)\n\n## NEW ISSUES\n\n### Supervisor Reset Behavior\nNew issues were opened to improve the `op-supervisor`'s handling of reset targets, L1 origin validity during resets, and behavior during reorgs.\n- [#16314](https://github.com/ethereum-optimism/optimism/issues/16314)\n- [#16315](https://github.com/ethereum-optimism/optimism/issues/16315)\n- [#16321](https://github.com/ethereum-optimism/optimism/issues/16321)\n\n### OPCM Migration Script Improvements\nAn issue was created to track improvements for the OPCM migration script, specifically for calling `migrate` on `rehearsal-net-0`.\n- [#16326](https://github.com/ethereum-optimism/optimism/issues/16326)\n\n## ACTIVE ISSUES\n\n### Fault Proofs with Non-Genesis Interop\nDiscussion on [#16166](https://github.com/ethereum-optimism/optimism/issues/16166) revolves around fixing the `op-supervisor`'s ability to provide data for fault proofs with non-genesis interop upgrades. Recent comments suggest that fixing this in the `op-supervisor` is preferred over the `op-challenger` due to data availability. Options include handling pre-interop super roots by the `op-challenger` manually constructing the root or by the supervisor indexing the safe DB from the first random derived block. The title was updated to clarify that the fix is needed in `op-supervisor`.\n\n### Incorrect Nonce from `eth_getTransactionCount`\nIssue [#623](https://github.com/ethereum-optimism/optimism/issues/623) highlights an incorrect nonce returned by `eth_getTransactionCount` for pending transactions on the Base node. Users are requesting updates on the investigation and resolution of this problem, as it leads to stuck transactions in the mempool.\n\n### Interop Sync Test Fix\nIssue [#16187](https://github.com/ethereum-optimism/optimism/issues/16187) discusses fixing interop sync tests that relied on supervisor multinode support, which is being deprecated. The issue was marked as done by pcw109550, indicating progress on adapting these tests.", "2025-09-04T03:25:46.315Z"]
["ethereum-optimism/docs_day_2025-06-07", "ethereum-optimism/docs", "day", "2025-06-07", "# ethereum-optimism/docs Daily Update (Jun 7, 2025)\n## OVERVIEW \nNo new development activity was recorded for the `ethereum-optimism/docs` repository on June 7, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified.", "2025-09-04T03:25:45.706Z"]
["ethereum-optimism/optimism_day_2025-06-07", "ethereum-optimism/optimism", "day", "2025-06-07", "# ethereum-optimism/optimism Daily Update (Jun 7, 2025)\n## OVERVIEW \nNo new development activity was observed in the ethereum-optimism/optimism repository on June 7, 2025.\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n## CLOSED ISSUES\nNo issues were closed.\n## NEW ISSUES\nNo new issues were reported.\n## ACTIVE ISSUES\nNo active issues had more than 3 comments.", "2025-09-04T03:25:46.566Z"]
["ethereum-optimism/docs_day_2025-06-08", "ethereum-optimism/docs", "day", "2025-06-08", "# ethereum-optimism/docs Daily Update (Jun 8, 2025)\n## OVERVIEW \nThe day's activity for the `ethereum-optimism/docs` repository was minimal, with no completed work, new issues, or closed issues. The primary activity involved a new pull request for an interop testing tutorial and a new comment on an existing active issue regarding state dumping.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo key technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1654](https://github.com/ethereum-optimism/docs/pull/1654), was opened today, introducing an \"Interop testing tutorial.\" This PR is currently open and awaiting review.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### State Dumping Query\nA new comment was added to [#390](https://github.com/ethereum-optimism/docs/issues/390), an issue concerning how to dump all state of addresses. The user \"0xWilliamWang\" inquired if a solution has been found for exporting all addresses, similar to `alloc` in `genesis.json`, as the `dump` command was not exporting all addresses.", "2025-09-04T03:25:47.465Z"]
["ethereum-optimism/superchain-registry_day_2025-06-06", "ethereum-optimism/superchain-registry", "day", "2025-06-06", "# ethereum-optimism/superchain-registry Daily Update (Jun 6, 2025)\n## OVERVIEW \nThe day's development focused on re-enabling EthLockboxProxy consistency validation and refining CircleCI workflows for webhook triggers. A new pull request was opened to remove CGT-related code.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Dependency and Configuration Updates:** Re-enabled EthLockboxProxy consistency validation by updating `op-fetcher` and regenerating codegen files, ensuring data integrity across the Superchain registry. ([#1071](https://github.com/ethereum-optimism/superchain-registry/pull/1071))\n*   **CI/CD Workflow Improvements:** Modified the CircleCI configuration to ensure the `notify-when-chain-is-added-to-registry` workflow only triggers on webhook events, optimizing CI/CD processes. ([#1073](https://github.com/ethereum-optimism/superchain-registry/pull/1073))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1074](https://github.com/ethereum-optimism/superchain-registry/pull/1074), was opened to remove CGT-related code, indicating potential cleanup or deprecation of certain functionalities.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were reported on this day.\n\n## ACTIVE ISSUES\n\n*   **`op-supervisor`: Fix ability to provide data for fault proofs with non-genesis interop** ([#16166](https://github.com/ethereum-optimism/superchain-registry/issues/16166)): Discussion continues on how to handle pre-interop super roots for fault proofs. Options include the `op-challenger` manually constructing roots or the `op-supervisor` indexing the safe DB from the first derived block. The latest comment suggests that removing the `op-node`'s safe DB for managed nodes would be beneficial.\n\n*   **`op-supervisor`: Improve L1 origin validity handling during resets** ([#16315](https://github.com/ethereum-optimism/superchain-registry/issues/16315)): The issue discusses improving the supervisor's reset logic to validate the L1 origin of target blocks. The latest comments suggest that the supervisor should ideally only provide valid targets, and if a target is invalid, another reset should be initiated. This would simplify the `op-node`'s logic by avoiding redundant validity checks and walkbacks.\n\n*   **`eth_getTransactionCount` returns incorrect nonce (0x1 instead of 0x0) for pending txs** ([#623](https://github.com/ethereum-optimism/superchain-registry/issues/623)): Users are reporting that the Base node returns an incorrect nonce for pending transactions, causing transactions to get stuck. The latest comment from `mukul3097` on June 6th, 2025, asks for an update on the issue, indicating it remains unresolved and is impacting users.", "2025-09-04T03:25:48.251Z"]
["ethereum-optimism/op-geth_day_2025-06-08", "ethereum-optimism/op-geth", "day", "2025-06-08", "# ethereum-optimism/op-geth Daily Update (Jun 8, 2025)\n## OVERVIEW \nThe day's development focused on a minor but important fix in the `core` module, specifically addressing an initialization error in gas calculation. An active issue regarding state dumping also saw a new comment.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Gas Calculation Fixes\nA minor adjustment was made to correctly initialize `gasRemaining` with an assignment operator instead of an addition operator, aligning with similar fixes in the upstream Geth client. This ensures accurate gas accounting during state transitions. ([#627](https://github.com/ethereum-optimism/op-geth/pull/627))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### State Dumping Functionality\nA user inquired about a solution for dumping all state of addresses, similar to the `alloc` field in `genesis.json`, noting that the `dump` command does not export all addresses. A new comment from `0xWilliamWang` at 2025-06-08T13:56:28Z asked for an update on a solution. ([#390](https://github.com/ethereum-optimism/op-geth/issues/390))", "2025-09-04T03:25:48.323Z"]
["ethereum-optimism/superchain-ops_day_2025-06-08", "ethereum-optimism/superchain-ops", "day", "2025-06-08", "# ethereum-optimism/superchain-ops Daily Update (Jun 8, 2025)\n## OVERVIEW \nThe day's activity focused on addressing a long-standing query regarding state dumping and identifying a new issue concerning normalized hashing in `AccountAccessParser`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\n\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\n### AccountAccessParser Improvements\nA new issue was opened to address the need for dynamically finding slots in `AccountAccessParser` for normalized hashing, moving away from hardcoded slot numbers for better long-term solutions [#1064](https://github.com/ethereum-optimism/superchain-ops/issues/1064).\n\n## ACTIVE ISSUES\n\n### State Dumping Functionality\nThe discussion on how to dump all state of addresses, similar to `alloc` in `genesis.json`, saw a new comment today. @0xWilliamWang inquired if a solution has been found for this issue [#390](https://github.com/ethereum-optimism/superchain-ops/issues/390).", "2025-09-04T03:25:49.023Z"]
["ethereum-optimism/optimism_day_2025-06-08", "ethereum-optimism/optimism", "day", "2025-06-08", "# ethereum-optimism/optimism Daily Update (Jun 8, 2025)\n\n## OVERVIEW \nToday's development focused on enhancing the robustness and upgrade capabilities of the Optimism stack. Key achievements include adding support for v4.0.0 upgrades and validation in `op-deployer`, improving `op-batcher`'s sync status detection, and refining `op-node`'s unsafe head search for better reorg handling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Deployment and Validation Capabilities\n*   Added support for upgrading and validating v4.0.0 configurations within `op-deployer`, crucial for future network upgrades and ensuring compatibility. ([#16048](https://github.com/ethereum-optimism/optimism/pull/16048))\n\n### Improved Batcher and Node Robustness\n*   Implemented a more robust method for `op-batcher` to detect \"not yet ready\" sync statuses, preventing issues with invalid or incomplete L2 sync data. ([#16298](https://github.com/ethereum-optimism/optimism/pull/16298))\n*   Modified `op-node` to search for the latest valid unsafe head backwards during supervisor-instructed resets, optimizing for common L1 reorg scenarios. ([#16312](https://github.com/ethereum-optimism/optimism/pull/16312))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Documentation and Tooling Gaps for Interop Updates\n*   A new bug report highlights insufficient documentation and tooling support for developers implementing custom bridges or sequencers following recent Optimism Bedrock/Interop updates, specifically concerning `OptimismPortal2.sol`. ([#16331](https://github.com/ethereum-optimism/optimism/issues/16331))\n\n## ACTIVE ISSUES\n\n### State Dumping Functionality\n*   Issue [#390](https://github.com/ethereum-optimism/optimism/issues/390) discusses the ability to dump all state of addresses, similar to `alloc` in `genesis.json`. A recent comment from @0xWilliamWang on June 8, 2025, asks for a solution, indicating ongoing interest in this feature despite the issue being marked as closed in October 2024.", "2025-09-04T03:25:49.238Z"]
["ethereum-optimism/superchain-ops_day_2025-06-06", "ethereum-optimism/superchain-ops", "day", "2025-06-06", "# ethereum-optimism/superchain-ops Daily Update (Jun 6, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes, particularly addressing `sim-sequence` and Base Sepolia nonce issues. Significant progress was also made on preparing Mode and Metal Mainnet for permissioned fault proofs, alongside general Sepolia nonce updates.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Fault Proof System Preparations\nWork continued on transitioning Mode and Metal Mainnet to use permissioned fault proofs. Initial files and tasks were added to facilitate this upgrade, laying the groundwork for enhanced security and decentralization within the Superchain. ([#955](https://github.com/ethereum-optimism/superchain-ops/pull/955), [#956](https://github.com/ethereum-optimism/superchain-ops/pull/956))\n\n### Sepolia Nonce Management and Bug Fixes\nSeveral updates were made to manage Sepolia nonces, including a specific fix for Base Sepolia's nonce after a recent transaction. A bug in the `sim-sequence` script was also addressed by introducing an environment flag to control override checks, improving the reliability of simulation processes. ([#1048](https://github.com/ethereum-optimism/superchain-ops/pull/1048), [#1061](https://github.com/ethereum-optimism/superchain-ops/pull/1061), [#1051](https://github.com/ethereum-optimism/superchain-ops/pull/1051))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Test Suite Refinement\nThe issue related to `op-acceptance-tests` relying on supervisor multinode support was closed. This fix addresses the dependency of `TestUnsafeChainKnownToL2CL` and `TestUnsafeChainUnknownToL2CL` on multinode support, which is being deprecated. ([#16187](https://github.com/ethereum-optimism/superchain-ops/issues/16187))\n\n## NEW ISSUES\n### Supervisor L1 Origin Validity\nA new issue was opened concerning the `op-supervisor`'s handling of L1 origin validity during resets. The current reset logic only checks consistency between local and node safe databases, lacking a check for the canonical nature of the L1 origin. This could lead to issues if the L1 chain changes during a reset. ([#16315](https://github.com/ethereum-optimism/superchain-ops/issues/16315))\n\n## ACTIVE ISSUES\n### op-supervisor: Fix ability to provide data for fault proofs with non-genesis interop ([#16166](https://github.com/ethereum-optimism/superchain-ops/issues/16166))\nDiscussion continues on how to enable `op-supervisor` to provide data for fault proofs with non-genesis interop. The core problem is that `op-challenger` doesn't fully support non-Genesis Interop upgrades, leading to issues when proving the non-genesis activation block. Recent comments suggest two main options:\n1.  **Challenger-side construction:** The `op-challenger` could manually construct the required data from rollup nodes or via the supervisor as a proxy, similar to how output roots are handled. This would avoid reliance on the supervisor's database for pre-interop data.\n2.  **Supervisor indexing:** The `op-supervisor` could start indexing its safe database from the first derived block it receives, even if pre-Interop, allowing it to serve super roots consistently. This would remove any special meaning of the first block in the safe database.\n\nThere's a consensus that fixing this before moving forward with devnets is crucial, as the current code isn't viable for the migration process. It was also noted that fixing this in the `op-supervisor` is preferred, as the `op-challenger` lacks the necessary information.\n\n### eth_getTransactionCount returns incorrect nonce (0x1 instead of 0x0) for pending txs ([#623](https://github.com/ethereum-optimism/superchain-ops/issues/623))\nThis issue, concerning an incorrect nonce returned by `eth_getTransactionCount` on the Base node, remains active. The problem caused a transaction to get stuck in the mempool due to an incorrect nonce being used. Users are requesting updates on the resolution of this issue.", "2025-09-04T03:25:50.837Z"]
["ethereum-optimism/docs_day_2025-06-09", "ethereum-optimism/docs", "day", "2025-06-09", "# ethereum-optimism/docs Daily Update (Jun 9, 2025)\n## OVERVIEW \nToday's focus was on documentation refinement, with minor fixes to existing content and navigation updates. A significant issue regarding an outdated L2 rollup testnet guide was closed, and discussions continued on CI flakiness and supervisor L1 origin handling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Typos and Structure\nMinor typographical errors were corrected in the documentation, specifically in `pages/notices/upgrade-15.mdx` and `pages/notices/superchain-withdrawal-pause-test.mdx` ([#1652](https://github.com/ethereum-optimism/docs/pull/1652), [#1653](https://github.com/ethereum-optimism/docs/pull/1653)). Additionally, navigation titles were updated in `pages/stack/smart-contracts/_meta.json` to address a broken smart contracts navigation link ([#1638](https://github.com/ethereum-optimism/docs/pull/1638)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Outdated Documentation Closure\nAn issue concerning an outdated L2 rollup testnet guide was closed ([#1614](https://github.com/ethereum-optimism/docs/issues/1614)). The guide referenced a deprecated L2OutputOracleProxy contract, and the issue was closed as the team tracks these updates internally.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation\nDiscussions continued on investigating and improving CI flakiness ([#16271](https://github.com/ethereum-optimism/docs/issues/16271)). The latest comments highlight that most flakiness is due to infrastructure issues (e.g., CircleCI machine issues, networking) rather than acceptance testing. A list of the top 10 flakiest acceptance tests was provided, with `TestSequencingWindowExpiry` and `TestL2CLAheadOfSupervisor` being the most frequent.\n\n### Supervisor L1 Origin Validity\nThe issue regarding improving L1 origin validity handling during supervisor resets saw further discussion ([#16315](https://github.com/ethereum-optimism/docs/issues/16315)). The latest comments suggest that the supervisor should ensure all provided targets are valid, rather than the op-node performing complex walkbacks or duplicate validity checks. It was noted that a L1 origin verifier method now exists at the supervisor side for local unsafe heads, and there's a proposal to extend this to safe heads.\n\n### Incorrect Nonce from eth_getTransactionCount\nThe issue concerning `eth_getTransactionCount` returning an incorrect nonce (0x1 instead of 0x0) for pending transactions on the Base node remains active ([#623](https://github.com/ethereum-optimism/docs/issues/623)). Users are still awaiting an update on this problem, which causes transactions to get stuck in the mempool.\n\n### Superchain Interop Environment Quickstart Guide\nDiscussions are ongoing for a quickstart guide for the Superchain Interop environment ([#1644](https://github.com/ethereum-optimism/docs/issues/1644)). The team is considering this content for a potential homepage and is exploring a wider lens for its scope. A draft is expected by tomorrow.\n\n### Complete Withdrawal Flow Test\nProgress was reported on the complete withdrawal flow test ([#327](https://github.com/ethereum-optimism/docs/issues/327)). An implementation using `op-devstack` has been completed, with two follow-up tickets identified: adding support for `kt (sysext)` and executing a withdrawal without proving it (devnet).", "2025-09-04T03:25:52.277Z"]
["ethereum-optimism/op-analytics_day_2025-06-09", "ethereum-optimism/op-analytics", "day", "2025-06-09", "# ethereum-optimism/op-analytics Daily Update (Jun 9, 2025)\n## OVERVIEW \nThe day's development focused on a critical bug fix in the `op-analytics` repository, specifically addressing an issue with the BigQuery series function used for adding new fields to tables. This fix ensures accurate data updates, particularly for L1 costs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### BigQuery Functionality Improvements\nA bug fix was implemented to correct the BigQuery series function, which is essential for adding new fields to tables. This fix was tested and confirmed to resolve issues with L1 costs FP updates. ([#1643](https://github.com/ethereum-optimism/op-analytics/pull/1643))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Documentation Updates and Deprecation\nThe issue regarding the `L2OutputOracleProxy` not being deployed and `op-deployer` failing to start without it ([#1614](https://github.com/ethereum-optimism/op-analytics/issues/1614)) was closed. It was clarified that the L2 Output Oracle is deprecated and the related testnet tutorial is outdated.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation\nDiscussions on [#16271](https://github.com/ethereum-optimism/op-analytics/issues/16271) continued regarding the investigation and improvement of CI flakiness. The latest comments from scharissis on June 9th highlighted that most flakiness is due to infrastructure issues (e.g., CircleCI machine issues, networking) rather than acceptance testing itself. A list of the top 10 flakiest acceptance tests was also provided.\n\n### L1 Origin Validity in op-supervisor Resets\nIssue [#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315) concerning the `op-supervisor`'s handling of L1 origin validity during resets saw comments from sebastianst on June 9th. The discussion centered on whether the supervisor should perform walkbacks or if all targets provided by the supervisor should inherently be valid. It was suggested that if targets are invalid, the supervisor should realize the L1 chain changed and provide another reset, reducing complexity.\n\n### Incorrect Nonce from eth_getTransactionCount\nThe issue [#623](https://github.com/ethereum-optimism/op-analytics/issues/623), reporting an incorrect nonce (0x1 instead of 0x0) from `eth_getTransactionCount` for pending transactions, received a comment from ntrzr on June 9th, requesting someone to look into the problem.\n\n### Superchain Interop Environment Quickstart Guide\nDiscussions on [#1644](https://github.com/ethereum-optimism/op-analytics/issues/1644) focused on creating a quickstart guide for the Superchain Interop environment. On June 9th, sbvegan noted that this content would be suitable for a homepage and that further exploration with a wider lens is planned. krofax also committed to drafting content by the following day.\n\n### Complete Withdrawal Flow Test\nIssue [#327](https://github.com/ethereum-optimism/op-analytics/issues/327), tracking the \"Complete Withdrawal Flow Test,\" saw an update from serpixel on June 9th. It was noted that the test has been implemented using `sysgo` ([#16333](https://github.com/ethereum-optimism/optimism/pull/16333)), with two follow-up tickets needed: adding `kt` (sysext) support and implementing a withdrawal execution without proof generation (devnet).", "2025-09-04T03:25:53.057Z"]
["ethereum-optimism/community-hub_day_2025-06-09", "ethereum-optimism/community-hub", "day", "2025-06-09", "# ethereum-optimism/community-hub Daily Update (Jun 9, 2025)\n## OVERVIEW \nThe day's activity focused on minor documentation updates within the `token-house` section. Additionally, several ongoing issues saw continued discussion, particularly concerning CI flakiness, L1 origin validity in the op-supervisor, and `eth_getTransactionCount` behavior. A documentation-related issue was also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Refinements\nMinor adjustments were made to the `token-house-overview.mdx` file, specifically addressing small link fixes and changes. ([#1150](https://github.com/ethereum-optimism/community-hub/pull/1150), [#1151](https://github.com/ethereum-optimism/community-hub/pull/1151))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\n\n### Documentation and Operator Guides\nThe issue regarding the `L2OutputOracleProxy` not being deployed and `op-deployer` failing to start without it was closed. It was noted that the L2 Output Oracle is deprecated and the related testnet tutorial is outdated. ([#1614](https://github.com/ethereum-optimism/community-hub/issues/1614))\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation\nDiscussions continued on investigating and improving CI flakiness ([#16271](https://github.com/ethereum-optimism/community-hub/issues/16271)). On June 9th, `scharissis` provided a list of the top 10 flakiest acceptance tests, noting that most flakiness stems from infrastructure issues rather than acceptance testing itself. Subsequent comments on June 13th and 24th indicate progress, including the release of a test flake report generator and improvements in test flakiness.\n\n### op-supervisor L1 Origin Validity\nThe issue concerning improving L1 origin validity handling during resets in the op-supervisor ([#16315](https://github.com/ethereum-optimism/community-hub/issues/16315)) saw active discussion. On June 9th, `sebastianst` agreed that walkbacks should be avoided to reduce complexity and that the supervisor should only provide valid targets. A later comment on June 27th by `pcw109550` highlighted that a L1 origin verifier method has been added to the supervisor, but needs to be extended to safe heads.\n\n### Incorrect Nonce from eth_getTransactionCount\nThe issue where `eth_getTransactionCount` returns an incorrect nonce for pending transactions ([#623](https://github.com/ethereum-optimism/community-hub/issues/623)) received a comment on June 9th from `ntrzr` requesting someone to look into it, followed by `mukul3097` on June 12th asking for an update.\n\n### Quickstart Guide for Superchain Interop Environment\nDiscussion continued on creating a quickstart guide for the Superchain Interop environment ([#1644](https://github.com/ethereum-optimism/community-hub/issues/1644)). On June 9th, `krofax` committed to having a draft by the next day, and `sbvegan` mentioned that the team is exploring this as potential content for a homepage, possibly with a wider scope.\n\n### Complete Withdrawal Flow Test\nProgress on the \"Complete Withdrawal Flow Test\" ([#327](https://github.com/ethereum-optimism/community-hub/issues/327)) was updated on June 9th by `serpixel`, stating that it has been implemented in a related PR ([#16333](https://github.com/ethereum-optimism/optimism/pull/16333)) and requires two follow-up tickets for further enhancements.", "2025-09-04T03:25:53.112Z"]
["ethereum-optimism/specs_day_2025-06-09", "ethereum-optimism/specs", "day", "2025-06-09", "# ethereum-optimism/specs Daily Update (Jun 9, 2025)\n## OVERVIEW \nToday's activity focused on ongoing discussions within active issues, particularly concerning CI flakiness, L1 origin validity in op-supervisor resets, and `eth_getTransactionCount` behavior. A documentation issue regarding `L2OutputOracleProxy` deployment was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Documentation Updates and Deprecation\nA documentation issue regarding the `L2OutputOracleProxy` not being deployed by `op-deployer` was closed today. It was clarified that the `L2 Output Oracle` is deprecated and the related testnet tutorial is outdated. The issue is being tracked internally. [#1614](https://github.com/ethereum-optimism/specs/issues/1614)\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation\nDiscussions continued on investigating and improving CI flakiness [#16271](https://github.com/ethereum-optimism/specs/issues/16271). A comment from scharissis on June 9th highlighted that most flakiness is due to infrastructure issues (CircleCI machine issues, networking) rather than acceptance testing itself. A list of the top 10 flakiest acceptance tests was also provided.\n\n### op-supervisor L1 Origin Validity\nDiscussion on improving L1 origin validity handling during op-supervisor resets [#16315](https://github.com/ethereum-optimism/specs/issues/16315) saw a comment from sebastianst on June 9th. The comment suggested that the supervisor should only provide valid targets and that duplicating validity checks and walkbacks on the op-node should be avoided, simplifying the process.\n\n### Incorrect Nonce from eth_getTransactionCount\nAn ongoing issue regarding `eth_getTransactionCount` returning an incorrect nonce [#623](https://github.com/ethereum-optimism/specs/issues/623) received a comment from ntrzr on June 9th, requesting an update on the issue.\n\n### Superchain Interop Quickstart Guide\nDiscussions continued on creating a quickstart guide for the Superchain Interop environment [#1644](https://github.com/ethereum-optimism/specs/issues/1644). On June 9th, krofax committed to drafting the guide by tomorrow, and sbvegan noted that the team is exploring this content for a potential homepage, taking a wider lens.\n\n### Complete Withdrawal Flow Test\nProgress was noted on the \"Complete Withdrawal Flow Test\" [#327](https://github.com/ethereum-optimism/specs/issues/327). On June 9th, serpixel confirmed that the test has been implemented (sysgo) in [#16333](https://github.com/ethereum-optimism/optimism/pull/16333), with two follow-up tickets planned for adding `kt` support and executing withdrawals without proof in devnet.", "2025-09-04T03:25:54.165Z"]
["ethereum-optimism/optimism_day_2025-06-09", "ethereum-optimism/optimism", "day", "2025-06-09", "# ethereum-optimism/optimism Daily Update (Jun 9, 2025)\n## OVERVIEW \nThe day saw the opening of several new pull requests focusing on deployer validation, PR review policy, dispute game patterns, and test improvements. Multiple new issues were reported, including critical `op-node` goroutine issues and `op-supervisor` event overflow concerns. Discussions continued on existing issues related to CI flakiness, L1 origin handling in `op-supervisor`, and `eth_getTransactionCount` nonce discrepancies.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nFour new pull requests were opened today:\n- **Deployment and Configuration:** A PR was opened to validate intent overrides within the `op-deployer` component ([#16338](https://github.com/ethereum-optimism/optimism/pull/16338)).\n- **Development Process Improvements:** An initial PR review policy was proposed ([#16339](https://github.com/ethereum-optimism/optimism/pull/16339)).\n- **Dispute Game Enhancements:** A new feature for a CWIA dispute game creator pattern was introduced ([#16340](https://github.com/ethereum-optimism/optimism/pull/16340)).\n- **Testing Infrastructure:** Small improvements to existing tests were submitted ([#16342](https://github.com/ethereum-optimism/optimism/pull/16342)).\n\n## CLOSED ISSUES\n- **Documentation Updates:** The issue regarding the `L2OutputOracleProxy` not being deployed and `op-deployer` startup failures was closed ([#1614](https://github.com/ethereum-optimism/optimism/issues/1614)). The resolution indicated that the L2 Output Oracle is deprecated and the related testnet tutorial is outdated.\n\n## NEW ISSUES\n- **Node Stability and Performance:** A critical issue was reported for `op-node` v1.13.3, where thousands of goroutines become stuck in `p2p.SyncClient` and `libp2p` after several hours of uptime, leading to sync failures ([#16332](https://github.com/ethereum-optimism/optimism/issues/16332)).\n- **Supervisor Event Handling:** An issue was opened concerning the `op-supervisor` entering a non-recoverable crash-loop due to event overflow when the unsafe head gap between its log DB and a managed node becomes too large ([#16335](https://github.com/ethereum-optimism/optimism/issues/16335)).\n\n## ACTIVE ISSUES\n- **CI Flakiness Investigation:** Discussions continued on investigating and improving CI flakiness ([#16271](https://github.com/ethereum-optimism/optimism/issues/16271)). A comment from June 9th highlighted the top 10 flakiest acceptance tests, with `TestSequencingWindowExpiry` and `TestL2CLAheadOfSupervisor` being the most frequent offenders. It was also noted that much of the flakiness is due to infrastructure issues rather than acceptance testing itself.\n- **Supervisor L1 Origin Handling:** The issue concerning improving L1 origin validity handling during `op-supervisor` resets saw a comment on June 9th, suggesting that instead of performing walkbacks, all targets provided by the supervisor should be inherently valid. If a target is invalid, the supervisor should realize the L1 chain has changed and provide a new reset, reducing complexity ([#16315](https://github.com/ethereum-optimism/optimism/issues/16315)).\n- **Incorrect Nonce from `eth_getTransactionCount`:** The issue where `eth_getTransactionCount` returns an incorrect nonce (0x1 instead of 0x0) for pending transactions was commented on June 9th, with a user asking for an update ([#623](https://github.com/ethereum-optimism/optimism/issues/623)).\n- **Superchain Interop Environment Quickstart Guide:** Discussions on creating a quickstart guide for the Superchain Interop environment continued ([#1644](https://github.com/ethereum-optimism/optimism/issues/1644)). On June 9th, it was suggested that this content would be suitable for a homepage, and a wider lens for its scope would be explored. A draft is expected by June 10th.\n- **Complete Withdrawal Flow Test:** Progress was reported on the complete withdrawal flow test ([#327](https://github.com/ethereum-optimism/optimism/issues/327)). On June 9th, it was confirmed that the (sysgo) implementation is complete via [#16333](https://github.com/ethereum-optimism/optimism/pull/16333), with two follow-up tickets needed for kt (sysext) support and a devnet-specific withdrawal execution without proof.", "2025-09-04T03:25:54.217Z"]
["ethereum-optimism/infra_day_2025-06-09", "ethereum-optimism/infra", "day", "2025-06-09", "# ethereum-optimism/infra Daily Update (Jun 9, 2025)\n## OVERVIEW \nThe day saw progress in addressing documentation issues, particularly concerning deprecated components and testnet setup. Discussions continued on improving CI stability and supervisor L1 origin handling, with a focus on refining reset logic and addressing test flakiness.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Test Automation and Deprecated Documentation\nTwo issues were closed today. One involved the acceptance test for Conductor leadership transfer, which was successfully implemented and closed [#351](https://github.com/ethereum-optimism/infra/issues/351). The other addressed documentation regarding the L2OutputOracleProxy, which is deprecated, leading to the closure of [#1614](https://github.com/ethereum-optimism/infra/issues/1614) as the testnet tutorial is outdated.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n### CI Flakiness Investigation\nDiscussions on [#16271](https://github.com/ethereum-optimism/infra/issues/16271) continued with scharissis providing a detailed breakdown of the top 10 flakiest acceptance tests, noting that most flakiness stems from infrastructure issues rather than acceptance testing itself. Related issues and PRs were also linked for further context.\n\n### Supervisor L1 Origin Handling\nOn [#16315](https://github.com/ethereum-optimism/infra/issues/16315), sebastianst emphasized that all targets provided by the supervisor should be valid, suggesting that the supervisor should handle validity checks and re-requests for resets if targets are invalid, rather than duplicating checks on the op-node. This aims to reduce complexity in the reset logic.\n\n### Incorrect Nonce Return\nIssue [#623](https://github.com/ethereum-optimism/infra/issues/623) regarding `eth_getTransactionCount` returning an incorrect nonce for pending transactions remains active, with ntrzr requesting an update on the investigation.\n\n### Superchain Interop Quickstart Guide\nDiscussions on [#1644](https://github.com/ethereum-optimism/infra/issues/1644) indicate that the proposed quickstart guide for Superchain Interop environments is being considered for broader content on a homepage, with sbvegan, @bradleycamacho, and @krofax exploring a wider lens for this content. @krofax committed to drafting content by tomorrow.\n\n### Complete Withdrawal Flow Test\nOn [#327](https://github.com/ethereum-optimism/infra/issues/327), serpixel confirmed the implementation of the complete withdrawal flow test (sysgo) in [#16333](https://github.com/ethereum-optimism/optimism/pull/16333). Two follow-up tickets are planned: adding support for kt (sysext) and executing only a withdrawal without proving it (devnet).", "2025-09-04T03:25:56.271Z"]
["ethereum-optimism/community-hub_day_2025-06-10", "ethereum-optimism/community-hub", "day", "2025-06-10", "# ethereum-optimism/community-hub Daily Update (Jun 10, 2025)\n## OVERVIEW \nThe day's activity primarily focused on addressing a dead link within the community hub and ongoing discussions around an `op-supervisor` event overflow issue, with insights into potential causes and solutions.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1153](https://github.com/ethereum-optimism/community-hub/pull/1153) \"Vee dead link fix\", was opened to address a broken link.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were reported on this day.\n\n## ACTIVE ISSUES\n### Fault Proof Creator Contract OPCM Changes\nDiscussion on [#15789](https://github.com/ethereum-optimism/community-hub/issues/15789) \"Fault Proof creator contract OPCM changes\" continues, with stevennevins outlining a comprehensive checklist of tasks for July 9th, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODO comments, rebasing updates from EVM safety, and fixing Go updates. Earlier, on June 10th, stevennevins linked to a related pull request: https://github.com/ethereum-optimism/optimism/pull/16340.\n\n### op-supervisor Event Overflow\nThe issue [#16335](https://github.com/ethereum-optimism/community-hub/issues/16335) \"op-supervisor: Event overflow on large unsafe head gap\" remains active. On June 10th, axelKingsley clarified that `ChainIndexingContinueEvent`s do not stack up, but are a response to previous `ChainProcess` events. They explained that `ChainIndexingContinueEvents` are emitted 1:1 by the indexing actor, and there should only be one per chain in the event system. This was a fix to previous behavior, and while it eliminated queue-depth issues in A/B tests, the current observation suggests other issues in the event system. Subsequent comments from June 17th and 19th by nonsense and sebastianst further discuss the potential culprits and propose adding gauges for in-flight events to better diagnose the issue.", "2025-09-04T03:25:56.289Z"]
["ethereum-optimism/ecosystem_day_2025-06-10", "ethereum-optimism/ecosystem", "day", "2025-06-10", "# ethereum-optimism/ecosystem Daily Update (Jun 10, 2025)\n## OVERVIEW \nThe day saw a minor release for the `supersim` package, updating it to `v0.1.0-alpha.50`. Discussions continued on an active issue related to Fault Proof creator contract changes and a recently closed issue concerning `op-supervisor` event overflow.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Supersim Package Update\nA new alpha version, `v0.1.0-alpha.50`, of the `supersim` package was released. This update involved changes to `mise.toml`, `packages/supersim/install.js`, and `packages/supersim/package.json`. ([#835](https://github.com/ethereum-optimism/ecosystem/pull/835))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### op-supervisor Event Overflow Resolution\nThe issue regarding the `op-supervisor` entering a non-recoverable crash-loop due to event overflow on a large unsafe head gap was closed. Discussions around this issue highlighted potential causes such as `ChainIndexingContinueEvent` and \"cross-unsafe-update\" events stacking up. A PR was added to include a gauge for in-flight events to aid future debugging. ([#16335](https://github.com/ethereum-optimism/ecosystem/issues/16335))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussions on this issue continue to focus on understanding and supporting OPCM changes for the Fault Proof creator contract. The latest comment outlines a detailed checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comments, addressing TODOs, rebasing updates from EVM safety, and fixing Go updates in test/integration. ([#15789](https://github.com/ethereum-optimism/ecosystem/issues/15789))", "2025-09-04T03:25:56.614Z"]
["ethereum-optimism/docs_day_2025-06-10", "ethereum-optimism/docs", "day", "2025-06-10", "# ethereum-optimism/docs Daily Update (Jun 10, 2025)\n## OVERVIEW \nToday's focus was on refining documentation, with a key bug fix for the deposit flow tutorial and updates to security and data glossary pages.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Refinements\nThe documentation saw updates to improve accuracy and user experience. A critical bug in the deposit flow tutorial was fixed, addressing issues that prevented users from completing the steps successfully ([#1648](https://github.com/ethereum-optimism/docs/pull/1648)). Additionally, the audits page was updated to point to the monorepo for more current information, removing an outdated table ([#1656](https://github.com/ethereum-optimism/docs/pull/1656)).\n\n### Dispute Game Logic Documentation\nNew logic related to handling costs for resolving dispute games was added to the data glossary documentation ([#1655](https://github.com/ethereum-optimism/docs/pull/1655)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Deposit Flow Tutorial Fix\nThe long-standing issue regarding the \"Deposit flow\" tutorial was closed today ([#1226](https://github.com/ethereum-optimism/docs/issues/1226)). This issue, which reported problems with step 5 of the tutorial, has been addressed by the recent bug fix.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussions continue on the necessary changes to support OPCM updates for the Fault Proof creator contract ([#15789](https://github.com/ethereum-optimism/docs/issues/15789)). The latest comment outlines a detailed checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, and reviewing test updates. A related pull request in the `optimism` repository was also referenced.\n\n### op-supervisor: Event Overflow on Large Unsafe Head Gap\nThe issue concerning the `op-supervisor` entering a crash-loop due to a large unsafe head gap is still active ([#16335](https://github.com/ethereum-optimism/docs/issues/16335)). Recent comments discuss the nature of `ChainIndexingContinueEvent` and whether it contributes to the event overflow. While some believe these events do not stack up, others are working on adding counters per event type to better diagnose the issue if it recurs. A pull request to add a gauge for in-flight events has been created to help monitor this.", "2025-09-04T03:25:56.672Z"]
["ethereum-optimism/infra_day_2025-06-10", "ethereum-optimism/infra", "day", "2025-06-10", "# ethereum-optimism/infra Daily Update (Jun 10, 2025)\n## OVERVIEW \nThe day saw significant progress in infrastructure stability with a key feature added to `proxyd` for improved concurrency handling and a critical bug fix in `op-conductor-ops` to ensure robust sequencer bootstrapping.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Concurrency Management in Proxyd\nA new feature was implemented in `proxyd` to optimize concurrency handling. Instead of using a semaphore with unlimited weight, the system now bypasses the semaphore entirely when unlimited concurrency is allowed, streamlining performance. This change affects `proxyd/backend.go`, `proxyd/backend_test.go`, `proxyd/config.go`, and `proxyd/proxyd.go`. ([#405](https://github.com/ethereum-optimism/infra/pull/405))\n\n### Critical Fix for Op-Conductor-Ops Bootstrap\nA bug fix was deployed in `op-conductor-ops` to address an early exit issue during bootstrapping. This ensures that at least one sequencer is active before the bootstrap process exits, improving the reliability of sequencer operations. ([#404](https://github.com/ethereum-optimism/infra/pull/404))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#403](https://github.com/ethereum-optimism/infra/pull/403), was opened to update the `requests` dependency from version 2.32.3 to 2.32.4 within the `/op-conductor-ops` directory.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were opened on this date.\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussion on [#15789](https://github.com/ethereum-optimism/infra/issues/15789) continues regarding the necessary changes to support the latest OPCM updates for the Fault Proof creator contract. The latest comment from stevennevins outlines a detailed checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, addressing TODO comments, rebasing updates from EVM safety, and fixing Go updates in integration tests.\n\n### Op-Supervisor Event Overflow on Large Unsafe Head Gap\nIssue [#16335](https://github.com/ethereum-optimism/infra/issues/16335) addresses a critical problem where the `op-supervisor` can crash-loop due to an event overflow when the unsafe head gap between its log DB and a managed node becomes too large. The discussion highlights `ChainIndexingContinueEvent` as a potential culprit, though `axelKingsley` clarified that these events do not stack up and are responses to `ChainProcess` events. `nonsense` is working on adding a counter per event type to better debug future occurrences and has proposed a PR to add a gauge for in-flight events. `sebastianst` suggested that `\"cross-unsafe-update\"` events might be the ones stacking up.", "2025-09-04T03:25:57.675Z"]
["ethereum-optimism/op-analytics_day_2025-06-10", "ethereum-optimism/op-analytics", "day", "2025-06-10", "# ethereum-optimism/op-analytics Daily Update (Jun 10, 2025)\n## OVERVIEW \nThe day's development focused on enhancing data ingestion capabilities by integrating Superchain Registry data for addresses and chain lists, alongside an important Dagster version update.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Registry Data Integration\nEfforts were made to pull essential data from the Superchain Registry. This includes pulling the chain address list, which will be used to combine with system config data from RPC calls for a consolidated tab ([#1641](https://github.com/ethereum-optimism/op-analytics/pull/1641)). Additionally, the full chain list was pulled to enhance data accessibility and accuracy ([#1642](https://github.com/ethereum-optimism/op-analytics/pull/1642)).\n\n### Infrastructure Updates\nThe Dagster version was updated ([#1644](https://github.com/ethereum-optimism/op-analytics/pull/1644)), ensuring the analytics pipeline leverages the latest features and improvements for data orchestration.\n\n## NEWLY OPENED PULL REQUESTS\n- [#1645](https://github.com/ethereum-optimism/op-analytics/pull/1645): This pull request proposes an update to the pipeline documentation.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussion on [#15789](https://github.com/ethereum-optimism/op-analytics/issues/15789) revolves around understanding and supporting OPCM changes for the Fault Proof creator contract. The latest comment from stevennevins on July 9, 2025, outlines a detailed checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests, reviewing comments, addressing TODOs, rebasing updates from EVM safety, and fixing Go updates.\n\n### op-supervisor: Event Overflow on Large Unsafe Head Gap\nIssue [#16335](https://github.com/ethereum-optimism/op-analytics/issues/16335) addresses a critical problem where the supervisor can crash-loop due to an event overflow when the unsafe head gap grows too large. The discussion highlights potential culprits and solutions. On June 19, 2025, nonsense added a PR to include a gauge for in-flight events to identify the problematic event type and suggested setting up an alert for total in-flight events. Earlier, on June 17, 2025, sebastianst suggested that `ChainIndexingContinueEvent` might be the culprit, while nonsense and axelKingsley debated this, with axelKingsley explaining that `ChainIndexingContinueEvent`s are a response to `ChainProcess` events and should not stack up. Nonsense is working on adding a counter per event type to gather more data if the issue reoccurs.", "2025-09-04T03:25:59.782Z"]
["ethereum-optimism/specs_day_2025-06-10", "ethereum-optimism/specs", "day", "2025-06-10", "# ethereum-optimism/specs Daily Update (Jun 10, 2025)\n## OVERVIEW \nThe day's activity focused on documentation updates within the fault-proof specifications, specifically updating the list of Fault Proof Virtual Machines.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Fault Proof VM Documentation\nDocumentation for fault-proof virtual machines was updated to reflect changes in VM status. Specifically, \"Cannon\" is now listed as 64-bit, and \"cannon-rs\" is marked as deprecated. This update is part of ongoing efforts to maintain accurate and current specifications for the fault-proof system. ([#720](https://github.com/ethereum-optimism/specs/pull/720))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussion on [#15789](https://github.com/ethereum-optimism/specs/issues/15789) continues regarding necessary OPCM changes for the Fault Proof creator contract to support recent updates. The latest comment from stevennevins outlines a comprehensive list of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODOs flagged by Adrian, and rebasing updates from EVM safety refactoring. A link to a related pull request in the `optimism` repository ([#16340](https://github.com/ethereum-optimism/optimism/pull/16340)) was also provided.\n\n### op-supervisor: Event overflow on large unsafe head gap\nThe issue [#16335](https://github.com/ethereum-optimism/specs/issues/16335) addresses a critical problem where the `op-supervisor` can crash-loop due to an event overflow when the unsafe head gap between its log DB and a managed node becomes too large. The discussion on June 10th included axelKingsley clarifying that `ChainIndexingContinueEvent`s do not stack up and are a response to `ChainProcess` events, indicating a 1:1 emit:consume ratio for indexing events. This suggests that other event types might be causing the queue-depth issue. Later comments (June 17th) from nonsense and sebastianst further explore the possibility of other event types, such as `\"cross-unsafe-update\"` events, stacking up. Nonsense is working on adding a counter per event type to aid in future debugging, with a PR ([#16471](https://github.com/ethereum-optimism/optimism/pull/16471)) in progress.", "2025-09-04T03:26:00.008Z"]
["ethereum-optimism/supersim_day_2025-06-10", "ethereum-optimism/supersim", "day", "2025-06-10", "# ethereum-optimism/supersim Daily Update (Jun 10, 2025)\n## OVERVIEW \nThe day's activity primarily involved discussions around an active issue concerning the op-supervisor's event overflow and potential crash-loops, with insights into the underlying causes and proposed solutions.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Addressing op-supervisor Event Overflow\nDiscussions continued on [#16335](https://github.com/ethereum-optimism/supersim/issues/16335) regarding the op-supervisor's susceptibility to non-recoverable crash-loops due to event overflow when the unsafe head gap grows too large. @axelKingsley clarified that `ChainIndexingContinueEvent`s do not stack up, but are responses to previous `ChainProcess` events, and that there should be a 1:1 emit:consume ratio for indexing events. They noted that their previous fix for queue-depth issues might not have fully resolved all event system problems. @nonsense is working on adding a counter per event type to better debug future occurrences and is reviewing code paths, while also considering refactoring to remove `ChainIndexingContinueEvents`. @sebastianst initially suggested `ChainIndexingContinueEvent` as the culprit but later agreed that `\"cross-unsafe-update\"` events might be stacking up.\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussion on [#15789](https://github.com/ethereum-optimism/supersim/issues/15789) focused on understanding and supporting OPCM changes for the Fault Proof creator contract. @stevennevins provided an update on July 9, 2025, outlining a comprehensive list of tasks including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODOs, rebasing updates from EVM safety, and fixing Go updates in the Go test/integration. On June 10, 2025, @stevennevins linked to a related pull request: https://github.com/ethereum-optimism/optimism/pull/16340.", "2025-09-04T03:26:00.049Z"]
["ethereum-optimism/optimism_day_2025-06-10", "ethereum-optimism/optimism", "day", "2025-06-10", "# ethereum-optimism/optimism Daily Update (Jun 10, 2025)\n## OVERVIEW \nThe day saw no completed work, but two new pull requests were opened, including a dependency bump and a feature for U18 OPCM base. Discussions continued on active issues related to Fault Proof creator contract OPCM changes and op-supervisor event handling.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n*   [#16350](https://github.com/ethereum-optimism/optimism/pull/16350) chore(deps): bump requests from 2.32.0 to 2.32.4 in /ops/check-changed: This PR updates a dependency.\n*   [#16369](https://github.com/ethereum-optimism/optimism/pull/16369) feat: set up U18 OPCM base: This PR introduces a new feature.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nTwo new issues were opened:\n*   **Contract Assertions Refinement**\n    *   [#16362](https://github.com/ethereum-optimism/optimism/issues/16362) Remove redundant assertions outside of the StandardValidator: This issue proposes to centralize all necessary checks within the `StandardValidator` and remove redundant checks from `ChainAssertions.sol` and deploy scripts. A plan was outlined to remove existing checks and then move `ChainAssertions.sol` checks to `StandardValidator`, potentially using a child contract if codesize limits are exceeded.\n*   **Supervisor Rewinder Review**\n    *   [#16355](https://github.com/ethereum-optimism/optimism/issues/16355) op-supervisor: Revisit rewinder's use of `ChainRewoundEvent`: This issue aims to re-evaluate how the `Rewinder` in `op-supervisor` handles `LocalSafeUpdateEvent` and the emission of `ChainRewoundEvent`.\n\n## ACTIVE ISSUES\n*   **Fault Proof Creator Contract OPCM Changes**\n    *   [#15789](https://github.com/ethereum-optimism/optimism/issues/15789) Fault Proof creator contract OPCM changes: The latest comment from stevennevins on July 9, 2025, outlines a detailed plan of action. Key tasks include moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODO comments, rebasing updates from EVM safety, and fixing Go updates on Go test/integration. A related PR [#16340](https://github.com/ethereum-optimism/optimism/pull/16340) was linked on June 10, 2025.\n*   **op-supervisor: Event Overflow on Large Unsafe Head Gap**\n    *   [#16335](https://github.com/ethereum-optimism/optimism/issues/16335) op-supervisor: Event overflow on large unsafe head gap: Discussions revolve around the supervisor crashing due to an event overflow when the unsafe head gap is too large. On June 10, 2025, axelKingsley clarified that `ChainIndexingContinueEvent`s do not stack up and are a fix to previous behavior, with a 1:1 emit:consume ratio. They noted that while their previous fix eliminated queue-depth issues, other problems in the event system might still exist. Later comments (June 17-19) from sebastianst and nonsense suggest adding gauges for in-flight events and per-event type counters to better diagnose the issue, with a PR [#16473](https://github.com/ethereum-optimism/optimism/pull/16473) opened to add a gauge for all in-flight events.", "2025-09-04T03:26:00.568Z"]
["ethereum-optimism/op-geth_day_2025-06-10", "ethereum-optimism/op-geth", "day", "2025-06-10", "# ethereum-optimism/op-geth Daily Update (Jun 10, 2025)\n## OVERVIEW \nThe day saw the closure of an issue related to operator fees, indicating progress in tracking this work within op-geth. Discussions continued on active issues concerning fault proof creator contract changes and an op-supervisor event overflow problem.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Operator Fee Tracking\nThe issue [#501](https://github.com/ethereum-optimism/op-geth/issues/501) tracking operator fee work in op-geth was closed. This issue was associated with a design document outlining the proposed changes.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n### Fault Proof Creator Contract OPCM Changes\nDiscussions on [#15789](https://github.com/ethereum-optimism/op-geth/issues/15789) continued, focusing on necessary OPCM changes to support recent updates. The latest comment from stevennevins on July 9, 2025, outlines a detailed checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODO comments, rebasing updates from EVM safety refactoring, and fixing Go updates in integration tests. A previous comment from stevennevins on June 10, 2025, referenced a related pull request in the `optimism` repository ([#16340](https://github.com/ethereum-optimism/optimism/pull/16340)).\n\n### op-supervisor: Event Overflow on Large Unsafe Head Gap\nThe issue [#16335](https://github.com/ethereum-optimism/op-geth/issues/16335) addresses a critical problem where the op-supervisor can crash-loop due to an event overflow when the unsafe head gap grows too large. Recent comments highlight ongoing efforts to diagnose and mitigate this. On June 19, 2025, nonsense proposed adding a gauge for in-flight events within `GlobalSyncExec` to identify the problematic event type and suggested setting up an alert for total in-flight events. Earlier discussions on June 17, 2025, involved sebastianst and nonsense debating whether `ChainIndexingContinueEvent` was the culprit, with axelKingsley clarifying on June 10, 2025, that `ChainIndexingContinueEvent` does not stack up and is a response to `ChainProcess` events, suggesting other events might be causing the overflow. Nonsense also mentioned working on adding a counter per event type to gather more data for debugging.", "2025-09-04T03:26:01.166Z"]
["ethereum-optimism/infra_day_2025-06-11", "ethereum-optimism/infra", "day", "2025-06-11", "# ethereum-optimism/infra Daily Update (Jun 11, 2025)\n## OVERVIEW \nThe day's activity focused on identifying and addressing flakiness in acceptance tests, particularly within the `interop` package, and initiating a renaming convention for supervisor and op-node modes to improve clarity. A new issue was also opened for the Gas Tank contract.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo newly opened pull requests to report for this period.\n\n## CLOSED ISSUES\nNo closed issues to report for this period.\n\n## NEW ISSUES\n### Core Infrastructure Development\n- A new issue was opened to track the development of the Gas Tank contract, which is a key component for managing gas consumption within the Optimism ecosystem [#836](https://github.com/ethereum-optimism/infra/issues/836).\n\n### Interoperability and Naming Conventions\n- An issue was created to address the renaming of supervisor and op-node modes within the `interop` package, aiming to clarify terminology and reduce confusion based on an internal naming convention document [#16379](https://github.com/ethereum-optimism/infra/issues/16379).\n\n### Test Reliability Improvements\n- An issue was opened to improve the reliability of acceptance tests, specifically targeting flakiness to ensure consistent and accurate test results [#16378](https://github.com/ethereum-optimism/infra/issues/16378).\n\n## ACTIVE ISSUES\n### Improving Acceptance Test Reliability [#16378](https://github.com/ethereum-optimism/infra/issues/16378)\nDiscussions on this issue revolve around identifying and mitigating flakiness in acceptance tests. The goal is to achieve 100% consistent, single-shot passes for all tests. Initial findings indicate that `op-acceptance-tests/tests/interop/reorgs` package passes with `-count=5`, suggesting it's not currently actionable. However, the `op-acceptance-tests/tests/interop/sync/multisupervisor_interop` package appears flaky, specifically `TestUnsafeChainUnknownToL2CL` and `TestL2CLAheadOfSupervisor`. It was noted that measuring flakiness by package rather than by individual test is important, as tests sharing the same environment can interfere and boost flakiness. The issue was later closed on July 9, 2025, with a note that tests have been considerably improved, emphasizing continuous monitoring and improvement of CI and tests to prevent new flakiness.\n\n### Interop: Supervisor <> Op-Node Mode Renaming [#16379](https://github.com/ethereum-optimism/infra/issues/16379)\nThis issue focuses on renaming supervisor and op-node modes to improve clarity and reduce confusion, following an internal naming convention. A comment highlighted a potential mix-up regarding the instruction to replace \"standard mode\" with \"indexing mode,\" which was also mentioned in a separate PR [#16385](https://github.com/ethereum-optimism/infra/pull/16385).\n\n### Gas Tank Contract [#836](https://github.com/ethereum-optimism/infra/issues/836)\nA pull request for the Gas Tank contract has been opened at `https://github.com/defi-wonderland/optimism/pull/414`.", "2025-09-04T03:26:03.348Z"]
["ethereum-optimism/ecosystem_day_2025-06-11", "ethereum-optimism/ecosystem", "day", "2025-06-11", "# ethereum-optimism/ecosystem Daily Update (Jun 11, 2025)\n## OVERVIEW \nThe day saw significant activity in issue creation, particularly around Gas Tank contract development, relayer functionality, and logging/alerting improvements. Discussions continued on improving acceptance test reliability and renaming supervisor modes.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Gas Tank Development\n- New issues were opened to track the development of the Gas Tank contract [#836](https://github.com/ethereum-optimism/ecosystem/issues/836), including indexing related events [#838](https://github.com/ethereum-optimism/ecosystem/issues/838), and setting up a job to claim funds after successful relaying [#840](https://github.com/ethereum-optimism/ecosystem/issues/840).\n### Relayer Enhancements\n- An issue was created to update the relayer to only process messages for which the gas tank has sufficient funds [#839](https://github.com/ethereum-optimism/ecosystem/issues/839).\n### Logging and Alerting Improvements\n- Several issues were opened to enhance logging for the relayer [#841](https://github.com/ethereum-optimism/ecosystem/issues/841), sponsored sender [#842](https://github.com/ethereum-optimism/ecosystem/issues/842), and Ponder [#843](https://github.com/ethereum-optimism/ecosystem/issues/843).\n- New issues also address alerting for failed relays [#844](https://github.com/ethereum-optimism/ecosystem/issues/844) and low balances on sponsored sender workers [#845](https://github.com/ethereum-optimism/ecosystem/issues/845).\n\n## ACTIVE ISSUES\n### Improving Acceptance Test Reliability\nDiscussions on [#16378](https://github.com/ethereum-optimism/ecosystem/issues/16378) focused on making acceptance tests consistently reliable. It was noted that some tests, like those in `op-acceptance-tests/tests/interop/reorgs`, pass with multiple runs (`-count=5`), suggesting they are not currently actionable. The `multisupervisor_interop` package was identified as potentially flaky when all tests within it run together, with `TestUnsafeChainUnknownToL2CL` and `TestL2CLAheadOfSupervisor` specifically mentioned. The importance of measuring flakiness by package rather than individual test was highlighted, as shared environments can influence results.\n### Supervisor Mode Renaming\nOn [#16379](https://github.com/ethereum-optimism/ecosystem/issues/16379), there was a comment pointing out a potential mix-up in the proposed renaming, specifically regarding \"standard mode\" being replaced with \"indexing mode\" and \"managed mode\" also being renamed to \"indexing mode.\"", "2025-09-04T03:26:03.927Z"]
["ethereum-optimism/specs_day_2025-06-11", "ethereum-optimism/specs", "day", "2025-06-11", "# ethereum-optimism/specs Daily Update (Jun 11, 2025)\n## OVERVIEW \nThe day's development focused on a critical bug fix related to event descriptions in the interop specifications. Additionally, new issues were opened concerning acceptance test reliability, supervisor mode renaming, and a Gas Tank contract.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Specification Bug Fixes**\n    *   A bug was fixed that reset event descriptions in the `specs/interop/managed-mode.md` file, ensuring accuracy in interop specifications ([#719](https://github.com/ethereum-optimism/specs/pull/719)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Jun 11, 2025.\n\n## CLOSED ISSUES\nNo issues were closed on Jun 11, 2025.\n\n## NEW ISSUES\n\n*   **Acceptance Test Reliability**\n    *   An issue was opened to improve the reliability of acceptance tests, aiming for consistent 1-shot 100% pass rates instead of K-shot passes ([#16378](https://github.com/ethereum-optimism/specs/issues/16378)).\n*   **Supervisor Mode Renaming**\n    *   A ticket was created to rename supervisor and op-node modes to improve clarity and reduce confusion, following a new naming convention ([#16379](https://github.com/ethereum-optimism/specs/issues/16379)).\n*   **Gas Tank Contract**\n    *   An issue was opened to track the development and integration of a Gas Tank contract ([#836](https://github.com/ethereum-optimism/specs/issues/836)).\n\n## ACTIVE ISSUES\n\n*   **Improve reliability of acceptance tests** ([#16378](https://github.com/ethereum-optimism/specs/issues/16378))\n    The discussion highlights ongoing efforts to identify and resolve flakiness in acceptance tests. Recent comments indicate that `op-acceptance-tests/tests/interop/reorgs` package passes with `-count=5`, suggesting it's not currently actionable. The `TestL2CLAheadOfSupervisor` also passes with `-count=5`. The focus is shifting to `op-acceptance-tests/tests/interop/sync/multisupervisor_interop` as a potential source of flakiness, specifically `TestUnsafeChainUnknownToL2CL` and `TestL2CLAheadOfSupervisor`. There's an emphasis on measuring flakiness by package rather than individual test, as shared environments can influence results. A \"Flakiness Report\" has been introduced to provide more insights, including job names to pinpoint flakiness origins. The issue was later closed on July 9, 2025, with a note that tests have been considerably improved, and continuous monitoring and improvement are needed.\n\n*   **interop: supervisor <> op-node mode renaming** ([#16379](https://github.com/ethereum-optimism/specs/issues/16379))\n    The discussion confirms the renaming initiative to clarify supervisor and op-node modes. A comment points out a potential mix-up in the naming convention, specifically regarding the replacement of \"standard mode\" with \"indexing mode\" and the renaming of \"managed mode\" to \"indexing mode,\" indicating a need for careful implementation to avoid further confusion.\n\n*   **Gas Tank contract** ([#836](https://github.com/ethereum-optimism/specs/issues/836))\n    A pull request for the Gas Tank contract has been linked, indicating active development on this feature.", "2025-09-04T03:26:03.959Z"]
["ethereum-optimism/community-hub_day_2025-06-12", "ethereum-optimism/community-hub", "day", "2025-06-12", "# ethereum-optimism/community-hub Daily Update (Jun 12, 2025)\n## OVERVIEW \nThe day's development focused on content updates across various sections of the community hub, particularly the Citizen House, Token House, and Grant pages, alongside a key bug fix for the governance site.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Governance Site Bug Fixes\nA critical bug affecting the governance site was addressed, specifically fixing issues within the Citizen House section. This ensures the correct display and functionality of information related to eligible chains and applications. ([#1159](https://github.com/ethereum-optimism/community-hub/pull/1159))\n\n### Extensive Content Updates for Citizen House\nSignificant updates were made to the Citizen House documentation, including overhauls of the overview, glossary, eligibility requirements, selection process, experimentation details, and FAQs. This comprehensive refresh aims to provide clearer and more current information for community members. ([#1152](https://github.com/ethereum-optimism/community-hub/pull/1152), [#1161](https://github.com/ethereum-optimism/community-hub/pull/1161))\n\n### General Documentation Refinements\nSeveral other key documentation pages received copy updates to improve clarity and accuracy. This includes the welcome overview, how-to-delegate guide, token house overview, and grant overview. ([#1156](https://github.com/ethereum-optimism/community-hub/pull/1156), [#1157](https://github.com/ethereum-optimism/community-hub/pull/1157), [#1158](https://github.com/ethereum-optimism/community-hub/pull/1158), [#1160](https://github.com/ethereum-optimism/community-hub/pull/1160))\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened, both focusing on content updates within the Citizen House section:\n- [#1154](https://github.com/ethereum-optimism/community-hub/pull/1154): Update citizen-house-overview.mdx\n- [#1155](https://github.com/ethereum-optimism/community-hub/pull/1155): Update s8-eligible-chains-and-apps.mdx\n\n## CLOSED ISSUES\nNo issues were closed on Jun 12, 2025.\n\n## NEW ISSUES\nNo new issues were opened on Jun 12, 2025.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation\nThe issue [#16271](https://github.com/ethereum-optimism/community-hub/issues/16271) concerning CI flakiness remains active. Recent comments indicate progress in addressing this, with a test flake report generator released and iterated upon, and the report publicized. The latest update from scharissis on June 24, 2025, confirms improvements in test flakiness and states that monitoring will continue. Earlier discussions highlighted specific flaky acceptance tests and noted that much of the flakiness was due to infrastructure and networking issues rather than acceptance testing itself.\n\n### Incorrect Nonce for Pending Transactions\nIssue [#623](https://github.com/ethereum-optimism/community-hub/issues/623) reports that `eth_getTransactionCount` returns an incorrect nonce (0x1 instead of 0x0) for pending transactions on the Base node, causing transactions to get stuck. On June 12, 2025, mukul3097 inquired about any updates, indicating the issue is still pending resolution. Previous comments from ntrzr and mukul3097 also sought updates, emphasizing the ongoing nature of this problem.", "2025-09-04T03:26:05.221Z"]
["ethereum-optimism/docs_day_2025-06-12", "ethereum-optimism/docs", "day", "2025-06-12", "# ethereum-optimism/docs Daily Update (Jun 12, 2025)\n## OVERVIEW \nThe day saw the opening of a new issue concerning incorrect Docker image references on the releases page. Discussions continued on existing issues related to CI flakiness and incorrect nonce values from `eth_getTransactionCount`.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n### Documentation Inaccuracies\nA new issue was opened regarding incorrect Docker image references on the `node-operators/releases` page, specifically for `ethereumoptimism/op-node` and `ethereumoptimism/op-geth` [#1657](https://github.com/ethereum-optimism/docs/issues/1657).\n\n## ACTIVE ISSUES\n### CI Flakiness Investigation\nDiscussions continued on investigating and improving CI flakiness [#16271](https://github.com/ethereum-optimism/docs/issues/16271). A new comment on June 12, 2025, linked to a related issue in the main Optimism repository [#16378](https://github.com/ethereum-optimism/optimism/issues/16378).\n\n### Incorrect Nonce from eth_getTransactionCount\nA user inquired about updates regarding the issue where `eth_getTransactionCount` returns an incorrect nonce (0x1 instead of 0x0) for pending transactions, causing transactions to get stuck in the mempool [#623](https://github.com/ethereum-optimism/docs/issues/623).", "2025-09-04T03:26:05.547Z"]
["ethereum-optimism/op-geth_day_2025-06-12", "ethereum-optimism/op-geth", "day", "2025-06-12", "# ethereum-optimism/op-geth Daily Update (Jun 12, 2025)\n## OVERVIEW \nThe day saw continued discussion on existing issues, particularly regarding CI flakiness and an `eth_getTransactionCount` bug, with no new code contributions or pull requests.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n### CI Flakiness Investigation\nDiscussion continued on investigating and improving CI flakiness [#16271](https://github.com/ethereum-optimism/op-geth/issues/16271). A comment on June 12th noted related issues and pull requests in the broader Optimism repository, specifically referencing [#16378](https://github.com/ethereum-optimism/optimism/issues/16378). Previous comments highlighted that most flakiness stems from infrastructure issues rather than acceptance tests themselves, and a list of the top 10 flakiest acceptance tests was provided.\n\n### Incorrect Nonce from eth_getTransactionCount\nThere was an update on the issue where `eth_getTransactionCount` returns an incorrect nonce [#623](https://github.com/ethereum-optimism/op-geth/issues/623). A user commented on June 12th asking for an update on the resolution of this bug, which causes transactions to get stuck in the mempool.", "2025-09-04T03:26:06.015Z"]
["ethereum-optimism/op-analytics_day_2025-06-12", "ethereum-optimism/op-analytics", "day", "2025-06-12", "# ethereum-optimism/op-analytics Daily Update (Jun 12, 2025)\n## OVERVIEW \nThe day saw no new code contributions, features, or bug fixes. The primary activity revolved around ongoing discussions and monitoring of existing issues, particularly concerning CI flakiness and an incorrect nonce return from `eth_getTransactionCount`.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### CI Flakiness Investigation and Improvement\nDiscussions continued on [#16271](https://github.com/ethereum-optimism/op-analytics/issues/16271) regarding CI flakiness. On June 12, `nonsense` linked to a related issue in the main Optimism repository ([#16378](https://github.com/ethereum-optimism/optimism/issues/16378)). The issue was later closed on June 24, with `scharissis` providing an update on the progress made, including the release and iteration of a test flake report generator, publicizing the report, and improvements in test flakiness.\n\n### Incorrect Nonce Return from eth_getTransactionCount\nThe issue [#623](https://github.com/ethereum-optimism/op-analytics/issues/623), concerning `eth_getTransactionCount` returning an incorrect nonce (0x1 instead of 0x0) for pending transactions, saw a comment from `mukul3097` on June 12, asking for an update on the investigation. This indicates the issue remains unresolved and is awaiting further attention.", "2025-09-04T03:26:06.241Z"]
["ethereum-optimism/infra_day_2025-06-12", "ethereum-optimism/infra", "day", "2025-06-12", "# ethereum-optimism/infra Daily Update (Jun 12, 2025)\n## OVERVIEW \nToday's development focused on enhancing the `op-acceptor` with improved HTML reporting and fixing a test flake. Additionally, a critical bug in `proxyd` related to request size limit checks was addressed. An issue concerning the complete withdrawal flow test was closed, and ongoing discussions continued for CI flakiness and incorrect nonce returns.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Reporting and Test Stability\nThe `op-acceptor` received a new feature to display an overall pass/fail status in its HTML reports, improving clarity and usability ([#408](https://github.com/ethereum-optimism/infra/pull/408)). A persistent test flake in `op-acceptor`'s `TestRealtimeLogs` was also addressed, aiming for more reliable test results ([#409](https://github.com/ethereum-optimism/infra/pull/409)).\n\n### `proxyd` Bug Fixes\nA significant bug in `proxyd` was fixed, shifting the request size limit check to occur only after interop transaction recognition. This prevents premature checks and ensures correct handling of transactions ([#407](https://github.com/ethereum-optimism/infra/pull/407)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Withdrawal Flow Test Completion\nThe issue tracking the complete withdrawal flow test from L2 to L1 was closed today ([#327](https://github.com/ethereum-optimism/infra/issues/327)). This test, which includes initiation, proof generation, and finalization, has been implemented. Further follow-up tickets are planned for adding `kt` support and executing withdrawals without proof generation.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation and Improvement\nDiscussions continued on investigating and improving CI flakiness ([#16271](https://github.com/ethereum-optimism/infra/issues/16271)). The latest comment indicates that a test flake report generator has been released and iterated upon, and flakiness is being actively monitored. Previous comments highlighted that most flakiness is due to infrastructure issues rather than acceptance testing itself, with a list of the top 10 flakiest acceptance tests provided.\n\n### Incorrect Nonce Return from `eth_getTransactionCount`\nThe issue regarding `eth_getTransactionCount` returning an incorrect nonce (0x1 instead of 0x0) for pending transactions was discussed ([#623](https://github.com/ethereum-optimism/infra/issues/623)). The latest comment from `mukul3097` on June 12, 2025, asks for an update, indicating the problem persists and requires attention. This bug causes transactions to get stuck in the mempool.", "2025-09-04T03:26:06.936Z"]
["ethereum-optimism/optimism_day_2025-06-12", "ethereum-optimism/optimism", "day", "2025-06-12", "# ethereum-optimism/optimism Daily Update (Jun 12, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to rename a dependencySet RPC. Discussions continued on active issues related to CI flakiness and an `eth_getTransactionCount` error, with community members seeking updates on the latter.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16397](https://github.com/ethereum-optimism/optimism/pull/16397), was opened to rename the `dependencySet` RPC. Its status is new and awaiting review.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were reported on this day.\n\n## ACTIVE ISSUES\n### CI Flakiness Investigation\nDiscussions continued on [#16271](https://github.com/ethereum-optimism/optimism/issues/16271), which aims to investigate and improve CI flakiness. On June 12th, a comment from \"nonsense\" linked to a related issue, [#16378](https://github.com/ethereum-optimism/optimism/issues/16378), indicating ongoing efforts to track and address these issues. Previous comments highlighted that much of the flakiness stems from infrastructure rather than acceptance tests themselves, and a list of the top 10 flakiest acceptance tests was provided.\n\n### Incorrect Nonce from `eth_getTransactionCount`\nIssue [#623](https://github.com/ethereum-optimism/optimism/issues/623) remains active, concerning an incorrect nonce returned by `eth_getTransactionCount` on a Base node. On June 12th, \"mukul3097\" inquired about any updates, indicating that the issue persists and is awaiting resolution. Previous comments also sought attention to this problem.", "2025-09-04T03:26:07.659Z"]
["ethereum-optimism/supersim_day_2025-06-12", "ethereum-optimism/supersim", "day", "2025-06-12", "# ethereum-optimism/supersim Daily Update (Jun 12, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, or code refactoring. A new issue was opened to clarify the distinction between supersim and interop Kurtosis devnet, while ongoing discussions continued on existing issues related to CI flakiness and incorrect nonce returns.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Local Development Environment Clarification\nA new issue was opened to understand the difference between `supersim` and `interop kurtosis devnet` for local development [#399](https://github.com/ethereum-optimism/supersim/issues/399).\n\n## ACTIVE ISSUES\n### CI Flakiness Investigation\nDiscussions continued on investigating and improving CI flakiness [#16271](https://github.com/ethereum-optimism/supersim/issues/16271). A comment from `nonsense` linked to a related issue in the `optimism` repository, indicating a broader effort to address CI stability.\n\n### Incorrect Nonce Return\nThe issue regarding `eth_getTransactionCount` returning an incorrect nonce for pending transactions is still active [#623](https://github.com/ethereum-optimism/supersim/issues/623). A user `mukul3097` inquired about any updates, highlighting the ongoing impact of this problem.", "2025-09-04T03:26:07.802Z"]
["ethereum-optimism/ecosystem_day_2025-06-12", "ethereum-optimism/ecosystem", "day", "2025-06-12", "# ethereum-optimism/ecosystem Daily Update (Jun 12, 2025)\n## OVERVIEW \nThe day saw significant activity in issue tracking, with five new issues opened focusing on SuperStacks claim functionality and Airdrop 6 event logging. One issue related to Superstacks backend implementation was closed. Discussions continued on CI flakiness and an `eth_getTransactionCount` nonce issue.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo code changes, features, bug fixes, refactoring, documentation enhancements, or tests were completed on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\n### Superstacks Backend Implementation\nAn issue related to implementing a concurrent multiplier endpoint in the gateway backend for Superstacks was closed today ([#807](https://github.com/ethereum-optimism/ecosystem/issues/807)).\n\n## NEW ISSUES\n### SuperStacks Claim Functionality\nSeveral new issues were opened to address various aspects of the SuperStacks claim process, including integrating rank and XP into the claim endpoint ([#847](https://github.com/ethereum-optimism/ecosystem/issues/847)), cleaning up the claim UI ([#848](https://github.com/ethereum-optimism/ecosystem/issues/848)), modifying backend endpoints for SuperStacks claim ([#849](https://github.com/ethereum-optimism/ecosystem/issues/849)), and setting up a bugbash for the SuperStacks claim on the website ([#851](https://github.com/ethereum-optimism/ecosystem/issues/851)).\n### Airdrop 6 Event Logging\nA new issue was created to implement an Airdrop 6 Event log poller instance ([#850](https://github.com/ethereum-optimism/ecosystem/issues/850)).\n\n## ACTIVE ISSUES\n### CI Flakiness Investigation\nDiscussions continued on investigating and improving CI flakiness ([#16271](https://github.com/ethereum-optimism/ecosystem/issues/16271)). On June 12, `nonsense` linked a related issue in the `optimism` repository. Previous comments from June 9 by `scharissis` detailed the top 10 flakiest acceptance tests and noted that most flakiness was due to infrastructure issues rather than acceptance testing itself. A later comment on June 13 by `scharissis` linked a related issue and PR.\n### Incorrect Nonce from `eth_getTransactionCount`\nThe issue regarding `eth_getTransactionCount` returning an incorrect nonce for pending transactions ([#623](https://github.com/ethereum-optimism/ecosystem/issues/623)) saw a new comment from `mukul3097` on June 12, asking for an update. This follows previous inquiries from `ntrzr` and `mukul3097` on June 9 and June 6, respectively, indicating an ongoing need for resolution.", "2025-09-04T03:26:08.763Z"]
["ethereum-optimism/community-hub_day_2025-06-13", "ethereum-optimism/community-hub", "day", "2025-06-13", "# ethereum-optimism/community-hub Daily Update (Jun 13, 2025)\n## OVERVIEW \nThe day's development focused on a minor schema update for identity documentation. Additionally, two long-standing issues related to CI flakiness and tokenlist distribution were closed, indicating progress in stability and dependency management.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Updates\n- A new field, `refUID`, was added to the citizen schema within the identity documentation to enhance data structure and clarity ([#1162](https://github.com/ethereum-optimism/community-hub/pull/1162)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\n\n### Dependency Resolution\n- The issue concerning the missing `dist` directory in `@eth-optimism/tokenlist` versions after `10.0.238` was resolved, with a fix merged to address the import error ([#1146](https://github.com/ethereum-optimism/community-hub/issues/1146)).\n\n## NEW ISSUES\nNo new issues were reported on this day.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation and Improvement\nDiscussions on [#16271](https://github.com/ethereum-optimism/community-hub/issues/16271) continued, with `scharissis` noting the release and iteration of a \"Flakiness Report\" generator, which now includes \"Job Name\" to provide more clues on the source of flakiness. This report is publicly available and aims to improve visibility into CI stability. The issue was subsequently closed on June 24th, with `scharissis` confirming improvements in test flakiness and a commitment to continued monitoring.\n\n### Acceptance Test Reliability\nOn [#16378](https://github.com/ethereum-optimism/community-hub/issues/16378), `scharissis` highlighted the new \"Flakiness Report\" as a tool to monitor and improve acceptance test reliability. `nonsense` previously noted that `TestL2CLAheadOfSupervisor` and tests within the `reorg` package pass with `-count=5`, indicating some level of stability. The issue was later closed on July 9th by `nonsense`, stating that tests have been considerably improved, with an emphasis on continuous monitoring and preventing the introduction of new flaky tests.", "2025-09-04T03:26:09.331Z"]
["ethereum-optimism/docs_day_2025-06-13", "ethereum-optimism/docs", "day", "2025-06-13", "# ethereum-optimism/docs Daily Update (Jun 13, 2025)\n## OVERVIEW \nToday's focus was on documentation fixes, including navigation and hardware date updates, alongside the addition of a new tutorial for relaying arbitrary log messages. Node operator configurations were also updated.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Bug Fixes\nSeveral documentation issues were addressed, including a fix for a navigation problem within the `pages/stack/smart-contracts` section ([#1659](https://github.com/ethereum-optimism/docs/pull/1659)) and an update to the hardware requirements date in the node operator tutorial ([#1662](https://github.com/ethereum-optimism/docs/pull/1662)).\n\n### New Interoperability Tutorial\nA new tutorial was added explaining how to relay arbitrary log messages using attestations, enhancing the `pages/interop/tutorials` section ([#1613](https://github.com/ethereum-optimism/docs/pull/1613)).\n\n### Node Operator Configuration Updates\nUpdates were made to the `execution-config.mdx` to align `devp2p/disc` defaults with OP EL's default discovery topology ([#1565](https://github.com/ethereum-optimism/docs/pull/1565)). Additionally, the U16 challenger version was updated in relevant notices and metrics documentation ([#1658](https://github.com/ethereum-optimism/docs/pull/1658)).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#1660](https://github.com/ethereum-optimism/docs/pull/1660): Update op-challenger version for upgrade 16 to 1.5.1.\n*   [#1661](https://github.com/ethereum-optimism/docs/pull/1661): U16 contract upgrades.\n*   [#1663](https://github.com/ethereum-optimism/docs/pull/1663): Updating the cross domain messenger overview.\n\n## CLOSED ISSUES\n\n### Dependency Resolution\nThe issue concerning the missing `dist` directory in `@eth-optimism/tokenlist` versions after `10.0.238` was closed ([#1146](https://github.com/ethereum-optimism/docs/issues/1146)). This was resolved by the merge of [#1161](https://github.com/ethereum-optimism/docs/pull/1161).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation\nDiscussions on [#16271](https://github.com/ethereum-optimism/docs/issues/16271) (Investigate and improve flakiness) indicate ongoing efforts to address CI instability. The latest comment from scharissis (Jun 24, 2025) confirms the release of a test flake report generator, its iteration with Protocol feedback, and publicization, leading to improved test flakiness. Previous comments highlighted specific flaky acceptance tests and the observation that much of the flakiness was due to CircleCI machine, networking, and infrastructure issues.\n\n### Acceptance Test Reliability\nThe issue [#16378](https://github.com/ethereum-optimism/docs/issues/16378) (Improve reliability of acceptance tests) was closed on Jul 9, 2025, with nonsense stating that tests have been considerably improved and that continuous monitoring and improvement will be maintained. Earlier discussions on Jun 13, 2025, by scharissis pointed to a new \"Flakiness Report\" and the inclusion of \"Job Name\" to help identify the source of flakiness. Nonsense also noted that certain packages and tests, like `op-acceptance-tests/tests/interop/reorgs` and `TestL2CLAheadOfSupervisor`, passed with `-count=5`, indicating some progress in stability. The discussion also touched upon the importance of measuring flakiness by package rather than by individual test, as shared environments can influence results.", "2025-09-04T03:26:11.422Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-13", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-13", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 13, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes, specifically addressing a missing `dist` directory in the `@eth-optimism/tokenlist` npm package. Additionally, new token data for BTREE and Bridged EURC was added, expanding the supported assets within the ecosystem.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Token Data Expansion\nNew token addresses were added for BTREE on Optimism and Optimism-Sepolia, and Bridged EURC was added to Lisk, enhancing the range of supported assets within the Superchain ecosystem.\n- Add BTREE token addresses ([#1143](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1143))\n- Add Bridged EURC to Lisk ([#1157](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1157))\n\n### Critical Package Fix\nA significant bug was resolved where the `@eth-optimism/tokenlist` npm package was missing its `dist` directory in versions after 10.0.238, causing import errors. This fix ensures proper package functionality.\n- Fix missing dist directory in published npm package ([#1161](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1161))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Tokenlist Package Issue Resolution\nA critical issue regarding the `@eth-optimism/tokenlist` package missing its `dist` directory was closed. This problem, which prevented the package from being imported correctly, has been resolved with the merge of PR #1161.\n- `10.0.238` is the last version that includes a `dist` directory ([#1146](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1146))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation\nDiscussions continued on investigating and improving CI flakiness ([#16271](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16271)). The latest comments highlight the release of a \"Flakiness Report\" generator and its subsequent iteration, which now includes \"Job Name\" to help identify the backend used and potential sources of flakiness. This report aims to provide better visibility into the issue.\n\n### Acceptance Test Reliability\nThe ongoing effort to improve the reliability of acceptance tests ([#16378](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16378)) saw further discussion. A key point raised was the importance of measuring flakiness by package rather than by individual test, as tests within the same package (e.g., `multisupervisor_interop`) can interfere with each other and boost flakiness. The new \"Flakiness Report\" is also relevant here, providing insights into which tests are most flaky.", "2025-09-04T03:26:11.538Z"]
["ethereum-optimism/ecosystem_day_2025-06-13", "ethereum-optimism/ecosystem", "day", "2025-06-13", "# ethereum-optimism/ecosystem Daily Update (Jun 13, 2025)\n## OVERVIEW \nToday's development focused on enhancing cross-chain interoperability with new GasTank event indexing and ABI additions, alongside several package releases for `supersim` and other ecosystem components.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Interoperability Enhancements for GasTank\nNew features were added to index `GasTank` events and integrate its ABI, improving the tracking of gas provider operations and message claims. This includes new tables for `gasProviders` and `gasProviderPendingWithdrawals` and the addition of `interop-lib` as a submodule. ([#833](https://github.com/ethereum-optimism/ecosystem/pull/833), [#834](https://github.com/ethereum-optimism/ecosystem/pull/834))\n\n### Package Versioning and Releases\nMultiple packages, including `supersim`, `ponder-interop`, `viem`, and `wagmi`, received version updates and releases. These updates ensure the ecosystem components are up-to-date and reflect recent changes. ([#852](https://github.com/ethereum-optimism/ecosystem/pull/852), [#853](https://github.com/ethereum-optimism/ecosystem/pull/853), [#855](https://github.com/ethereum-optimism/ecosystem/pull/855), [#856](https://github.com/ethereum-optimism/ecosystem/pull/856))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Gas Tank Event Indexing\nThe issue concerning the indexing of `GasTank` events related to deposits, withdrawals, and claims has been closed. This was addressed by the new features implemented today. ([#838](https://github.com/ethereum-optimism/ecosystem/issues/838))\n\n### Tokenlist `dist` Directory Issue\nThe problem where versions after `10.0.238` of `@eth-optimism/tokenlist` lacked a `dist` directory, causing import errors, has been resolved. ([#1146](https://github.com/ethereum-optimism/ecosystem/issues/1146))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Investigate and Improve CI Flakiness ([#16271](https://github.com/ethereum-optimism/ecosystem/issues/16271))\nThe discussion on CI flakiness continues, with recent comments from scharissis highlighting the release of a test flake report generator and its iteration, along with improved test flakiness. The team will continue to monitor and report on flakiness periodically. Earlier comments from scharissis also provided a list of the top 10 flakiest acceptance tests, noting that most flakiness is due to CircleCI machine, networking, or infrastructure issues rather than acceptance testing itself.\n\n### Improve Reliability of Acceptance Tests ([#16378](https://github.com/ethereum-optimism/ecosystem/issues/16378))\nThe issue of improving acceptance test reliability saw a new comment from scharissis, who pointed to a new \"Flakiness Report\" ([#16411](https://github.com/ethereum-optimism/optimism/pull/16411)) which includes \"Job Name\" to help identify the source of flakiness. Earlier, nonsense noted that `TestL2CLAheadOfSupervisor` and the `reorg` package pass with `-count=5`, and that the `op-acceptance-tests/tests/interop/sync/multisupervisor_interop` package appears flaky when all tests within it are run. pcw109550 also raised a point about measuring flakiness by package rather than by individual test, as tests sharing the same environment can interfere with each other.", "2025-09-04T03:26:12.303Z"]
["ethereum-optimism/op-analytics_day_2025-06-13", "ethereum-optimism/op-analytics", "day", "2025-06-13", "# ethereum-optimism/op-analytics Daily Update (Jun 13, 2025)\n## OVERVIEW \nToday's development focused on significant data pipeline enhancements, including the integration of ChainMetadataAggregator and the ability to pull system configuration data directly from on-chain contracts. A Dagster version update was also completed. Several issues related to CI flakiness and module import errors were actively discussed and one was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Chain Metadata Aggregation\nA new pipeline, `build_all_chains_metadata()`, was introduced to integrate Total Crypto metadata, providing a structured approach for future additions. This work lays the groundwork for comprehensive chain metadata management.\n- [#1629](https://github.com/ethereum-optimism/op-analytics/pull/1629)\n\n### On-chain System Configuration Data Integration\nLeveraging previous work, the system now pulls chain system configuration data directly from on-chain contracts, storing relevant fields in GCS. This improves data accuracy and reliability for chain configurations.\n- [#1646](https://github.com/ethereum-optimism/op-analytics/pull/1646)\n\n### Infrastructure and Dependency Updates\nThe Dagster version was updated, ensuring the analytics platform runs on the latest stable release, which can bring performance improvements and new features.\n- [#1647](https://github.com/ethereum-optimism/op-analytics/pull/1647)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Module Import Resolution\nThe issue concerning the missing `dist` directory in `@eth-optimism/tokenlist` versions after `10.0.238`, which caused module import errors, was closed. A merged PR is expected to resolve this.\n- [#1146](https://github.com/ethereum-optimism/op-analytics/issues/1146)\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### CI Flakiness Investigation and Improvement\nDiscussions continued on investigating and improving CI flakiness ([#16271](https://github.com/ethereum-optimism/op-analytics/issues/16271)). The latest comment from scharissis on June 24th indicates that a test flake report generator has been released and iterated upon, and test flakiness has improved. Monitoring will continue periodically. Related issues and PRs were also mentioned, including a new \"Flakiness Report\" that includes \"Job Name\" for better debugging.\n\n### Acceptance Test Reliability\nThe ongoing effort to improve the reliability of acceptance tests ([#16378](https://github.com/ethereum-optimism/op-analytics/issues/16378)) saw further discussion. The latest comment from nonsense on July 9th indicates that the issue is being closed as tests have improved considerably, with a note to continuously monitor CI and prevent new flaky tests. Earlier discussions on June 13th highlighted that some packages, like `op-acceptance-tests/tests/interop/reorgs`, pass with `-count=5`, and a new \"Flakiness Report\" was shared to aid in identifying flaky tests and their associated job names. It was also noted that flakiness might be due to tests within the same package interfering with each other.", "2025-09-04T03:26:12.658Z"]
["ethereum-optimism/optimism_day_2025-06-13", "ethereum-optimism/optimism", "day", "2025-06-13", "# ethereum-optimism/optimism Daily Update (Jun 13, 2025)\n## OVERVIEW \nToday's development focused on addressing a critical dependency issue with `@eth-optimism/tokenlist` and introducing a new RPC method for the op-proposer. Discussions continued on improving CI reliability and acceptance test flakiness.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Proposer RPC Enhancements\nA new RPC method, `admin_propose`, has been added to the op-proposer, likely to provide administrative control over proposal submissions.\n- [#16408](https://github.com/ethereum-optimism/optimism/pull/16408)\n\n## NEWLY OPENED PULL REQUESTS\n- [#16408](https://github.com/ethereum-optimism/optimism/pull/16408) op-proposer: add `admin_propose` rpc method: This PR introduces a new RPC method for the op-proposer, enabling administrative control over the proposal process.\n\n## CLOSED ISSUES\n\n### Tokenlist Dependency Resolution\nThe issue concerning the missing `dist` directory in `@eth-optimism/tokenlist` versions after `10.0.238` has been resolved. A merged PR is expected to address this import error.\n- [#1146](https://github.com/ethereum-optimism/optimism/issues/1146)\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Investigating and Improving CI Flakiness\nDiscussions on [#16271](https://github.com/ethereum-optimism/optimism/issues/16271) continued with `scharissis` providing an update on June 13th, linking to related issues and a PR ([#16411](https://github.com/ethereum-optimism/optimism/pull/16411)) that likely contributes to the investigation. The issue was later closed on June 24th, with `scharissis` summarizing the efforts made, including the release and iteration of a test flake report generator, and improved test flakiness.\n\n### Improving Reliability of Acceptance Tests\nOn [#16378](https://github.com/ethereum-optimism/optimism/issues/16378), `scharissis` shared a new \"Flakiness Report\" on June 13th, which includes \"Job Name\" to help identify the backend used and potential sources of flakiness. The report aims to provide more clues for debugging. The issue was later closed on July 9th by `nonsense`, stating that tests have been considerably improved and emphasizing continuous monitoring of CI and test flakiness.", "2025-09-04T03:26:12.709Z"]
["ethereum-optimism/op-analytics_day_2025-06-15", "ethereum-optimism/op-analytics", "day", "2025-06-15", "# ethereum-optimism/op-analytics Daily Update (Jun 15, 2025)\n## OVERVIEW \nThe day's development focused on minor improvements to the `op-analytics` repository, specifically enhancing logging within `runner.py` to improve clarity and maintainability.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Logging Improvements\n- Improved logging in `runner.py` by preventing context binding within a generator, enhancing the clarity and efficiency of log messages. ([#1640](https://github.com/ethereum-optimism/op-analytics/pull/1640))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:26:12.937Z"]
["ethereum-optimism/optimism_day_2025-06-15", "ethereum-optimism/optimism", "day", "2025-06-15", "# ethereum-optimism/optimism Daily Update (Jun 15, 2025)\n## OVERVIEW \nToday's development activity focused on a new pull request to support custom OPCM in the op-deployer, indicating ongoing efforts to enhance deployment flexibility within the Optimism ecosystem.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16430](https://github.com/ethereum-optimism/optimism/pull/16430), was opened to backport support for custom OPCM (Optimism Protocol Configuration Manager) into the `op-deployer`. This enhancement aims to provide greater flexibility in configuring deployments.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-09-04T03:26:13.513Z"]
["ethereum-optimism/superchain-ops_day_2025-06-13", "ethereum-optimism/superchain-ops", "day", "2025-06-13", "# ethereum-optimism/superchain-ops Daily Update (Jun 13, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to refactor a multisig name, and discussions continued on improving CI stability and addressing a dependency issue.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1080](https://github.com/ethereum-optimism/superchain-ops/pull/1080), was opened to refactor the naming of a parent multisig to \"root safe.\"\n\n## CLOSED ISSUES\n**Dependency Resolution**\nIssue [#1146](https://github.com/ethereum-optimism/superchain-ops/issues/1146), concerning the absence of a `dist` directory in `@eth-optimism/tokenlist` versions after `10.0.238`, was closed. A fix was merged to address this problem.\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n**Investigating and Improving CI Flakiness**\nDiscussions on [#16271](https://github.com/ethereum-optimism/superchain-ops/issues/16271) continued, with `scharissis` providing an update on June 13th, linking to related issues and a PR ([#16404](https://github.com/ethereum-optimism/superchain-ops/issues/16404), [#16411](https://github.com/ethereum-optimism/superchain-ops/pull/16411)). Previously, `scharissis` had identified the top 10 flakiest acceptance tests and noted that most flakiness was due to infrastructure issues rather than acceptance testing itself.\n\n**Improving Reliability of Acceptance Tests**\nOn [#16378](https://github.com/ethereum-optimism/superchain-ops/issues/16378), `scharissis` shared a new \"Flakiness Report\" on June 13th, which includes job names to help identify the backend used and potential sources of flakiness. Earlier, `nonsense` noted that `TestL2CLAheadOfSupervisor` and the `reorg` package passed with `-count=5`, and `pcw109550` highlighted that measuring flakiness by package rather than single tests might be more accurate due to shared environments. `teddyknox` agreed with this point.", "2025-09-04T03:26:14.405Z"]
["ethereum-optimism/ecosystem_day_2025-06-16", "ethereum-optimism/ecosystem", "day", "2025-06-16", "# ethereum-optimism/ecosystem Daily Update (Jun 16, 2025)\n## OVERVIEW \nThe day's activity focused on discussions around defining Service Level Agreements (SLAs) for the CI pipeline and exploring configurable dependency sets for L2 chains in supersim.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n### CI Pipeline SLAs and Accountability Framework\nDiscussions continued on [#16437](https://github.com/ethereum-optimism/ecosystem/issues/16437) regarding the adoption of internal SLAs for the continuous integration pipeline. On June 16th, `scharissis` initiated the discussion by outlining the \"Why\" behind SLAs, emphasizing clear expectations, accountability, and objective metrics. They then proposed a detailed \"CI Pipeline SLAs & Accountability Framework\" covering availability, performance, and developer experience metrics, along with an accountability framework for bad test resolution and a responsibility matrix. Key proposed metrics included a 95% job success rate, 80% of PR pipelines completing within 1 hour, and PR merge time within 7 days.\n\n### Configurable Dependency Set for Supersim\nDiscussion on [#361](https://github.com/ethereum-optimism/ecosystem/issues/361) revolved around making the dependency set configurable for L2 chains in supersim. On June 16th, `its-everdred` requested an example flag and its expected effect for configuring the dependency set. In response, `tremarkley` suggested a `--dependency-set <chains>` flag, where specified chains would be grouped into a dependency set. They also provided a link to the dependency set specification and a starting point in the monorepo for managing dependency sets.", "2025-09-04T03:26:15.273Z"]
["ethereum-optimism/superchain-ops_day_2025-06-16", "ethereum-optimism/superchain-ops", "day", "2025-06-16", "# ethereum-optimism/superchain-ops Daily Update (Jun 16, 2025)\n## OVERVIEW \nThe day's activity focused on discussions around CI pipeline SLAs and the configurability of dependency sets within supersim, with no new code contributions or bug fixes.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### CI Pipeline SLAs and Accountability Framework\nDiscussion continued on [#16437](https://github.com/ethereum-optimism/superchain-ops/issues/16437) regarding the implementation of Service Level Agreements (SLAs) for the CI pipeline. On June 16th, scharissis outlined a detailed proposal for CI Pipeline SLAs and an Accountability Framework, covering availability, performance, and developer experience metrics, along with a responsibility matrix for bad test resolution. The proposal aims to set clear expectations, provide measurable targets for the Platforms team, and objectively discuss CI health.\n\n### Configurable Dependency Set for Supersim\nThe discussion on [#361](https://github.com/ethereum-optimism/superchain-ops/issues/361) revolved around making the dependency set in supersim configurable. On June 16th, tremarkley suggested a `--dependency-set <chains>` flag to allow specifying which chains should be part of a dependency set, providing a link to the dependency set specification and a starting point in the monorepo for implementation. its-everdred requested an example of the flag and its expected effect.", "2025-09-04T03:26:15.810Z"]
["ethereum-optimism/specs_day_2025-06-16", "ethereum-optimism/specs", "day", "2025-06-16", "# ethereum-optimism/specs Daily Update (Jun 16, 2025)\n## OVERVIEW \nThe day saw no new code contributions, but discussions continued on defining CI SLAs and configuring dependency sets. A new issue was opened to add missing Super DA error codes.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Data Availability Error Specification\nA new issue was opened to address missing Super DA error codes in the specification. This aims to align the spec with the Go implementation regarding data availability errors caused by reorgs, ensuring consistent error handling across the system. ([#725](https://github.com/ethereum-optimism/specs/issues/725))\n\n## ACTIVE ISSUES\n### CI SLAs Discussion\nDiscussions continued on defining Service Level Agreements (SLAs) for the Continuous Integration (CI) pipeline ([#16437](https://github.com/ethereum-optimism/specs/issues/16437)). Key points from the latest comments include:\n- **Developer Perspective on SLAs**: Developers expressed skepticism about the direct impact of these SLAs on their daily work, noting that issues would be reported regardless of SLA adherence.\n- **Flaky Tests**: A significant concern raised was the prevalence of flaky tests. Suggestions included developing a strong process for fixing flaky tests or implementing smarter methods to prevent new flaky tests from being admitted into the repository, such as running multiple instances of new test cases in parallel to proactively detect flakiness.\n- **Proposed Metrics Review**: Feedback was provided on the proposed metrics:\n    - The 5% expected failure rate was considered high.\n    - An hour for CI completion for 80% of PRs was deemed too long, with a preference for pre-merge checks under 10 minutes.\n    - Disabling breaking checks was strongly advised against, with a preference for reverting the PR that introduced the breakage.\n    - PR merge time was questioned as a meaningful CI metric, as it depends more on reviews and rework than CI performance.\n- **Next Steps**: The team plans to consider the feedback, produce a lightweight proposal with ideas, and seek further feedback, likely after the \"Pause.\"\n\n### Configurable Dependency Set\nDiscussions continued regarding making the dependency set configurable within supersim ([#361](https://github.com/ethereum-optimism/specs/issues/361)). The latest comments focused on:\n- **Implementation Suggestion**: A suggestion was made to implement a `--dependency-set <chains>` flag, allowing users to specify which chains should be part of a dependency set.\n- **Reference Material**: Links to the dependency set specification and relevant code in the monorepo were provided as starting points for implementation.\n- **Use Case**: The utility of this feature was highlighted for testing applications both within and outside of a dependency set.", "2025-09-04T03:26:16.821Z"]
["ethereum-optimism/optimism_day_2025-06-16", "ethereum-optimism/optimism", "day", "2025-06-16", "# ethereum-optimism/optimism Daily Update (Jun 16, 2025)\n## OVERVIEW \nThe day's development focused on refining the `op-batcher` by removing a redundant flag, streamlining its behavior. New pull requests were opened for devnet fixes and contract updates, while discussions continued on critical issues like sync testing and CI/CD SLAs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Batcher Simplification\nThe `op-batcher` component saw a significant simplification with the removal of the `preferLocalSafeL2` flag ([#16413](https://github.com/ethereum-optimism/optimism/pull/16413)). This change makes the previous configurable behavior the default, streamlining the batcher's operation and reflecting confidence in fixes for related `op-node` bugs.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n- [#16449](https://github.com/ethereum-optimism/optimism/pull/16449) aims to fix second-pass templating in `kurtosis-devnet` when no docker build jobs are defined.\n- [#16451](https://github.com/ethereum-optimism/optimism/pull/16451) proposes an update to v400 contracts hashes and the release tag.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n\n### Sync Testing Enhancements\nA new tracking issue, [#16452](https://github.com/ethereum-optimism/optimism/issues/16452), was opened to address the need for a service (`op-sync-tester`) for mock EL sync testing. This aims to facilitate long-range sync testing of the L2 consensus layer without requiring a full, large EL deployment.\n\n### Acceptance Test Expansion\nTwo new issues were created to expand acceptance tests:\n- [#16434](https://github.com/ethereum-optimism/optimism/issues/16434) proposes adding a test to maximize the number of executing messages across two chains simultaneously.\n- [#16435](https://github.com/ethereum-optimism/optimism/issues/16435) suggests adding a load test with invalid executing messages to assess their impact on valid message latency.\n\n### CI/CD SLA Exploration\nIssue [#16437](https://github.com/ethereum-optimism/optimism/issues/16437) was opened to spike the idea of adopting internal SLAs for the continuous integration pipeline, aiming to improve CI health and developer experience.\n\n## ACTIVE ISSUES\n\n### Configurable Dependency Set\nDiscussion continued on [#361](https://github.com/ethereum-optimism/optimism/issues/361), which seeks to allow configurable dependency sets for L2 chains in supersim. The latest comments suggest a flag like `--dependency-set <chains>` to specify which chains belong to a dependency set, with a reference to the Optimism dependency set specification for guidance. The goal is to enable testing applications both within and outside a dependency set.\n\n### CI SLAs\nOn [#16437](https://github.com/ethereum-optimism/optimism/issues/16437), the discussion revolved around the proposed CI pipeline SLAs and accountability framework. Key points included:\n- **Developer Perspective**: Some developers expressed skepticism about the direct impact of SLAs on their daily work, noting that issues would still be complained about regardless of SLA adherence.\n- **Specific Metrics**: Concerns were raised about the proposed 5% expected failure rate being too high and the 1-hour PR feedback time being too long for pre-merge checks.\n- **Flaky Tests**: There was a strong consensus that flaky tests are a major issue, with suggestions to either rapidly fix them or implement smarter mechanisms to prevent them from entering the repo (e.g., running new tests many times in parallel before admittance).\n- **Disabling Checks**: The idea of disabling checks that are breaking was largely opposed, with a preference for reverting the PR that introduced the breakage.\n- **PR Merge Time**: This metric was questioned as a CI SLA, being more dependent on reviewer availability and discussion than CI infrastructure.\n- **Accountability**: The proposed accountability framework for bad test resolution and responsibility matrix for flaky test logic, infrastructure, and external dependencies were presented for feedback.", "2025-09-04T03:26:17.351Z"]
["ethereum-optimism/ecosystem_day_2025-06-17", "ethereum-optimism/ecosystem", "day", "2025-06-17", "# ethereum-optimism/ecosystem Daily Update (Jun 17, 2025)\n## OVERVIEW \nThe day saw discussions on several key issues, including the ongoing investigation into `op-node` goroutine issues, event overflow in `op-supervisor`, and progress on acceptance tests for persistent devnets. Discussions also clarified the purpose of `supersim` versus interop Kurtosis devnets.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Interoperability Configuration Validation\nDiscussion continued on [#15765](https://github.com/ethereum-optimism/ecosystem/issues/15765) regarding the validation of `CrossL2Inbox` configuration for interop. Ajsutton commented that the execution client is not well-suited for this validation and that the genesis generation process in `op-deployer` already handles the correct inclusion of interop contracts based on whether multiple chains are present. This suggests the issue might be mitigated by tooling rather than requiring client-side checks.\n\n### Automated Release Pipeline for OP Stack Components\nOn [#16097](https://github.com/ethereum-optimism/ecosystem/issues/16097), the conversation revolved around using GoReleaser for `op-node`, `batcher`, `proposer`, and `challenger` release pipelines. Geoknee suggested a lighter-weight solution for changelog generation using `git cliff` and emphasized the desire for a one-click solution for high-quality, accurate changelogs.\n\n### `op-node` Goroutine Leak Investigation\nIssue [#16332](https://github.com/ethereum-optimism/ecosystem/issues/16332) saw Creamers158 confirm experiencing the same problem with `op-node` v1.13.3, where thousands of goroutines get stuck, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync issues. This reinforces the severity and reproducibility of the bug.\n\n### `op-supervisor` Event Overflow\nDiscussions on [#16335](https://github.com/ethereum-optimism/ecosystem/issues/16335) focused on the `op-supervisor` crashing due to event overflow. Sebastianst clarified that `ChainIndexingContinueEvent` was initially suspected but might not be the sole culprit, suggesting that \"cross-unsafe-update\" events could be stacking up. Nonsense is working on adding a counter per event type to better debug future occurrences, acknowledging that other event types might be causing the issue.\n\n### Acceptance Tests for Persistent Devnets\nOn [#398](https://github.com/ethereum-optimism/ecosystem/issues/398), serpixel reported adding L1 Faucet support, which is a step towards getting all acceptance tests running and passing in persistent devnets.\n\n### Clarifying `supersim` vs. Interop Kurtosis Devnet\nIssue [#399](https://github.com/ethereum-optimism/ecosystem/issues/399) saw tremarkley explain that `supersim` is a lighter-weight wrapper around Anvil, primarily used for local development and testing multichain/interop applications. This clarifies its distinction from interop Kurtosis devnets, which are used for testing the chains themselves.", "2025-09-04T03:26:19.774Z"]
["ethereum-optimism/Retro-Funding_day_2025-06-17", "ethereum-optimism/Retro-Funding", "day", "2025-06-17", "# ethereum-optimism/Retro-Funding Daily Update (Jun 17, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, code refactoring, documentation enhancements, or tests added. Development activity focused on ongoing discussions within active issues, particularly concerning `op-node` stability, `op-supervisor` event handling, and release pipeline improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Interoperability and Genesis Configuration\nDiscussion continued on [#15765](https://github.com/ethereum-optimism/Retro-Funding/issues/15765) regarding the validation of `CrossL2Inbox` configuration in the L2 genesis state. A comment from `ajsutton` on June 17th, 2025, argued against adding this validation to the execution client, stating that the genesis generation tooling (`op-deployer`) already sufficiently mitigates the risk of incorrect configurations. The tooling automatically determines if `CrossL2Inbox` should be included based on the presence of multiple chains, ensuring that only the correct genesis is generated.\n\n### Release Pipeline Automation\nIssue [#16097](https://github.com/ethereum-optimism/Retro-Funding/issues/16097), concerning the use of GoReleaser for `op-node`/`batcher`/`proposer`/`challenger` release pipelines, saw a new comment from `geoknee` on June 17th, 2025. The comment suggested a lighter-weight solution for changelog generation using `git cliff`, providing a command example for `op-node` and `op-service` components. This indicates an ongoing effort to streamline and automate the release process, particularly for generating accurate release notes.\n\n### `op-node` Stability and Goroutine Issues\nThe issue [#16332](https://github.com/ethereum-optimism/Retro-Funding/issues/16332), reporting thousands of stuck goroutines in `op-node` v1.13.3's p2p.SyncClient, received a new comment from `Creamers158` on June 17th, 2025. The comment confirmed experiencing the same issue with `op-node` v1.13.3 and provided a detailed stack trace, highlighting `select`, `IO wait`, and `yamux` related goroutines. This indicates a persistent stability problem affecting `op-node`'s peer-to-peer synchronization.\n\n### `op-supervisor` Event Overflow\nDiscussion on [#16335](https://github.com/ethereum-optimism/Retro-Funding/issues/16335), regarding `op-supervisor` event overflow on large unsafe head gaps, continued with several comments on June 17th, 2025. `sebastianst` clarified that `ChainIndexingContinueEvent` was initially suspected due to its internal loop emission, but `axelKingsley`'s earlier point about it being a 1:1 emit/consume event suggests other events might be the true culprits. `nonsense` confirmed working on the issue and proposed adding a counter per event type (via [#16471](https://github.com/ethereum-optimism/optimism/pull/16471)) to better debug which events are stacking up, acknowledging that `axelKingsley`'s assessment of `ChainIndexingContinueEvent` might be correct.\n\n### Acceptance Tests in Persistent Devnets\nIssue [#398](https://github.com/ethereum-optimism/Retro-Funding/issues/398), focused on getting all acceptance tests running and passing in persistent devnets, received an update from `serpixel` on June 17th, 2025. The comment noted the addition of L1 Faucet support via [#16423](https://github.com/ethereum-optimism/optimism/pull/16423), indicating progress in setting up the necessary infrastructure for comprehensive testing.\n\n### Super DA Errors\nIssue [#725](https://github.com/ethereum-optimism/Retro-Funding/issues/725), concerning the addition of missing Super DA Errors, saw a comment from `emhane` on June 17th, 2025, tagging relevant team members (`dhyaniarun1993`, `itschaindev`, `sadiq1971`) for their attention. This suggests the initial stages of addressing the need for more comprehensive error codes related to data availability.\n\n### Supersim vs. Interop Kurtosis Devnet\nDiscussion on [#399](https://github.com/ethereum-optimism/Retro-Funding/issues/399), differentiating between supersim and interop Kurtosis devnets, received a clarifying comment from `tremarkley` on June 17th, 2025. The comment explained that supersim is a lighter-weight wrapper around Anvil, primarily used for local development and testing multichain/interop applications, in contrast to Kurtosis which is used for testing the chains themselves.", "2025-09-04T03:26:19.823Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-17", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-17", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 17, 2025)\n## OVERVIEW \nThe day saw discussions on improving release pipelines, addressing `op-node` stability, and refining `op-supervisor` event handling. A new pull request was opened to remove an obsolete project file.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1162](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1162), was opened to remove an obsolete project file from the repository.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n### Data Availability Error Codes\nA new issue, [#725](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/725), was opened to add missing Super DA error codes, specifically for data availability errors caused by reorgs, which are currently absent from the specification.\n\n## ACTIVE ISSUES\n### `op-node` Goroutine Stuck Issues\nIssue [#16332](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16332) continues to track the problem of `op-node` (v1.13.3) getting stuck with thousands of goroutines, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync failures. A user reported experiencing the same issue on `op-node` v1.13.3, providing a detailed goroutine dump.\n\n### `op-supervisor` Event Overflow\nDiscussions on [#16335](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16335) focused on the `op-supervisor` entering a crash-loop due to an event overflow when the unsafe head gap is large. The team is investigating which event type is causing the overflow. One suggestion was to add a counter per event type to gather more debugging data. It was clarified that `ChainIndexingContinueEvent`s are not expected to stack up, suggesting another event type might be the culprit.\n\n### Release Pipeline Automation\nIssue [#16097](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16097) is tracking the effort to use GoReleaser for the `op-node`/`batcher`/`proposer`/`challenger` release pipeline. The latest comments discuss the desire for a one-click solution for generating high-quality and accurate changelogs, potentially by integrating `git-cliff` or similar tools into `op-workbench`.\n\n### Persistent Devnet Test Acceptance\nIssue [#398](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/398) is tracking the progress of getting all tests running and passing in persistent devnets. A recent update indicates that L1 Faucet support has been added, which is a step towards completing this work.\n\n### Supersim vs. Interop Kurtosis Devnet\nIssue [#399](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/399) seeks clarification on the differences between supersim and interop Kurtosis devnets. A comment clarified that supersim is a lighter-weight wrapper around Anvil, primarily used for testing multichain/interop applications locally, while Kurtosis is used for the underlying op-stack chain development. The discussion continues to explore the main use cases for supersim.\n\n### Interop EL Prestate Check\nIssue [#15765](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15765) discusses whether the execution client should check the EL prestate for pre-interop `CrossL2Inbox` configuration faults. The latest comment argues that the execution client is not well-suited for this validation due to dependency and world state availability challenges. It suggests that the genesis generation tooling (op-deployer) has mitigated this risk by automatically deciding whether `CrossL2Inbox` should be included based on the number of chains and interop activation, making a client-side check less necessary.", "2025-09-04T03:26:20.948Z"]
["ethereum-optimism/op-analytics_day_2025-06-17", "ethereum-optimism/op-analytics", "day", "2025-06-17", "# ethereum-optimism/op-analytics Daily Update (Jun 17, 2025)\n## OVERVIEW \nThe day saw no new code contributions, but significant discussions continued on several active issues, particularly concerning op-node stability, supervisor event handling, and release pipeline improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Data Availability Error Handling\nA new issue was opened to address missing Super DA Errors, specifically to add error codes for data availability errors caused by reorgs, which are currently missing from the specification but present in the Go implementation [#725](https://github.com/ethereum-optimism/op-analytics/issues/725).\n\n## ACTIVE ISSUES\n### Interoperability Prestate Checks\nDiscussion continued on [#15765](https://github.com/ethereum-optimism/op-analytics/issues/15765) regarding checking the EL prestate for pre-interop CrossL2Inbox configuration faults. Ajsutton commented that the execution client is not well-suited for this validation due to dependency and world state availability issues. They argued that the genesis generation tooling (op-deployer) already mitigates this risk by correctly deciding CrossL2Inbox inclusion based on the number of chains and interop activation, suggesting the problem is solved in tooling rather than requiring added complexity in op-geth/op-reth.\n\n### Release Pipeline Automation\nComments on [#16097](https://github.com/ethereum-optimism/op-analytics/issues/16097) focused on using GoReleaser for op-node/batcher/proposer/challenger release pipelines. Geoknee suggested a lighter-weight solution for changelog generation using `git cliff` and emphasized the desire for a one-click solution for high-quality, consistent changelogs, ideally committed to the codebase.\n\n### op-node Goroutine Leaks\nIssue [#16332](https://github.com/ethereum-optimism/op-analytics/issues/16332) saw a new comment from Creamers158, confirming they are experiencing the same issue with thousands of stuck goroutines in `p2p.SyncClient / libp2p` on `op-node v1.13.3`, providing a stack trace similar to the original report.\n\n### op-supervisor Event Overflow\nDiscussion on [#16335](https://github.com/ethereum-optimism/op-analytics/issues/16335) continued regarding the supervisor's event overflow on large unsafe head gaps. Sebastianst clarified their previous comment, stating that while `ChainIndexingContinueEvent` was initially suspected, it's likely the `\"cross-unsafe-update\"` events that are accumulating. Nonsense is working on adding a counter per event type to help debug future occurrences, noting that `ChainIndexingContinueEvents` are likely not the culprit as they are emitted and consumed 1:1.\n\n### Acceptance Test Devnet Progress\nSerpixel commented on [#398](https://github.com/ethereum-optimism/op-analytics/issues/398), confirming the addition of L1 Faucet support to aid in getting all acceptance tests running and passing in persistent devnets.\n\n### Supersim vs. Interop Kurtosis Devnet\nTremarkley provided a clarification on [#399](https://github.com/ethereum-optimism/op-analytics/issues/399), explaining that supersim is a lighter-weight wrapper around Anvil, primarily used for local development and testing multichain/interop applications, in contrast to Kurtosis which is used by the OP Stack for chain testing.", "2025-09-04T03:26:21.390Z"]
["ethereum-optimism/docs_day_2025-06-18", "ethereum-optimism/docs", "day", "2025-06-18", "# ethereum-optimism/docs Daily Update (Jun 18, 2025)\n## OVERVIEW \nThe day's activity in the `ethereum-optimism/docs` repository was minimal, with no new features, bug fixes, or documentation enhancements. The primary activity involved the creation of a new issue related to enabling flashblocks on op-sepolia.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo key technical developments occurred on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n### Flashblocks Deployment Planning\nA new issue was opened to track the progress of enabling flashblocks on op-sepolia. This initiative is contingent on successful testing and confidence gained from flashblocks enablement in eris-0, with an initial step involving deployment in `dry_run` mode on op-sepolia for testing purposes. This issue is currently blocked by [#16468](https://github.com/ethereum-optimism/docs/issues/16468). ([#16496](https://github.com/ethereum-optimism/docs/issues/16496))\n\n## ACTIVE ISSUES\n### Flashblocks Enablement on op-sepolia\nThe issue [#16496](https://github.com/ethereum-optimism/docs/issues/16496) was created today to enable flashblocks non-publicly on op-sepolia. The latest comment from yashvardhan-kukreja on June 18, 2025, indicates that this issue is currently blocked by [#16468](https://github.com/ethereum-optimism/docs/issues/16468). The long-term goal is to deploy flashblocks in `dry_run` mode on op-sepolia and conduct thorough testing once confidence is established from flashblocks enablement in eris-0.", "2025-09-04T03:26:22.190Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-18", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-18", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 18, 2025)\n## OVERVIEW \nThe day's development focused on expanding token registry support, specifically adding the Glyphs token to the Base token registry. An issue was also opened regarding enabling flashblocks on op-sepolia.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Token Registry Expansion\nA new token, Glyphs, was added to the Base token registry, including its contract address, symbol, and website. This expands the range of supported tokens within the ecosystem. ([#1159](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1159))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n### Flashblocks Enablement on op-sepolia\nDiscussion continued on enabling flashblocks on op-sepolia ([#16496](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16496)). The latest comment indicates that this issue was closed in favor of creating a new milestone, and it was previously blocked by issue #16468. The initial goal is to deploy flashblocks in `dry_run` mode on op-sepolia for testing.", "2025-09-04T03:26:22.687Z"]
["ethereum-optimism/optimism_day_2025-06-17", "ethereum-optimism/optimism", "day", "2025-06-17", "# ethereum-optimism/optimism Daily Update (Jun 17, 2025)\n## OVERVIEW \nThe day's development focused on enhancing transaction management with a new feature to rebroadcast transactions without fee bumps. Discussions continued on improving release pipelines, addressing `op-node` goroutine issues, and refining supervisor event handling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Transaction Management Enhancements**: A new feature was added to the transaction manager and batcher, allowing for the rebroadcasting of signed transactions without increasing gas fees. This improves the flexibility and efficiency of transaction handling. ([#16310](https://github.com/ethereum-optimism/optimism/pull/16310))\n\n## NEWLY OPENED PULL REQUESTS\n*   **Supervisor Event Handling**: A pull request was opened to add a `byType sync.Map` to `op-node/rollup/event`, likely to improve event processing and debugging within the supervisor. ([#16471](https://github.com/ethereum-optimism/optimism/pull/16471))\n*   **Documentation Cleanup**: A pull request was submitted to remove a broken image link from the README, improving the repository's documentation quality. ([#16475](https://github.com/ethereum-optimism/optimism/pull/16475))\n*   **CI/CD Improvements**: A pull request was opened to cache Rust installations in the CI pipeline using `mise`, aiming to speed up build times. ([#16480](https://github.com/ethereum-optimism/optimism/pull/16480))\n\n## CLOSED ISSUES\n*   **Flashblocks Enablement**: The issue concerning the enablement of flashblocks on `eris-0` for testing in a non-interop environment was closed, with a detailed breakdown of the completed phases and associated PRs across `optimism-charts`, `devnets`, and `k8s` repositories. ([#16468](https://github.com/ethereum-optimism/optimism/issues/16468))\n\n## NEW ISSUES\n*   **Super DA Error Codes**: A new issue was opened to add missing error codes for data availability errors caused by reorgs, specifically those currently absent from the Go implementation in the specification. ([#725](https://github.com/ethereum-optimism/optimism/issues/725))\n\n## ACTIVE ISSUES\n*   **Interop EL Prestate Check**: Discussion continued on the issue of checking the EL prestate for pre-interop `CrossL2Inbox` configuration faults. The latest comment suggests that the execution client is not well-suited for this validation, and the risk has been mitigated through improvements in the genesis generation tooling (`op-deployer`), which now correctly determines the inclusion of `CrossL2Inbox` based on the number of chains. ([#15765](https://github.com/ethereum-optimism/optimism/issues/15765))\n*   **GoReleaser for OP Stack Components**: The discussion around using GoReleaser for `op-node/batcher/proposer/challenger` release pipelines saw a new comment suggesting a lighter-weight solution for changelog generation using `git cliff`. The goal is to automate release notes and streamline the release process. ([#16097](https://github.com/ethereum-optimism/optimism/issues/16097))\n*   **op-node Stuck Goroutines**: Users continue to report issues with `op-node` (v1.13.3) getting stuck with thousands of goroutines, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync problems. This indicates an ongoing stability concern for the `op-node`. ([#16332](https://github.com/ethereum-optimism/optimism/issues/16332))\n*   **op-supervisor Event Overflow**: The issue of the `op-supervisor` crashing due to event overflow when the unsafe head gap is too large is being actively investigated. There's a debate on whether `ChainIndexingContinueEvent` or `\"cross-unsafe-update\"` events are the primary culprits. A PR has been proposed to add a counter per event type to aid in debugging future occurrences. ([#16335](https://github.com/ethereum-optimism/optimism/issues/16335))\n*   **Persistent Devnets Acceptance Tests**: Progress was noted on getting all acceptance tests running and passing in persistent devnets, with a recent addition of L1 Faucet support. This indicates ongoing efforts to improve the testing infrastructure. ([#398](https://github.com/ethereum-optimism/optimism/issues/398))\n*   **Supersim vs. Interop Kurtosis Devnet**: The discussion clarified the difference between `supersim` and `interop kurtosis devnet`. `supersim` is described as a lighter-weight wrapper around Anvil for local development and testing of multichain/interop applications, while Kurtosis is used for the underlying OP Stack chain testing. ([#399](https://github.com/ethereum-optimism/optimism/issues/399))", "2025-09-04T03:26:22.780Z"]
["ethereum-optimism/superchain-ops_day_2025-06-18", "ethereum-optimism/superchain-ops", "day", "2025-06-18", "# ethereum-optimism/superchain-ops Daily Update (Jun 18, 2025)\n## OVERVIEW \nThe day's activity primarily involved the creation of a new issue concerning the enablement of flashblocks on op-sepolia, indicating future development planning.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments, features, bug fixes, code refactoring, documentation enhancements, or tests were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Flashblocks Deployment Planning\nA new issue, [#16496](https://github.com/ethereum-optimism/superchain-ops/issues/16496), was opened to discuss enabling flashblocks non-publicly on op-sepolia. The plan is to deploy flashblocks in `dry_run` mode on op-sepolia after gaining confidence from their enablement in eris-0. This issue is currently blocked by [#16468](https://github.com/ethereum-optimism/superchain-ops/issues/16468). The issue was later closed on July 21, 2025, in favor of creating a milestone.", "2025-09-04T03:26:24.046Z"]
["ethereum-optimism/optimism_day_2025-06-18", "ethereum-optimism/optimism", "day", "2025-06-18", "# ethereum-optimism/optimism Daily Update (Jun 18, 2025)\n## OVERVIEW \nThe day saw new pull requests opened focusing on `op-node` and `op-supervisor` improvements, including trace event handling, derivation origin updates, and testing. A new issue was opened regarding the non-public enablement of flashblocks on op-sepolia.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this date.\n\n## NEWLY OPENED PULL REQUESTS\nFour new pull requests were opened today:\n*   [#16493](https://github.com/ethereum-optimism/optimism/pull/16493) `op-node: check for cfg.Tracer before emitting trace events` aims to improve trace event handling within the `op-node`.\n*   [#16501](https://github.com/ethereum-optimism/optimism/pull/16501) `op-supervisor,op-node: resolve duplicate DerivationOriginUpdate in indexed node events` addresses a potential duplication issue in indexed node events across both `op-supervisor` and `op-node`.\n*   [#16507](https://github.com/ethereum-optimism/optimism/pull/16507) `op-supervisor: TestEntryTypeFlagString` introduces a new test for the `op-supervisor`.\n*   [#16513](https://github.com/ethereum-optimism/optimism/pull/16513) `chore(deps): bump urllib3 from 1.26.19 to 2.5.0 in /ops/check-changed` updates a dependency in the `ops` directory.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nA new issue was opened today:\n*   **Flashblocks Enablement on op-sepolia**\n    *   [#16496](https://github.com/ethereum-optimism/optimism/issues/16496) proposes enabling flashblocks non-publicly on op-sepolia after gaining confidence from their enablement in eris-0. The initial step would involve deploying flashblocks in `dry_run` mode for testing. This issue was later closed on 2025-07-21 in favor of a milestone creation and is currently blocked by [#16468](https://github.com/ethereum-optimism/optimism/issues/16468).\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this date.", "2025-09-04T03:26:24.263Z"]
["ethereum-optimism/superchain-ops_day_2025-06-17", "ethereum-optimism/superchain-ops", "day", "2025-06-17", "# ethereum-optimism/superchain-ops Daily Update (Jun 17, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions within active issues, particularly around `op-node` stability, `op-supervisor` event handling, and release pipeline improvements. There were no new code commits, pull requests, or closed issues.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### `op-node` Stability and Goroutine Issues\nDiscussions continued on [#16332](https://github.com/ethereum-optimism/superchain-ops/issues/16332) regarding `op-node` v1.13.3 experiencing thousands of stuck goroutines, primarily in `p2p.SyncClient` and `libp2p` after several hours of uptime, leading to sync failures. A user reported experiencing the same issue on v1.13.3.\n\n### `op-supervisor` Event Overflow\nComments on [#16335](https://github.com/ethereum-optimism/superchain-ops/issues/16335) focused on the `op-supervisor` crashing due to event overflow when the unsafe head gap is too large. Discussions revolved around identifying the culprit event type, with `ChainIndexingContinueEvent` initially suspected but later clarified as unlikely to stack up. A PR ([#16473](https://github.com/ethereum-optimism/optimism/pull/16473)) was added to introduce a gauge for in-flight events to aid future debugging, and another ([#16471](https://github.com/ethereum-optimism/optimism/pull/16471)) to add a counter per event type.\n\n### Release Pipeline Automation\nIssue [#16097](https://github.com/ethereum-optimism/superchain-ops/issues/16097) saw further discussion on using GoReleaser for `op-node`/`batcher`/`proposer`/`challenger` release pipelines. A lighter-weight solution for changelog generation using `git-cliff` was documented, with a focus on automating release notes. The broader goal is a one-click solution for consistent, high-quality changelogs.\n\n### Interop Configuration Validation\nDiscussion on [#15765](https://github.com/ethereum-optimism/superchain-ops/issues/15765) centered on the difficulty of validating `CrossL2Inbox` configuration in the EL prestate from the execution client's perspective. It was argued that the genesis generation tooling (`op-deployer`) already handles this correctly, making client-side validation less critical and potentially overly complex.\n\n### Devnet Testing and L1 Faucet Support\nOn [#398](https://github.com/ethereum-optimism/superchain-ops/issues/398), progress was noted on getting acceptance tests running in persistent devnets. A PR ([#16423](https://github.com/ethereum-optimism/optimism/pull/16423)) was added to support L1 Faucet functionality.\n\n### Super DA Error Codes\nIssue [#725](https://github.com/ethereum-optimism/superchain-ops/issues/725) was opened to address missing error codes for data availability errors caused by reorgs in the Go implementation, which are currently absent from the spec.\n\n### Supersim vs. Interop Kurtosis Devnet\nDiscussion on [#399](https://github.com/ethereum-optimism/superchain-ops/issues/399) clarified that Supersim is a lighter-weight local development tool built around Anvil, primarily for testing multichain/interop applications and upcoming features, while Kurtosis is used for chain testing within the OP Stack.", "2025-09-04T03:26:24.319Z"]
["ethereum-optimism/superchain-registry_day_2025-06-18", "ethereum-optimism/superchain-registry", "day", "2025-06-18", "# ethereum-optimism/superchain-registry Daily Update (Jun 18, 2025)\n## OVERVIEW \nThe day's activity focused on a new pull request to remove Celo from the chain list and the creation of a new issue concerning the enablement of flashblocks on op-sepolia, which is currently blocked.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1078](https://github.com/ethereum-optimism/superchain-registry/pull/1078), was opened to remove `Celo` from the `chainList`.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\n### Flashblocks Enablement\nA new issue, [#16496](https://github.com/ethereum-optimism/superchain-registry/issues/16496), was created to enable flashblocks non-publicly on op-sepolia. This task is contingent on gaining confidence from flashblocks enablement in eris-0, with the next step being deployment in dry_run mode on op-sepolia for testing.\n\n## ACTIVE ISSUES\n### Flashblocks Deployment on op-sepolia\nIssue [#16496](https://github.com/ethereum-optimism/superchain-registry/issues/16496), \"enable flashblocks non-publicly on op-sepolia,\" was created today. The latest comment from yashvardhan-kukreja indicates that this issue is \"Blocked on #16468.\"", "2025-09-04T03:26:24.563Z"]
["ethereum-optimism/specs_day_2025-06-18", "ethereum-optimism/specs", "day", "2025-06-18", "# ethereum-optimism/specs Daily Update (Jun 18, 2025)\n## OVERVIEW \nToday's activity primarily focused on issue tracking, with a new issue opened regarding the `chainId` in `ExecutingDescriptor` and an existing issue on enabling flashblocks on op-sepolia seeing discussion.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Interoperability Specification Updates\nA new issue was opened to address a missing `chainId` field in the `ExecutingDescriptor` within the interoperability specifications, aligning it with the go-supervisor implementation. This is tracked in [#731](https://github.com/ethereum-optimism/specs/issues/731).\n\n## ACTIVE ISSUES\n### Flashblocks Deployment on Op-Sepolia\nDiscussion continued on the issue of enabling flashblocks non-publicly on op-sepolia, tracked in [#16496](https://github.com/ethereum-optimism/specs/issues/16496). The latest comment indicates that this issue is currently blocked on [#16468](https://github.com/ethereum-optimism/specs/issues/16468). The long-term goal is to deploy flashblocks with a `dry_run` mode on op-sepolia and conduct thorough testing.", "2025-09-04T03:26:24.651Z"]
["ethereum-optimism/Retro-Funding_day_2025-06-19", "ethereum-optimism/Retro-Funding", "day", "2025-06-19", "# ethereum-optimism/Retro-Funding Daily Update (Jun 19, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions within existing issues, particularly concerning event handling in `op-supervisor` and clarifying the purpose of `supersim` for local development. No new code changes or pull requests were observed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were observed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### op-supervisor Event Overflow Investigation\nDiscussion continued on [#16335](https://github.com/ethereum-optimism/Retro-Funding/issues/16335) regarding an `op-supervisor` event overflow issue. The latest comment from `nonsense` on June 19, 2025, indicates a pull request ([#16473](https://github.com/ethereum-optimism/optimism/pull/16473)) has been added to introduce a gauge for in-flight events within `GlobalSyncExec`. This aims to identify which event type is causing the overflow and potentially set up alerts for high thresholds. Previous discussions debated whether `ChainIndexingContinueEvent` or \"cross-unsafe-update\" events were the primary culprits.\n\n### Clarifying supersim vs. interop kurtosis devnet\nOn [#399](https://github.com/ethereum-optimism/Retro-Funding/issues/399), the discussion revolved around the differences between `supersim` and `interop kurtosis devnet` for local development. The latest comment from `zhiqiangxu` on June 19, 2025, sought clarification on `supersim`'s main use case, following a previous explanation that `supersim` is a lighter wrapper around `anvil` for testing multichain/interop applications.", "2025-09-04T03:26:26.282Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-19", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-19", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 19, 2025)\n## OVERVIEW \nThe day's activity included the addition of BiLira (TRYB) support and ongoing discussions regarding the `op-supervisor` event overflow issue and the differences between `supersim` and `interop kurtosis devnet` for local development.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n- **BiLira (TRYB) Integration**: A new pull request, [#1165](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1165), was opened to add support for BiLira (TRYB).\n\n## CLOSED ISSUES\n\nNo closed issues to report for this period.\n\n## NEW ISSUES\n\nNo new issues to report for this period.\n\n## ACTIVE ISSUES\n\n**`op-supervisor` Event Overflow Investigation**\nDiscussions continued on [#16335](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16335) regarding the `op-supervisor`'s potential to enter a crash-loop due to event overflow. The latest comment from `nonsense` (Jun 19, 2025) indicates a new PR has been created to add a gauge for all in-flight events within the `GlobalSyncExec`. This aims to identify which specific event type causes issues and potentially set up alerts if a threshold is crossed. Previous discussions debated whether `ChainIndexingContinueEvent` or `\"cross-unsafe-update\"` events were the primary culprits, with `axelKingsley` clarifying that `ChainIndexingContinueEvent` should not stack up.\n\n**Clarifying Local Development Environments**\nThe discussion on [#399](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/399) continued to explore the differences between `supersim` and `interop kurtosis devnet` for local development. The latest comment from `zhiqiangxu` (Jun 19, 2025) sought clarification on `supersim`'s primary use case, specifically asking if it's mainly for testing dapps rather than chains. This follows earlier explanations that `supersim` is a lighter wrapper around Anvil for multichain/interop application testing.", "2025-09-04T03:26:27.016Z"]
["ethereum-optimism/ecosystem_day_2025-06-20", "ethereum-optimism/ecosystem", "day", "2025-06-20", "# ethereum-optimism/ecosystem Daily Update (Jun 20, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions around release automation and interop mode for `op-node`. Key conversations revolved around streamlining release note generation and the necessity of a supervisor for trivial interop cases.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n### Release Pipeline Automation Discussions\nDiscussions on [#16097](https://github.com/ethereum-optimism/ecosystem/issues/16097) continued regarding the use of GoReleaser for `op-node`/`batcher`/`proposer`/`challenger` release pipelines. The latest comment from geoknee on June 26th suggests integrating automated release note generation into `op-workbench` for a \"one-click solution.\" Earlier comments from June 20th by geoknee emphasized committing the changelog generation solution to the codebase for consistency. Protolambda's earlier comments (May 23rd) highlighted the need to unify build systems and avoid adding more disparate methods, advocating for a \"monorepo-first perspective\" for GoReleaser implementation.\n\n### Trivial Interop Mode for op-node\nIssue [#16519](https://github.com/ethereum-optimism/ecosystem/issues/16519) discusses enabling a \"trivial-interop mode\" for `op-node` without a supervisor. The latest comment from sebastianst on June 23rd clarifies that chains can run a supervisor weeks before a depset merge, and this change aims to prevent churn for chain operators with trivial depsets in the coming months. Inphi's comment from June 20th questioned the rationale, expressing concern that not running a supervisor might complicate future upgrades to an existing interop cluster.", "2025-09-04T03:26:27.181Z"]
["ethereum-optimism/infra_day_2025-06-19", "ethereum-optimism/infra", "day", "2025-06-19", "# ethereum-optimism/infra Daily Update (Jun 19, 2025)\n## OVERVIEW \nThe day's activity primarily involved a new dependency bump for `urllib3` in `op-conductor-ops`. Discussions continued on an `op-supervisor` event overflow issue and the differences between `supersim` and `interop kurtosis devnet`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Dependency Updates\nA new pull request was opened to update the `urllib3` dependency from version 2.2.2 to 2.5.0 within the `/op-conductor-ops` directory. This is a routine maintenance task to ensure components use up-to-date libraries. [#410](https://github.com/ethereum-optimism/infra/pull/410)\n\n## NEWLY OPENED PULL REQUESTS\n- **Dependency Update for `op-conductor-ops`**: A new pull request, [#410](https://github.com/ethereum-optimism/infra/pull/410), was opened to bump the `urllib3` dependency from 2.2.2 to 2.5.0 in the `/op-conductor-ops` directory.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\n### op-supervisor: Event overflow on large unsafe head gap [#16335](https://github.com/ethereum-optimism/infra/issues/16335)\nDiscussion continued regarding the `op-supervisor`'s potential to crash-loop due to an event overflow when the unsafe head gap grows too large. The latest comment from \"nonsense\" on June 19, 2025, indicates a pull request has been added to include a gauge for all in-flight events within the `GlobalSyncExec`. This aims to identify which specific event type might be causing issues if the overflow recurs. The comment also suggests setting up an alert for the total in-flight events if a certain threshold is crossed. Previous discussions debated whether `ChainIndexingContinueEvent` or `\"cross-unsafe-update\"` events were the primary culprits, with \"nonsense\" suggesting that adding a counter per event type would provide more valuable debugging data.\n\n### What's the difference between supersim and interop kurtosis devnet? [#399](https://github.com/ethereum-optimism/infra/issues/399)\nThe discussion on the differences between `supersim` and `interop kurtosis devnet` continued. On June 19, 2025, \"zhiqiangxu\" inquired about the primary use case for `supersim`, following up on a previous comment that described `supersim` as a lighter wrapper around `anvil` for local development. The issue seeks clarification on the distinct purposes of these two local devnet environments.", "2025-09-04T03:26:27.482Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-21", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-21", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 21, 2025)\n## OVERVIEW \nThe day's development activity was minimal, with no completed work in features, bug fixes, code refactoring, documentation, or tests. One new pull request was opened, focusing on adding content related to \"CO on Base.\"\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1166](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1166), was opened to add content related to \"CO on Base.\"\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-09-04T03:26:28.557Z"]
["ethereum-optimism/docs_day_2025-06-22", "ethereum-optimism/docs", "day", "2025-06-22", "# ethereum-optimism/docs Daily Update (Jun 22, 2025)\n## OVERVIEW \nNo new activity was recorded for the ethereum-optimism/docs repository on June 22, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments.", "2025-09-04T03:26:28.634Z"]
["ethereum-optimism/optimism_day_2025-06-20", "ethereum-optimism/optimism", "day", "2025-06-20", "# ethereum-optimism/optimism Daily Update (Jun 20, 2025)\n## OVERVIEW \nThe day saw the opening of two new pull requests focusing on `op-supervisor` consistency testing and `devnet-sdk` validation. Several new issues were opened concerning `op-node` interop logic and reset improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this day.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n- A fix to add read handle consistency testing for `op-supervisor` ([#16518](https://github.com/ethereum-optimism/optimism/pull/16518)).\n- A feature to add chain descriptor validation to the `devnet-sdk` ([#16523](https://github.com/ethereum-optimism/optimism/pull/16523)).\n\n## CLOSED ISSUES\n\nNo issues were closed on this day.\n\n## NEW ISSUES\n\n### Interop Mode for `op-node`\nSeveral new issues were opened to discuss and implement different modes for `op-node` to handle interop logic, particularly for trivial interop cases without requiring a supervisor:\n- An issue to allow `op-node` to work in a trivial-interop mode without a supervisor ([#16519](https://github.com/ethereum-optimism/optimism/issues/16519)).\n- An issue to add a mode for `op-node` to use pre-Interop logic in the trivial-Interop case ([#16520](https://github.com/ethereum-optimism/optimism/issues/16520)).\n- An issue to add a shim to `op-node` to provide Interop proofs RPCs for the trivial-Interop case ([#16521](https://github.com/ethereum-optimism/optimism/issues/16521)).\n\n### Improved Reset Logic\nA new issue was created to improve the reset logic for `op-node` and `op-supervisor`, consolidating related existing issues ([#16524](https://github.com/ethereum-optimism/optimism/issues/16524)).\n\n## ACTIVE ISSUES\n\n### GoReleaser for Release Pipeline\nDiscussion continued on using GoReleaser for the `op-node`/`batcher`/`proposer`/`challenger` release pipeline ([#16097](https://github.com/ethereum-optimism/optimism/issues/16097)). The latest comments focus on improving changelog generation. @geoknee suggested wiring up `op-workbench` to automatically execute `git cliff` commands for release notes and potentially push them to GitHub. They also provided a lighter-weight solution for changelog generation using `git cliff`. Earlier discussions highlighted the need to consolidate build systems and avoid adding more ways to build services without removing existing ones, emphasizing a monorepo-first approach for GoReleaser.", "2025-09-04T03:26:29.433Z"]
["ethereum-optimism/supersim_day_2025-06-20", "ethereum-optimism/supersim", "day", "2025-06-20", "# ethereum-optimism/supersim Daily Update (Jun 20, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, or code refactoring. Discussions continued on automating release pipelines and the op-node's trivial-interop mode.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Release Pipeline Automation and Changelog Generation\nDiscussions continued on automating the release pipeline for `op-node`, `batcher`, `proposer`, and `challenger` using GoReleaser [#16097](https://github.com/ethereum-optimism/supersim/issues/16097). The latest comments from `geoknee` on June 20th and 26th emphasize the desire for a one-click solution for high-quality, accurate, and consistent changelogs, potentially integrated into `op-workbench`. A lighter-weight solution for changelog generation using `git cliff` was also documented. Earlier comments from `protolambda` highlighted concerns about adding another build system (GoReleaser) without first consolidating existing, fragmented build processes (docker bake, makefiles, justfiles) to avoid further bloat and inconsistency.\n\n### Trivial-Interop Mode for op-node\nDiscussion on the `op-node`'s ability to operate in a trivial-interop mode without a supervisor continued [#16519](https://github.com/ethereum-optimism/supersim/issues/16519). `Inphi` questioned the necessity of this, suggesting it might complicate future merges into an existing interop cluster if chains aren't already supervisor-driven. `sebastianst` clarified that the primary goal is to prevent churn for chain operators by not requiring a supervisor for trivial depsets in the coming months, acknowledging that a better overall `op-supervisor` + `op-node` implementation will be needed by the time interop merging is fully implemented.", "2025-09-04T03:26:29.915Z"]
["ethereum-optimism/optimism_day_2025-06-22", "ethereum-optimism/optimism", "day", "2025-06-22", "# ethereum-optimism/optimism Daily Update (Jun 22, 2025)\n## OVERVIEW \nThe day saw the opening of two new pull requests, one focusing on optimizing acceptance test performance and another with a generic title. No other development activities were recorded.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this date.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n*   [#16533](https://github.com/ethereum-optimism/optimism/pull/16533) `feat(op-acceptance-tests): optimize burst test performance with configurable EOAs` aims to improve the performance of acceptance tests by allowing configurable External Owned Accounts (EOAs) for burst testing.\n*   [#16534](https://github.com/ethereum-optimism/optimism/pull/16534) `we need this` is a new pull request with a generic title, indicating a pending contribution.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this date.", "2025-09-04T03:26:30.233Z"]
["ethereum-optimism/superchain-ops_day_2025-06-20", "ethereum-optimism/superchain-ops", "day", "2025-06-20", "# ethereum-optimism/superchain-ops Daily Update (Jun 20, 2025)\n## OVERVIEW \nThe day's activity focused on preparing for the U16 mainnet tasks, including enabling and removing DPM, and upgrading OPCM for various chains. Discussions continued on automating release notes and the trivial interop mode for `op-node`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### U16 Mainnet Task Preparation\nSignificant work was done to prepare for the U16 mainnet tasks, involving the creation of new configuration files and documentation for enabling and removing the DPM (Deposit Proxy Manager) and upgrading the OPCM (Optimism Portal Contract Manager) for several chains including op-ink, soneium, uni, and base. This includes `.env`, `README.md`, `VALIDATION.md`, and `config.toml` files for each task. ([#1047](https://github.com/ethereum-optimism/superchain-ops/pull/1047))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Automating Release Pipelines and Release Notes\nDiscussion continued on the issue of using GoReleaser for `op-node`, `batcher`, `proposer`, and `challenger` release pipelines ([#16097](https://github.com/ethereum-optimism/superchain-ops/issues/16097)). The latest comments from `geoknee` (Jun 20, 2025) emphasized the desire for a one-click solution to generate high-quality, consistent changelogs, potentially by integrating `git cliff` into `op-workbench` to automatically generate and push release notes to GitHub. This builds on earlier suggestions for a lighter-weight changelog generation using `git cliff` and a specific template.\n\n### Trivial Interop Mode for op-node\nThe discussion around enabling a trivial interop mode for `op-node` without a supervisor ([#16519](https://github.com/ethereum-optimism/superchain-ops/issues/16519)) saw a new comment from `Inphi` (Jun 20, 2025) questioning the rationale, specifically if it complicates the upgrade path for chains merging into an existing interop cluster. This highlights a concern about potential future complexities if chains are not already supervisor-driven.", "2025-09-04T03:26:30.262Z"]
["ethereum-optimism/community-hub_day_2025-06-22", "ethereum-optimism/community-hub", "day", "2025-06-22", "# ethereum-optimism/community-hub Daily Update (Jun 22, 2025)\n## OVERVIEW \nThe day's activity for the `community-hub` repository was minimal, with no new features, bug fixes, code refactoring, documentation enhancements, or tests added. The primary activity involved the creation of a new issue reporting a broken link within the documentation.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments occurred today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Documentation Link Issues\nA new issue was opened reporting a broken link within the community documentation, specifically for the \"custom-gas-tokens\" page. This indicates a need for review and correction of documentation links to ensure accuracy and accessibility for developers. [#1165](https://github.com/ethereum-optimism/community-hub/issues/1165)\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-09-04T03:26:30.271Z"]
["ethereum-optimism/supersim_day_2025-06-22", "ethereum-optimism/supersim", "day", "2025-06-22", "# ethereum-optimism/supersim Daily Update (Jun 22, 2025)\n## OVERVIEW \nOn June 22, 2025, development activity for `ethereum-optimism/supersim` was minimal, with no new features, bug fixes, or code refactoring. The primary activity involved the creation of a new feature request issue related to deterministic gas testing.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this date.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\n### Gas Testing Determinism\nA new feature request, [#408](https://github.com/ethereum-optimism/supersim/issues/408), was opened to enable deterministic gas testing by setting a fixed base fee. This aims to address difficulties in creating predictable tests for cross-chain contracts involving gas cost estimation due to fluctuating base fees.\n\n## ACTIVE ISSUES\n### Deterministic Gas Testing\nDiscussion on [#408](https://github.com/ethereum-optimism/supersim/issues/408) revolved around the effectiveness of the `--base-fee` flag in Anvil for achieving deterministic base fees. `tremarkley` questioned if setting the flag would ensure a constant `block.basefee` across blocks, noting that vanilla Anvil's base fee still fluctuates after the initial block. `hexshire` clarified a misunderstanding of the `--base-fee` functionality, suggesting adapting tests to query the `baseFee` instead and considering closing the issue. `tremarkley` then closed the issue, inviting reopening if the flag proves useful.", "2025-09-04T03:26:31.740Z"]
["ethereum-optimism/infra_day_2025-06-23", "ethereum-optimism/infra", "day", "2025-06-23", "# ethereum-optimism/infra Daily Update (Jun 23, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions for existing issues, particularly around optimizing `op-batcher` memory consumption and refining `op-node` interop modes. No new features, bug fixes, or code refactoring were completed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo newly opened pull requests to report for this period.\n\n## CLOSED ISSUES\nNo closed issues to report for this period.\n\n## NEW ISSUES\n\n### Batcher Memory Optimization\nA new spike issue, [#16537](https://github.com/ethereum-optimism/infra/issues/16537), was opened to investigate and optimize the `op-batcher`'s memory consumption, especially during periods of L1 congestion. The issue notes that there is likely significant data duplication and copying in the current implementation.\n\n## ACTIVE ISSUES\n\n### `op-batcher` Memory Optimization Spike\nDiscussion on [#16537](https://github.com/ethereum-optimism/infra/issues/16537) began with a suggestion to run a memory profiler. Subsequent comments detailed a recipe for using `pprof` to identify memory usage, indicating that the compressor is a major contributor to memory consumption when a backlog of channels occurs. Potential optimizations include making the shadow compressor use less memory and more eagerly discarding the compressor after channel submission.\n\n### `op-node` Trivial-Interop Mode\nDiscussion on [#16519](https://github.com/ethereum-optimism/infra/issues/16519) continued regarding the `op-node` working without a supervisor in trivial interop cases. A comment clarified that the goal is to prevent churn for chain operations by not requiring a supervisor for trivial depsets, especially in the coming months, with the expectation of a better `op-supervisor` and `op-node` implementation by the time interop merging is fully implemented.\n\n### Redundant Assertions Removal\nDiscussion on [#16362](https://github.com/ethereum-optimism/infra/issues/16362) outlined a two-phase approach to remove redundant assertions. The plan involves first removing checks from `Deploy*.s.sol` scripts that are already present in `ChainAssertions.sol`, and then moving the checks from `ChainAssertions.sol` into the `StandardValidator`. If codesize limits are exceeded, a child contract will be used to house some checks.", "2025-09-04T03:26:33.214Z"]
["ethereum-optimism/ecosystem_day_2025-06-23", "ethereum-optimism/ecosystem", "day", "2025-06-23", "# ethereum-optimism/ecosystem Daily Update (Jun 23, 2025)\n## OVERVIEW \nThe day saw significant progress in developer tooling with the `@eth-optimism/viem` package, specifically enhancing documentation generation for non-interop actions. Several new issues were opened, focusing on Superchain tools and interop demo applications, while a key documentation-related issue was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Viem Documentation Generation\nDocumentation generation for the `@eth-optimism/viem` package has been significantly improved. The `pnpm run docs` command now correctly auto-generates documentation for non-interop actions, ensuring comprehensive coverage of all functions and type aliases within the package. This addresses a long-standing issue and streamlines the developer experience for users of the Viem library. ([#859](https://github.com/ethereum-optimism/ecosystem/pull/859))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Viem Documentation Improvement\nThe issue concerning the lack of auto-generated documentation for standard actions within the `@eth-optimism/viem` package has been successfully resolved. Running `pnpm run docs` now correctly generates documentation for non-interop actions, improving the usability and completeness of the Viem library's documentation. ([#731](https://github.com/ethereum-optimism/ecosystem/issues/731))\n\n## NEW ISSUES\n\n### Superchain Tools and Interop Demos\nTwo new issues were opened today, both related to enhancing the Superchain ecosystem. One issue proposes a \"Superchain tools RCT Demo\" ([#864](https://github.com/ethereum-optimism/ecosystem/issues/864)), while the other suggests integrating the \"interop-alpha demo app as a page into superchain playground\" ([#865](https://github.com/ethereum-optimism/ecosystem/issues/865)). These issues aim to improve the demonstration and accessibility of Superchain capabilities.\n\n## ACTIVE ISSUES\n\n### op-batcher Memory Optimization\nDiscussions on optimizing memory consumption in the `op-batcher` ([#16537](https://github.com/ethereum-optimism/ecosystem/issues/16537)) continued, with `geoknee` providing a detailed analysis using `pprof`. The analysis suggests that the compressor is the primary source of memory usage, especially during backlogs. `geoknee` proposed two optimizations: making the shadow compressor use half the memory by not using two compressors internally (with an incoming PR) and more eagerly discarding the compressor after channel submission. `sebastianst` suggested running a memory profiler to further investigate.\n\n### op-node: Trivial-interop mode without supervisor\nThe discussion around running `op-node` in a trivial interop case without a supervisor ([#16519](https://github.com/ethereum-optimism/ecosystem/issues/16519)) saw `sebastianst` clarify that the goal is to prevent churn for chain operators who only have a trivial dep set, avoiding the requirement to run a supervisor in the coming months. This is seen as a temporary measure until a better `op-supervisor` and `op-node` implementation is available for interop merging. `Inphi` had previously questioned the necessity of this, fearing it might complicate future upgrades.\n\n### Remove redundant assertions outside of the StandardValidator\nThe issue of removing redundant assertions in the contracts package ([#16362](https://github.com/ethereum-optimism/ecosystem/issues/16362)) saw `AmadiMichael` outline a two-phase approach. First, remove checks already present in `ChainAssertions.sol` from other `Deploy*.s.sol` scripts. Second, move the checks from `ChainAssertions.sol` to the `StandardValidator`. If codesize limits are exceeded, some checks will be moved to a child contract deployed by the validator.", "2025-09-04T03:26:34.174Z"]
["ethereum-optimism/specs_day_2025-06-23", "ethereum-optimism/specs", "day", "2025-06-23", "# ethereum-optimism/specs Daily Update (Jun 23, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions for existing issues, particularly around optimizing `op-batcher` memory consumption, refining `op-node` interop modes, and streamlining contract assertions.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n### Batcher Memory Optimization\nA new issue, [#16537](https://github.com/ethereum-optimism/specs/issues/16537), was opened to spike memory consumption optimization in the `op-batcher`, particularly during L1 congestion.\n\n## ACTIVE ISSUES\n### Contract Assertion Refinement\nDiscussion continued on [#16362](https://github.com/ethereum-optimism/specs/issues/16362) regarding the removal of redundant assertions outside the `StandardValidator`. AmadiMichael outlined a two-phase plan: first, removing existing `ChainAssertions.sol` checks from `Deploy*.s.sol` scripts, and second, moving `ChainAssertions.sol` checks to the `StandardValidator`, potentially using a child contract if codesize limits are exceeded.\n\n### Op-Node Trivial Interop Mode\nDiscussion on [#16519](https://github.com/ethereum-optimism/specs/issues/16519) centered on maintaining `op-node` functionality without a supervisor in trivial interop cases (single dependency set). Sebastianst clarified that this is to prevent churn for chain operations that only have a trivial dependency set, suggesting that a better `op-supervisor` + `op-node` implementation should be in place by the time interop merging is fully implemented.\n\n### Op-Batcher Memory Optimization Spike\nThe newly opened issue [#16537](https://github.com/ethereum-optimism/specs/issues/16537) saw initial comments. Sebastianst suggested running a memory profiler. Geoknee provided a detailed recipe for using `pprof` to identify memory usage, concluding that the compressor is the primary source of memory consumption when the batcher's channel backlog grows. Geoknee also proposed two optimizations: making the shadow compressor use half the memory and more eagerly discarding the compressor after channel submission.", "2025-09-04T03:26:34.593Z"]
["ethereum-optimism/op-geth_day_2025-06-23", "ethereum-optimism/op-geth", "day", "2025-06-23", "# ethereum-optimism/op-geth Daily Update (Jun 23, 2025)\n## OVERVIEW \nToday's development focused on opening new pull requests to refine L1 data availability cost functions and remove Optimism-specific priority fee calculations. Discussions continued on optimizing op-batcher memory consumption and the trivial-interop mode for op-node.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### L1 Data Availability Cost Function Refinements\nNew pull requests were opened to address and refine the L1 Data Availability (DA) cost functions. This includes a general fix for the L1 DA cost function and an update specifically for calldata costs. These changes aim to improve the accuracy and efficiency of cost calculations within the system.\n- [#630](https://github.com/ethereum-optimism/op-geth/pull/630)\n- [#631](https://github.com/ethereum-optimism/op-geth/pull/631)\n\n### Priority Fee Calculation Simplification\nA new pull request was initiated to remove Optimism-specific priority fee estimate calculations. This change likely aims to streamline the fee estimation process and potentially align it more closely with standard Ethereum practices or broader Superchain interoperability goals.\n- [#632](https://github.com/ethereum-optimism/op-geth/pull/632)\n\n## NEWLY OPENED PULL REQUESTS\nThree new pull requests were opened today:\n- [#630](https://github.com/ethereum-optimism/op-geth/pull/630) \"Fix L1 DA cost function\" aims to correct issues with how L1 data availability costs are calculated.\n- [#631](https://github.com/ethereum-optimism/op-geth/pull/631) \"Kaley.chicoine/update calldata cost\" focuses on updating the specific cost associated with calldata.\n- [#632](https://github.com/ethereum-optimism/op-geth/pull/632) \"Remove Optimism-specific priority fee estimate calculations\" proposes to eliminate custom priority fee estimations.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Optimizing op-batcher Memory Consumption\nDiscussion on [#16537](https://github.com/ethereum-optimism/op-geth/issues/16537) (spike(op-batcher): optimize memory consumption) continued with `geoknee` providing a detailed analysis using `pprof`. The analysis suggests that the compressor is the primary source of memory usage when a backlog of channels occurs in the batcher. `geoknee` outlined a recipe for reproducing the issue and proposed two optimizations: making the shadow compressor use half the memory and more eagerly discarding the compressor after channel submission. `sebastianst` suggested running a memory profiler.\n\n### Trivial-Interop Mode for op-node\nOn [#16519](https://github.com/ethereum-optimism/op-geth/issues/16519) (op-node: Trivial-interop mode without supervisor), `sebastianst` clarified that the goal is to prevent churn for chain operators by not requiring a supervisor for trivial depsets (size 1) in the coming months. This is a temporary measure until a better overall `op-supervisor` + `op-node` implementation is developed. This addresses `Inphi`'s earlier concern about the upgrade path for merging these chains.\n\n### Removing Redundant Assertions\nDiscussion on [#16362](https://github.com/ethereum-optimism/op-geth/issues/16362) (Remove redundant assertions outside of the StandardValidator) saw `AmadiMichael` outlining a plan to remove redundant checks. The plan involves a two-set PR approach: first, removing checks from `Deploy*.s.sol` scripts that already exist in `ChainAssertions.sol`, and second, moving checks from `ChainAssertions.sol` to the `StandardValidator`. If the `StandardValidator` exceeds codesize limits, some checks will be moved to a child contract.", "2025-09-04T03:26:35.081Z"]
["ethereum-optimism/superchain-ops_day_2025-06-23", "ethereum-optimism/superchain-ops", "day", "2025-06-23", "# ethereum-optimism/superchain-ops Daily Update (Jun 23, 2025)\n\n## OVERVIEW \nThe day's development focused on enhancing wallet support with Trezor integration, optimizing CI/CD pipelines by removing completed tasks and increasing timeout limits for long-running jobs, and initiating a spike to optimize memory consumption in the op-batcher.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Wallet Support and Interface Improvements\nA new feature was added to support Trezor wallets, which involved a breaking change to the interface by replacing a boolean `ledger` argument with a string `wallet` argument. This enhancement aims to broaden the range of supported hardware wallets.\n- [#1089](https://github.com/ethereum-optimism/superchain-ops/pull/1089)\n\n### CI/CD Pipeline Optimization\nImprovements were made to the CI/CD pipeline by removing simulations for Mode and Metal, as these tasks have already been executed. Additionally, a fix was implemented to address timeouts in CircleCI by increasing the timeout duration for long-running jobs that do not produce terminal output.\n- [#1098](https://github.com/ethereum-optimism/superchain-ops/pull/1098)\n- [#1099](https://github.com/ethereum-optimism/superchain-ops/pull/1099)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Jun 23, 2025.\n\n## CLOSED ISSUES\nNo issues were closed on Jun 23, 2025.\n\n## NEW ISSUES\n### Op-Batcher Memory Optimization\nA new spike was initiated to investigate and optimize the memory consumption of the `op-batcher`, particularly during periods of L1 congestion. The goal is to reduce data duplication and copying within the current implementation.\n- [#16537](https://github.com/ethereum-optimism/superchain-ops/issues/16537)\n\n## ACTIVE ISSUES\n\n### Refactoring Redundant Assertions in Contracts\nDiscussion continues on removing redundant assertions outside of the `StandardValidator` in the contracts package. The plan involves a two-phase approach: first, removing checks duplicated in `ChainAssertions.sol` from `Deploy*.s.sol` scripts, and second, moving checks from `ChainAssertions.sol` to the `StandardValidator`. A potential challenge is the codesize limit, which might necessitate moving some checks to a child contract.\n- [#16362](https://github.com/ethereum-optimism/superchain-ops/issues/16362)\n\n### Op-Node Trivial-Interop Mode Without Supervisor\nThe discussion revolves around enabling the `op-node` to function without a supervisor in a \"trivial\" interop case (a dependency set of size 1). This aims to prevent churn for chain operators who only have a trivial dependency set, avoiding the immediate need to run a supervisor. The long-term goal is to develop a more robust `op-supervisor` and `op-node` implementation.\n- [#16519](https://github.com/ethereum-optimism/superchain-ops/issues/16519)\n\n### Spike: Op-Batcher Memory Optimization\nInitial analysis using `pprof` suggests that the compressor is the primary source of memory usage when the batcher experiences a backlog of channels. Proposed optimizations include making the shadow compressor use less memory by not using two underlying compressors and potentially discarding the compressor more eagerly after a channel is submitted. Detailed steps for reproducing and profiling the memory usage were provided.\n- [#16537](https://github.com/ethereum-optimism/superchain-ops/issues/16537)", "2025-09-04T03:26:36.960Z"]
["ethereum-optimism/optimism_day_2025-06-23", "ethereum-optimism/optimism", "day", "2025-06-23", "# ethereum-optimism/optimism Daily Update (Jun 23, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure with new flashblocks and withdrawal tests, alongside significant internal refactoring for supervisor and node modes. Improvements were also made to `op-service` utilities and `op-supervisor` database handling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing and Acceptance Framework\nNew acceptance tests were introduced to validate flashblocks transfer functionality ([#16515](https://github.com/ethereum-optimism/optimism/pull/16515)) and withdrawals with super roots ([#16491](https://github.com/ethereum-optimism/optimism/pull/16491)). Debug prints were removed from acceptance tests to streamline output ([#16535](https://github.com/ethereum-optimism/optimism/pull/16535)), and an adversarial load test was added for interop scenarios ([#16433](https://github.com/ethereum-optimism/optimism/pull/16433)).\n\n### Internal System Renaming and Event Handling Improvements\nThe supervisor and op-node modes underwent renaming for clarity and consistency ([#16464](https://github.com/ethereum-optimism/optimism/pull/16464)). A new gauge was added to `op-node/rollup/event` to monitor inflight events by type, aiding in debugging and performance analysis ([#16473](https://github.com/ethereum-optimism/optimism/pull/16473)). Additionally, the context (`ctx`) was separated from event objects in `op-node` and `op-supervisor` to improve modularity ([#16540](https://github.com/ethereum-optimism/optimism/pull/16540)).\n\n### `op-service` and `op-supervisor` Utility Enhancements\nThe `op-faucet` now includes a `faucet_balance` RPC and checks for fund insufficiency on `requestETH` ([#16516](https://github.com/ethereum-optimism/optimism/pull/16516)). `op-supervisor` was updated to use a compare-and-swap (CAS) pattern for atomic operations ([#16525](https://github.com/ethereum-optimism/optimism/pull/16525)), and `op-service/safemath` gained `SaturatingSub` and `SafeSub` functions for robust arithmetic operations ([#16539](https://github.com/ethereum-optimism/optimism/pull/16539)). Database support in `op-supervisor` was improved for reorging out starting blocks ([#16541](https://github.com/ethereum-optimism/optimism/pull/16541)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Testing and Interoperability Enhancements\nSeveral issues related to testing and interoperability were closed. This includes the completion of acceptance testing for the withdrawal path ([#15958](https://github.com/ethereum-optimism/optimism/issues/15958)), investigation into event logger alternatives for interop load tests ([#16039](https://github.com/ethereum-optimism/optimism/issues/16039)), and the addition of a test to maximize executing messages ([#16434](https://github.com/ethereum-optimism/optimism/issues/16434)).\n\n### System Renaming and Documentation\nThe issue tracking the renaming of supervisor and op-node modes was closed ([#16379](https://github.com/ethereum-optimism/optimism/issues/16379)), indicating the successful completion of this internal refactoring.\n\n### Performance and Memory Optimization\nAn issue focused on spiking memory usage in the batcher during L1 congestion was closed ([#16537](https://github.com/ethereum-optimism/optimism/issues/16537)). This suggests progress in optimizing memory consumption, with discussions highlighting the compressor as a key area for improvement.\n\n## NEW ISSUES\n\n### Flashblocks and Interoperability Development\nNew issues were opened to configure `reth-enabled` flashblocks nodes ([#16544](https://github.com/ethereum-optimism/optimism/issues/16544)) and to spike out a potential `op-node/op-supervisor` v2 ([#16545](https://github.com/ethereum-optimism/optimism/issues/16545)), indicating future development directions for core components.\n\n### Testing and Audit Findings\nAn issue was created to address an RV Audit finding regarding `TestCrossSafeUpdate` testing impossible cases and a lack of clear `invalid` signal during Hazard Set construction ([#16548](https://github.com/ethereum-optimism/optimism/issues/16548)). Another issue notes that in `op-acceptance-tests` load tests, onchain balance sometimes depletes before the offchain budget ([#16536](https://github.com/ethereum-optimism/optimism/issues/16536)).\n\n## ACTIVE ISSUES\n\n### `op-batcher` Memory Optimization\nDiscussion on [#16537](https://github.com/ethereum-optimism/optimism/issues/16537) (spike(op-batcher): optimize memory consumption) continued with `geoknee` providing detailed steps for running `pprof` to identify memory usage, specifically pointing to the compressor as the main culprit. `geoknee` also suggested two optimizations: making the shadow compressor use half the memory and eagerly discarding the compressor after channel submission. `sebastianst` initially suggested using a memory profiler.\n\n### `op-node` Trivial-Interop Mode\nOn [#16519](https://github.com/ethereum-optimism/optimism/issues/16519) (op-node: Trivial-interop mode without supervisor), `sebastianst` clarified that the goal is to prevent churn for chain operators by allowing them to run `op-node` without a supervisor for trivial depsets, even before interop merging is fully implemented. `Inphi` questioned the necessity of this, suggesting that the upgrade path to merging 1-depset chains with an existing interop cluster might be more complicated if they are not already driven by a supervisor.\n\n### Redundant Assertions in StandardValidator\nOn [#16362](https://github.com/ethereum-optimism/optimism/issues/16362) (Remove redundant assertions outside of the StandardValidator), `AmadiMichael` outlined a two-phase plan: first, removing redundant checks from deploy scripts that already exist in `ChainAssertions.sol`, and second, moving checks from `ChainAssertions.sol` to the `StandardValidator`. They also noted the potential for codesize limits and suggested moving some checks to a child contract if exceeded.", "2025-09-04T03:26:37.664Z"]
["ethereum-optimism/supersim_day_2025-06-23", "ethereum-optimism/supersim", "day", "2025-06-23", "# ethereum-optimism/supersim Daily Update (Jun 23, 2025)\n## OVERVIEW \nThe day saw no new code contributions, but significant discussion on active issues, particularly around optimizing `op-batcher` memory consumption and refining `op-node` interop modes. Two new issues were opened, one concerning Uniswap V4 deployment and another addressing chain ID data types.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Core Protocol Enhancements\nA new issue, [#410](https://github.com/ethereum-optimism/supersim/issues/410), was opened to address a technical inconsistency where dependency set chain IDs are currently cast as `uint64` in Supersim, which is not compliant with the `uint256` specification.\n### Ecosystem Integration\nAnother new issue, [#409](https://github.com/ethereum-optimism/supersim/issues/409), was created to include Uniswap V4 deployment within Supersim, indicating a focus on expanding the simulated environment's capabilities.\n\n## ACTIVE ISSUES\n### `op-batcher` Memory Optimization\nDiscussion on [#16537](https://github.com/ethereum-optimism/supersim/issues/16537) (spike(op-batcher): optimize memory consumption) continued with `geoknee` providing a detailed recipe for using `pprof` to identify memory bottlenecks. Initial findings suggest the compressor is the primary source of memory usage when a backlog of channels occurs. `geoknee` proposed two optimizations: making the shadow compressor use half the memory and more eagerly discarding the compressor after channel submission. `sebastianst` suggested exploring the use of a single, shared compressor to further save memory.\n\n### `op-node` Trivial Interop Mode\nOn [#16519](https://github.com/ethereum-optimism/supersim/issues/16519) (op-node: Trivial-interop mode without supervisor), `sebastianst` clarified that allowing trivial interop without a supervisor aims to prevent churn for chain operators who only have a trivial dependency set, especially in the coming months before interop merging is fully implemented. This approach allows them to start running a supervisor weeks before an actual merge, simplifying future transitions.\n\n### Redundant Assertion Removal\nRegarding [#16362](https://github.com/ethereum-optimism/supersim/issues/16362) (Remove redundant assertions outside of the StandardValidator), `AmadiMichael` outlined a two-phase approach for refactoring. The first phase involves removing checks from `Deploy*.s.sol` scripts that are already present in `ChainAssertions.sol`. The second phase will move checks from `ChainAssertions.sol` to the `StandardValidator`, with a plan to use a child contract if codesize limits are exceeded.", "2025-09-04T03:26:37.887Z"]
["ethereum-optimism/docs_day_2025-06-24", "ethereum-optimism/docs", "day", "2025-06-24", "# ethereum-optimism/docs Daily Update (Jun 24, 2025)\n## OVERVIEW \nToday's development focused on documentation improvements, including fixing typos in the `op-deployer` documentation and updating `supersim` reference docs. Several issues were closed, notably those related to CI flakiness and a feature request for deterministic gas testing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Documentation Refinements for Operator Tools**\n    *   Fixed formatting typos in the `op-deployer` documentation, enhancing readability for chain operators ([#1667](https://github.com/ethereum-optimism/docs/pull/1667)).\n\n*   **Supersim Reference Documentation Updates**\n    *   Added missing commands and help text to the `supersim` documentation, specifically for the `fork` and `vanilla` commands, ensuring comprehensive reference material for app developers ([#1669](https://github.com/ethereum-optimism/docs/pull/1669)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **CI Stability and Performance Improvements**\n    *   An issue tracking the investigation and improvement of CI flakiness was closed, with progress noted on a test flake report generator and ongoing monitoring ([#16271](https://github.com/ethereum-optimism/docs/issues/16271)).\n    *   A spike exploring the adoption of internal SLAs for the continuous integration pipeline was closed, with a decision not to implement CI SLAs for now ([#16437](https://github.com/ethereum-optimism/docs/issues/16437)).\n\n*   **Developer Tooling and Testing Enhancements**\n    *   A feature request to enable deterministic gas testing by setting a fixed base fee was closed, with the understanding that adapting tests to query `baseFee` is a more suitable approach ([#408](https://github.com/ethereum-optimism/docs/issues/408)).\n    *   An issue related to porting `TestWithdrawalsRoot` to devstack was closed, as the implementation was completed in a related pull request ([#412](https://github.com/ethereum-optimism/docs/issues/412)).\n\n*   **Bridging Documentation Clarification**\n    *   A suggestion regarding bridging ERC-20 tokens with Viem was closed, as the issue had been addressed by a previous PR providing a complete implementation for token bridging using Viem ([#1508](https://github.com/ethereum-optimism/docs/issues/1508)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **`op-node` Goroutine Stuck Issues** ([#16332](https://github.com/ethereum-optimism/docs/issues/16332))\n    *   Users continue to report `op-node` (v1.13.3) getting stuck with thousands of goroutines after several hours of uptime, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync issues. The problem persists for multiple users on the same version.", "2025-09-04T03:26:38.118Z"]
["ethereum-optimism/op-geth_day_2025-06-24", "ethereum-optimism/op-geth", "day", "2025-06-24", "# ethereum-optimism/op-geth Daily Update (Jun 24, 2025)\n## OVERVIEW \nThe day saw a significant update to the transaction pool with the addition of periodic filtering. Several long-standing issues were closed, including one related to CI flakiness and another concerning documentation for ERC-20 bridging. A new issue was opened to improve transaction pool interop checks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Transaction Pool Enhancements\nA new feature was introduced to the transaction pool, enabling periodic transaction filtering. This enhancement aims to improve the efficiency and management of transactions within the pool. ([#629](https://github.com/ethereum-optimism/op-geth/pull/629))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### CI/CD and Testing Improvements\nAn issue tracking CI flakiness was closed, indicating progress in stabilizing the continuous integration pipeline. Discussions highlighted efforts to improve test reporting and reduce flakiness. ([#16271](https://github.com/ethereum-optimism/op-geth/issues/16271)) Additionally, a spike exploring CI SLAs was closed, with the decision not to implement them for now. ([#16437](https://github.com/ethereum-optimism/op-geth/issues/16437))\n\n### Transaction Pool and Interoperability\nA long-standing issue concerning interval transaction validity checks in the tx-pool was closed, following the implementation of periodic filtering. ([#494](https://github.com/ethereum-optimism/op-geth/issues/494))\n\n### Documentation and Feature Requests\nA documentation suggestion regarding bridging ERC-20 tokens with Viem was closed, as the issue had been addressed by a previous PR. ([#1508](https://github.com/ethereum-optimism/op-geth/issues/1508)) A feature request to enable deterministic gas testing by setting a fixed base fee was also closed, with the understanding that adapting tests to query the base fee would be a better approach. ([#408](https://github.com/ethereum-optimism/op-geth/issues/408))\n\n## NEW ISSUES\n\n### Transaction Pool Optimization\nA new issue was opened to address the efficiency of transaction pool interop checks, proposing batch RPC calls to improve performance. ([#633](https://github.com/ethereum-optimism/op-geth/issues/633))\n\n## ACTIVE ISSUES\n\n### op-node Goroutine Stuck Issues\nThe issue [#16332](https://github.com/ethereum-optimism/op-geth/issues/16332) continues to be active, with recent comments from users reporting similar problems with `op-node` v1.13.3 experiencing thousands of stuck goroutines, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync failures. Users are confirming the persistence of the issue and some have not yet tried v1.13.4.", "2025-09-04T03:26:41.088Z"]
["ethereum-optimism/infra_day_2025-06-24", "ethereum-optimism/infra", "day", "2025-06-24", "# ethereum-optimism/infra Daily Update (Jun 24, 2025)\n## OVERVIEW \nThe day saw significant progress in `op-acceptor` development with the addition of first-class orchestrator support. Several acceptance test porting issues were opened, and an issue related to CI flakiness was closed after improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Orchestrator Support for `op-acceptor`\n- Added support for both `op-devstack` orchestrator modes, enabling `op-acceptor` to run in-memory tests. ([#411](https://github.com/ethereum-optimism/infra/pull/411))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### CI Flakiness Investigation and Improvement\n- The issue tracking CI flakiness was closed, with significant progress made in identifying and improving test stability, including the release of a test flake report generator. ([#16271](https://github.com/ethereum-optimism/infra/issues/16271))\n\n### Documentation Update for ERC-20 Bridging\n- The documentation issue regarding bridging ERC-20 tokens with Viem was closed, as a PR addressing the complete implementation for token bridging using Viem was merged. ([#1508](https://github.com/ethereum-optimism/infra/issues/1508))\n\n### Deterministic Gas Testing Feature Request\n- A feature request to enable deterministic gas testing by setting a fixed base fee was closed, with discussion indicating that adapting tests to query the base fee might be a more suitable approach. ([#408](https://github.com/ethereum-optimism/infra/issues/408))\n\n## NEW ISSUES\n\n### Acceptance Test Porting to Devstack\n- New issues were opened to port various acceptance tests to the devstack environment, including `TestChainFork`, `TestWithdrawalsRoot`, `TestOperatorFee`, `TestERC20Bridge`, and `TestPectra`. ([#413](https://github.com/ethereum-optimism/infra/issues/413), [#412](https://github.com/ethereum-optimism/infra/issues/412), [#414](https://github.com/ethereum-optimism/infra/issues/414), [#415](https://github.com/ethereum-optimism/infra/issues/415), [#416](https://github.com/ethereum-optimism/infra/issues/416))\n\n## ACTIVE ISSUES\n\n### op-node v1.13.3: Stuck Goroutines in p2p.SyncClient / libp2p\n- Users continue to report issues with `op-node` v1.13.3 experiencing thousands of stuck goroutines, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync problems. The issue persists for several hours of uptime. ([#16332](https://github.com/ethereum-optimism/infra/issues/16332))\n\n### Spike: CI SLAs\n- Discussion around implementing CI SLAs is ongoing. Feedback suggests that while metrics are useful, some proposed SLAs (like PR merge time) might not be directly attributable to CI. There's also a strong sentiment against disabling tests and a preference for smarter ways to admit new tests to prevent flakiness. The issue is expected to be closed soon without immediate implementation of CI SLAs. ([#16437](https://github.com/ethereum-optimism/infra/issues/16437))", "2025-09-04T03:26:41.189Z"]
["ethereum-optimism/specs_day_2025-06-24", "ethereum-optimism/specs", "day", "2025-06-24", "# ethereum-optimism/specs Daily Update (Jun 24, 2025)\n## OVERVIEW \nThe day saw significant progress in addressing CI flakiness and refining internal processes. Several long-standing issues were closed, including discussions on CI SLAs and documentation improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n### CI/Testing Improvements\nDiscussions around CI flakiness and the implementation of CI SLAs were concluded. While a formal SLA framework will not be adopted for now, efforts to improve test stability and reporting continue. This includes the release of a test flake report generator and ongoing monitoring of flakiness. ([#16271](https://github.com/ethereum-optimism/specs/issues/16271), [#16437](https://github.com/ethereum-optimism/specs/issues/16437))\n\n### Documentation and Developer Tooling\nAn issue regarding the documentation for bridging ERC-20 tokens with Viem was closed, indicating that the necessary updates have been completed. A feature request to enable deterministic gas testing by setting a fixed base fee was also closed, with the understanding that adapting tests to query the `baseFee` is a more suitable approach. ([#1508](https://github.com/ethereum-optimism/specs/issues/1508), [#408](https://github.com/ethereum-optimism/specs/issues/408))\n\n### Acceptance Test Porting\nA request to port `TestWithdrawalsRoot` to devstack was closed, as the implementation has been completed. ([#412](https://github.com/ethereum-optimism/specs/issues/412))\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n### CI Flakiness Investigation\nIssue [#16271](https://github.com/ethereum-optimism/specs/issues/16271) concerning CI flakiness was closed today. The latest comment from scharissis confirms that a test flake report generator has been released and iterated upon, and test flakiness has improved. Monitoring will continue.\n\n### op-node Goroutine Issues\nIssue [#16332](https://github.com/ethereum-optimism/specs/issues/16332) reports `op-node` (v1.13.3) getting stuck with thousands of goroutines, leading to sync issues. The latest comments from rrrengineer and Creamers158 confirm that they are experiencing the same problem on v1.13.3.\n\n### CI SLAs Spike\nIssue [#16437](https://github.com/ethereum-optimism/specs/issues/16437) explored the adoption of internal SLAs for the continuous integration pipeline. The issue was closed today, with scharissis stating that CI SLAs will not be implemented for now. Recent comments from pauldowman and teddyknox provided feedback on the proposed SLAs, with ajsutton expressing skepticism about their direct impact on developers but acknowledging their potential usefulness for the platforms team. The discussion highlighted the importance of addressing flaky tests and potentially improving how new tests are admitted to the repository.", "2025-09-04T03:26:41.973Z"]
["ethereum-optimism/optimism_day_2025-06-24", "ethereum-optimism/optimism", "day", "2025-06-24", "# ethereum-optimism/optimism Daily Update (Jun 24, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure with new validation scripts and acceptance test gates, alongside critical bug fixes for the op-deployer and improvements to interop monitoring and MIPS emulation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing Infrastructure and Validation\nSignificant progress was made in bolstering the testing framework. A new feature was added to extend the test validation script, enforcing consistent test structure conventions across Forge test artifacts ([#16543](https://github.com/ethereum-optimism/optimism/pull/16543)). Additionally, an `interop-loadtest` gate was introduced to `op-acceptance-tests` to manage the execution of load tests more efficiently ([#16564](https://github.com/ethereum-optimism/optimism/pull/16564)). A dedicated EOA was also implemented for interop invalid attributes in acceptance tests to improve reliability ([#16553](https://github.com/ethereum-optimism/optimism/pull/16553)).\n\n### Critical Bug Fixes for Deployment and Challenger\nSeveral crucial bug fixes were implemented for the `op-deployer` and `op-e2e`/`op-devstack` components. This includes fixing error messages for challenger prerequisites ([#16552](https://github.com/ethereum-optimism/optimism/pull/16552)), correcting `v4.0.0` and `rc.8` artifact hashes in `op-deployer` ([#16562](https://github.com/ethereum-optimism/optimism/pull/16562), [#16565](https://github.com/ethereum-optimism/optimism/pull/16565)), and ensuring idempotency for `implementationsDeployment` in `op-deployer` ([#16567](https://github.com/ethereum-optimism/optimism/pull/16567)).\n\n### Improvements to Interop Monitoring and MIPS Emulation\nThe `op-interop-mon` was updated to emit zero values for empty metrics, preventing gauges from getting stuck at their last non-zero value and improving monitoring accuracy ([#16506](https://github.com/ethereum-optimism/optimism/pull/16506)). Furthermore, the `cannon` MIPS emulator received an update to its `getrandom` syscall logic, now clearing memory reservations after updating memory, which enhances its stability ([#16529](https://github.com/ethereum-optimism/optimism/pull/16529)).\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16563](https://github.com/ethereum-optimism/optimism/pull/16563), was opened to add `v0.4.0` support to `op-deployer`.\n\n## CLOSED ISSUES\n\n### CI Stability and Flakiness Addressed\nEfforts to investigate and improve CI flakiness have concluded with the closure of [#16271](https://github.com/ethereum-optimism/optimism/issues/16271). The team has released a test flake report generator, iterated on it, and improved test flakiness, with continued monitoring planned. The spike for CI SLAs ([#16437](https://github.com/ethereum-optimism/optimism/issues/16437)) was also closed, with a decision not to implement CI SLAs for now, but to consider smarter ways to introduce new tests.\n\n### Devnet and Testing Enhancements\nThe issue of adding the ability to run upgrade tasks against devnets in `superchain-ops` ([#15978](https://github.com/ethereum-optimism/optimism/issues/15978)) has been closed. Additionally, a feature request to enable deterministic gas testing by setting a fixed base fee ([#408](https://github.com/ethereum-optimism/optimism/issues/408)) was closed, with the suggestion to adapt tests to query the `baseFee` instead. The porting of `TestWithdrawalsRoot` to devstack ([#412](https://github.com/ethereum-optimism/optimism/issues/412)) was also closed, as it has been implemented.\n\n### Documentation Update for Viem Bridging\nThe documentation issue regarding bridging ERC-20 tokens with Viem ([#1508](https://github.com/ethereum-optimism/optimism/issues/1508)) has been closed, indicating that the relevant documentation updates have been completed.\n\n## NEW ISSUES\n\n### Conductor Alerting and Sequencer Health\nA new issue, [#16558](https://github.com/ethereum-optimism/optimism/issues/16558), was opened to address `op-conductor` alerting for indefinite sequencer halts. This aims to provide alerts when an active leader sequencer becomes unhealthy due to issues not impacting normal block building, such as failing rbuilder health checks.\n\n### Interop Transaction Mempool Behavior\nIssue [#16559](https://github.com/ethereum-optimism/optimism/issues/16559) was opened to investigate why interop transactions with invalid attributes are sometimes not evicted from the mempool, based on observations from CI failures.\n\n## ACTIVE ISSUES\n\n### op-node Goroutine Stuckness\nIssue [#16332](https://github.com/ethereum-optimism/optimism/issues/16332) continues to be active, with users reporting `op-node` (v1.13.3) getting stuck with thousands of goroutines, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync failures. The latest comment confirms this behavior on v1.13.3, with no resolution yet.", "2025-09-04T03:26:43.651Z"]
["ethereum-optimism/supersim_day_2025-06-24", "ethereum-optimism/supersim", "day", "2025-06-24", "# ethereum-optimism/supersim Daily Update (Jun 24, 2025)\n## OVERVIEW \nThe day saw significant activity in issue management, with several issues related to CI/testing improvements and developer tooling being closed. A new feature request for enhanced logging was also opened.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features were added, bugs fixed, code refactored, documentation enhanced, or tests added on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n### CI/Testing Infrastructure Improvements\nSeveral issues related to improving the continuous integration and testing infrastructure were closed. This includes an investigation into and improvement of CI flakiness ([#16271](https://github.com/ethereum-optimism/supersim/issues/16271)) and a spike exploring CI SLAs ([#16437](https://github.com/ethereum-optimism/supersim/issues/16437)). The CI SLA spike concluded that SLAs will not be implemented for now.\n\n### Developer Tooling and Simulation Enhancements\nTwo feature requests aimed at enhancing developer tooling and simulation capabilities were closed. This includes the request to include Uniswap v4 deployment in supersim ([#409](https://github.com/ethereum-optimism/supersim/issues/409)) and enabling deterministic gas testing by setting a fixed base fee ([#408](https://github.com/ethereum-optimism/supersim/issues/408)). The deterministic gas testing issue was closed as the `--base-fee` flag in Anvil does not maintain a fixed base fee across blocks as initially expected.\n\n### Documentation Updates\nA documentation-related issue concerning bridging ERC-20 tokens with Viem was closed ([#1508](https://github.com/ethereum-optimism/supersim/issues/1508)), indicating that the relevant updates have been completed.\n\n### Acceptance Test Porting\nAn issue to port the `TestWithdrawalsRoot` acceptance test to devstack was closed ([#412](https://github.com/ethereum-optimism/supersim/issues/412)), with the implementation noted in a related PR.\n\n## NEW ISSUES\n\n### Enhanced Logging for Contract Interactions\nA new feature request was opened to enable user-specified contract logging within supersim ([#411](https://github.com/ethereum-optimism/supersim/issues/411)). This would allow users to specify contracts for which they would like events to be logged, improving debugging and analysis capabilities.\n\n## ACTIVE ISSUES\n\n### Investigation into op-node Goroutine Stalls\nIssue [#16332](https://github.com/ethereum-optimism/supersim/issues/16332) continues to track a bug where `op-node` (v1.13.3) experiences thousands of stuck goroutines, primarily in `select`, `IO wait`, or `yamux` session handlers, leading to sync failures. Recent comments from `rrrengineer` and `Creamers158` confirm that this issue is still present for them on `op-node` v1.13.3, with `rrrengineer` noting they haven't tried v1.13.4 yet. The detailed stack traces provided by `Creamers158` highlight the `libp2p` and `multiformats` components as potential areas of concern.", "2025-09-04T03:26:44.970Z"]
["ethereum-optimism/docs_day_2025-06-25", "ethereum-optimism/docs", "day", "2025-06-25", "# ethereum-optimism/docs Daily Update (Jun 25, 2025)\n## OVERVIEW \nToday's activity focused on documentation cleanup, specifically removing outdated devnet information. Several issues related to flashblocks, CI/CD, and developer tooling were closed, indicating progress in these areas.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Documentation Cleanup**: Outdated devnet information was removed from the `pages/interop` section of the documentation, streamlining the content for current tools and configurations. ([#1670](https://github.com/ethereum-optimism/docs/pull/1670))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Flashblocks Implementation & Testing**: Several issues related to the implementation and acceptance testing of flashblocks were closed, indicating successful integration and validation of this feature. This includes enabling flashblocks on `eris-0` and developing acceptance tests for transactions. ([#16468](https://github.com/ethereum-optimism/docs/issues/16468), [#354](https://github.com/ethereum-optimism/docs/issues/354))\n*   **Developer Tooling Enhancements**: Progress was made on developer tooling, with an issue related to modifying predeploys in Supersim being closed. This improves the ability for developers to test future predeploy changes. ([#393](https://github.com/ethereum-optimism/docs/issues/393))\n*   **CI/CD Process Review**: An issue exploring the adoption of internal SLAs for the continuous integration pipeline was closed, with the decision not to implement CI SLAs for now. ([#16437](https://github.com/ethereum-optimism/docs/issues/16437))\n*   **Documentation Link Fix**: A broken link in the documentation for `L2NativeSuperchainERC20.sol` was resolved. ([#283](https://github.com/ethereum-optimism/docs/issues/283))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n*   **Batcher Memory Optimization**: Discussions on [#16537](https://github.com/ethereum-optimism/docs/issues/16537) indicate that the `op-batcher` is experiencing memory spikes, particularly during L1 congestion. Initial profiling with `pprof` suggests the compressor is the primary source of memory usage. Proposed optimizations include making the shadow compressor more memory-efficient and eagerly discarding the compressor after channel submission.\n*   **Batcher Observability**: Issue [#16572](https://github.com/ethereum-optimism/docs/issues/16572) focuses on increasing the observability of `op-batcher` memory consumption. Key points include integrating `pprof` into Kurtosis devnet and adding CI tests to measure memory usage. Existing benchmarks for channel compressors are being reviewed to ensure they are up-to-date and run effectively in CI.\n*   **Withdrawal Pathways for Superchain Output Roots**: Issue [#821](https://github.com/ethereum-optimism/docs/issues/821) highlights the need to update `viem`'s withdrawal code to support the Superchain's new output roots structure after the interop hard fork. The team is confirming if testing can be done against RC Beta to prioritize the necessary updates before Sepolia.\n*   **Supersim vs. Interop Kurtosis Devnet**: Discussion on [#399](https://github.com/ethereum-optimism/docs/issues/399) clarifies that Supersim is a lighter, Anvil-based local development tool primarily for testing multi-chain/interop applications, while Kurtosis is used by OP Stack for chain testing. Supersim is designed for dApp developers to test upcoming features like interop.", "2025-09-04T03:26:45.565Z"]
["ethereum-optimism/superchain-ops_day_2025-06-24", "ethereum-optimism/superchain-ops", "day", "2025-06-24", "# ethereum-optimism/superchain-ops Daily Update (Jun 24, 2025)\n## OVERVIEW \nThe day's development focused on a significant revert of a previous feature, alongside active discussions on CI stability, developer experience, and documentation improvements. Several issues were closed, indicating progress in addressing long-standing concerns.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Feature Revert:** A feature related to Trezor support was reverted, impacting `nested.just`, `single.just`, `src/improvements/nested.just`, and `src/improvements/single.just` ([#1100](https://github.com/ethereum-optimism/superchain-ops/pull/1100)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Documentation Updates:** The issue regarding bridging ERC-20 tokens with Viem was closed, indicating that the documentation has been updated to address the concerns raised ([#1508](https://github.com/ethereum-optimism/superchain-ops/issues/1508)).\n*   **Test Determinism:** A feature request to enable deterministic gas testing by setting a fixed base fee was closed, with the suggestion to adapt tests to query the `baseFee` instead ([#408](https://github.com/ethereum-optimism/superchain-ops/issues/408)).\n*   **CI SLA Exploration:** The spike to explore adopting internal SLAs for the continuous integration pipeline was closed, with the decision not to implement CI SLAs for now ([#16437](https://github.com/ethereum-optimism/superchain-ops/issues/16437)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n*   **CI Flakiness Investigation:** The issue concerning CI flakiness ([#16271](https://github.com/ethereum-optimism/superchain-ops/issues/16271)) was closed today. The latest comment from scharissis at 2025-06-24T04:44:09Z indicates that a test flake report generator has been released and iterated upon, the report has been publicized, and test flakiness has improved. The team will continue to monitor flakiness.\n*   **op-node Stuck Goroutines:** Discussions continue on the `op-node` v1.13.3 issue with thousands of stuck goroutines in `p2p.SyncClient / libp2p` ([#16332](https://github.com/ethereum-optimism/superchain-ops/issues/16332)). The latest comments from rrrengineer at 2025-06-24T19:01:08Z and Creamers158 at 2025-06-17T10:52:35Z confirm that users are experiencing the same issue on `op-node` v1.13.3, with one user yet to try v1.13.4.\n*   **CI SLAs Spike:** The spike to explore CI SLAs ([#16437](https://github.com/ethereum-optimism/superchain-ops/issues/16437)) was closed today. The latest comments from scharissis at 2025-06-25T05:58:06Z confirm the decision not to implement CI SLAs for now. Prior to closure, pauldowman at 2025-06-24T15:23:35Z and teddyknox at 2025-06-24T14:33:24Z provided feedback, suggesting that PR merge time isn't a meaningful CI metric and proposing smarter ways to allow new tests into the repo to proactively detect flakiness. ajsutton at 2025-06-24T04:18:18Z expressed skepticism about the necessity of SLAs for developers and questioned specific metrics like the 5% failure rate and 1-hour PR feedback time, also advising against disabling breaking checks.\n*   **Port TestWithdrawalsRoot to devstack:** The issue to port `TestWithdrawalsRoot` to devstack ([#412](https://github.com/ethereum-optimism/superchain-ops/issues/412)) was closed today. The latest comment from serpixel at 2025-06-24T17:53:45Z indicates that this has been implemented in [#16547](https://github.com/ethereum-optimism/optimism/pull/16547).\n*   **Deterministic Gas Testing:** The feature request for deterministic gas testing ([#408](https://github.com/ethereum-optimism/superchain-ops/issues/408)) was closed today. The latest comments from tremarkley at 2025-06-24T18:15:58Z and hexshire at 2025-06-24T18:03:50Z indicate a misunderstanding of the `--base-fee` functionality, with the suggestion to adapt tests to query the `baseFee` instead.", "2025-09-04T03:26:45.610Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-25", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-25", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 25, 2025)\n## OVERVIEW \nThe day saw significant progress in addressing flashblocks functionality, optimizing `op-batcher` memory consumption, and improving developer tooling for local environments. Several issues related to CI/CD and documentation were also resolved.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Flashblocks Integration and Testing\nEfforts continued on integrating and testing flashblocks, with a focus on enabling them in non-interop environments and developing acceptance tests for transaction handling. This work is crucial for the reliability and performance of the Optimism network.\n### `op-batcher` Memory Optimization and Observability\nA spike was initiated to investigate and optimize the memory consumption of the `op-batcher`, particularly during L1 congestion. Initial findings suggest the compressor is a major memory consumer. Concurrently, a new issue was opened to enhance observability of `op-batcher` memory usage through `pprof` integration and CI tests.\n### Developer Tooling and Local Environment Improvements\nImprovements were made to developer tooling, specifically Supersim, to allow for easier modification of predeploys for testing purposes. Discussions also clarified the differences between Supersim and interop Kurtosis devnet for local development.\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1167](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1167), titled \"Main\", was opened. No further details on its status or progress are available.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Acceptance\nThe issue of enabling flashblocks on `eris-0` was closed, with completion across multiple phases involving `optimism-charts`, `devnets`, and `k8s` repositories. Additionally, acceptance tests for flashblocks transactions were completed, including transfer and streaming tests.\n### CI/CD and Documentation Enhancements\nA spike exploring CI SLAs was closed, with the decision not to implement them for now. A broken link in the documentation for `L2NativeSuperchainERC20.sol` was also resolved.\n### Developer Environment Improvements\nThe issue enabling users to modify predeploys was closed, as Supersim now supports modifying the `L2toL2CDM` predeploy.\n\n## NEW ISSUES\n- No new issues were opened on Jun 25, 2025.\n\n## ACTIVE ISSUES\n\n### `op-batcher` Memory Consumption Spike ([#16537](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16537))\nDiscussions focused on identifying the source of high memory usage in the `op-batcher`. Initial profiling with `pprof` suggests the compressor is the primary culprit. Proposed optimizations include using a single compressor and more eagerly releasing compressor memory after channel submission. A recipe for running `pprof` locally was provided.\n\n### `op-batcher` Observability of Memory Consumption ([#16572](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16572))\nThe discussion highlighted the need for enhanced observability of `op-batcher` memory consumption. Suggestions include integrating `pprof` into Kurtosis devnet and creating CI tests to measure memory usage. Existing benchmarks for channel compressors were noted as a starting point, with a need to ensure they run locally, on CI, and are up-to-date with Brotli compression.\n\n### CI SLAs Spike ([#16437](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16437))\nThe discussion revolved around the proposed CI SLAs and accountability framework. Feedback from developers indicated that while SLAs are not inherently bad, some proposed metrics (e.g., 5% failure rate, 1-hour PR feedback time) were considered too high or long. Concerns were raised about disabling breaking checks and the relevance of PR merge time as a CI metric. The consensus leaned towards focusing on addressing flaky tests and being smarter about admitting new tests. The issue was ultimately closed with the decision not to implement CI SLAs for now.\n\n### Supersim vs. Interop Kurtosis Devnet ([#399](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/399))\nThe discussion clarified the distinction between Supersim and interop Kurtosis devnet. Supersim is described as a lighter-weight wrapper around Anvil, primarily for testing multichain/interop applications and upcoming features, while Kurtosis is used for chain development. The main use case for Supersim is for dapps testing.", "2025-09-04T03:26:48.792Z"]
["ethereum-optimism/ecosystem_day_2025-06-25", "ethereum-optimism/ecosystem", "day", "2025-06-25", "# ethereum-optimism/ecosystem Daily Update (Jun 25, 2025)\n## OVERVIEW \nThe day saw updates to the GasTank ABI for Viem, a new release for Supersim, and several issues closed related to flashblocks, CI SLAs, and predeploy modifications. New issues were opened concerning Superstacks program states and batcher memory consumption.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Viem and Interoperability Updates\nThe `GasTank` ABI in Viem was updated to its latest version, aligning with changes in `interop-lib`. This update also involved adjusting the Ponder schema for `GasTank` to reflect naming changes, enhancing compatibility within the Superchain ecosystem.\n- [#863](https://github.com/ethereum-optimism/ecosystem/pull/863)\n\n### Supersim Release and Enhancements\nA new release, `0.1.0-alpha.54`, was pushed for Supersim. Discussions around Supersim also clarified its role as a lightweight local development tool for testing multi-chain/interop applications, distinct from Kurtosis devnets. A feature request was also made to enable logging of user-specified contracts within Supersim.\n- [#873](https://github.com/ethereum-optimism/ecosystem/pull/873)\n- [#399](https://github.com/ethereum-optimism/ecosystem/issues/399)\n- [#411](https://github.com/ethereum-optimism/ecosystem/issues/411)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Jun 25, 2025.\n\n## CLOSED ISSUES\n\n### Flashblocks and Transaction Acceptance\nSeveral issues related to Flashblocks were closed, indicating progress in enabling and testing this feature. This includes enabling flashblocks on `eris-0` for confidence in `op-sepolia` and completing acceptance tests for flashblocks transactions.\n- [#16468](https://github.com/ethereum-optimism/ecosystem/issues/16468)\n- [#354](https://github.com/ethereum-optimism/ecosystem/issues/354)\n\n### CI/CD and Predeploy Improvements\nAn issue exploring CI SLAs was closed with the decision not to implement them for now, following extensive feedback. Additionally, an issue concerning the modification of predeploys was closed, as Supersim now supports modifying the `L2toL2CDM` predeploy.\n- [#16437](https://github.com/ethereum-optimism/ecosystem/issues/16437)\n- [#393](https://github.com/ethereum-optimism/ecosystem/issues/393)\n\n### Documentation and Script Improvements\nA broken link in the documentation for `L2NativeSuperchainERC20.sol` was resolved and closed. An issue regarding OPCM Migrate Script Improvements was also closed, with updates to the runbook to sanity check inputs.\n- [#283](https://github.com/ethereum-optimism/ecosystem/issues/283)\n- [#16326](https://github.com/ethereum-optimism/ecosystem/issues/16326)\n\n## NEW ISSUES\n\n### Superstacks Program State and Claim Flow\nTwo new issues were opened related to the Superstacks program. One focuses on implementing a \"program has ended\" state, and the other addresses bug bash issues identified in the Superstacks Claim Flow.\n- [#871](https://github.com/ethereum-optimism/ecosystem/issues/871)\n- [#872](https://github.com/ethereum-optimism/ecosystem/issues/872)\n\n### Op-Batcher Memory Optimization and Observability\nTwo new issues were created to address memory consumption in the `op-batcher`. One is a spike to optimize memory usage, particularly during L1 congestion, while the other aims to increase observability of memory consumption through `pprof` integration in Kurtosis devnet and CI tests.\n- [#16537](https://github.com/ethereum-optimism/ecosystem/issues/16537)\n- [#16572](https://github.com/ethereum-optimism/ecosystem/issues/16572)\n\n## ACTIVE ISSUES\n\n### Netchef and Flashblock Websocket Configuration ([#15940](https://github.com/ethereum-optimism/ecosystem/issues/15940))\nThe latest comment from yashvardhan-kukreja on June 25, 2025, indicates associated PRs: `infrastructure-services/pull/471` and `infrastructure-services/pull/474`. This suggests ongoing work to improve Netchef to automatically bootstrap `flashblocks-websocket-proxy` with appropriate configurations for HA conductors.\n\n### Spike: CI SLAs ([#16437](https://github.com/ethereum-optimism/ecosystem/issues/16437))\nDiscussions on June 25, 2025, from scharissis confirm the decision not to implement CI SLAs for now, closing the issue. Earlier comments from pauldowman and teddyknox on June 24, 2025, emphasized focusing on rapidly fixing flaky tests or being smarter about allowing new tests into the repo, rather than formal SLAs. ajsutton also provided detailed feedback on the proposed metrics, questioning their relevance and suggesting alternatives for addressing flaky tests.\n\n### Spike: op-batcher optimize memory consumption ([#16537](https://github.com/ethereum-optimism/ecosystem/issues/16537))\nLatest comments from geoknee on June 25, 2025, detail findings from `pprof` suggesting that the compressor is the primary source of memory usage when a backlog of channels occurs in the batcher. Two optimization ideas are proposed: making the shadow compressor use half the memory and not retaining the compressor after a channel is submitted. A detailed recipe for running `pprof` locally was also provided.\n\n### op-batcher: increase observability of memory consumption ([#16572](https://github.com/ethereum-optimism/ecosystem/issues/16572))\nThe latest comment from tynes on June 25, 2025, notes that @trianglesphere has also raised performance issues potentially related to memory pressure. geoknee's comments on June 25, 2025, show local benchmark results indicating significant memory consumption (190MB per operation) for channels with many transactions. The discussion highlights the need to ensure existing channel compressor benchmarks run locally, on CI, and are up-to-date with Brotli compression.\n\n### withdrawal pathways for superchain output roots ([#821](https://github.com/ethereum-optimism/ecosystem/issues/821))\nThe latest comment from fainashalts on June 25, 2025, asks if the upcoming devnet is the one to test with, given the renaming of devnets, and if testing against an endpoint is already possible. This indicates ongoing efforts to update withdrawal code in Viem to support the Superchain's new output roots structure after the interop hard fork.", "2025-09-04T03:26:49.158Z"]
["ethereum-optimism/infra_day_2025-06-25", "ethereum-optimism/infra", "day", "2025-06-25", "# ethereum-optimism/infra Daily Update (Jun 25, 2025)\n## OVERVIEW \nToday's focus was on enhancing observability for the `op-batcher`'s memory consumption, improving Superchain tooling, and closing out several long-standing issues related to flashblocks and CI/CD.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work was reported for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#417](https://github.com/ethereum-optimism/infra/pull/417), was opened to add a metric for monitoring fallback candidate health.\n\n## CLOSED ISSUES\n\n### Flashblocks and Devnet Enhancements\nSeveral issues related to flashblocks and devnet configurations were closed. This includes the completion of acceptance tests for flashblocks transactions ([#354](https://github.com/ethereum-optimism/infra/issues/354)) and the successful enablement of flashblocks on the eris-0 devnet ([#16468](https://github.com/ethereum-optimism/infra/issues/16468)).\n\n### CI/CD and Developer Tooling Improvements\nDiscussions around CI SLAs were concluded with the decision not to implement them for now ([#16437](https://github.com/ethereum-optimism/infra/issues/16437)). Additionally, an issue concerning the modification of predeploys for testing was closed as Supersim now supports this functionality ([#393](https://github.com/ethereum-optimism/infra/issues/393)). A broken link in the documentation for `L2NativeSuperchainERC20.sol` was also resolved ([#283](https://github.com/ethereum-optimism/infra/issues/283)).\n\n## NEW ISSUES\n\n### Batcher Memory Optimization and Observability\nA new spike was initiated to optimize the `op-batcher`'s memory consumption, particularly during L1 congestion ([#16537](https://github.com/ethereum-optimism/infra/issues/16537)). Complementing this, an issue was opened to increase the observability of the `op-batcher`'s memory usage, including integrating `pprof` into Kurtosis devnet and adding CI tests for memory consumption ([#16572](https://github.com/ethereum-optimism/infra/issues/16572)).\n\n### Superchain and Local Development Tooling\nA feature request was made to enable logging of user-specified contracts within Supersim, which would be beneficial for debugging and development ([#411](https://github.com/ethereum-optimism/infra/issues/411)). A clarification issue was also opened to differentiate between Supersim and the interop Kurtosis devnet, highlighting their respective use cases ([#399](https://github.com/ethereum-optimism/infra/issues/399)).\n\n## ACTIVE ISSUES\n\n### Netchef and Flashblocks Configuration ([#15940](https://github.com/ethereum-optimism/infra/issues/15940))\nThe issue is tracking improvements to Netchef to automatically configure the flashblocks-websocket-proxy for HA conductor setups. Recent comments indicate associated PRs have been created in the `infrastructure-services` repository, suggesting active progress on this front.\n\n### OPCM Migrate Script Improvements ([#16326](https://github.com/ethereum-optimism/infra/issues/16326))\nDiscussions revolve around improving the `migrate-alphanet.sh` script used for the rehearsal-net-0. The latest comment confirms that the runbook has been updated to include sanity checks for script inputs, indicating that the issue is nearing resolution.\n\n### Withdrawal Pathways for Superchain Output Roots ([#821](https://github.com/ethereum-optimism/infra/issues/821))\nThe discussion focuses on updating the `viem` withdrawal code to support the new output roots structure after the interop hard fork. The latest comment inquires about which upcoming devnet can be used for testing and if an endpoint is already available, highlighting the need for a testing environment.", "2025-09-04T03:26:49.589Z"]
["ethereum-optimism/optimism_day_2025-06-25", "ethereum-optimism/optimism", "day", "2025-06-25", "# ethereum-optimism/optimism Daily Update (Jun 25, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure, improving error handling in core services, and adding a new calldata generation script. Several issues related to flashblocks and memory optimization were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing and Development Tooling\nSignificant progress was made in bolstering the testing framework and developer tools. This includes adding support for both in-memory and external orchestrators in acceptance tests, paving the way for future deprecation of the `justfile` ([#16549](https://github.com/ethereum-optimism/optimism/pull/16549)). New load tests were introduced to spam invalid messages for interop testing ([#16459](https://github.com/ethereum-optimism/optimism/pull/16459)), and a test for contract artifact integrity was added to the deployer ([#16568](https://github.com/ethereum-optimism/optimism/pull/16568)). Additionally, a script to generate OPCM migration calldata was ported, relying on hardcoded values ([#16532](https://github.com/ethereum-optimism/optimism/pull/16532)).\n\n### Improved Error Handling and Stability\nSeveral bug fixes and enhancements were implemented to improve the stability and error handling of core components. This includes ignoring specific errors like \"already known\" and \"nonce too low\" during transaction resubmission in the transaction manager ([#16566](https://github.com/ethereum-optimism/optimism/pull/16566)). The `WaitForL2HeadToAdvanceTo` function was fixed to handle supervisor sync jumps gracefully ([#16560](https://github.com/ethereum-optimism/optimism/pull/16560)), and the Kurtosis devnet now properly handles L1 chain IDs ([#16579](https://github.com/ethereum-optimism/optimism/pull/16579)). Error checks were also enhanced for `txmgr` and `op-node` p2p key management ([#16542](https://github.com/ethereum-optimism/optimism/pull/16542)).\n\n### Security and Configuration Safeguards\nA security audit report for the Cannon Go 1.23 support fix was added to the documentation ([#16479](https://github.com/ethereum-optimism/optimism/pull/16479)). Furthermore, safeguards were introduced in `op-program` to prevent typos in custom chain configuration files, making it harder to make common naming mistakes ([#16580](https://github.com/ethereum-optimism/optimism/pull/16580)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#16569](https://github.com/ethereum-optimism/optimism/pull/16569) [DO NOT MERGE] op-acceptance-tests: interop invalid attribute exec msg tx mempool evict experiment\n- [#16570](https://github.com/ethereum-optimism/optimism/pull/16570) op-batcher: make shadow compressor more memory efficient\n- [#16574](https://github.com/ethereum-optimism/optimism/pull/16574) Op program/rehearsal 1 bn\n- [#16577](https://github.com/ethereum-optimism/optimism/pull/16577) dependabot(gomod): bump github.com/docker/docker from 27.5.1+incompatible to 28.3.0+incompatible\n\n## CLOSED ISSUES\n\n### Flashblocks and Interoperability Enhancements\nSeveral issues related to flashblocks and cross-chain interoperability were closed. This includes enabling flashblocks on eris-0 for testing ([#16468](https://github.com/ethereum-optimism/optimism/issues/16468)) and adding acceptance tests for flashblock transactions ([#354](https://github.com/ethereum-optimism/optimism/issues/354)). Progress was also made on withdrawal pathways for superchain output roots ([#821](https://github.com/ethereum-optimism/optimism/issues/821)).\n\n### CI/CD and Developer Experience Improvements\nEfforts to improve the CI/CD pipeline and overall developer experience saw the closure of issues like exploring CI SLAs ([#16437](https://github.com/ethereum-optimism/optimism/issues/16437)). The ability for users to modify predeploys was enabled ([#393](https://github.com/ethereum-optimism/optimism/issues/393)), and a broken link in the documentation for `L2NativeSuperchainERC20.sol` was fixed ([#283](https://github.com/ethereum-optimism/optimism/issues/283)).\n\n### Batcher Optimization and Scripting\nIssues related to batcher performance and scripting were addressed. This includes a spike to optimize memory consumption in the op-batcher ([#16537](https://github.com/ethereum-optimism/optimism/issues/16537)) and improvements to the OPCM Migrate Script ([#16326](https://github.com/ethereum-optimism/optimism/issues/16326)).\n\n## NEW ISSUES\n\n### Batcher Observability and Memory Consumption\nA new issue was opened to increase the observability of memory consumption in the `op-batcher` ([#16572](https://github.com/ethereum-optimism/optimism/issues/16572)). This aims to integrate `pprof` into `kurtosis-devnet` and add CI tests to measure memory usage.\n\n### Code Quality and Tooling\nA new issue proposes a script to check for unused internal/private functions in contracts, aiming to improve code quality and maintainability ([#16583](https://github.com/ethereum-optimism/optimism/issues/16583)).\n\n## ACTIVE ISSUES\n\n### Batcher Memory Optimization ([#16537](https://github.com/ethereum-optimism/optimism/issues/16537))\nDiscussion continues on optimizing memory consumption in the `op-batcher`. Recent comments highlight that the compressor is a major contributor to memory usage, especially when a backlog of channels builds up. Ideas for optimization include making the shadow compressor use less memory by not using two underlying compressors and potentially discarding the compressor more eagerly after channel submission.\n\n### CI SLAs ([#16437](https://github.com/ethereum-optimism/optimism/issues/16437))\nFeedback on CI SLAs suggests that while they are useful for platforms, developers prioritize rapid fixes for flaky tests and clear failure attribution. Concerns were raised about a high expected failure rate and long CI completion times. The idea of \"getting smarter about how we allow new tests into the repo\" was proposed, potentially by proactively detecting flaky tests before they are admitted.\n\n### Flashblocks Transactions ([#354](https://github.com/ethereum-optimism/optimism/issues/354))\nThe discussion on flashblocks transactions indicates that simply checking `eth_getBlockByNumber` with a \"pending\" parameter is insufficient for validation. A more robust approach involves establishing a websocket connection with the `rbuilder` and expecting a stream of flashblocks.\n\n### Supersim vs. Interop Kurtosis Devnet ([#399](https://github.com/ethereum-optimism/optimism/issues/399))\nClarification was provided on the difference between Supersim and Interop Kurtosis Devnet. Supersim is described as a lighter wrapper around Anvil for local development, primarily used for testing multichain/interop applications and upcoming features, while Kurtosis is used by the OP Stack for chain testing.\n\n### Feature Request: Logging User-Specified Contracts ([#411](https://github.com/ethereum-optimism/optimism/issues/411))\nA new feature request for Supersim proposes enabling logging of events for user-specified contracts, which would be useful for debugging and monitoring.", "2025-09-04T03:26:53.434Z"]
["ethereum-optimism/superchain-registry_day_2025-06-25", "ethereum-optimism/superchain-registry", "day", "2025-06-25", "# ethereum-optimism/superchain-registry Daily Update (Jun 25, 2025)\n## OVERVIEW \nThe day's development focused on setting a hardfork time for Swell Mainnet and significant progress on several issues, including flashblocks enablement, CI pipeline discussions, and op-batcher memory optimization.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Configuration Updates\nA key configuration update was made to set the Holocene hardfork time for Swell Mainnet, ensuring future network upgrades are properly scheduled and aligned. ([#1082](https://github.com/ethereum-optimism/superchain-registry/pull/1082))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Jun 25, 2025.\n\n## CLOSED ISSUES\n\n### Flashblocks Integration and Testing\nSeveral issues related to the integration and testing of flashblocks were closed. This includes enabling flashblocks on the `eris-0` environment for confidence building ([#16468](https://github.com/ethereum-optimism/superchain-registry/issues/16468)) and completing acceptance tests for flashblocks transactions, including transfer and streaming tests. ([#354](https://github.com/ethereum-optimism/superchain-registry/issues/354))\n\n### Development Environment and Tooling Improvements\nImprovements were made to the development environment, specifically addressing the ability to modify predeploys within Supersim, which now supports modifying the `L2toL2CDM` predeploy. ([#393](https://github.com/ethereum-optimism/superchain-registry/issues/393))\n\n### CI/CD and Documentation Refinements\nDiscussions around implementing CI SLAs were concluded, with the decision not to implement them for now. ([#16437](https://github.com/ethereum-optimism/superchain-registry/issues/16437)) Additionally, a broken link in the documentation for `L2NativeSuperchainERC20.sol` was resolved. ([#283](https://github.com/ethereum-optimism/superchain-registry/issues/283))\n\n## NEW ISSUES\nNo new issues were opened on Jun 25, 2025.\n\n## ACTIVE ISSUES\n\n### op-batcher Memory Consumption\nDiscussions on optimizing the `op-batcher`'s memory consumption ([#16537](https://github.com/ethereum-optimism/superchain-registry/issues/16537)) highlighted that the compressor is the primary source of memory usage during backlogs. Initial findings from `pprof` suggest that the publishing loop dominates, with significant allocations from writing to the compressor. Proposed optimizations include making the shadow compressor use less memory and more eagerly discarding the compressor after a channel is submitted. A related issue ([#16572](https://github.com/ethereum-optimism/superchain-registry/issues/16572)) was opened to increase observability of memory consumption, with initial benchmarks showing 190MB per operation for a channel with 100 blocks.\n\n### Superchain Output Roots and Withdrawal Pathways\nThe issue concerning withdrawal pathways for superchain output roots ([#821](https://github.com/ethereum-optimism/superchain-registry/issues/821)) saw recent activity. A question was raised about which devnet to use for testing, specifically if the upcoming one is suitable, and if an endpoint is already available for testing.\n\n### Supersim vs. Interop Kurtosis Devnet\nA discussion on the differences between Supersim and Interop Kurtosis Devnet ([#399](https://github.com/ethereum-optimism/superchain-registry/issues/399)) clarified that Supersim is a lighter, Anvil-based wrapper primarily for testing multichain/interop applications locally, especially for dapps, while Kurtosis is used for chain development.\n\n### Feature Request: Logging User-Specified Contracts\nA new feature request ([#411](https://github.com/ethereum-optimism/superchain-registry/issues/411)) was made to enable Supersim to log events for user-specified contracts, which was well-received as a \"great idea.\"", "2025-09-04T03:26:54.182Z"]
["ethereum-optimism/superchain-ops_day_2025-06-25", "ethereum-optimism/superchain-ops", "day", "2025-06-25", "# ethereum-optimism/superchain-ops Daily Update (Jun 25, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes, significant code refactoring to improve maintainability, and ongoing discussions around performance and developer tooling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Bug Fixes for Operations and Tooling\nTwo critical bugs were addressed today. One fix resolved a nonce bump issue affecting Base L1PAO and Base Ops Safe transactions, ensuring correct transaction execution ([#1102](https://github.com/ethereum-optimism/superchain-ops/pull/1102)). The second bug fix corrected how `approve` and `execute` commands in `justfiles` handle `signer_args`, resolving local execution and approval errors ([#1103](https://github.com/ethereum-optimism/superchain-ops/pull/1103)).\n\n### Multisig Task Refactoring for Improved Maintainability\nA substantial refactoring effort was completed to remove child state variables from `MultisigTask.sol`. This change streamlines the codebase by passing `allSafes`, `allCalldatas`, and `allOriginalNonces` directly through functions, enhancing code clarity and maintainability across numerous templates and test files ([#1085](https://github.com/ethereum-optimism/superchain-ops/pull/1085)).\n\n### Maintenance and Documentation Updates\nA maintenance task was completed to mark the `015-set-game-implementation-arena-z-swell` task as done, updating its README accordingly ([#1105](https://github.com/ethereum-optimism/superchain-ops/pull/1105)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Integration and Acceptance Testing\nSeveral issues related to Flashblocks were closed today. This includes enabling Flashblocks on `eris-0` ([#16468](https://github.com/ethereum-optimism/superchain-ops/issues/16468)) and completing acceptance tests for Flashblocks transactions, ensuring new RPC fields and streaming capabilities are validated ([#354](https://github.com/ethereum-optimism/superchain-ops/issues/354)).\n\n### Developer Experience and Tooling Enhancements\nImprovements to developer tooling were finalized, including the ability to modify predeploys within Supersim to facilitate testing of future predeploy changes ([#393](https://github.com/ethereum-optimism/superchain-ops/issues/393)). Additionally, a broken link in the documentation for `L2NativeSuperchainERC20.sol` was resolved ([#283](https://github.com/ethereum-optimism/superchain-ops/issues/283)).\n\n### CI/CD and Scripting Improvements\nThe spike to explore CI SLAs was closed, with the decision not to implement them for now ([#16437](https://github.com/ethereum-optimism/superchain-ops/issues/16437)). Improvements to the OPCM Migrate Script were also completed ([#16326](https://github.com/ethereum-optimism/superchain-ops/issues/16326)).\n\n## NEW ISSUES\n\n### User Experience and Nonce Errors\nA new issue was opened regarding nonce errors encountered when approving and executing transactions after a single approval, indicating a potential UX problem during multi-step transaction processes ([#1106](https://github.com/ethereum-optimism/superchain-ops/issues/1106)).\n\n### Op-Batcher Performance and Observability\nTwo new issues were created to address the `op-batcher`. One focuses on optimizing memory consumption, particularly during L1 congestion, to reduce data duplication and copying ([#16537](https://github.com/ethereum-optimism/superchain-ops/issues/16537)). The other aims to increase observability of `op-batcher` memory consumption through `pprof` integration in Kurtosis devnet and new CI tests ([#16572](https://github.com/ethereum-optimism/superchain-ops/issues/16572)).\n\n### Supersim Feature Request\nA feature request was opened for Supersim to enable logging of user-specified contracts, which would allow users to specify contracts for which they want event logs ([#411](https://github.com/ethereum-optimism/superchain-ops/issues/411)).\n\n## ACTIVE ISSUES\n\n### Withdrawal Pathways for Superchain Output Roots ([#821](https://github.com/ethereum-optimism/superchain-ops/issues/821))\nDiscussion continues on updating Viem's withdrawal code to support the new output roots structure for Superchain after the interop hard fork. The latest comment confirms that testing against the upcoming devnet is needed, and an endpoint for testing is being sought.\n\n### Netchef and Flashblock Websocket Configuration ([#15940](https://github.com/ethereum-optimism/superchain-ops/issues/15940))\nThis issue is focused on improving Netchef to automatically bootstrap `flashblocks-websocket-proxy` with correct configurations for HA conductors. Recent comments indicate associated PRs in `infrastructure-services` are progressing this work.\n\n### Supersim vs. Interop Kurtosis Devnet ([#399](https://github.com/ethereum-optimism/superchain-ops/issues/399))\nThe discussion clarifies the distinction between Supersim and Interop Kurtosis devnet. Supersim is described as a lighter, Anvil-based wrapper primarily for testing multichain/interop applications and upcoming features, while Kurtosis is used by OP Stack for chain testing. The latest comment confirms Supersim's main use for testing dapps rather than chains.", "2025-09-04T03:26:54.618Z"]
["ethereum-optimism/op-geth_day_2025-06-25", "ethereum-optimism/op-geth", "day", "2025-06-25", "# ethereum-optimism/op-geth Daily Update (Jun 25, 2025)\n## OVERVIEW \nJune 25, 2025, saw significant progress in addressing critical issues, particularly around flashblocks enablement and memory optimization for the op-batcher. Several long-standing issues were closed, reflecting a focus on stability and performance.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Flashblocks Enablement and Acceptance Testing\nEfforts culminated in the successful enablement of flashblocks on the eris-0 devnet and the completion of associated acceptance tests. This marks a crucial step towards integrating flashblocks into the broader Optimism ecosystem.\n- Flashblocks enabled on eris-0: [#16468](https://github.com/ethereum-optimism/op-geth/issues/16468)\n- Flashblocks transaction acceptance tests completed: [#354](https://github.com/ethereum-optimism/op-geth/issues/354)\n\n### Op-Batcher Memory Optimization and Observability\nInitial investigations into op-batcher memory consumption identified the compressor as a primary source of high memory usage. Work has begun on optimizing this component and improving observability for better performance monitoring.\n- Spike for op-batcher memory optimization: [#16537](https://github.com/ethereum-optimism/op-geth/issues/16537)\n- Increased observability for op-batcher memory consumption: [#16572](https://github.com/ethereum-optimism/op-geth/issues/16572)\n\n### Developer Tooling and Documentation Improvements\nImprovements were made to developer tools like Supersim, allowing for easier modification of predeploys. A broken link in the documentation was also resolved, enhancing the developer experience.\n- Enable user to modify a predeploy: [#393](https://github.com/ethereum-optimism/op-geth/issues/393)\n- Broken link in Docs for `L2NativeSuperchainERC20.sol` resolved: [#283](https://github.com/ethereum-optimism/op-geth/issues/283)\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#634](https://github.com/ethereum-optimism/op-geth/pull/634), was opened to introduce a configurable maximum code size feature.\n\n## CLOSED ISSUES\n\n### Flashblocks Integration and Testing Completed\nThe integration and testing of flashblocks on the eris-0 devnet have been successfully completed, along with the necessary acceptance tests for transactions. This signifies a major milestone in the rollout of flashblocks.\n- Flashblocks enabled on eris-0: [#16468](https://github.com/ethereum-optimism/op-geth/issues/16468)\n- Flashblocks transaction acceptance tests: [#354](https://github.com/ethereum-optimism/op-geth/issues/354)\n\n### Developer Tooling and Documentation Enhancements\nSeveral issues related to developer tooling and documentation were closed, including enabling users to modify predeploys in Supersim and fixing a broken documentation link.\n- Enable a user to modify a predeploy: [#393](https://github.com/ethereum-optimism/op-geth/issues/393)\n- Broken link in Docs for `L2NativeSuperchainERC20.sol`: [#283](https://github.com/ethereum-optimism/op-geth/issues/283)\n\n### CI/CD and Script Improvements\nA spike exploring CI SLAs was closed, indicating a decision not to implement them for now. Additionally, improvements to the OPCM Migrate Script were noted as completed.\n- Spike: CI SLAs: [#16437](https://github.com/ethereum-optimism/op-geth/issues/16437)\n- OPCM Migrate Script Improvements: [#16326](https://github.com/ethereum-optimism/op-geth/issues/16326)\n\n## NEW ISSUES\n\n### Transaction Pool Inconsistency\nA new issue, [#635](https://github.com/ethereum-optimism/op-geth/issues/635), was opened regarding the `txpool` conditionally including invalid interop transactions, despite existing filters. This suggests a potential bug in how `op-geth` handles certain invalid transactions.\n\n### Op-Batcher Observability\nA new issue, [#16572](https://github.com/ethereum-optimism/op-geth/issues/16572), was created to enhance the observability of memory consumption in the `op-batcher`, specifically requesting `pprof` integration in Kurtosis devnet and CI tests for memory measurement.\n\n## ACTIVE ISSUES\n\n### `txpool: invalid interop tx conditionally included` [#635](https://github.com/ethereum-optimism/op-geth/issues/635)\nDiscussion on this newly opened issue highlights a potential flakiness in the `op-geth` txpool where invalid interop transactions are sometimes included despite filters. @axelKingsley has been unable to reproduce the issue consistently, even with extensive testing and analysis of the `geth` codebase, noting that all transaction submission paths should pass through the ingress filter. @pcw109550 provided detailed reproduction steps and artifacts from CI runs where the flakiness occurred, emphasizing that the issue is intermittent and hard to pin down.\n\n### `spike(op-batcher): optimize memory consumption` [#16537](https://github.com/ethereum-optimism/op-geth/issues/16537)\nThe discussion focuses on identifying and optimizing memory usage in the `op-batcher`, particularly during L1 congestion. @geoknee successfully used `pprof` to identify the compressor as the primary source of memory consumption when a backlog of channels builds up. They proposed two optimizations: making the shadow compressor use half the memory and eagerly discarding the compressor after channel submission. @sebastianst suggested using a single compressor shared between channels for further memory savings.\n\n### `op-batcher: increase observability of memory consumption` [#16572](https://github.com/ethereum-optimism/op-geth/issues/16572)\nThis issue, closely related to [#16537](https://github.com/ethereum-optimism/op-geth/issues/16537), aims to improve memory observability for the `op-batcher`. @geoknee noted that existing benchmarks for channel compressors need to be updated to include Brotli compression and run reliably on CI. They also shared local benchmark results showing significant memory allocation per operation for channels, reinforcing the need for optimization. @tynes mentioned that @trianglesphere has also raised performance issues potentially related to memory pressure in this code.\n\n### `withdrawal pathways for superchain output roots` [#821](https://github.com/ethereum-optimism/op-geth/issues/821)\nThe discussion revolves around updating withdrawal code in `viem` to support the new Superchain output roots structure after the interop hard fork. @fainashalts inquired about testing against an upcoming devnet, given that all devnets were recently renamed. @zainbacchus confirmed that testing against RC Beta is feasible and desirable to iron out kinks before Sepolia.\n\n### `what's the difference between supersim and interop kurtosis devnet?` [#399](https://github.com/ethereum-optimism/op-geth/issues/399)\nThis issue clarifies the distinction between Supersim and Interop Kurtosis devnet. @fainashalts explained that Supersim is a lighter, local tool built around Anvil, primarily for testing multichain/interop applications and upcoming features, allowing dApp developers to start building before mainnet interop. @zhiqiangxu confirmed that Supersim is mainly for testing dApps rather than the chains themselves, which use Kurtosis.\n\n### `Feature Request: enable logging of user specified contracts` [#411](https://github.com/ethereum-optimism/op-geth/issues/411)\nThis feature request for Supersim aims to allow users to specify contracts for which they want events logged. @fainashalts expressed approval for the idea, which originated from @hexshire (Wonderland), indicating its utility for debugging and development.", "2025-09-04T03:26:54.643Z"]
["ethereum-optimism/supersim_day_2025-06-25", "ethereum-optimism/supersim", "day", "2025-06-25", "# ethereum-optimism/supersim Daily Update (Jun 25, 2025)\n## OVERVIEW \nToday's development focused on updating core dependencies, closing several long-standing issues related to predeploy modifications and flashblocks support, and initiating discussions on memory optimization for the op-batcher.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Dependency Updates\n- Updated `GasTank` to its latest version, aligning with the `interop-lib` changes. This involved modifications across several genesis files and the `supersim.go` file to ensure compatibility and leverage the newest `GasTank` features ([#406](https://github.com/ethereum-optimism/supersim/pull/406)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Predeploy Modification and Interoperability Testing\n- The issue of enabling users to modify predeploys for testing was closed, as recent merges have addressed the ability to modify the `L2toL2CDM` predeploy. Future predeploy modification needs will be tracked in separate issues ([#393](https://github.com/ethereum-optimism/supersim/issues/393)).\n- Support for ERC-7683 was closed, indicating that the strategic discussion and potential integration for interop within Supersim have concluded ([#81](https://github.com/ethereum-optimism/supersim/issues/81)).\n\n### Flashblocks Integration and Acceptance Testing\n- The acceptance testing for flashblocks transactions was completed and closed, with the work being backed by several PRs that implemented transfer and streaming tests ([#354](https://github.com/ethereum-optimism/supersim/issues/354)).\n- The task to enable flashblocks on `eris-0` was completed, involving multiple phases of PRs across `optimism-charts`, `devnets`, and `k8s` repositories to integrate flashblocks into a non-interop environment ([#16468](https://github.com/ethereum-optimism/supersim/issues/16468)).\n\n### CI/CD and Documentation Improvements\n- The spike exploring CI SLAs was closed, with the decision not to implement CI SLAs for now, but to consider smarter ways to allow new tests into the repository ([#16437](https://github.com/ethereum-optimism/supersim/issues/16437)).\n- A broken link in the documentation for `L2NativeSuperchainERC20.sol` was resolved and the issue closed ([#283](https://github.com/ethereum-optimism/supersim/issues/283)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### `op-batcher` Memory Optimization and Observability\n- Discussions continued on spiking `op-batcher` memory consumption ([#16537](https://github.com/ethereum-optimism/supersim/issues/16537)). The latest comments suggest using `pprof` to identify memory usage, with findings indicating the compressor as a major consumer. Potential optimizations include using a single compressor and more eagerly discarding the compressor after channel submission.\n- A new issue was opened to increase observability of `op-batcher` memory consumption ([#16572](https://github.com/ethereum-optimism/supersim/issues/16572)). The discussion highlights the need for `pprof` as a first-class citizen in `kurtosis-devnet` and CI tests to measure memory consumption. Existing benchmarks for channel compressors are noted, with a focus on ensuring they run locally, on CI, and are up-to-date with Brotli compression.\n\n### Superchain Withdrawal Pathways\n- The issue concerning withdrawal pathways for superchain output roots ([#821](https://github.com/ethereum-optimism/supersim/issues/821)) saw a comment inquiring about testing against upcoming devnets and endpoint availability, indicating ongoing work to adapt withdrawal code for the Superchain.\n\n### Supersim vs. Interop Kurtosis Devnet Clarification\n- A user inquired about the difference between Supersim and the interop Kurtosis devnet ([#399](https://github.com/ethereum-optimism/supersim/issues/399)). The latest response clarified that Supersim is a lighter wrapper around Anvil, primarily used for testing multichain/interop applications and upcoming features, while Kurtosis is used for testing the chains themselves.\n\n### Feature Request: User-Specified Contract Logging\n- A new feature request was opened to enable logging of user-specified contracts within Supersim ([#411](https://github.com/ethereum-optimism/supersim/issues/411)). This would allow users to specify contracts for which they want event logs, improving debugging and testing capabilities.", "2025-09-04T03:26:54.830Z"]
["ethereum-optimism/specs_day_2025-06-25", "ethereum-optimism/specs", "day", "2025-06-25", "# ethereum-optimism/specs Daily Update (Jun 25, 2025)\n## OVERVIEW \nToday's development focused on enhancing observability and optimizing memory for the `op-batcher`, alongside significant progress in flashblocks integration and improvements to local development environments. Several issues related to CI/CD and predeploy modifications were also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Batcher Performance and Observability\nEfforts were made to optimize `op-batcher` memory consumption and increase its observability. Initial analysis suggests the compressor is a major contributor to memory usage, with potential optimizations identified, such as using a single compressor and more eagerly discarding it after channel submission. Discussions also highlighted the need for `pprof` integration in Kurtosis-devnet and CI tests to measure memory consumption.\n- Related Issues: [#16537](https://github.com/ethereum-optimism/specs/issues/16537), [#16572](https://github.com/ethereum-optimism/specs/issues/16572)\n\n### Flashblocks Integration and Testing\nSignificant progress was made in enabling and testing flashblocks, particularly on the `eris-0` environment. This involved multiple phases of chart and Kubernetes updates. Acceptance tests for flashblocks transactions were also completed, including transfer and streaming tests, with discussions around the need for robust validation of RPC responses and websocket stream monitoring.\n- Related Issues: [#16468](https://github.com/ethereum-optimism/specs/issues/16468), [#354](https://github.com/ethereum-optimism/specs/issues/354)\n\n### Local Development Environment Enhancements\nImprovements were made to the local development environment, specifically Supersim, to allow users to modify predeploys, addressing a key need for prototyping future predeploy changes. A discussion also clarified the differences and use cases between Supersim and Interop Kurtosis devnet, with Supersim being highlighted for lighter, multichain/interop application testing. A feature request for logging user-specified contracts in Supersim was also noted.\n- Related Issues: [#393](https://github.com/ethereum-optimism/specs/issues/393), [#399](https://github.com/ethereum-optimism/specs/issues/399), [#411](https://github.com/ethereum-optimism/specs/issues/411)\n\n## NEWLY OPENED PULL REQUESTS\n- None\n\n## CLOSED ISSUES\n\n### CI/CD and Testing Improvements\nAn issue exploring the adoption of internal SLAs for the continuous integration pipeline was closed, with the decision not to implement CI SLAs for now. Discussions highlighted concerns about high expected failure rates, long CI completion times, and the dangers of disabling checks.\n- Related Issues: [#16437](https://github.com/ethereum-optimism/specs/issues/16437)\n\n### Flashblocks Deployment and Acceptance\nIssues related to enabling flashblocks on `eris-0` and developing acceptance tests for flashblocks transactions were closed. This marks a significant step in integrating and validating flashblocks functionality.\n- Related Issues: [#16468](https://github.com/ethereum-optimism/specs/issues/16468), [#354](https://github.com/ethereum-optimism/specs/issues/354)\n\n### Local Development Environment Configuration\nAn issue enabling users to modify predeploys within the development environment was closed, indicating successful implementation of this feature. Additionally, a broken link in the documentation for `L2NativeSuperchainERC20.sol` was resolved and closed.\n- Related Issues: [#393](https://github.com/ethereum-optimism/specs/issues/393), [#283](https://github.com/ethereum-optimism/specs/issues/283)\n\n## NEW ISSUES\n\n### Supervisor and Node Integration\nA new issue was opened to research embedding the `op-node` within `op-supervisor` and `kona-node` within `kona-supervisor`. This is a placeholder for deprecating the managed mode RPC API.\n- Related Issues: [#734](https://github.com/ethereum-optimism/specs/issues/734)\n\n### Batcher Observability\nA new issue was created to increase the observability of memory consumption in `op-batcher`. This includes integrating `pprof` into Kurtosis-devnet and adding CI tests to measure memory usage.\n- Related Issues: [#16572](https://github.com/ethereum-optimism/specs/issues/16572)\n\n## ACTIVE ISSUES\n\n### Netchef Improvements for Flashblock Configuration ([#15940](https://github.com/ethereum-optimism/specs/issues/15940))\nThe latest comment indicates associated PRs in `infrastructure-services` that are likely contributing to the netchef improvements for rendering flashblock websocket configuration. The issue is currently blocked on a PR in the main `optimism` repository.\n\n### OPCM Migrate Script Improvements ([#16326](https://github.com/ethereum-optimism/specs/issues/16326))\nA recent comment from `pauldowman` asks if the issue can be closed, suggesting that the necessary improvements might have been completed by a related PR.\n\n### Spike: CI SLAs ([#16437](https://github.com/ethereum-optimism/specs/issues/16437))\nDiscussions revolved around the utility and feasibility of CI SLAs. `ajsutton` expressed skepticism about their direct impact on developers, highlighting that flaky tests are a primary concern. `teddyknox` suggested focusing on smarter ways to allow new tests into the repo to prevent flakiness. `pauldowman` agreed on the importance of metrics for infrastructure but questioned the inclusion of PR merge time as a CI SLA. `scharissis` acknowledged the feedback and plans to develop a lightweight proposal.\n\n### Spike: Optimize op-batcher Memory Consumption ([#16537](https://github.com/ethereum-optimism/specs/issues/16537))\n`geoknee` provided a detailed analysis using `pprof`, identifying the compressor as the main source of memory usage when the batcher backlog grows. Two optimization ideas were proposed: making the shadow compressor use less memory and more eagerly discarding the compressor after channel submission. `sebastianst` initially suggested using a memory profiler.\n\n### Withdrawal Pathways for Superchain Output Roots ([#821](https://github.com/ethereum-optimism/specs/issues/821))\n`fainashalts` inquired about testing against an upcoming devnet endpoint given the renaming of existing devnets. This issue highlights the need to update withdrawal code in `viem` to support the new output root structure after the interop hard fork.\n\n### What's the Difference Between Supersim and Interop Kurtosis Devnet? ([#399](https://github.com/ethereum-optimism/specs/issues/399))\n`fainashalts` clarified that Supersim is a lighter wrapper around Anvil, primarily for testing multichain/interop applications, while Kurtosis is used for chain-level testing. `zhiqiangxu` followed up to confirm if Supersim is mainly for dapp testing.", "2025-09-04T03:27:01.008Z"]
["ethereum-optimism/community-hub_day_2025-06-26", "ethereum-optimism/community-hub", "day", "2025-06-26", "# ethereum-optimism/community-hub Daily Update (Jun 26, 2025)\n## OVERVIEW \nThe day saw significant progress in streamlining development workflows and improving the Superchain-Ops tooling. Key achievements include the implementation of stacked simulations for tasks, enhanced validation processes, and updates to task paths for mainnet integration. Several long-standing issues related to CI efficiency and developer experience were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain-Ops Workflow Enhancements\n- Implemented stacked simulations for tasks, allowing for sequential execution and improved nonce coordination, addressing long-standing issues related to task scheduling and CI efficiency ([#342](https://github.com/ethereum-optimism/community-hub/issues/342), [#337](https://github.com/ethereum-optimism/community-hub/issues/337)).\n- Refined the `SIMULATE_WITHOUT_LEDGER` functionality for more interactive task simulation ([#448](https://github.com/ethereum-optimism/community-hub/issues/448)).\n- Improved CI job performance for template regression tests by optimizing chain discovery and address registry lookups ([#648](https://github.com/ethereum-optimism/community-hub/issues/648)).\n\n### Documentation and Path Updates\n- Updated task fetching to use the mainnet task directory, ensuring consistency with production environments ([#547](https://github.com/ethereum-optimism/community-hub/issues/547)).\n- Corrected paths in improvement documentation to reflect current file structures ([#548](https://github.com/ethereum-optimism/community-hub/issues/548)).\n- Updated task paths for mainnet tasks to ensure monorepo integration tests point to the correct directories ([#600](https://github.com/ethereum-optimism/community-hub/issues/600)).\n\n### Developer Experience and Tooling Improvements\n- Conducted training sessions and created Loom videos to onboard internal stakeholders to the new Superchain-Ops tooling ([#514](https://github.com/ethereum-optimism/community-hub/issues/514)).\n- Enhanced the `print()` functionality in `AccountAccessParser` to output state diffs in a more readable Markdown format ([#777](https://github.com/ethereum-optimism/community-hub/issues/777)).\n- Implemented more granular checking of `addresses.json` to reduce the frequency of `scr` submodule updates ([#753](https://github.com/ethereum-optimism/community-hub/issues/753)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#1166](https://github.com/ethereum-optimism/community-hub/pull/1166): This pull request proposes an update to the `citizenship-eligibility-requirements.mdx` file.\n\n## CLOSED ISSUES\n\n### Superchain-Ops Automation and Efficiency\n- Several issues related to automating tasks in CI and improving the efficiency of the Superchain-Ops framework were closed. This includes enabling automatic task execution in CI for non-terminal states ([#337](https://github.com/ethereum-optimism/community-hub/issues/337)), supporting \"stacked\" proposals with incrementing nonces ([#342](https://github.com/ethereum-optimism/community-hub/issues/342)), and optimizing CI job performance ([#648](https://github.com/ethereum-optimism/community-hub/issues/648)).\n\n### Developer Experience and Tooling Refinements\n- Issues focused on enhancing the developer experience and refining tooling within the Superchain-Ops repository were resolved. This includes ensuring `SIMULATE_WITHOUT_LEDGER` checks for a value of `1` ([#448](https://github.com/ethereum-optimism/community-hub/issues/448)), updating task paths for mainnet directories ([#547](https://github.com/ethereum-optimism/community-hub/issues/547), [#600](https://github.com/ethereum-optimism/community-hub/issues/600)), and providing training for new tooling ([#514](https://github.com/ethereum-optimism/community-hub/issues/514)).\n\n### Contract and Validation Improvements\n- Multiple issues concerning contract architecture, testing, and validation processes were closed. This includes revisiting `MultisigTask` architecture ([#636](https://github.com/ethereum-optimism/community-hub/issues/636)), updating tests to use `safe-tools` and `stdStorage` libraries ([#605](https://github.com/ethereum-optimism/community-hub/issues/605)), and ensuring prevalidations are possible without hindrance from the address registry ([#654](https://github.com/ethereum-optimism/community-hub/issues/654)).\n\n### Documentation and Testing Updates\n- Issues related to documentation accuracy and testing procedures were addressed. This includes updating paths in improvement documents ([#548](https://github.com/ethereum-optimism/community-hub/issues/548)), creating mainnet examples for OPCM templates ([#651](https://github.com/ethereum-optimism/community-hub/issues/651)), and checking domain hashes from simulation against `VALIDATIONS.md` ([#679](https://github.com/ethereum-optimism/community-hub/issues/679)).\n\n## NEW ISSUES\nNo new issues were opened on Jun 26, 2025.\n\n## ACTIVE ISSUES\n\n### Release Pipeline Automation and Changelog Generation\n- **[#16097](https://github.com/ethereum-optimism/community-hub/issues/16097) Use GoReleaser for op-node/batcher/proposer/challenger release pipeline**\n    - **Latest Discussion:** `geoknee` suggested wiring up `op-workbench release-notes op-batcher` to automatically execute `git cliff` commands for generating release notes and pushing them to GitHub via API. This builds on previous discussions about committing changelog solutions to the codebase and using `git-cliff` for lighter-weight changelog generation. The core challenge remains streamlining the release process and avoiding further fragmentation of build systems, as highlighted by `protolambda`'s concerns about existing bloat and the need for a monorepo-first approach to GoReleaser.\n\n### Optimism Geth CPU Usage\n- **[#613](https://github.com/ethereum-optimism/community-hub/issues/613) Abnormal CPU usage with latest op-geth (v1.101511.0)**\n    - **Latest Discussion:** `jsvisa` provided instructions on how to use `pprof` to capture CPU performance data for `op-geth`, suggesting that the high CPU usage might be temporary due to log indexing rebuilds in `v1.101511.0`. `cpuchainorg` noted that the issue persists even after index upgrades and questioned why `op-geth` uses significantly more CPU than standard `go-ethereum`. `hekich` confirmed that CPU usage returned to normal after the index upgrade completed, suggesting it is indeed a temporary issue.\n\n### Superchain-Ops Migrate Script Improvements\n- **[#16326](https://github.com/ethereum-optimism/community-hub/issues/16326) OPCM Migrate Script Improvements**\n    - **Latest Discussion:** `Inphi` closed the issue, stating that the runbook has been updated to include sanity checks for script inputs, resolving the need for further improvements.\n\n### Superchain-Ops Test Workflow Consolidation\n- **[#16272](https://github.com/ethereum-optimism/community-hub/issues/16272) [op-acceptance-tests] Move all AT's into the one workflow**\n    - **Latest Discussion:** `scharissis` provided links to related pull requests in `infra` and `optimism` repositories, indicating ongoing work to consolidate acceptance tests into a single workflow.\n\n### Superchain-Ops Terminal Output Refinement\n- **[#781](https://github.com/ethereum-optimism/community-hub/issues/781) Refactor signFromChildMultisig to reduce noisy terminal output**\n    - **Latest Discussion:** `JoseValperga` and `nsancheznez` expressed interest in working on the issue. `Cass402` identified the `print` function within `simulateRun` as the primary cause of noisy output and proposed removing or commenting it out to focus on critical signing information.\n\n### Supersim vs. Interop Kurtosis Devnet\n- **[#399](https://github.com/ethereum-optimism/community-hub/issues/399) what's the difference between supersim and interop kurtosis devnet?**\n    - **Latest Discussion:** `zhiqiangxu` clarified that supersim is mainly for testing dapps rather than chains, which aligns with `fainashalts`'s explanation that supersim is a local tool for testing multichain/interop applications, acting as a lighter wrapper around Anvil for local development.", "2025-09-04T03:27:02.525Z"]
["ethereum-optimism/docs_day_2025-06-26", "ethereum-optimism/docs", "day", "2025-06-26", "# ethereum-optimism/docs Daily Update (Jun 26, 2025)\n## OVERVIEW \nThe day's development focused on a minor documentation update to the proposer configuration page. Several long-standing issues related to CI/CD improvements, task simulation, and Superchain-ops tooling were closed, indicating significant progress in these areas.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Updates\n- Updated the proposer configuration page based on a recent config review, ensuring the documentation reflects the latest setup. ([#1668](https://github.com/ethereum-optimism/docs/pull/1668))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Superchain-Ops Tooling and CI/CD Enhancements\n- Completed work on improving the OPCM Migrate Script, including sanity checks for inputs. ([#16326](https://github.com/ethereum-optimism/docs/issues/16326))\n- Implemented \"stacked\" simulations in CI, allowing for sequential execution of tasks with incrementing nonces and addressing previous nonce coordination challenges. ([#342](https://github.com/ethereum-optimism/docs/issues/342), [#337](https://github.com/ethereum-optimism/docs/issues/337))\n- Addressed issues related to `SIMULATE_WITHOUT_LEDGER` usage, ensuring more robust simulation behavior. ([#448](https://github.com/ethereum-optimism/docs/issues/448))\n- Updated task paths and fetch-task scripts to correctly reference mainnet task directories, improving the accuracy of simulations and operations. ([#547](https://github.com/ethereum-optimism/docs/issues/547), [#600](https://github.com/ethereum-optimism/docs/issues/600), [#548](https://github.com/ethereum-optimism/docs/issues/548))\n- Completed the setup of training calls and created Loom videos for the new Superchain-ops tooling, enhancing user adoption and understanding. ([#514](https://github.com/ethereum-optimism/docs/issues/514))\n- Refactored `MultisigTask` architecture and updated tests to use `stdStorage` and `SafeTestTools`, improving maintainability and readability. ([#636](https://github.com/ethereum-optimism/docs/issues/636), [#605](https://github.com/ethereum-optimism/docs/issues/605))\n- Enhanced CI job performance for template regression tests by optimizing chain discovery. ([#648](https://github.com/ethereum-optimism/docs/issues/648))\n- Implemented checks for domain and message hashes in CI simulations against `VALIDATIONS.md`, ensuring consistency and security. ([#679](https://github.com/ethereum-optimism/docs/issues/679))\n- Improved the granularity of `addresses.json` checking to reduce the frequency of `scr` submodule updates. ([#753](https://github.com/ethereum-optimism/docs/issues/753))\n- Enhanced the user experience for overriding nonces within the Superchain-ops flow. ([#770](https://github.com/ethereum-optimism/docs/issues/770))\n- Fixed an issue where `StateOverrideManager` always added the nonce as a state override, streamlining the override process. ([#814](https://github.com/ethereum-optimism/docs/issues/814))\n- Ensured that templates check against `StandardValidator` contracts where appropriate, improving validation logic. ([#838](https://github.com/ethereum-optimism/docs/issues/838))\n- Added a quick way to read addresses for chains not yet in the Superchain Registry, improving flexibility for upgrades. ([#923](https://github.com/ethereum-optimism/docs/issues/923))\n- Closed an issue related to testing Sepolia task for transferring ownership of ProtocolVersions, as templates for L1 and L2 owner transfers are now implemented. ([#554](https://github.com/ethereum-optimism/docs/issues/554))\n- Closed an issue regarding making a mainnet example for OPCM template, as many examples for various OPCM versions are now available. ([#651](https://github.com/ethereum-optimism/docs/issues/651))\n- Closed an issue regarding prevalidations not being hindered by address registry availability, as prevalidations can now be performed in task `_templateSetup` functions. ([#654](https://github.com/ethereum-optimism/docs/issues/654))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Release Pipeline Automation and GoReleaser Integration\n- **[#16097](https://github.com/ethereum-optimism/docs/issues/16097) Use GoReleaser for op-node/batcher/proposer/challenger release pipeline**: Discussion continues on automating the release pipeline for core OP Stack components. The latest comment from `geoknee` suggests wiring up `op-workbench release-notes` to automatically execute `git cliff` commands for changelog generation and potentially push to GitHub via API, aiming for a more automated and consistent release note process. Previous comments highlighted the need for a unified build system, avoiding further bloat from multiple build methods (docker bake, makefiles, justfiles), and ensuring GoReleaser is approached from a monorepo-first perspective.\n\n### op-geth CPU Usage and Performance\n- **[#613](https://github.com/ethereum-optimism/docs/issues/613) Abnormal CPU usage with latest op-geth ( v1.101511.0 )**: Users are reporting high CPU usage with `op-geth v1.101511.0`. The latest comments from `PierrickGT` and `jsvisa` focus on how to enable and capture pprof metrics to diagnose the CPU consumption. `PierrickGT` shared a `profile.pb.gz` and noted that the issue might be due to an index update, which took about 24 hours to complete on their system. `jsvisa` previously suggested that the high CPU usage is temporary due to a log indexing rebuild in the backported go-ethereum v1.15.11.\n\n### Terminal Output Refactoring\n- **[#781](https://github.com/ethereum-optimism/docs/issues/781) Refactor signFromChildMultisig to reduce noisy terminal output**: Community members are actively engaging with this issue, expressing interest in contributing to reduce the verbosity of `MultisigTask.sol`'s `signFromChildMultisig` function. `JoseValperga` and `Mau1401` have offered to work on this, aiming to make the terminal output cleaner and more user-friendly by focusing on critical signing information. `Cass402` identified that the `print` function within `simulateRun` is the primary cause of the noisy output and proposed removing or commenting it out.\n\n### Interop Devnet vs. Supersim\n- **[#399](https://github.com/ethereum-optimism/docs/issues/399) what's the difference between supersim and interop kurtosis devnet?**: The discussion clarifies the distinction between `supersim` and `kurtosis` devnets. `zhiqiangxu`'s latest comment seeks to confirm if `supersim` is primarily for testing dapps rather than chains, with `kurtosis` being used for chain testing. `fainashalts` previously explained that `supersim` is a lighter-weight wrapper around Anvil for testing multichain/interop applications, particularly for dapps planning to launch when interop is live on mainnet.", "2025-09-04T03:27:02.765Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-26", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-26", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 26, 2025)\n## OVERVIEW \nThe day saw significant progress in refining the Superchain-Ops tooling, with numerous issues related to task simulation, testing, and architecture being closed. A new pull request was opened, and discussions continued on optimizing release pipelines and local development environments.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Superchain-Ops Tooling Refinements:** Several improvements were made to the Superchain-Ops tooling, including addressing issues with `SIMULATE_WITHOUT_LEDGER` behavior ([#448](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/448)), updating task paths for mainnet ([#600](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/600)), and ensuring prevalidations are not hindered by the address registry availability ([#654](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/654)).\n*   **CI/CD and Testing Enhancements:** Efforts focused on optimizing CI job performance and improving testing methodologies. This included making the `template_regression_tests` CI job faster ([#648](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/648)), updating tests to use `contracts-bedrock safe-tools` and `stdStorage` library ([#605](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/605)), and checking domain hashes from simulation against `VALIDATIONS.md` ([#679](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/679)).\n*   **Task Management and User Experience:** Improvements were made to task management and the overall user experience within the Superchain-Ops framework. This involved supporting \"stacked\" proposals with incrementing nonces ([#342](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/342)), automatically running tasks in CI if in a non-terminal state ([#337](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/337)), and providing a quick way to read addresses for chains not in the superchain registry ([#923](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/923)).\n*   **Documentation and Training:** Documentation and training efforts were completed to support the new Superchain-Ops tooling. This included updating paths in improvement docs ([#548](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/548)) and setting up training calls for internal stakeholders ([#514](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/514)).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#1168](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1168) Create VBWLD: This new pull request was opened, but no further status or progress details are available.\n\n## CLOSED ISSUES\n\n*   **Superchain-Ops Tooling Enhancements:** Several issues related to the Superchain-Ops tooling were closed, including improvements to the OPCM Migrate Script ([#16326](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16326)), addressing the `SIMULATE_WITHOUT_LEDGER` value check ([#448](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/448)), and fixing the `StateOverrideManager` always adding nonce as a state override ([#814](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/814)).\n*   **CI/CD and Testing Improvements:** Multiple issues focused on CI/CD and testing were resolved. This includes automatically running tasks in CI if in a non-terminal state ([#337](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/337)), supporting \"stacked\" proposals with incrementing nonces ([#342](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/342)), and making the `template_regression_tests` CI job faster ([#648](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/648)).\n*   **Task Management and Documentation:** Issues related to task management and documentation were closed. This involved updating the fetch-task to use the mainnet task directory ([#547](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/547)), updating paths in improvement docs ([#548](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/548)), and updating task paths for mainnet tasks ([#600](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/600)).\n*   **Refactoring and User Experience:** Refactoring efforts and user experience improvements were completed. This included revisiting the `MultisigTask` architecture ([#636](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/636)), printing state diff in markdown format ([#777](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/777)), and providing a simple UX for users to override Nonces ([#770](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/770)).\n\n## NEW ISSUES\nNo new issues were opened on Jun 26, 2025.\n\n## ACTIVE ISSUES\n\n*   **Release Pipeline Automation:** Discussion on [#16097](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16097) (Use GoReleaser for op-node/batcher/proposer/challenger release pipeline) continued with `geoknee` suggesting wiring up `op-workbench release-notes` to automatically execute `git cliff` for release note generation and potentially push to GitHub via API. This builds on previous comments about committing changelog solutions to the codebase and using `git cliff` for lighter-weight changelog generation. `protolambda` previously emphasized the need to unify build systems and avoid adding more complexity without removing existing debt, while `sebastianst` clarified the primary goal was automated release note generation.\n*   **Abnormal CPU Usage in op-geth:** On [#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613) (Abnormal CPU usage with latest op-geth (v1.101511.0)), `jsvisa` provided command-line arguments for `pprof` to capture CPU performance, suggesting the high usage might be temporary due to log indexing rebuild. `cpuchainorg` confirmed the issue persists even after index upgrade, indicating a potential broken goroutine. `hekich` noted that CPU usage returned to normal after the index upgrade completed.\n*   **Refactoring `signFromChildMultisig`:** Issue [#781](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/781) (Refactor signFromChildMultisig to reduce noisy terminal output) saw new interest from `JoseValperga` and `nsancheznez` offering to work on the improvement. `Cass402` previously identified the `print` function call within `simulateRun` as the source of the noisy output and proposed removing it, seeking feedback on whether a more selective reduction is preferred.\n*   **Supersim vs. Interop Kurtosis Devnet:** On [#399](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/399) (what's the difference between supersim and interop kurtosis devnet?), `zhiqiangxu` clarified if supersim is mainly for testing dapps rather than chains. `fainashalts` previously explained supersim as a lighter-weight local tool (wrapper around anvil) for testing multichain/interop applications, while `tremarkley` highlighted its use for local development.", "2025-09-04T03:27:03.190Z"]
["ethereum-optimism/ecosystem_day_2025-06-26", "ethereum-optimism/ecosystem", "day", "2025-06-26", "# ethereum-optimism/ecosystem Daily Update (Jun 26, 2025)\n## OVERVIEW \nToday's development focused on enhancing interop functionality with new GasTank integrations and autorelayer improvements. Significant progress was also made in streamlining Superchain-Ops tooling, with multiple issues related to task simulation, testing, and architecture being closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Interoperability Enhancements for GasTank\nNew features were added to improve the interaction with the GasTank, including an endpoint for fetching pending messages and an update to the autorelayer to only process messages with sufficient GasTank funds. This ensures more efficient and secure message relaying within the Superchain.\n- [#860](https://github.com/ethereum-optimism/ecosystem/pull/860)\n- [#861](https://github.com/ethereum-optimism/ecosystem/pull/861)\n- [#875](https://github.com/ethereum-optimism/ecosystem/pull/875)\n\n### Superchain-Ops Tooling Refinements\nSeveral improvements were made to the Superchain-Ops tooling, addressing issues related to task simulation, nonce handling, and address registry integration. These changes aim to enhance the developer experience and streamline operational tasks.\n- [#337](https://github.com/ethereum-optimism/ecosystem/pull/337)\n- [#342](https://github.com/ethereum-optimism/ecosystem/pull/342)\n- [#448](https://github.com/ethereum-optimism/ecosystem/pull/448)\n- [#547](https://github.com/ethereum-optimism/ecosystem/pull/547)\n- [#548](https://github.com/ethereum-optimism/ecosystem/pull/548)\n- [#554](https://github.com/ethereum-optimism/ecosystem/pull/554)\n- [#600](https://github.com/ethereum-optimism/ecosystem/pull/600)\n- [#605](https://github.com/ethereum-optimism/ecosystem/pull/605)\n- [#636](https://github.com/ethereum-optimism/ecosystem/pull/636)\n- [#648](https://github.com/ethereum-optimism/ecosystem/pull/648)\n- [#651](https://github.com/ethereum-optimism/ecosystem/pull/651)\n- [#654](https://github.com/ethereum-optimism/ecosystem/pull/654)\n- [#679](https://github.com/ethereum-optimism/ecosystem/pull/679)\n- [#753](https://github.com/ethereum-optimism/ecosystem/pull/753)\n- [#770](https://github.com/ethereum-optimism/ecosystem/pull/770)\n- [#777](https://github.com/ethereum-optimism/ecosystem/pull/777)\n- [#814](https://github.com/ethereum-optimism/ecosystem/pull/814)\n- [#838](https://github.com/ethereum-optimism/ecosystem/pull/838)\n- [#923](https://github.com/ethereum-optimism/ecosystem/pull/923)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Interoperability and Gas Tank Integration\nThe issue of updating the relayer to only relay messages for which the gas tank has funds has been closed. This directly supports the new features added to the autorelayer and ponder-interop for more efficient and secure message relaying.\n- [#839](https://github.com/ethereum-optimism/ecosystem/issues/839)\n\n### Superchain-Ops Tooling and Process Improvements\nSeveral issues related to the Superchain-Ops tooling and processes were closed, indicating significant progress in streamlining operations. This includes improvements in task simulation, handling of stacked proposals, and updates to documentation and testing.\n- [#337](https://github.com/ethereum-optimism/ecosystem/issues/337)\n- [#342](https://github.com/ethereum-optimism/ecosystem/issues/342)\n- [#448](https://github.com/ethereum-optimism/ecosystem/issues/448)\n- [#514](https://github.com/ethereum-optimism/ecosystem/issues/514)\n- [#547](https://github.com/ethereum-optimism/ecosystem/issues/547)\n- [#548](https://github.com/ethereum-optimism/ecosystem/issues/548)\n- [#554](https://github.com/ethereum-optimism/ecosystem/issues/554)\n- [#600](https://github.com/ethereum-optimism/ecosystem/issues/600)\n- [#605](https://github.com/ethereum-optimism/ecosystem/issues/605)\n- [#636](https://github.com/ethereum-optimism/ecosystem/issues/636)\n- [#648](https://github.com/ethereum-optimism/ecosystem/issues/648)\n- [#651](https://github.com/ethereum-optimism/ecosystem/issues/651)\n- [#654](https://github.com/ethereum-optimism/ecosystem/issues/654)\n- [#679](https://github.com/ethereum-optimism/ecosystem/issues/679)\n- [#753](https://github.com/ethereum-optimism/ecosystem/issues/753)\n- [#770](https://github.com/ethereum-optimism/ecosystem/issues/770)\n- [#777](https://github.com/ethereum-optimism/ecosystem/issues/777)\n- [#814](https://github.com/ethereum-optimism/ecosystem/issues/814)\n- [#838](https://github.com/ethereum-optimism/ecosystem/issues/838)\n- [#923](https://github.com/ethereum-optimism/ecosystem/issues/923)\n\n### OPCM Migrate Script Improvements\nThe issue regarding improvements to the OPCM Migrate Script has been closed, with an update to the runbook to include sanity checks for script inputs.\n- [#16326](https://github.com/ethereum-optimism/ecosystem/issues/16326)\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Abnormal CPU usage with latest op-geth (v1.101511.0)\nDiscussion continues on the abnormal CPU usage observed with `op-geth v1.101511.0`. A user provided a `pprof` file and noted that the performance issue might be due to an index update, which took about 24 hours to complete on their system. Another user shared commands to capture `pprof` data for further analysis. The issue seems to be related to the log indexing rebuild introduced in this version, which is expected to cause temporary high CPU usage until completed.\n- [#613](https://github.com/ethereum-optimism/ecosystem/issues/613)\n\n### Use GoReleaser for op-node/batcher/proposer/challenger release pipeline\nThe discussion on using GoReleaser for the release pipeline continues, with a recent comment suggesting that if release notes or changelogs are generated, they should be committed to the codebase (either monorepo or `op-workbench`) to enable a \"one-click solution\" for consistent and accurate changelogs. This builds on previous discussions about streamlining the release process and unifying build systems.\n- [#16097](https://github.com/ethereum-optimism/ecosystem/issues/16097)\n\n### [op-acceptance-tests] Move all AT's into the one workflow\nA new comment linked several related pull requests in `infra` and `optimism` repositories, indicating ongoing work to consolidate acceptance tests into a single workflow. This is part of a broader effort to centralize and streamline testing procedures.\n- [#16272](https://github.com/ethereum-optimism/ecosystem/issues/16272)\n\n### Refactor signFromChildMultisig to reduce noisy terminal output\nNew comments from community members express interest in working on this issue, aiming to reduce the verbosity of the `signFromChildMultisig` function's terminal output. One user identified the `print` function call within `simulateRun` as the primary source of noise and proposed removing or commenting it out to focus on critical signing information.\n- [#781](https://github.com/ethereum-optimism/ecosystem/issues/781)\n\n### what's the difference between supersim and interop kurtosis devnet?\nA user clarified that `supersim` is mainly for testing dapps and multichain/interop applications, serving as a lighter-weight wrapper around Anvil with pre-deployed OP Stack and support for upcoming interop features. This distinguishes it from Kurtosis, which is used for testing the chains themselves.\n- [#399](https://github.com/ethereum-optimism/ecosystem/issues/399)", "2025-09-04T03:27:04.949Z"]
["ethereum-optimism/op-analytics_day_2025-06-26", "ethereum-optimism/op-analytics", "day", "2025-06-26", "# ethereum-optimism/op-analytics Daily Update (Jun 26, 2025)\n## OVERVIEW \nThe day's development primarily focused on minor notebook modifications and significant progress in closing out several long-standing issues related to Superchain-Ops tooling, CI/CD improvements, and task management.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Notebook Adjustments**: Minor modifications were made to existing notebooks, specifically `get_all_txs.ipynb` and `pull_l2_activity.ipynb`, within the `other_chains_tracking` area ([#1661](https://github.com/ethereum-optimism/op-analytics/pull/1661)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Superchain-Ops Tooling Enhancements**: Several issues related to the Superchain-Ops tooling were closed, indicating significant progress in improving the developer experience and functionality. This includes addressing the need for \"stacked\" proposals with incrementing nonces ([#342](https://github.com/ethereum-optimism/op-analytics/issues/342)), refining the `SIMULATE_WITHOUT_LEDGER` functionality ([#448](https://github.com/ethereum-optimism/op-analytics/issues/448)), updating task paths for mainnet operations ([#600](https://github.com/ethereum-optimism/op-analytics/issues/600), [#547](https://github.com/ethereum-optimism/op-analytics/issues/547)), and improving the `MultisigTask` architecture ([#636](https://github.com/ethereum-optimism/op-analytics/issues/636)). Additionally, issues concerning the `StateOverrideManager` ([#814](https://github.com/ethereum-optimism/op-analytics/issues/814)), `StandardValidator` checks in templates ([#838](https://github.com/ethereum-optimism/op-analytics/issues/838)), and reading addresses for chains not in the Superchain Registry ([#923](https://github.com/ethereum-optimism/op-analytics/issues/923)) were resolved.\n*   **CI/CD and Testing Improvements**: Progress was made on continuous integration and testing. This includes the closure of an issue to automatically run tasks in CI if they are in a non-terminal state ([#337](https://github.com/ethereum-optimism/op-analytics/issues/337)), and an issue to speed up the `template_regression_tests` CI job ([#648](https://github.com/ethereum-optimism/op-analytics/issues/648)).\n*   **Documentation and User Experience**: Issues related to documentation and user experience were addressed, such as updating paths in improvement docs ([#548](https://github.com/ethereum-optimism/op-analytics/issues/548)), providing simple UX for nonce overrides ([#770](https://github.com/ethereum-optimism/op-analytics/issues/770)), and printing state diffs in markdown format ([#777](https://github.com/ethereum-optimism/op-analytics/issues/777)).\n*   **Task and Registry Management**: Several issues related to task and registry management were closed, including improvements to the OPCM Migrate Script ([#16326](https://github.com/ethereum-optimism/op-analytics/issues/16326)), the creation of a mainnet example for the OPCM template ([#651](https://github.com/ethereum-optimism/op-analytics/issues/651)), and more granular checking of `addresses.json` to reduce submodule updates ([#753](https://github.com/ethereum-optimism/op-analytics/issues/753)).\n*   **Training and Onboarding**: The issue concerning setting up a training call for the new Superchain-Ops tooling was closed, indicating that loom videos and training calls have been completed ([#514](https://github.com/ethereum-optimism/op-analytics/issues/514)).\n*   **Testing and Validation**: Issues related to testing and validation were closed, including a test for Sepolia task to transfer owner of ProtocolVersions ([#554](https://github.com/ethereum-optimism/op-analytics/issues/554)), updating tests to use `contracts-bedrock` safe-tools and `stdStorage` library ([#605](https://github.com/ethereum-optimism/op-analytics/issues/605)), and checking domain hash from simulation matches `VALIDATIONS.md` hash entry ([#679](https://github.com/ethereum-optimism/op-analytics/issues/679)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n*   **Abnormal CPU usage with latest op-geth ([#613](https://github.com/ethereum-optimism/op-analytics/issues/613))**: Discussion continues regarding high CPU usage with `op-geth v1.101511.0`. The latest comments suggest that the high CPU usage might be temporary, related to log indexing rebuilds after backporting `go-ethereum v1.15.11`. Users are sharing command-line arguments for `pprof` to help diagnose the issue, and one user reported that the CPU usage returned to normal after the index upgrade completed.\n*   **Refactor signFromChildMultisig to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/op-analytics/issues/781))**: Community members are actively engaging with this issue, with multiple individuals expressing interest in contributing to the refactor. The core problem identified is the excessive logging from the `print` function within `simulateRun`, making it difficult to focus on critical signing information. Proposed solutions involve removing or selectively reducing this output.\n*   **Use GoReleaser for op-node/batcher/proposer/challenger release pipeline ([#16097](https://github.com/ethereum-optimism/op-analytics/issues/16097))**: The discussion revolves around automating the release pipeline and generating release notes for core OP Stack components. A recent comment suggests wiring up `op-workbench` to automatically execute `git cliff` commands for changelog generation and pushing them via the GitHub API, aiming for a \"one-click solution\" for high-quality changelogs.\n*   **[op-acceptance-tests] Move all AT's into the one workflow ([#16272](https://github.com/ethereum-optimism/op-analytics/issues/16272))**: A recent comment provides links to related pull requests in `infra` and `optimism` repositories, indicating ongoing work to consolidate acceptance tests into a single workflow.\n*   **what's the difference between supersim and interop kurtosis devnet? ([#399](https://github.com/ethereum-optimism/op-analytics/issues/399))**: The discussion clarifies that `supersim` is a lighter-weight local development tool built around Anvil for testing multichain/interop applications, while Kurtosis is used by the OP Stack for chain-level testing. The latest comment confirms that `supersim` is primarily for testing dapps, whereas Kurtosis is used for the chains themselves.", "2025-09-04T03:27:08.708Z"]
["ethereum-optimism/superchain-ops_day_2025-06-26", "ethereum-optimism/superchain-ops", "day", "2025-06-26", "# ethereum-optimism/superchain-ops Daily Update (Jun 26, 2025)\n## OVERVIEW \nToday's development focused on updating Sepolia OPCM and Standard Validator addresses to rc.8, alongside significant progress in closing several long-standing issues related to CI/CD improvements, testing infrastructure, and task management.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n- **Sepolia Configuration Updates**: Critical addresses for Sepolia OPCM and Standard Validator were updated to rc.8, ensuring compatibility with the latest `op-contracts` v4.0.0 release candidate. This involved modifications to multiple configuration files and validation documentation. ([#1095](https://github.com/ethereum-optimism/superchain-ops/pull/1095))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n- **CI/CD and Task Automation Enhancements**: Several issues related to continuous integration, task simulation, and automation were closed. This includes implementing automatic task execution in CI for non-terminal states ([#337](https://github.com/ethereum-optimism/superchain-ops/issues/337)), supporting \"stacked\" proposals with incrementing nonces ([#342](https://github.com/ethereum-optimism/superchain-ops/issues/342)), and optimizing CI job performance for template regression tests ([#648](https://github.com/ethereum-optimism/superchain-ops/issues/648)). Improvements were also made to ensure `SIMULATE_WITHOUT_LEDGER` checks for a value of `1` ([#448](https://github.com/ethereum-optimism/superchain-ops/issues/448)) and to verify domain hashes from simulation against `VALIDATIONS.md` entries ([#679](https://github.com/ethereum-optimism/superchain-ops/issues/679)).\n- **Documentation and Path Refinements**: Updates were made to ensure correct paths in improvement documentation ([#548](https://github.com/ethereum-optimism/superchain-ops/issues/548)) and to align task paths for mainnet operations ([#600](https://github.com/ethereum-optimism/superchain-ops/issues/600)). The `fetch-task` script was updated to use the mainnet task directory ([#547](https://github.com/ethereum-optimism/superchain-ops/issues/547)), and an example for OPCM template under `improvements/tasks/example/eth` was created ([#651](https://github.com/ethereum-optimism/superchain-ops/issues/651)).\n- **Testing and Template System Improvements**: Efforts to enhance the testing framework and template system were completed. This involved updating tests to utilize `contracts-bedrock` safe-tools and `stdStorage` library ([#605](https://github.com/ethereum-optimism/superchain-ops/issues/605)), and ensuring templates check against `StandardValidator` contracts ([#838](https://github.com/ethereum-optimism/superchain-ops/issues/838)). The `MultisigTask` architecture was revisited for better readability and maintainability ([#636](https://github.com/ethereum-optimism/superchain-ops/issues/636)).\n- **User Experience and Validation Enhancements**: Several issues aimed at improving the developer and user experience were closed. This includes providing a simple UX for users to override Nonces ([#770](https://github.com/ethereum-optimism/superchain-ops/issues/770)), printing state diffs in markdown format ([#777](https://github.com/ethereum-optimism/superchain-ops/issues/777)), and addressing an issue where `StateOverrideManager` always added the nonce as a state override ([#814](https://github.com/ethereum-optimism/superchain-ops/issues/814)). Additionally, prevalidations were made possible without hindrance from the address registry's availability ([#654](https://github.com/ethereum-optimism/superchain-ops/issues/654)), and a quick way to read addresses for chains not in the superchain registry was added ([#923](https://github.com/ethereum-optimism/superchain-ops/issues/923)).\n- **Miscellaneous Closures**: Other closed issues include the completion of training calls and Loom videos for the new `superchain-ops` tooling ([#514](https://github.com/ethereum-optimism/superchain-ops/issues/514)), and the closure of a test for Sepolia task to transfer owner of ProtocolVersions as templates for L1/L2 owner transfers are now implemented ([#554](https://github.com/ethereum-optimism/superchain-ops/issues/554)). Hash verifiability was also improved by printing input data and nested hashes for easier computation ([#686](https://github.com/ethereum-optimism/superchain-ops/issues/686)). More granular checking of `addresses.json` was implemented to reduce the frequency of `scr` submodule updates ([#753](https://github.com/ethereum-optimism/superchain-ops/issues/753)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n- **OP Stack Release Pipeline Automation**: Discussions continue on using GoReleaser for `op-node/batcher/proposer/challenger` release pipelines ([#16097](https://github.com/ethereum-optimism/superchain-ops/issues/16097)). The focus is on automating release notes generation, with suggestions for `git-cliff` and integrating it into `op-workbench`. Concerns were raised about adding a new build system without removing existing ones, advocating for a unified monorepo-first approach to avoid further complexity.\n- **OP-Geth CPU Usage**: Users are reporting abnormal CPU usage with the latest `op-geth` v1.101511.0 ([#613](https://github.com/ethereum-optimism/superchain-ops/issues/613)). Initial speculation points to a temporary spike due to log index rebuilding after a backport from `go-ethereum` v1.15.11. Users are sharing pprof data to diagnose the issue, with some noting that CPU usage returns to normal after the index upgrade completes.\n- **Multisig Terminal Output Refactoring**: There's an ongoing effort to refactor `signFromChildMultisig` to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/superchain-ops/issues/781)). Community members are actively proposing solutions, such as removing or selectively reducing `print` calls within `simulateRun` to improve focus on critical signing information.\n- **Supersim vs. Interop Kurtosis Devnet**: A discussion is clarifying the differences between `supersim` and `interop kurtosis devnet` for local development ([#399](https://github.com/ethereum-optimism/superchain-ops/issues/399)). It was confirmed that `supersim` is a lighter-weight `anvil` wrapper primarily for testing multichain/interop applications, while Kurtosis is used for testing the chains themselves.", "2025-09-04T03:27:10.436Z"]
["ethereum-optimism/supersim_day_2025-06-26", "ethereum-optimism/supersim", "day", "2025-06-26", "# ethereum-optimism/supersim Daily Update (Jun 26, 2025)\n## OVERVIEW \nThe day's development focused on updating the GasTank to its latest version, impacting several genesis files. Significant progress was also made in closing multiple long-standing issues related to CI/CD improvements, task simulation, and documentation within the `superchain-ops` context.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Core Protocol Updates**: The `GasTank` component was updated to its latest version, affecting several L1 and L2 genesis configuration files. This ensures the simulation environment aligns with the most recent protocol specifications. ([#412](https://github.com/ethereum-optimism/supersim/pull/412))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **CI/CD and Task Automation Enhancements**: Several issues related to continuous integration, task automation, and simulation processes were closed. This includes improvements for automatically running tasks in CI ([#337](https://github.com/ethereum-optimism/supersim/issues/337)), supporting \"stacked\" proposals with incrementing nonces ([#342](https://github.com/ethereum-optimism/supersim/issues/342)), refining `SIMULATE_WITHOUT_LEDGER` behavior ([#448](https://github.com/ethereum-optimism/supersim/issues/448)), and optimizing CI job performance ([#648](https://github.com/ethereum-optimism/supersim/issues/648)). Additionally, the issue concerning state override nonce additions was resolved ([#814](https://github.com/ethereum-optimism/supersim/issues/814)).\n*   **Documentation and Developer Experience Improvements**: Efforts to enhance documentation and developer tooling were completed. This involved updating paths in improvement documentation ([#548](https://github.com/ethereum-optimism/supersim/issues/548)), updating task paths for mainnet tasks ([#600](https://github.com/ethereum-optimism/supersim/issues/600)), and providing a quick way to read addresses for chains not yet in the superchain registry ([#923](https://github.com/ethereum-optimism/supersim/issues/923)). Training calls for the new `superchain-ops` tooling were also completed ([#514](https://github.com/ethereum-optimism/supersim/issues/514)).\n*   **Multisig and Contract Interaction Refinements**: Issues related to multisig task architecture and contract interactions were addressed. This includes revisiting the `MultisigTask` architecture ([#636](https://github.com/ethereum-optimism/supersim/issues/636)), updating tests to use `contracts-bedrock` safe-tools and `stdStorage` library ([#605](https://github.com/ethereum-optimism/supersim/issues/605)), and ensuring prevalidations are not hindered by address registry availability ([#654](https://github.com/ethereum-optimism/supersim/issues/654)). Improvements were also made to ensure templates check against `StandardValidator` contracts ([#838](https://github.com/ethereum-optimism/supersim/issues/838)).\n*   **Task Management and Validation**: Several tasks related to the management and validation of operational tasks were closed. This includes improvements to the OPCM Migrate Script ([#16326](https://github.com/ethereum-optimism/supersim/issues/16326)), updating `Fetch-Task` to use the Mainnet Task Directory ([#547](https://github.com/ethereum-optimism/supersim/issues/547)), creating a mainnet example for the OPCM template ([#651](https://github.com/ethereum-optimism/supersim/issues/651)), and checking domain hash from simulation against `VALIDATIONS.md` ([#679](https://github.com/ethereum-optimism/supersim/issues/679)). A test for Sepolia task to transfer owner of ProtocolVersions was also completed ([#554](https://github.com/ethereum-optimism/supersim/issues/554)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n*   **Abnormal CPU usage with latest op-geth ([#613](https://github.com/ethereum-optimism/supersim/issues/613))**: Discussion continues regarding high CPU usage in `op-geth` v1.101511.0. The latest comments suggest the issue might be temporary due to index updates, with `jsvisa` requesting `pprof` data for further analysis and `cpuchainorg` confirming the issue persists even after index upgrades, suspecting a broken goroutine. `PierrickGT` also reported the same issue and provided a `profile.pb.gz` file, noting the issue was due to index updates taking about 24 hours.\n*   **Use GoReleaser for op-node/batcher/proposer/challenger release pipeline ([#16097](https://github.com/ethereum-optimism/supersim/issues/16097))**: The conversation revolves around automating release notes and the overall release pipeline. `geoknee` proposed wiring up `op-workbench` to automatically generate and push release notes using `git cliff`, emphasizing the desire for a one-click solution for consistent, high-quality changelogs.\n*   **Refactor signFromChildMultisig to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/supersim/issues/781))**: Community members `JoseValperga`, `nsancheznez`, `Mau1401`, and `TheOnma` have expressed interest in working on this issue. `Cass402` identified the `print` function call within `simulateRun` as the primary source of noisy output and proposed removing or commenting it out, seeking feedback on whether this meets expectations or if a more selective reduction is preferred.", "2025-09-04T03:27:11.036Z"]
["ethereum-optimism/specs_day_2025-06-26", "ethereum-optimism/specs", "day", "2025-06-26", "# ethereum-optimism/specs Daily Update (Jun 26, 2025)\n## OVERVIEW \nThe day saw significant progress in refining supervisor specifications and enhancing Superchain-Ops tooling, with multiple issues related to task management, testing, and developer experience being closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Supervisor Specification Refinements\n- Added constraints for `supervisor_syncStatus` to improve interop specifications ([#723](https://github.com/ethereum-optimism/specs/pull/723)).\n- Clarified the concept of a \"managed node\" within the supervisor documentation, distinguishing it from `indexing` and `following` modes ([#732](https://github.com/ethereum-optimism/specs/pull/732)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Superchain-Ops Tooling and Task Management Improvements\n- Implemented automated task execution in CI for non-terminal tasks, improving efficiency and reducing manual intervention ([#337](https://github.com/ethereum-optimism/specs/issues/337)).\n- Enhanced support for \"stacked\" proposals with incrementing nonces, streamlining the execution of multiple sequential tasks ([#342](https://github.com/ethereum-optimism/specs/issues/342)).\n- Refined `SIMULATE_WITHOUT_LEDGER` behavior to check for a value of `1`, preventing \"bugs\" when tasks are made interactive ([#448](https://github.com/ethereum-optimism/specs/issues/448)).\n- Updated `fetch-task.sh` to use the mainnet task directory, aligning with actual deployment environments ([#547](https://github.com/ethereum-optimism/specs/issues/547)).\n- Updated paths in improvement documentation to reflect current file structures ([#548](https://github.com/ethereum-optimism/specs/issues/548)).\n- Closed the issue for testing Sepolia task to transfer owner of ProtocolVersions, as templates for L1 and L2 owner transfers are now implemented ([#554](https://github.com/ethereum-optimism/specs/issues/554)).\n- Completed training calls and created Loom videos for the new Superchain-Ops tooling, improving user adoption ([#514](https://github.com/ethereum-optimism/specs/issues/514)).\n- Updated task paths for mainnet tasks, ensuring monorepo integration tests point to the correct directories ([#600](https://github.com/ethereum-optimism/specs/issues/600)).\n- Closed the issue regarding MultisigTask Architecture, as a larger refactor project is underway to support arbitrary nesting ([#636](https://github.com/ethereum-optimism/specs/issues/636)).\n- Updated tests to use `contracts-bedrock` safe-tools and `stdStorage` library, enhancing maintainability and readability ([#605](https://github.com/ethereum-optimism/specs/issues/605)).\n- Addressed the issue of prevalidations being hindered by address registry availability, allowing necessary prevalidations in task `_templateSetup` functions ([#654](https://github.com/ethereum-optimism/specs/issues/654)).\n- Improved the speed of the `template_regression_tests` CI job ([#648](https://github.com/ethereum-optimism/specs/issues/648)).\n- Created mainnet examples for OPCM templates, providing clear simulation examples ([#651](https://github.com/ethereum-optimism/specs/issues/651)).\n- Implemented checks for domain hash matching `VALIDATIONS.md` entries as part of stacked simulations ([#679](https://github.com/ethereum-optimism/specs/issues/679)).\n- Implemented markdown formatting for state diff printing, improving readability ([#777](https://github.com/ethereum-optimism/specs/issues/777)).\n- Implemented more granular checking of `addresses.json` to reduce the need for frequent `scr` submodule updates ([#753](https://github.com/ethereum-optimism/specs/issues/753)).\n- Closed the issue for simple UX for users to override Nonces, as `config.toml` files provide clear and functional UX ([#770](https://github.com/ethereum-optimism/specs/issues/770)).\n- Fixed `StateOverrideManager` to prevent it from always adding the nonce as a state override ([#814](https://github.com/ethereum-optimism/specs/issues/814)).\n- Implemented checks against `StandardValidator` contracts within OPCM templates' `_validate` functions ([#838](https://github.com/ethereum-optimism/specs/issues/838)).\n- Added a quick way to read addresses for chains not in the Superchain Registry, improving developer workflow ([#923](https://github.com/ethereum-optimism/specs/issues/923)).\n\n### Supervisor Sync Status Constraints\n- Closed the issue regarding adding constraints for `supervisor_syncStatus`, which was addressed by PR [#723](https://github.com/ethereum-optimism/specs/pull/723) ([#718](https://github.com/ethereum-optimism/specs/issues/718)).\n\n### OPCM Migrate Script Improvements\n- Closed the issue for OPCM Migrate Script Improvements, with updates to the runbook to include sanity checks for script inputs ([#16326](https://github.com/ethereum-optimism/specs/issues/16326)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Abnormal CPU usage with latest op-geth ([#613](https://github.com/ethereum-optimism/specs/issues/613))\nDiscussion continues on the abnormal CPU usage observed with `op-geth` v1.101511.0. Users are sharing command-line arguments for `pprof` to capture CPU performance data. It's suggested that the high CPU usage might be temporary due to log indexing rebuilds, but some users report persistence even after index upgrades. A user shared a `profile.pb.gz` file for analysis, noting that their performance issue was due to index updates taking about 24 hours.\n\n### Use GoReleaser for op-node/batcher/proposer/challenger release pipeline ([#16097](https://github.com/ethereum-optimism/specs/issues/16097))\nThe discussion revolves around automating the release pipeline and generating release notes for OP Stack components. There's a desire for a one-click solution for high-quality, accurate changelogs. Concerns were raised about adding another build system (GoReleaser) without first consolidating existing ones (docker bake, makefiles, justfiles) to avoid further bloat and inconsistencies. A lighter-weight solution for changelog generation using `git cliff` was also documented.\n\n### [op-acceptance-tests] Move all AT's into the one workflow ([#16272](https://github.com/ethereum-optimism/specs/issues/16272))\nA recent comment points to related pull requests in `infra` and `optimism` repositories, indicating ongoing work to consolidate acceptance tests into a single workflow.\n\n### Refactor signFromChildMultisig to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/specs/issues/781))\nCommunity members are actively engaging with this issue, expressing interest in working on it. The core problem identified is the `print` function within `MultisigTask.sol` generating excessive terminal output during simulations. Proposed solutions include removing or commenting out the `print` call in `simulateRun` to focus on critical signing information.\n\n### what's the difference between supersim and interop kurtosis devnet? ([#399](https://github.com/ethereum-optimism/specs/issues/399))\nThe discussion clarifies that `supersim` is a lighter-weight local development tool, a wrapper around `anvil`, primarily for testing multichain/interop applications and dapps. In contrast, Kurtosis is used by the OP Stack for testing chains. `supersim` is noted for its ability to test upcoming features like interop, with several applications already using it for development.", "2025-09-04T03:27:11.454Z"]
["ethereum-optimism/optimism_day_2025-06-26", "ethereum-optimism/optimism", "day", "2025-06-26", "# ethereum-optimism/optimism Daily Update (Jun 26, 2025)\n## OVERVIEW \nToday's development focused on enhancing test suite reliability and expanding deployment capabilities. Key achievements include aligning test contracts with new validation rules, adding end-to-end bootstrap tests for `op-deployer`, and implementing an API for the `op-supervisor`'s Failsafe mode.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Test Suite Refinements and Compliance\nSignificant effort was directed towards improving the robustness and compliance of the test suite. This involved updating several test files to align with new validation script rules, ensuring consistency in contract naming conventions, and reducing the exclusion list for test validation.\n- [#16561](https://github.com/ethereum-optimism/optimism/pull/16561)\n- [#16590](https://github.com/ethereum-optimism/optimism/pull/16590)\n\n### Enhanced Deployment and Bootstrap Testing\nThe `op-deployer` received new end-to-end tests for bootstrapping the Superchain and its implementations. These tests validate deployments using `apply` against both local and tagged artifacts, improving the reliability of the deployment process. Additionally, support for custom OPCM was integrated, reimplementing RPC calls in Go for compatibility with older `op-contracts` versions.\n- [#16575](https://github.com/ethereum-optimism/optimism/pull/16575)\n- [#16546](https://github.com/ethereum-optimism/optimism/pull/16546)\n\n### Supervisor API for Failsafe Mode\nA new API was introduced for the `op-supervisor` to support Failsafe mode, a component of the AutoStop feature. This API allows for getting and setting admin access, utilizing an atomic boolean to short-circuit `CheckAccessList` and return an `ErrAutoStop` when Failsafe is active.\n- [#16582](https://github.com/ethereum-optimism/optimism/pull/16582)\n\n## NEWLY OPENED PULL REQUESTS\n- A dependency update was initiated to bump `github.com/libp2p/go-libp2p-pubsub` from version `0.12.0` to `0.14.1` ([#16592](https://github.com/ethereum-optimism/optimism/pull/16592)).\n\n## CLOSED ISSUES\n\n### Superchain Operations and Task Management Improvements\nSeveral issues related to Superchain operations and task management were closed, indicating significant progress in streamlining these processes. This includes the implementation of stacked simulations for automatically running tasks in CI ([#337](https://github.com/ethereum-optimism/optimism/issues/337), [#342](https://github.com/ethereum-optimism/optimism/issues/342)), improvements to the OPCM Migrate Script ([#16326](https://github.com/ethereum-optimism/optimism/issues/16326)), and enhancements to `SIMULATE_WITHOUT_LEDGER` functionality ([#448](https://github.com/ethereum-optimism/optimism/issues/448)).\n\n### Documentation and Path Updates\nDocumentation and path-related issues were resolved, ensuring accuracy and consistency across the repository. This includes updating paths in improvement documents ([#548](https://github.com/ethereum-optimism/optimism/issues/548)), updating task paths for mainnet tasks ([#600](https://github.com/ethereum-optimism/optimism/issues/600)), and updating `Fetch-Task` to use the mainnet task directory ([#547](https://github.com/ethereum-optimism/optimism/issues/547)).\n\n### Template and Validation System Enhancements\nImprovements to the template and validation systems were completed, leading to more robust and efficient development workflows. This involved ensuring templates check against `StandardValidator` contracts ([#838](https://github.com/ethereum-optimism/optimism/issues/838)), making prevalidations possible regardless of address registry availability ([#654](https://github.com/ethereum-optimism/optimism/issues/654)), and checking domain hash from simulation against `VALIDATIONS.md` entries ([#679](https://github.com/ethereum-optimism/optimism/issues/679)).\n\n### Refactoring and UX Improvements\nRefactoring efforts and user experience enhancements were finalized. This includes addressing the `StateOverrideManager` always adding nonce as a state override ([#814](https://github.com/ethereum-optimism/optimism/issues/814)), providing a simple UX for users to override Nonces ([#770](https://github.com/ethereum-optimism/optimism/issues/770)), and improving the granularity of `addresses.json` checking ([#753](https://github.com/ethereum-optimism/optimism/issues/753)).\n\n## NEW ISSUES\n\n### `op-deployer` and Acceptance Test Queries\nNew issues have been opened concerning the `op-deployer` and acceptance tests. One question asks why `ChainState.ID` is a hash in `op-deployer` ([#16586](https://github.com/ethereum-optimism/optimism/issues/16586)), while another proposes using block times for waits/timeouts instead of hardcoded values in acceptance tests ([#16598](https://github.com/ethereum-optimism/optimism/issues/16598)).\n\n## ACTIVE ISSUES\n\n### GoReleaser for OP Stack Release Pipeline ([#16097](https://github.com/ethereum-optimism/optimism/issues/16097))\nDiscussion continues on using GoReleaser for the `op-node/batcher/proposer/challenger` release pipeline. A recent comment suggests wiring up `op-workbench` to automatically execute `git cliff` commands for generating release notes and pushing them to GitHub, aiming for a one-click solution for high-quality changelogs. Previous comments highlighted the need to consolidate build systems (docker bake, makefiles, justfiles) into a single, consistent approach before adopting GoReleaser to avoid further bloat and inconsistencies. The `op-deployer`'s current GoReleaser setup is noted as not being a good example due to existing inconsistencies.\n\n### Abnormal CPU Usage with Latest `op-geth` ([#613](https://github.com/ethereum-optimism/optimism/issues/613))\nThe issue of abnormal CPU usage with `op-geth` v1.101511.0 is still active. A user shared a `pprof` file, noting that the performance issue was due to an index update that took about 24 hours. Another user provided detailed instructions on how to capture `pprof` metrics, suggesting that the high CPU usage might be temporary due to log indexing rebuilds in the backported go-ethereum v1.15.11. There's a concern that the problem persists even after index upgrades, indicating a potential bug.\n\n### Supersim vs. Interop Kurtosis Devnet ([#399](https://github.com/ethereum-optimism/optimism/issues/399))\nThe distinction between Supersim and Interop Kurtosis Devnet is being clarified. It was explained that Supersim is a local tool for testing multichain/interop applications, acting as a wrapper around Anvil, and is lighter for local development. It's used by applications planning to launch when interop is live on mainnet. A recent question asks if Supersim is mainly for testing dapps rather than chains, which Kurtosis handles.", "2025-09-04T03:27:11.483Z"]
["ethereum-optimism/docs_day_2025-06-27", "ethereum-optimism/docs", "day", "2025-06-27", "# ethereum-optimism/docs Daily Update (Jun 27, 2025)\n## OVERVIEW \nToday's focus was on enhancing documentation for chain operators, specifically adding a detailed guide for setting up sequencer nodes. Discussions on active issues revolved around `op-supervisor` behavior during resets and `op-geth` CPU usage.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Operator Documentation Expansion\nA significant addition was made to the operator documentation, providing a detailed guide for chain operators on how to set up sequencer nodes for custom OP Stack chains after L1 configuration. This enhances the clarity and completeness of deployment instructions for new chains. ([#1632](https://github.com/ethereum-optimism/docs/pull/1632))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Tutorial Request for Fee Vault Updates\nA new tutorial request was opened to guide users on how to update a fee vault, specifically changing its recipient and withdrawal network. This highlights a need for more practical, step-by-step guides for smart contract interactions. ([#1671](https://github.com/ethereum-optimism/docs/issues/1671))\n\n## ACTIVE ISSUES\n\n### `op-supervisor` Reset Behavior and L1 Origin Validity\nDiscussions continued on improving the `op-supervisor`'s reset target logic and L1 origin validity handling.\n- For [#16314](https://github.com/ethereum-optimism/docs/issues/16314) (Improve reset unsafe target), a comment from July 25th indicates the issue is being closed due to recent project changes, with much of the actionable work completed in a related PR. A comment from June 27th noted partial implementation for supervisor responsibility in providing reset targets, but highlighted remaining gaps in handling pre- and post-Interop scenarios.\n- For [#16315](https://github.com/ethereum-optimism/docs/issues/16315) (Improve L1 origin validity handling during resets), a June 27th comment noted that a L1 origin verifier method now exists in the supervisor, used for local unsafe detection, but needs extension to safe heads to fully address the issue's goal of checking L1 origin canonicality during resets.\n- For [#16321](https://github.com/ethereum-optimism/docs/issues/16321) (Improve reorg during reset behavior), a June 27th comment stated that while local unsafe head detection now includes L1 origin checks at the supervisor level, other safety levels still lack this validation, linking back to issue [#16315](https://github.com/ethereum-optimism/docs/issues/16315).\n\n### `op-geth` CPU Usage Spikes\nThe issue of abnormal CPU usage with `op-geth` ([#613](https://github.com/ethereum-optimism/docs/issues/613)) saw continued discussion.\n- A comment from June 28th provided detailed instructions on how to capture `pprof` data for `op-geth` to diagnose CPU consumption.\n- Another comment from June 28th suggested that high CPU usage might be temporary due to log indexing rebuilds in the latest `op-geth` version, with CPU returning to normal after completion.\n- A June 27th comment from `jsvisa` reiterated that the high CPU usage is likely temporary due to log indexing rebuilds, as the latest `op-geth` version backported changes from `go-ethereum` that involve this process.\n- A June 27th comment from `cpuchainorg` contrasted `op-geth`'s 50% CPU usage with `go-ethereum`'s lower usage, suggesting a potential bug in the backporting process.\n\n### `op-supervisor` Event Spikes\nAn investigation into spikes of `local-derived` and other events in `op-supervisor` ([#16603](https://github.com/ethereum-optimism/docs/issues/16603)) was initiated. A June 27th comment speculated that the issue might be related to `ChainsDB` or `GlobalSyncExec` deadlocks, awaiting a full panic stack trace for confirmation.\n\n### `op-chain-ops` Broken Dependency\nA new issue was opened regarding a broken dependency in `op-chain-ops` related to `github.com/tyler-smith/go-bip39` ([#16612](https://github.com/ethereum-optimism/docs/issues/16612)). A June 27th comment clarified that `cosmos/go-bip39` is a fork, but `op-chain-ops` uses a newer version (`v1.1.0`) than the fork's latest (`v1.0.0`), indicating a potential version mismatch or refactoring issue.", "2025-09-04T03:27:15.432Z"]
["ethereum-optimism/op-analytics_day_2025-06-27", "ethereum-optimism/op-analytics", "day", "2025-06-27", "# ethereum-optimism/op-analytics Daily Update (Jun 27, 2025)\n## OVERVIEW \nThe day's development focused on a minor update to the `other_chains_tracking` notebook for transaction runs. Discussions on active issues revolved around supervisor reset behavior, L1 origin validity, and `op-geth` CPU usage.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Analytics Notebook Updates\n*   A modification was made to the `get_all_txs.ipynb` notebook within the `other_chains_tracking` area, likely to refine transaction data retrieval or processing ([#1662](https://github.com/ethereum-optimism/op-analytics/pull/1662)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Supervisor Event Investigation\n*   An issue was opened to investigate spikes of `local-derived` and other events in `op-supervisor`, suggesting potential congestion or deadlocks ([#16603](https://github.com/ethereum-optimism/op-analytics/issues/16603)).\n\n### Dependency Resolution\n*   A bug was reported regarding a broken dependency, `github.com/tyler-smith/go-bip39`, in `op-chain-ops`, with a note on a potential fork being used ([#16612](https://github.com/ethereum-optimism/op-analytics/issues/16612)).\n\n## ACTIVE ISSUES\n\n### Supervisor Reset and L1 Origin Handling\nDiscussions continued on improving `op-supervisor`'s reset behavior and L1 origin validity handling. For [#16314](https://github.com/ethereum-optimism/op-analytics/issues/16314) (Improve reset unsafe target), a partial implementation was noted, focusing on the supervisor providing correct reset targets, but lacking full L1 origin validation across all safety levels. The issue was later closed on July 25th, with a note that actionable items were covered and a refactor is planned. Similarly, for [#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315) (Improve L1 origin validity handling during resets), it was highlighted that while an L1 origin verifier exists, it's currently only used for local unsafe heads, not other safety levels. The discussion emphasized that all supervisor-provided targets should be valid to avoid duplicating checks on the `op-node`. For [#16321](https://github.com/ethereum-optimism/op-analytics/issues/16321) (Improve reorg during reset behavior), the current status indicates that local unsafe head L1 origin is checked at the supervisor side before sending reset requests, but L1 origin validity for other safety levels is not yet checked.\n\n### Abnormal CPU Usage in op-geth\nThe issue of abnormal CPU usage with `op-geth` v1.101511.0 ([#613](https://github.com/ethereum-optimism/op-analytics/issues/613)) remained active. A user confirmed experiencing the same performance issue and provided a `pprof` file, noting that the issue might be related to an index update taking a significant amount of time. Another user suggested that the high CPU usage is temporary due to a log indexing rebuild in the backported `go-ethereum` v1.15.11, and should normalize once completed. There was also a request for command-line arguments to generate `pprof` data for further analysis.", "2025-09-04T03:27:15.754Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-27", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-27", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 27, 2025)\n## OVERVIEW \nToday's activity focused on ongoing discussions and investigations into several key issues, particularly concerning `op-supervisor` behavior during resets and L1 origin validity, as well as CPU usage in `op-geth`. A new issue regarding a broken dependency in `op-chain-ops` was also opened.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Dependency Management\nA new issue [#16612](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16612) was opened concerning a broken dependency `github.com/tyler-smith/go-bip39` in `op-chain-ops`. The discussion highlights that `github.com/cosmos/go-bip39` is a fork, but `op` uses a newer version (`v1.1.0`) than the fork's latest (`v1.0.0`).\n\n### Supervisor Event Spikes Investigation\nAn issue [#16603](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16603) was opened to investigate spikes of `local-derived` and other events in `op-supervisor`. Initial speculation points towards a potential `ChainsDB` or `GlobalSyncExec` deadlock.\n\n## ACTIVE ISSUES\n### `op-supervisor` Reset Behavior and L1 Origin Validity\nDiscussions continued on issues related to `op-supervisor` reset behavior. In [#16314](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16314), a comment noted that partial implementation for providing correct reset targets has been done in a related PR, but it still lacks handling for pre- and post-Interop differences and comprehensive L1 origin validity checks. Similarly, for [#16315](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16315), it was noted that while an L1 origin verifier method exists for local unsafe heads, it needs to be extended to safe heads to ensure canonical L1 origins for all reset targets. The issue [#16321](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16321) also saw an update, indicating that while local unsafe head L1 origin validity is checked before sending `interop_reset`, other safety levels still lack this check, linking back to [#16315](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16315).\n\n### Abnormal CPU Usage with `op-geth`\nThe issue [#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613) regarding abnormal CPU usage with `op-geth` v1.101511.0 received several new comments. A user requested instructions on how to generate pprof data to help diagnose the issue. Another user confirmed experiencing the same performance issue, noting that it might be related to an index update that took about 24 hours to complete. It was also suggested that the high CPU usage could be temporary due to log indexing rebuilding, a process introduced in the backported go-ethereum v1.15.11.", "2025-09-04T03:27:15.910Z"]
["ethereum-optimism/ecosystem_day_2025-06-27", "ethereum-optimism/ecosystem", "day", "2025-06-27", "# ethereum-optimism/ecosystem Daily Update (Jun 27, 2025)\n## OVERVIEW \nThe day saw significant progress in GasTank integration with new features for fetching and claiming relayed messages, alongside routine package versioning and dependency updates. A key issue related to GasTank claims was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### GasTank Integration and Automation\nTwo new features were added to enhance GasTank functionality. An API endpoint was introduced to fetch pending GasTank claims, updating `gas_tank_relayed_message_receipts` to store message identifiers and log payloads ([#869](https://github.com/ethereum-optimism/ecosystem/pull/869)). Concurrently, the autorelayer was updated to automatically fetch and claim funds for all unclaimed relayed messages from the GasTank on each loop interval, including cleanup processes ([#870](https://github.com/ethereum-optimism/ecosystem/pull/870)).\n\n### Package Versioning and Dependency Updates\nRoutine maintenance included versioning packages, which involved updates to `CHANGELOG.md` and `package.json` files for `autorelayer-interop` and `ponder-interop` ([#878](https://github.com/ethereum-optimism/ecosystem/pull/878)). Additionally, the `supersim` package was bumped to version `0.1.0-alpha.56` ([#880](https://github.com/ethereum-optimism/ecosystem/pull/880)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Jun 27, 2025.\n\n## CLOSED ISSUES\n\n### GasTank Claim Automation\nThe issue tracking the setup of a job to claim funds from the GasTank after successful message relaying was closed ([#840](https://github.com/ethereum-optimism/ecosystem/issues/840)). This indicates the successful implementation of the related features.\n\n### Supervisor Event Spikes Investigation\nAn investigation into spikes of `local-derived` and other events in `op-supervisor` was closed ([#16603](https://github.com/ethereum-optimism/ecosystem/issues/16603)). The latest comment speculates on a `ChainsDB` or `GlobalSyncExec` deadlock as a potential cause, awaiting a full panic stacktrace for confirmation.\n\n## NEW ISSUES\n\n### op-chain-ops Dependency Issue\nA new bug was reported concerning a broken dependency in `op-chain-ops` related to `github.com/tyler-smith/go-bip39` ([#16612](https://github.com/ethereum-optimism/ecosystem/issues/16612)). The issue highlights that `cosmos/go-bip39` is a fork but its latest version is `v1.0.0` compared to `v1.1.0` used by op, and notes that the `tyler-smith` repo is undergoing significant refactoring.\n\n## ACTIVE ISSUES\n\n### op-supervisor, op-node: Improve reset unsafe target ([#16314](https://github.com/ethereum-optimism/ecosystem/issues/16314))\nThe latest comment from July 25, 2025, indicates the issue is being closed due to recent project changes, with a note to re-open or create a new issue if needed. A comment from July 21, 2025, suggests that most actionable items have been covered by related PRs and questions if further work is needed given upcoming component refactoring. A comment from June 27, 2025, notes partial implementation in a linked PR for supervisor responsibility in providing reset targets, but points out remaining challenges with pre- and post-Interop handling and the lack of a logs DB pre-Interop.\n\n### op-supervisor: Improve L1 origin validity handling during resets ([#16315](https://github.com/ethereum-optimism/ecosystem/issues/16315))\nThe latest comment from June 27, 2025, states that a L1 origin verifier method now exists at the supervisor side, used for local unsafe head validity. It suggests extending this method to the safe head to ensure canonical L1 origin for reset targets. Earlier comments from June 9, 2025, and June 6, 2025, discuss the importance of the supervisor providing only valid targets and avoiding complex walkbacks, emphasizing that if a target is invalid, the supervisor should initiate another reset.\n\n### Abnormal CPU usage with latest op-geth (v1.101511.0) ([#613](https://github.com/ethereum-optimism/ecosystem/issues/613))\nThe latest comment from July 9, 2025, confirms similar performance issues and provides instructions for pprof metrics. It also notes that the performance issue was likely due to an index update, which took about 24 hours to complete. Comments from June 28, 2025, provide detailed instructions on how to capture and analyze pprof data, and discuss whether the CPU usage is a temporary effect of index upgrades or a persistent bug. A comment from June 27, 2025, suggests that the high CPU usage is temporary due to log indexing rebuilds in the backported go-ethereum version.", "2025-09-04T03:27:16.477Z"]
["ethereum-optimism/infra_day_2025-06-26", "ethereum-optimism/infra", "day", "2025-06-26", "# ethereum-optimism/infra Daily Update (Jun 26, 2025)\n## OVERVIEW \nThe day saw significant progress in refining the Superchain-Ops tooling, with multiple issues closed related to task simulation, validation, and overall developer experience. Improvements focused on streamlining CI processes, enhancing task management, and refining internal testing methodologies.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Superchain-Ops Tooling Enhancements\nSeveral issues related to the Superchain-Ops tooling were closed, indicating a push towards a more robust and user-friendly system. This includes improvements to task simulation, nonce handling, and overall architecture.\n- [#337](https://github.com/ethereum-optimism/infra/issues/337) Automatically run tasks in CI if task is in a non-terminal state.\n- [#342](https://github.com/ethereum-optimism/infra/issues/342) Support for \"stacked\" proposals that have incrementing nonces.\n- [#448](https://github.com/ethereum-optimism/infra/issues/448) `SIMULATE_WITHOUT_LEDGER` should check the value to `1`.\n- [#636](https://github.com/ethereum-optimism/infra/issues/636) Revisit MultisigTask Architecture.\n- [#679](https://github.com/ethereum-optimism/infra/issues/679) Check domain hash from simulation matches VALIDATIONS.md hash entry.\n- [#777](https://github.com/ethereum-optimism/infra/issues/777) Print state diff in markdown format.\n- [#770](https://github.com/ethereum-optimism/infra/issues/770) Simple UX for users to override Nonces.\n- [#814](https://github.com/ethereum-optimism/infra/issues/814) StateOverrideManager always adds the nonce as a state override.\n- [#838](https://github.com/ethereum-optimism/infra/issues/838) Templates should check against StandardValidator contracts.\n- [#923](https://github.com/ethereum-optimism/infra/issues/923) Add a quick way to read addresses for a chain if it doesn't exist in the superchain registry.\n\n### CI/CD and Testing Improvements\nEfforts were made to optimize CI/CD processes and testing methodologies, leading to faster and more efficient development cycles.\n- [#648](https://github.com/ethereum-optimism/infra/issues/648) CI job template_regression_tests could be faster.\n- [#753](https://github.com/ethereum-optimism/infra/issues/753) More granular checking of addresses.json so we don't have to update the scr submodule as often.\n- [#397](https://github.com/ethereum-optimism/infra/issues/397) [acceptance] Use best gate for the persistent devnets.\n\n### Documentation and Path Updates\nSeveral issues related to documentation and file path management were resolved, ensuring accuracy and consistency across the repository.\n- [#547](https://github.com/ethereum-optimism/infra/issues/547) Update Fetch-Task to use Mainnet Task Directory.\n- [#548](https://github.com/ethereum-optimism/infra/issues/548) Update Paths in Improvement Docs.\n- [#600](https://github.com/ethereum-optimism/infra/issues/600) Update Task Paths for Mainnet Tasks.\n- [#651](https://github.com/ethereum-optimism/infra/issues/651) Make mainnet example for OPCM template under improvements/tasks/example/eth.\n\n### Internal Process and Training\nInternal processes were streamlined, and training initiatives were completed to enhance team efficiency and knowledge sharing.\n- [#514](https://github.com/ethereum-optimism/infra/issues/514) superchain-ops 2.0 - setup a training call.\n- [#654](https://github.com/ethereum-optimism/infra/issues/654) Prevalidations should be possible and not hindered by when the address registry is available.\n- [#605](https://github.com/ethereum-optimism/infra/issues/605) Update tests to use contracts-bedrock safe-tools and stdStorage library.\n- [#554](https://github.com/ethereum-optimism/infra/issues/554) Test: Sepolia task to transfer owner of ProtocolVersions.\n- [#16326](https://github.com/ethereum-optimism/infra/issues/16326) OPCM Migrate Script Improvements.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### GoReleaser for OP Stack Components\nDiscussion on [#16097](https://github.com/ethereum-optimism/infra/issues/16097) continues regarding the adoption of GoReleaser for `op-node`, `batcher`, `proposer`, and `challenger` release pipelines. The latest comment from geoknee suggests integrating `git-cliff` with `op-workbench` to automate release note generation, potentially pushing them to GitHub via API. This builds on previous discussions about streamlining release notes and avoiding manual commit reviews, while also addressing concerns about adding another build system without first consolidating existing ones.\n\n### Abnormal CPU Usage with op-geth\nIssue [#613](https://github.com/ethereum-optimism/infra/issues/613) concerning abnormal CPU usage in `op-geth` (v1.101511.0) saw new comments. PierrickGT provided a `pprof` profile, noting that the issue might be related to index updates, which took about 24 hours to complete on their system. Jsvisa clarified how to capture `pprof` data and suggested the high CPU usage is temporary due to log indexing rebuilds in the backported `go-ethereum` v1.15.11. Cpuchainorg, however, stated the problem persists even after index upgrades, suspecting a broken goroutine.\n\n### Refactor `signFromChildMultisig`\nIssue [#781](https://github.com/ethereum-optimism/infra/issues/781) focuses on reducing noisy terminal output from the `signFromChildMultisig` function in `MultisigTask.sol`. Several community members, including JoseValperga, nsancheznez, and Mau1401, expressed interest in working on this. Cass402 identified the `print` function within `simulateRun` as the primary cause of the excessive logs and proposed removing or commenting it out to improve focus on critical signing information.\n\n### Supersim vs. Interop Kurtosis Devnet\nDiscussion on [#399](https://github.com/ethereum-optimism/infra/issues/399) clarified the differences between `supersim` and `interop kurtosis devnet`. Zhiqiangxu confirmed that `supersim` is primarily for testing dApps, while `kurtosis` is used for testing chains within the OP Stack. Fainashalts explained that `supersim` is a lighter, local tool built around `anvil` for testing multichain/interop applications and upcoming features, used by apps planning to launch with interop.", "2025-09-04T03:27:16.507Z"]
["ethereum-optimism/op-geth_day_2025-06-27", "ethereum-optimism/op-geth", "day", "2025-06-27", "# ethereum-optimism/op-geth Daily Update (Jun 27, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions and investigations into existing issues, particularly concerning `op-supervisor` behavior during resets and CPU usage spikes in `op-geth`. No new features, bug fixes, or code refactoring were completed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this date.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this date.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\n\n### Dependency Issues\n*   A new issue was opened regarding a broken dependency, `github.com/tyler-smith/go-bip39`, in `op-chain-ops` [#16612](https://github.com/ethereum-optimism/op-geth/issues/16612). The discussion notes that `github.com/cosmos/go-bip39` is a fork, but its version is older than the one used by Optimism.\n\n### Supervisor Event Spikes\n*   An investigation was initiated into spikes of `local-derived` and `local-unsafe-received` events in `op-supervisor` [#16603](https://github.com/ethereum-optimism/op-geth/issues/16603). Initial speculation points towards a potential `ChainsDB` or `GlobalSyncExec` deadlock.\n\n## ACTIVE ISSUES\n\n### Abnormal CPU Usage with op-geth\nDiscussion continued on the abnormal CPU usage observed with `op-geth` v1.101511.0 [#613](https://github.com/ethereum-optimism/op-geth/issues/613). A user requested command-line arguments for `pprof` to diagnose the issue, which were provided. It was suggested that the high CPU usage might be temporary due to log indexing rebuilding after backporting go-ethereum v1.15.11. Another user noted that the issue persists even after index upgrade, suggesting a potential goroutine infinite loop.\n\n### op-supervisor: Improve reset unsafe target\nComments on this issue indicate that partial implementation has been done via a pull request, specifically addressing the supervisor's responsibility for providing correct reset targets [#16314](https://github.com/ethereum-optimism/op-geth/issues/16314). However, it was noted that the current implementation lacks handling for pre- and post-Interop differences and that the supervisor doesn't have the logs DB pre-Interop.\n\n### op-supervisor: Improve L1 origin validity handling during resets\nDiscussion highlighted that a L1 origin verifier method now exists at the supervisor side, used for detecting the validity of L1 origin for local unsafe heads [#16315](https://github.com/ethereum-optimism/op-geth/issues/16315). However, this method and logic are not yet extended to safe heads, which is necessary to fully address the issue's goal of checking L1 origin validity for reset targets.\n\n### op-supervisor: Improve reorg during reset behavior\nThe current status after a recent pull request was discussed, noting that correct local unsafe heads are now detected with L1 origin checks at the supervisor side before sending `interop_reset` requests to the op-node [#16321](https://github.com/ethereum-optimism/op-geth/issues/16321). However, L1 origin validity for other safety levels is not yet checked, which is tracked in a related issue.", "2025-09-04T03:27:19.586Z"]
["ethereum-optimism/specs_day_2025-06-27", "ethereum-optimism/specs", "day", "2025-06-27", "# ethereum-optimism/specs Daily Update (Jun 27, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions and investigations into `op-supervisor` behavior, particularly concerning reset logic and L1 origin validity, alongside addressing a dependency issue in `op-chain-ops` and continued debugging of `op-geth` CPU usage.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Dependency Issues\n- An issue was opened regarding a broken dependency in `op-chain-ops` related to `github.com/tyler-smith/go-bip39` [#16612](https://github.com/ethereum-optimism/specs/issues/16612). The `cosmos/go-bip39` fork is noted as a potential alternative, but its version (`v1.0.0`) differs from the one used by Optimism (`v1.1.0`).\n\n### Supervisor Performance Investigation\n- An issue was created to investigate spikes of `local-derived` and `local-unsafe-received` events in `op-supervisor` [#16603](https://github.com/ethereum-optimism/specs/issues/16603). Initial speculation points towards a potential `ChainsDB` or `GlobalSyncExec` deadlock.\n\n## ACTIVE ISSUES\n### Supervisor Reset Logic and L1 Origin Validity\nDiscussions continued on improving `op-supervisor`'s reset target handling and L1 origin validity checks.\n- For [#16314](https://github.com/ethereum-optimism/specs/issues/16314), it was noted that partial implementation has occurred via a related PR, specifically regarding the supervisor providing reset targets. However, it still lacks handling for pre- and post-Interop differences and the supervisor's log DB.\n- In [#16315](https://github.com/ethereum-optimism/specs/issues/16315), it was highlighted that a L1 origin verifier method now exists on the supervisor side, used for detecting the validity of L1 origin for local unsafe. The discussion suggests extending this method to safe heads to ensure all targets provided by the supervisor are valid.\n- Regarding [#16321](https://github.com/ethereum-optimism/specs/issues/16321), the current status after a related PR is that the supervisor detects the correct local unsafe head by checking the L1 origin before sending an `interop_reset` request. However, L1 origin validity for other safety levels is not yet checked, which is tracked in [#16315](https://github.com/ethereum-optimism/specs/issues/16315).\n\n### Abnormal CPU Usage in op-geth\nOngoing investigation into abnormal CPU usage with `op-geth` v1.101511.0.\n- In [#613](https://github.com/ethereum-optimism/specs/issues/613), a user shared pprof command-line arguments for capturing CPU performance data. Another user confirmed experiencing the same issue and provided a `profile.pb.gz` file, noting that the performance issue might be due to an index update taking about 24 hours. It was also suggested that the high CPU usage might be temporary due to log indexing rebuilding, and should return to normal once completed.", "2025-09-04T03:27:19.975Z"]
["ethereum-optimism/superchain-ops_day_2025-06-27", "ethereum-optimism/superchain-ops", "day", "2025-06-27", "# ethereum-optimism/superchain-ops Daily Update (Jun 27, 2025)\n## OVERVIEW \nToday's development focused on enhancing validation for Superchain upgrades, specifically for the Op and Ink contracts and Unichain state diffs. Discussions on active issues covered supervisor reset behavior, L1 origin validity, and op-geth CPU usage.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Upgrade Validation Enhancements\nDetailed validation entries were added for the updated Op and Ink contracts, and Unichain state diff validation was enriched with contract names and storage decoding, including proper contract names and registry links for newly deployed contracts and complete DelayedWETHProxy sections.\n- [#1104](https://github.com/ethereum-optimism/superchain-ops/pull/1104)\n- [#1107](https://github.com/ethereum-optimism/superchain-ops/pull/1107)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Dependency Issues\nA new issue was opened regarding a broken dependency for `github.com/tyler-smith/go-bip39` in `op-chain-ops`, noting that the `cosmos/go-bip39` fork's latest version is `v1.0.0` while `op` uses `v1.1.0`.\n- [#16612](https://github.com/ethereum-optimism/superchain-ops/issues/16612)\n\n### Supervisor Event Spikes\nAn investigation was initiated into spikes of `local-derived` and other events in `op-supervisor`, with speculation that it might be related to `ChainsDB` or `GlobalSyncExec` deadlocks.\n- [#16603](https://github.com/ethereum-optimism/superchain-ops/issues/16603)\n\n## ACTIVE ISSUES\n\n### Supervisor Reset Behavior and L1 Origin Validity\nDiscussions continued on improving `op-supervisor`'s reset unsafe target and L1 origin validity handling. For [#16314](https://github.com/ethereum-optimism/superchain-ops/issues/16314), it was noted that partial implementation has occurred, but it still lacks handling pre- and post-Interop differently. For [#16315](https://github.com/ethereum-optimism/superchain-ops/issues/16315), it was highlighted that a L1 origin verifier method now exists at the supervisor side, but it's currently only used for local unsafe and needs to be extended to safe heads. The issue [#16321](https://github.com/ethereum-optimism/superchain-ops/issues/16321) on improving reorg behavior during resets was updated, stating that while local unsafe head L1 origin is checked, other safety levels are not.\n\n### Abnormal CPU Usage with op-geth\nThe issue of abnormal CPU usage with `op-geth` v1.101511.0 [#613](https://github.com/ethereum-optimism/superchain-ops/issues/613) saw continued discussion. Users reported persistent high CPU usage even after index upgrades, suggesting a potential broken goroutine. Instructions for generating pprof profiles were shared to aid in debugging, with one user speculating that the high CPU usage is temporary due to log index rebuilding.", "2025-09-04T03:27:20.034Z"]
["ethereum-optimism/optimism_day_2025-06-27", "ethereum-optimism/optimism", "day", "2025-06-27", "# ethereum-optimism/optimism Daily Update (Jun 27, 2025)\n## OVERVIEW \nToday's development focused on enhancing flashblocks awareness, refining contract management, and improving devnet compatibility. Significant progress was made in testing infrastructure and supervisor functionalities.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Flashblocks Integration and Testing\n- Added flashblocks-websocket-proxy awareness to flashblocks gate, including configuration parsing and hydration for the L2 network. ([#16584](https://github.com/ethereum-optimism/optimism/pull/16584))\n- Extended `no_output_timeout` for Cannon e2e tests to prevent failures. ([#16615](https://github.com/ethereum-optimism/optimism/pull/16615))\n- Introduced support for different block times in interop load tests within `op-acceptance-tests`. ([#16611](https://github.com/ethereum-optimism/optimism/pull/16611))\n\n### Contract and Devnet Enhancements\n- Fixed parameter passing and improved type safety in `OPContractsManager.sol` by switching to `abi.encodeCall` and updating the contract version. ([#16581](https://github.com/ethereum-optimism/optimism/pull/16581))\n- Improved compatibility of `kt-devnet` with `devnet-sdk` system tests, addressing unsafe assumptions about the first node being a sequence. ([#16589](https://github.com/ethereum-optimism/optimism/pull/16589))\n- Updated tests in the `/L1` folder for validation compliance and reduced the exclusion list. ([#16596](https://github.com/ethereum-optimism/optimism/pull/16596))\n\n### Supervisor and Node Reset Logic\n- Implemented local unsafe target determination at the supervisor level, enabling the supervisor to initiate resets when the node requires one. ([#16557](https://github.com/ethereum-optimism/optimism/pull/16557))\n- Added an invalid block trigger to failsafe enablement in `op-supervisor`, activating `FailsafeEnabled` upon `InvalidateLocalSafeEvent`. ([#16593](https://github.com/ethereum-optimism/optimism/pull/16593))\n\n## NEWLY OPENED PULL REQUESTS\n- [#16609](https://github.com/ethereum-optimism/optimism/pull/16609): Script to deploy OP contracts on L1.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Supervisor Event Congestion\n- [#16603](https://github.com/ethereum-optimism/optimism/issues/16603): Investigate spikes of `local-derived` events in `op-supervisor`, with speculation pointing to potential `ChainsDB` or `GlobalSyncExec` deadlocks.\n\n### Node Interop API Consolidation\n- [#16604](https://github.com/ethereum-optimism/optimism/issues/16604): Consolidate `interop_blockRefByNumber` and `interop_l2BlockRefByNumber` in `op-node`, noting that `interop_l2BlockRefByNumber` was temporarily added for supervisor-side unsafe target determination.\n\n### Dependency Resolution\n- [#16612](https://github.com/ethereum-optimism/optimism/issues/16612): Report of a broken dependency `github.com/tyler-smith/go-bip39` in `op-chain-ops`, with discussion on using a fork (`cosmos/go-bip39`) but noting version discrepancies.\n\n## ACTIVE ISSUES\n### Abnormal CPU Usage with op-geth\n- [#613](https://github.com/ethereum-optimism/optimism/issues/613): Users continue to report high CPU usage with `op-geth` v1.101511.0. Recent comments suggest the issue might be related to index updates, with one user confirming CPU usage returned to normal after the update completed. Another user provided instructions for generating pprof profiles to aid in debugging.\n\n### Supervisor Reset Target Improvement\n- [#16314](https://github.com/ethereum-optimism/optimism/issues/16314): Discussion on improving `op-supervisor` and `op-node` reset unsafe target. A recent comment notes that [#16557](https://github.com/ethereum-optimism/optimism/pull/16557) partially implemented the supervisor's responsibility for providing correct reset targets, but further work is needed for pre- and post-Interop handling.\n\n### L1 Origin Validity During Resets\n- [#16315](https://github.com/ethereum-optimism/optimism/issues/16315): Focus on improving L1 origin validity handling during supervisor resets. The latest comment highlights that [#16557](https://github.com/ethereum-optimism/optimism/pull/16557) introduced an L1 origin verifier at the supervisor side for local unsafe targets, but this logic needs to be extended to safe heads to ensure all supervisor-provided targets are valid.\n\n### Reorg Behavior During Resets\n- [#16321](https://github.com/ethereum-optimism/optimism/issues/16321): Addressing reorgs during ongoing resets. The current status, following [#16557](https://github.com/ethereum-optimism/optimism/pull/16557), indicates that local unsafe head detection now checks L1 origin validity at the supervisor, but other safety levels still lack this check, as tracked in [#16315](https://github.com/ethereum-optimism/optimism/issues/16315).", "2025-09-04T03:27:21.510Z"]
["ethereum-optimism/supersim_day_2025-06-27", "ethereum-optimism/supersim", "day", "2025-06-27", "# ethereum-optimism/supersim Daily Update (Jun 27, 2025)\n\n## OVERVIEW \nToday's development focused on enhancing `supersim`'s configurability by adding support for custom dependency sets, improving testing flexibility. Discussions on active issues centered on `op-supervisor` reset logic and `op-geth` CPU usage.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Configuration for Testing\nA new feature was added to `supersim` allowing for a configurable dependency set ([#407](https://github.com/ethereum-optimism/supersim/pull/407)). This enables developers to test against chains outside the standard interop set, significantly improving testing flexibility and coverage. This change involved modifications across `config`, `opsimulator`, `orchestrator`, and `supersim` files.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Investigating `op-supervisor` Event Spikes\nA new issue was opened to investigate spikes of `local-derived` and `local-unsafe-received` events in `op-supervisor` ([#16603](https://github.com/ethereum-optimism/supersim/issues/16603)). The team is looking into what triggers this congestion of inflight events, with initial speculation pointing towards `ChainsDB` or `GlobalSyncExec` deadlocks.\n\n### Addressing `op-chain-ops` Broken Dependency\nA bug report was filed regarding a broken dependency, `github.com/tyler-smith/go-bip39`, in `op-chain-ops` ([#16612](https://github.com/ethereum-optimism/supersim/issues/16612)). The issue highlights that `op-chain-ops` uses `v1.1.0` of the `tyler-smith` fork, while `cosmos/go-bip39` (a fork of the same) is at `v1.0.0` and has diverged due to refactoring in the original repo.\n\n## ACTIVE ISSUES\n\n### Improving `op-supervisor` Reset Unsafe Target\nDiscussions on [#16314](https://github.com/ethereum-optimism/supersim/issues/16314) continued, focusing on improving the `op-supervisor`'s reset target search. A comment from today noted that partial implementation has been achieved via a related PR, addressing the supervisor's responsibility for providing correct reset targets. However, it was highlighted that handling pre- and post-Interop scenarios differently is still needed, as the supervisor lacks the logs DB pre-Interop. The issue was later closed, with a note to re-open if necessary, as actionable items were covered.\n\n### Enhancing L1 Origin Validity Handling During Resets\nIssue [#16315](https://github.com/ethereum-optimism/supersim/issues/16315) saw an update today, indicating that a L1 origin verifier method now exists at the supervisor side, used for detecting the validity of L1 origin for local unsafe heads. The discussion emphasized that this method and logic should be extended to safe heads to ensure all targets provided by the supervisor are valid.\n\n### Addressing `op-supervisor` Reorg During Reset Behavior\nThe status of issue [#16321](https://github.com/ethereum-optimism/supersim/issues/16321) was updated today. It was noted that the system now detects the correct local unsafe head, checking the L1 origin at the supervisor side before sending an `interop_reset` request to the `op-node`. However, L1 origin validity for other safety levels is not yet checked, which is tracked in issue [#16315](https://github.com/ethereum-optimism/supersim/issues/16315).\n\n### Investigating Abnormal CPU Usage with `op-geth`\nDiscussions on [#613](https://github.com/ethereum-optimism/supersim/issues/613) continued, with users reporting high CPU usage with `op-geth` v1.101511.0. A user shared instructions on how to capture `pprof` data to diagnose the issue. Another user suggested that the high CPU usage might be temporary due to log indexing rebuilding, a process that occurs with the backported go-ethereum v1.15.11. However, some users reported that the issue persists even after index upgrades, suggesting a deeper problem.", "2025-09-04T03:27:21.721Z"]
["ethereum-optimism/docs_day_2025-06-28", "ethereum-optimism/docs", "day", "2025-06-28", "# ethereum-optimism/docs Daily Update (Jun 28, 2025)\n## OVERVIEW \nThe day saw continued discussion on an active issue regarding abnormal CPU usage in `op-geth` and new interest from community members in contributing to an issue focused on refactoring `signFromChildMultisig` for cleaner terminal output.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Abnormal CPU Usage in op-geth\nDiscussion continued on [#613](https://github.com/ethereum-optimism/docs/issues/613) concerning abnormal CPU usage with `op-geth` v1.101511.0. `jsvisa` provided detailed command-line arguments for `cpuchainorg` to enable metrics and capture `pprof` data to diagnose the CPU consumption. `cpuchainorg` reiterated that the issue persists even after index upgrades, suggesting a potential bug in a goroutine. `hekich` noted that in their case, the CPU usage returned to normal after the index upgrade completed, which took less than 24 hours.\n\n### Refactoring `signFromChildMultisig` Output\nCommunity members expressed interest in contributing to [#781](https://github.com/ethereum-optimism/docs/issues/781), which aims to reduce noisy terminal output from the `signFromChildMultisig` function. `Mau1401` and `JoseValperga` (the latter highlighting Solidity experience and focus on user-friendly output) both offered to work on the issue. `nsancheznez` also inquired about working on it.", "2025-09-04T03:27:22.054Z"]
["ethereum-optimism/ecosystem_day_2025-06-28", "ethereum-optimism/ecosystem", "day", "2025-06-28", "# ethereum-optimism/ecosystem Daily Update (Jun 28, 2025)\n## OVERVIEW \nThe day saw continued discussion on an active issue regarding abnormal CPU usage in op-geth, with community members sharing insights and potential solutions. A new pull request was opened to update documentation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this day.\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#882](https://github.com/ethereum-optimism/ecosystem/pull/882), was opened to update the `useSendL2ToL2Message.md` documentation.\n\n## CLOSED ISSUES\n\nNo issues were closed on this day.\n\n## NEW ISSUES\n\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\n### Abnormal CPU Usage in op-geth\nDiscussions continued on [#613](https://github.com/ethereum-optimism/ecosystem/issues/613) regarding abnormal CPU usage with op-geth v1.101511.0. Community member jsvisa provided detailed instructions on how to capture pprof metrics to diagnose the CPU consumption, suggesting that the high usage might be temporary due to log indexing rebuilds. cpuchainorg inquired about the pprof command line arguments and noted that the issue persists even after index upgrades, suggesting a potential goroutine problem. hekich mentioned that after an index upgrade, CPU usage returned to normal, indicating the upgrade process might be the cause.\n\n### Refactoring `signFromChildMultisig` for Cleaner Output\nOn [#781](https://github.com/ethereum-optimism/ecosystem/issues/781), community members expressed interest in addressing the issue of noisy terminal output from the `signFromChildMultisig` function. Mau1401 and JoseValperga offered to work on the issue, with JoseValperga highlighting experience in improving terminal clarity. nsancheznez also expressed interest in contributing.", "2025-09-04T03:27:22.494Z"]
["ethereum-optimism/design-docs_day_2025-06-30", "ethereum-optimism/design-docs", "day", "2025-06-30", "# ethereum-optimism/design-docs Daily Update (Jun 30, 2025)\n## OVERVIEW \nThe day saw the introduction of a new design document for configurable calldata gas. Additionally, an issue related to `op-deployer` was reported and subsequently closed, indicating a quick resolution.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#294](https://github.com/ethereum-optimism/design-docs/pull/294), was opened to add a design document for configurable calldata gas. This PR is currently open and awaiting review.\n\n## CLOSED ISSUES\n### Resolved `op-deployer` Error\nIssue [#16618](https://github.com/ethereum-optimism/design-docs/issues/16618), concerning an error with `op-deployer v0.4.0-rc.2` when run with `standard-overrides`, was reported and closed on the same day. The issue was resolved in a later release candidate.\n\n## NEW ISSUES\nNo new issues were reported for this period.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were reported for this period.", "2025-09-04T03:27:23.404Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-06-30", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-06-30", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jun 30, 2025)\n## OVERVIEW \nThe day's activity for ethereum-optimism.github.io was minimal, with no new features, bug fixes, or code refactoring. The primary activity involved the resolution of a single issue related to the `op-deployer` tool.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were observed in terms of features, bug fixes, or code refactoring.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### `op-deployer` Tooling Issue Resolution\nA bug report concerning the `op-deployer v0.4.0-rc.2` tool, which was giving an error when run with `standard-overrides`, was closed. The issue [#16618](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16618) was resolved as the fix was implemented in a later release candidate of the `optimism` repository.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were observed.", "2025-09-04T03:27:23.703Z"]
["ethereum-optimism/docs_day_2025-06-30", "ethereum-optimism/docs", "day", "2025-06-30", "# ethereum-optimism/docs Daily Update (Jun 30, 2025)\n## OVERVIEW \nThe day's activity was minimal, with no new features, bug fixes, or documentation enhancements. The primary focus was on addressing a previously reported issue related to `op-deployer`.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Resolved `op-deployer` Error\nAn issue concerning the `op-deployer` v0.4.0-rc.2 giving an error with `standard-overrides` was closed today. This bug was confirmed to be fixed in a later release candidate of `op-deployer` as noted in the comments. ([#16618](https://github.com/ethereum-optimism/docs/issues/16618))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### `op-deployer` Error Discussion\nIssue [#16618](https://github.com/ethereum-optimism/docs/issues/16618) was active today, with a key comment from Melvillian confirming that the reported bug with `op-deployer` v0.4.0-rc.2 and `standard-overrides` was resolved in a subsequent release candidate. This led to the closure of the issue.", "2025-09-04T03:27:23.757Z"]
["ethereum-optimism/optimism_day_2025-06-30", "ethereum-optimism/optimism", "day", "2025-06-30", "# ethereum-optimism/optimism Daily Update (Jun 30, 2025)\n## OVERVIEW \nThe day saw the introduction of a new feature for the `op-challenger` with a subcommand to check state history. A bug report regarding `op-deployer` was opened and swiftly closed as it was resolved in a later release candidate.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16619](https://github.com/ethereum-optimism/optimism/pull/16619), was opened to add a `check-state-history` subcommand to the `op-challenger`.\n\n## CLOSED ISSUES\n### Resolved `op-deployer` Bug\nIssue [#16618](https://github.com/ethereum-optimism/optimism/issues/16618), reporting an error with `op-deployer v0.4.0-rc.2` when run with `standard-overrides`, was opened and subsequently closed. The issue was resolved in a later release candidate.\n\n## NEW ISSUES\n### `op-deployer` Bug Report\nA new issue, [#16618](https://github.com/ethereum-optimism/optimism/issues/16618), was created to report an error encountered when running `op-deployer v0.4.0-rc.2` with `standard-overrides`. This issue was quickly closed as it was identified to be fixed in a more recent release candidate.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:27:24.534Z"]
["ethereum-optimism/optimism_day_2025-07-01", "ethereum-optimism/optimism", "day", "2025-07-01", "# ethereum-optimism/optimism Daily Update (Jul 1, 2025)\n## OVERVIEW \nThe day saw no new code contributions, bug fixes, or documentation enhancements. The primary activity was the creation of a new issue concerning the initialization state of specific precompile addresses within the op-stack.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Precompile Address Initialization Inquiry\nA new issue, [#16620](https://github.com/ethereum-optimism/optimism/issues/16620), was opened to question the purpose and necessity of initializing addresses 0x00-0xff with 1 wei balance and no contract code in the op-stack. The user is seeking clarification on whether any functionalities rely on this specific initialization.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-09-04T03:27:24.922Z"]
["ethereum-optimism/specs_day_2025-07-01", "ethereum-optimism/specs", "day", "2025-07-01", "# ethereum-optimism/specs Daily Update (Jul 1, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to refactor and centralize RPC specifications, indicating ongoing efforts to improve documentation structure.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\n*   **RPC Specification Refactoring**\n    A new pull request, [#736](https://github.com/ethereum-optimism/specs/pull/736), was opened to refactor and centralize RPC specifications under the `protocol/rpc/` directory. This aims to improve the organization and accessibility of RPC-related documentation.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified today.", "2025-09-04T03:27:25.119Z"]
["ethereum-optimism/docs_day_2025-07-01", "ethereum-optimism/docs", "day", "2025-07-01", "# ethereum-optimism/docs Daily Update (Jul 1, 2025)\n## OVERVIEW \nThe day's activity for the `ethereum-optimism/docs` repository primarily involved the creation of new issues to track monthly metrics reports for June 2025, specifically for opened pull requests and closed issues.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\n\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\nNo issues were closed.\n\n## NEW ISSUES\n\n### Monthly Metrics Reporting\nTwo new issues were opened to track metrics reports for June 2025:\n- A report for opened pull requests, including average, median, and 90th percentile for time to first response, time to close, and time to answer. ([#1682](https://github.com/ethereum-optimism/docs/issues/1682))\n- A report for closed issues, detailing average, median, and 90th percentile for time to first response and time to close. ([#1681](https://github.com/ethereum-optimism/docs/issues/1681))\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments.", "2025-09-04T03:27:25.514Z"]
["ethereum-optimism/op-analytics_day_2025-07-01", "ethereum-optimism/op-analytics", "day", "2025-07-01", "# ethereum-optimism/op-analytics Daily Update (Jul 1, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes for ETH transfers, enhancements to collective balance retrieval with retry logic, and updates to fee split calculations. Several internal tooling improvements were also made, including a Dagster version bump function and enabling Dagster backfill for ETH transfers.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Pipeline Enhancements & Bug Fixes\nA significant bug affecting ETH transfers was resolved, specifically addressing issues where entries with null `value_64` were being dropped ([#1665](https://github.com/ethereum-optimism/op-analytics/pull/1665)). Additionally, retry logic was implemented for collective balances to prevent null issues during retrieval ([#1663](https://github.com/ethereum-optimism/op-analytics/pull/1663)).\n\n### Collective Economics & Fee Split Updates\nThe process for updating fee splits was improved by adding new entities (Uni, Sony) and transitioning to reading data from RPCs instead of Etherscan APIs ([#1664](https://github.com/ethereum-optimism/op-analytics/pull/1664)).\n\n### Internal Tooling & Automation\nNew functionality was introduced to automate the bumping of the Dagster version via a CLI-runnable function ([#1666](https://github.com/ethereum-optimism/op-analytics/pull/1666)). Furthermore, Dagster backfill was enabled for ETH transfers, improving data processing capabilities ([#1667](https://github.com/ethereum-optimism/op-analytics/pull/1667)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#1668](https://github.com/ethereum-optimism/op-analytics/pull/1668) Add ERC20 Token Metadata Fix for Failing Tokens: This new pull request aims to address issues with ERC20 token metadata for tokens that are currently failing.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:27:25.630Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-07-02", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-07-02", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jul 2, 2025)\n## OVERVIEW \nThe primary activity for the day involved the addition of the CO token to the repository's data, specifically updating `data/CO/data.json` and `data/CO/logo.svg`.\n## KEY TECHNICAL DEVELOPMENTS\n\n### Token Data Management\nA new token, CO, was added to the repository's data. This involved updating the `data.json` file and including its corresponding `logo.svg` within the `data/CO` directory. ([#1169](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1169))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:27:25.786Z"]
["ethereum-optimism/op-geth_day_2025-07-02", "ethereum-optimism/op-geth", "day", "2025-07-02", "# ethereum-optimism/op-geth Daily Update (Jul 2, 2025)\n## OVERVIEW \nToday's development activity for `op-geth` was minimal, with no completed work in features, bug fixes, refactoring, documentation, or tests. The primary activity involved the opening of a new pull request related to miner testing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed technical developments to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#637](https://github.com/ethereum-optimism/op-geth/pull/637), was opened. This PR focuses on ensuring that transactions are added synchronously within a miner test, which is crucial for reliable and predictable testing of the mining process.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:27:26.528Z"]
["ethereum-optimism/op-analytics_day_2025-07-02", "ethereum-optimism/op-analytics", "day", "2025-07-02", "# ethereum-optimism/op-analytics Daily Update (Jul 2, 2025)\n## OVERVIEW \nToday's development focused on refining data types for ETH transfers, progressing on revenue share transfer logic, and making minor notebook modifications.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Type Refinement\n*   Fixed data type inconsistencies for ETH transfer data, ensuring accuracy in analytics. ([#1670](https://github.com/ethereum-optimism/op-analytics/pull/1670))\n\n### Revenue Share Transfer Logic\n*   Continued work on unifying and configuring revenue share transfers, specifically for L2 transactions. ([#1651](https://github.com/ethereum-optimism/op-analytics/pull/1651))\n\n### Notebook Adjustments\n*   Modified various notebooks, including updates to `google_bq_utils.py` and `l2beat_utils.py`. ([#1669](https://github.com/ethereum-optimism/op-analytics/pull/1669))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:27:26.628Z"]
["ethereum-optimism/docs_day_2025-07-03", "ethereum-optimism/docs", "day", "2025-07-03", "# ethereum-optimism/docs Daily Update (Jul 3, 2025)\n## OVERVIEW \nNo development activity was recorded for the `ethereum-optimism/docs` repository on July 3, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments.", "2025-09-04T03:27:26.733Z"]
["ethereum-optimism/infra_day_2025-07-03", "ethereum-optimism/infra", "day", "2025-07-03", "# ethereum-optimism/infra Daily Update (Jul 3, 2025)\n## OVERVIEW \nThe day's development activity for the `infra` repository was minimal, with no completed work in features, bug fixes, refactoring, documentation, or tests. The primary activity was the opening of a new pull request related to `proxyd` functionality.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#418](https://github.com/ethereum-optimism/infra/pull/418), was opened. This PR introduces a feature to `proxyd` for flashblocks-aware routing.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-09-04T03:27:26.889Z"]
["ethereum-optimism/optimism_day_2025-07-02", "ethereum-optimism/optimism", "day", "2025-07-02", "# ethereum-optimism/optimism Daily Update (Jul 2, 2025)\n## OVERVIEW \nNo new development activity was recorded for the `ethereum-optimism/optimism` repository on July 2, 2025. The day saw no new features, bug fixes, code refactoring, documentation enhancements, or tests added.\n \n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments.", "2025-09-04T03:27:26.936Z"]
["ethereum-optimism/optimism_day_2025-07-04", "ethereum-optimism/optimism", "day", "2025-07-04", "# ethereum-optimism/optimism Daily Update (Jul 4, 2025)\n## OVERVIEW \nNo development activity was recorded for the `ethereum-optimism/optimism` repository on July 4, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were recorded.", "2025-09-04T03:27:27.760Z"]
["ethereum-optimism/optimism_day_2025-07-05", "ethereum-optimism/optimism", "day", "2025-07-05", "# ethereum-optimism/optimism Daily Update (Jul 5, 2025)\n## OVERVIEW \nThe day's activity focused on development environment improvements, specifically saving dev-net state and Bedrock tweaks.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16626](https://github.com/ethereum-optimism/optimism/pull/16626), was opened to address saving the dev-net state, including the deployment of ParamToken and Bedrock tweaks.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo active issues to report with more than 3 comments.", "2025-09-04T03:27:28.109Z"]
["ethereum-optimism/optimism_day_2025-07-03", "ethereum-optimism/optimism", "day", "2025-07-03", "# ethereum-optimism/optimism Daily Update (Jul 3, 2025)\n## OVERVIEW \nThe day's activity was minimal, with no new features, bug fixes, or refactoring. The primary development involved a dependency update for `github.com/docker/docker`.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n- **Dependency Updates**: A new pull request was opened to update the `github.com/docker/docker` dependency from version `27.5.1+incompatible` to `28.3.1+incompatible` [#16624](https://github.com/ethereum-optimism/optimism/pull/16624). This is an automated update by Dependabot.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were opened on this date.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:27:28.258Z"]
["ethereum-optimism/op-geth_day_2025-07-05", "ethereum-optimism/op-geth", "day", "2025-07-05", "# ethereum-optimism/op-geth Daily Update (Jul 5, 2025)\n## OVERVIEW \nThe day's activity for op-geth was minimal, with no new features, bug fixes, or code refactoring. The primary development involved the closure of one long-standing issue related to slow block retrieval.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Performance and Synchronization\nA long-standing issue concerning slow block retrieval in op-geth, leading to delays in accessing the latest block via HTTP or WebSocket, has been closed. The issue, [#555](https://github.com/ethereum-optimism/op-geth/issues/555), was initially opened on March 21, 2025.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were updated today.", "2025-09-04T03:27:28.508Z"]
["ethereum-optimism/optimism_day_2025-07-06", "ethereum-optimism/optimism", "day", "2025-07-06", "# ethereum-optimism/optimism Daily Update (Jul 6, 2025)\n## OVERVIEW \nToday's development focused on enhancing test infrastructure. Key activities included re-enabling a critical fault proofs test in CI and refining acceptance tests by removing debug print statements, contributing to a more robust and production-ready testing environment.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Test Infrastructure Improvements\nEfforts were made to strengthen the project's testing suite. A previously disabled `op-e2e/faultproofs` test was re-enabled in CI, ensuring comprehensive coverage for the dispute game ([#16398](https://github.com/ethereum-optimism/optimism/pull/16398)). Additionally, print statements were removed from `op-acceptance-tests` to prepare them for execution on live networks, improving test cleanliness and efficiency ([#16602](https://github.com/ethereum-optimism/optimism/pull/16602)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments today.", "2025-09-04T03:27:29.552Z"]
["ethereum-optimism/infra_day_2025-07-07", "ethereum-optimism/infra", "day", "2025-07-07", "# ethereum-optimism/infra Daily Update (Jul 7, 2025)\n## OVERVIEW \nThe day saw activity primarily focused on issue discussions, with a notable comment on an existing issue regarding `op-node` behavior and the closure of an issue related to `flashblocks` acceptance testing.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n**Flashblocks Acceptance Testing**\nAn issue related to the `flashblocks` gate being aware of `flashblocks-websocket-proxy` was opened and closed on the same day, indicating a quick resolution or clarification. The associated PR is [#16584](https://github.com/ethereum-optimism/optimism/pull/16584). ([#16630](https://github.com/ethereum-optimism/infra/issues/16630))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n**`op-node` Pre-Interop Logic Discussion**\nDiscussion continued on an issue concerning adding a mode to `op-node` to use pre-Interop logic in trivial-Interop cases. A new comment from `tynes` on July 7th at 16:34:20Z inquired about the feasibility of running services within the same process, similar to `op-e2e` or `sysgo`. This issue was later closed on July 9th, with `tynes` stating it would no longer be prioritized. ([#16520](https://github.com/ethereum-optimism/infra/issues/16520))", "2025-09-04T03:27:30.336Z"]
["ethereum-optimism/op-analytics_day_2025-07-07", "ethereum-optimism/op-analytics", "day", "2025-07-07", "# ethereum-optimism/op-analytics Daily Update (Jul 7, 2025)\n## OVERVIEW \nThe day saw discussions on an existing issue regarding `op-node`'s Interop logic and the immediate closure of a newly opened issue concerning flashblocks gate acceptance tests.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n**Flashblocks Acceptance Test Validation**\nA new issue, [#16630](https://github.com/ethereum-optimism/op-analytics/issues/16630), was opened and immediately closed. It aimed to update the flashblocks gate acceptance tests to validate the streaming from `flashblocks-websocket-proxy`, in addition to `rbuiders`. An associated PR, https://github.com/ethereum-optimism/optimism/pull/16584, was referenced.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n**op-node Interop Logic Discussion**\nIssue [#16520](https://github.com/ethereum-optimism/op-analytics/issues/16520), \"op-node: Add mode to use pre-Interop logic in trivial-Interop case,\" saw a new comment today. `tynes` inquired about the feasibility of running services in the same process, similar to `op-e2e` or `sysgo`. This issue was later closed on July 9th, with `tynes` stating it would no longer be prioritized.", "2025-09-04T03:27:30.803Z"]
["ethereum-optimism/ecosystem_day_2025-07-07", "ethereum-optimism/ecosystem", "day", "2025-07-07", "# ethereum-optimism/ecosystem Daily Update (Jul 7, 2025)\n## OVERVIEW \nThe day's activity focused on significant progress in the Superstacks Mini App development, with multiple issues related to its implementation, backend integration, and production deployment being closed. Additionally, an issue concerning the Airdrop 6 event log poller was resolved.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, tests, or other work were completed.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n### Superstacks Mini App Development & Deployment\nSeveral issues related to the Superstacks Mini App were closed, indicating significant progress in its development and preparation for production. This includes scoping the WorldID Mini App ([#827](https://github.com/ethereum-optimism/ecosystem/issues/827)), configuring its production deployment ([#866](https://github.com/ethereum-optimism/ecosystem/issues/866)), implementing its UI for the claim flow ([#867](https://github.com/ethereum-optimism/ecosystem/issues/867)), and implementing the \"program has ended\" state ([#871](https://github.com/ethereum-optimism/ecosystem/issues/871)).\n\n### Backend and Airdrop Integration\nBackend modifications to support Superstacks Claim by removing delegation checks ([#849](https://github.com/ethereum-optimism/ecosystem/issues/849)) were completed. Additionally, an instance for the Airdrop 6 Event log poller was implemented to ensure the `isClaimed` value persists after a user claims ([#850](https://github.com/ethereum-optimism/ecosystem/issues/850)).\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n### op-node Interop Logic\nDiscussion on issue [#16520](https://github.com/ethereum-optimism/ecosystem/issues/16520) regarding adding a mode to `op-node` to use pre-Interop logic in trivial-Interop cases continued. A comment from `tynes` on July 7th at 16:34:20Z suggested considering a similar approach to `op-e2e` or `sysgo` where services run in the same process. The issue was subsequently closed on July 9th at 17:01:07Z by `tynes`, stating that it will no longer be prioritized.\n\n### Flashblocks Gate Acceptance Testing\nIssue [#16630](https://github.com/ethereum-optimism/ecosystem/issues/16630) was opened and closed on July 7th, concerning the `flashblocks gate` being aware of `flashblocks-websocket-proxy`. The issue highlights that the `flashblocks gate` currently only expects streaming from `rbuiders`, but now `flashblocks-websocket-proxy` also serves this stream, which needs validation by acceptance tests. `yashvardhan-kukreja` linked an associated PR ([https://github.com/ethereum-optimism/optimism/pull/16584](https://github.com/ethereum-optimism/optimism/pull/16584)) on July 7th at 17:01:22Z.", "2025-09-04T03:27:31.552Z"]
["ethereum-optimism/docs_day_2025-07-07", "ethereum-optimism/docs", "day", "2025-07-07", "# ethereum-optimism/docs Daily Update (Jul 7, 2025)\n\n## OVERVIEW \nThe day's focus was on documentation refinement, including a new guide for chain operators and several updates to ensure consistent terminology and capitalization across various sections. A broken link was also fixed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Refinement and Consistency\nEfforts were made to standardize terminology and capitalization across the documentation. This included updating \"crosschain\" to \"cross-chain\" ([#1672](https://github.com/ethereum-optimism/docs/pull/1672)), ensuring proper capitalization for product names like \"Superchain\" and \"Supersim\" ([#1677](https://github.com/ethereum-optimism/docs/pull/1677)), unifying case for terms like \"L2toL2\" to \"L2ToL2\" ([#1678](https://github.com/ethereum-optimism/docs/pull/1678)), and standardizing \"Blockspace Charters\" and \"Standard Rollup Charter\" ([#1679](https://github.com/ethereum-optimism/docs/pull/1679)). Capitalization of \"L1 Date Fee\" was also corrected ([#1680](https://github.com/ethereum-optimism/docs/pull/1680)).\n\n### Operator Guides and Tutorials\nA new tutorial guide was added to assist chain operators in setting up their proposer after initial configuration ([#1645](https://github.com/ethereum-optimism/docs/pull/1645)). Additionally, corrections were made to the upgrade 16 instructions ([#1684](https://github.com/ethereum-optimism/docs/pull/1684)).\n\n### Bug Fixes\nA broken link to Vitalik's website was fixed, resolving a 404 error ([#1683](https://github.com/ethereum-optimism/docs/pull/1683)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Interop Logic and Flashblocks Validation\nAn issue related to adding a mode to `op-node` for pre-Interop logic in trivial-Interop cases was closed, with the decision to no longer prioritize it ([#16520](https://github.com/ethereum-optimism/docs/issues/16520)). Another issue concerning the flashblocks gate's awareness of `flashblocks-websocket-proxy` was closed, with an associated PR mentioned ([#16630](https://github.com/ethereum-optimism/docs/issues/16630)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### op-node: Add mode to use pre-Interop logic in trivial-Interop case ([#16520](https://github.com/ethereum-optimism/docs/issues/16520))\nThis issue, created on June 20, 2025, aimed to add a mode to `op-node` to use pre-Interop logic when no supervisor RPC is provided, allowing it to function without a supervisor in trivial Interop cases. The discussion included a suggestion from tynes on July 7, 2025, to consider running services in the same process, similar to `op-e2e` or `sysgo`. However, the issue was closed on July 9, 2025, by tynes, stating that it would no longer be prioritized.", "2025-09-04T03:27:31.624Z"]
["ethereum-optimism/op-geth_day_2025-07-07", "ethereum-optimism/op-geth", "day", "2025-07-07", "# ethereum-optimism/op-geth Daily Update (Jul 7, 2025)\n## OVERVIEW \nThe day saw no completed work in terms of features, bug fixes, refactoring, documentation, or tests. A new pull request was opened to adjust logging, and an issue related to flashblocks acceptance testing was opened and closed on the same day.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#639](https://github.com/ethereum-optimism/op-geth/pull/639), was opened to modify logging to include milliseconds in the time format.\n\n## CLOSED ISSUES\n\n### Flashblocks Acceptance Testing\nAn issue, [#16630](https://github.com/ethereum-optimism/op-geth/issues/16630), was opened and closed on the same day, addressing the need for the flashblocks gate to be aware of the `flashblocks-websocket-proxy` for streaming validation.\n\n## NEW ISSUES\n\nNo new issues were opened that remained active.\n\n## ACTIVE ISSUES\n\n### op-node Interop Logic\nDiscussion on [#16520](https://github.com/ethereum-optimism/op-geth/issues/16520) revolved around adding a mode to `op-node` to use pre-Interop logic in trivial-Interop cases, allowing it to function without a supervisor. The latest comment from tynes (Jul 9, 2025) indicates that this issue will be closed as it is no longer being prioritized. Earlier, tynes (Jul 7, 2025) questioned if a similar approach to `op-e2e` or `sysgo` (running services in the same process) would be viable.", "2025-09-04T03:27:31.943Z"]
["ethereum-optimism/docs_day_2025-07-08", "ethereum-optimism/docs", "day", "2025-07-08", "# ethereum-optimism/docs Daily Update (Jul 8, 2025)\n## OVERVIEW \nThe day saw no new code contributions, features, or bug fixes. The primary activity involved a clarification on an existing issue regarding the initialization of precompile addresses in the OP Stack.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Clarification on Precompile Address Initialization\nDiscussion continued on [#16620](https://github.com/ethereum-optimism/docs/issues/16620) regarding the initialization of addresses 0x00-0xff in the OP Stack. The latest comment from tynes clarified that these are precompile addresses and the 1 wei balance is normal due to rules concerning empty accounts, ensuring they are not treated as empty.", "2025-09-04T03:27:33.427Z"]
["ethereum-optimism/superchain-registry_day_2025-07-07", "ethereum-optimism/superchain-registry", "day", "2025-07-07", "# ethereum-optimism/superchain-registry Daily Update (Jul 7, 2025)\n## OVERVIEW \nThe day saw no new code contributions, features, or bug fixes. The primary activity involved discussions on existing issues, particularly regarding `op-node` functionality and flashblocks acceptance testing.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n**Flashblocks Acceptance Test Update**\nAn issue related to updating the flashblocks gate to recognize `flashblocks-websocket-proxy` was opened and closed today. This update is crucial for ensuring that acceptance tests validate the flashblocks stream from the new proxy, in addition to `rbuiders` ([#16630](https://github.com/ethereum-optimism/superchain-registry/issues/16630)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n**`op-node` Interop Logic Discussion**\nDiscussion continued on an issue concerning adding a mode to `op-node` to use pre-Interop logic in trivial-Interop cases ([#16520](https://github.com/ethereum-optimism/superchain-registry/issues/16520)). A comment from tynes on July 7th suggested considering an approach similar to `op-e2e` or `sysgo`, where services run in the same process, and questioned if this would be a viable solution. The issue was later closed on July 9th, with tynes stating it would no longer be prioritized.", "2025-09-04T03:27:33.739Z"]
["ethereum-optimism/superchain-ops_day_2025-07-07", "ethereum-optimism/superchain-ops", "day", "2025-07-07", "# ethereum-optimism/superchain-ops Daily Update (Jul 7, 2025)\n## OVERVIEW \nThe day's development focused on maintenance and cleanup within the `superchain-ops` repository, specifically around the `src/improvements` directory. This included minor diffs related to a Minato upgrade and the removal of several outdated U16 tasks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Improvement Task Management\nSeveral improvement tasks were addressed, including minor diffs for a Minato upgrade and the removal of various U16-related tasks. This cleanup streamlines the codebase by removing outdated configurations and validation files.\n- Minato Diffs: [#1108](https://github.com/ethereum-optimism/superchain-ops/pull/1108)\n- Removal of U16 Tasks: [#1109](https://github.com/ethereum-optimism/superchain-ops/pull/1109)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Acceptance Test Enhancements\nAn issue related to the `flashblocks` gate in acceptance tests was closed, confirming that the gate now properly validates streams from `flashblocks-websocket-proxy` in addition to `rbuiders`.\n- Flashblocks Gate Awareness: [#16630](https://github.com/ethereum-optimism/superchain-ops/issues/16630)\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### op-node Interop Logic\nDiscussion on [#16520](https://github.com/ethereum-optimism/superchain-ops/issues/16520) revolved around adding a mode to `op-node` to use pre-Interop logic in trivial-Interop cases, allowing it to function without a supervisor. The latest comment from tynes on July 9, 2025, indicates that this issue will be closed as it is no longer a priority. Previously, tynes also inquired about the feasibility of running services within the same process, similar to `op-e2e` or `sysgo`.", "2025-09-04T03:27:33.772Z"]
["ethereum-optimism/supersim_day_2025-07-07", "ethereum-optimism/supersim", "day", "2025-07-07", "# ethereum-optimism/supersim Daily Update (Jul 7, 2025)\n## OVERVIEW \nThe day saw the closure of an issue related to configurable dependency sets in supersim, enhancing flexibility for testing. Discussions continued on an active issue concerning op-node's interop logic.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Enhanced Dependency Set Configuration\nThe issue concerning a configurable dependency set for L2 chains in supersim was closed today ([#361](https://github.com/ethereum-optimism/supersim/issues/361)). This enhancement allows users to specify a dependency set via a CLI flag, enabling more flexible testing scenarios for applications both within and outside a dependency set.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Op-node Interop Logic\nDiscussions continued on an issue regarding adding a mode to `op-node` to use pre-Interop logic in trivial-Interop cases ([#16520](https://github.com/ethereum-optimism/supersim/issues/16520)). The latest comment from tynes on July 7th at 16:34:20Z suggests considering a similar approach to `op-e2e` or `sysgo`, where all services run in the same process, and questions if this would be a viable solution. This issue is slated to be closed on July 9th.\n\n### Flashblocks Gate Awareness\nA new issue was opened and immediately closed today concerning the `flashblocks` gate's awareness of `flashblocks-websocket-proxy` ([#16630](https://github.com/ethereum-optimism/supersim/issues/16630)). The issue highlights the need for acceptance tests to validate streaming from `flashblocks-websocket-proxy`, not just `rbuilders`. An associated PR ([https://github.com/ethereum-optimism/optimism/pull/16584](https://github.com/ethereum-optimism/optimism/pull/16584)) was linked.", "2025-09-04T03:27:34.088Z"]
["ethereum-optimism/optimism_day_2025-07-07", "ethereum-optimism/optimism", "day", "2025-07-07", "# ethereum-optimism/optimism Daily Update (Jul 7, 2025)\n## OVERVIEW \nThe day saw significant progress in testing infrastructure with improvements to proof tests and the addition of a Gnosis Safe client. Documentation for the op-supervisor was also updated.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing Infrastructure\n- **Improved Proofs Testing**: The flakiness of proofs withdrawal tests was reduced by moving them to a dedicated package, optimizing test efficiency by isolating time-consuming operations. ([#16628](https://github.com/ethereum-optimism/optimism/pull/16628))\n- **Gnosis Safe Client Integration**: A new Gnosis Safe client was added to `op-service`, providing robust transaction sending capabilities with built-in gas estimation and retry logic. ([#16629](https://github.com/ethereum-optimism/optimism/pull/16629))\n\n### Documentation Updates\n- **Supervisor Readme Enhancement**: A \"failsafe\" section was added to the `op-supervisor` README, improving documentation clarity. ([#16601](https://github.com/ethereum-optimism/optimism/pull/16601))\n\n## NEWLY OPENED PULL REQUESTS\n- [#16631](https://github.com/ethereum-optimism/optimism/pull/16631) Fix logic for updating oldestL1Origin in ChannelBuilder\n- [#16633](https://github.com/ethereum-optimism/optimism/pull/16633) op-acceptance-tests: Pre-interop super proposer tests\n- [#16634](https://github.com/ethereum-optimism/optimism/pull/16634) op-node: experimental spike\n\n## CLOSED ISSUES\n\n### Flashblocks Configuration and Validation\n- **Netchef Configuration for Flashblocks**: An issue related to Netchef rendering flashblock websocket configurations for HA conductors was closed, indicating progress in automatically bootstrapping `flashblocks-websocket-proxy`. ([#15940](https://github.com/ethereum-optimism/optimism/issues/15940))\n- **Flashblocks Gate Awareness**: An issue concerning the flashblocks gate's awareness of `flashblocks-websocket-proxy` was opened and closed on the same day, with an associated PR mentioned. ([#16630](https://github.com/ethereum-optimism/optimism/issues/16630))\n\n## NEW ISSUES\n\n### Flashblocks Acceptance Test Requirements\n- **Flashblocks Gate Validation**: A new issue was opened to ensure the flashblocks gate validates streaming from `flashblocks-websocket-proxy`, as it currently only expects streaming from rbuilders. ([#16630](https://github.com/ethereum-optimism/optimism/issues/16630))\n- **Non-Interop Transaction Handling**: An issue was created to add an acceptance test for rbuilder's ability to accept non-interop transactions even when the supervisor RPC is unavailable in an interop setting. ([#16632](https://github.com/ethereum-optimism/optimism/issues/16632))\n\n## ACTIVE ISSUES\n\n### op-node Interop Logic\n- **Pre-Interop Logic in Trivial-Interop Case**: Issue [#16520](https://github.com/ethereum-optimism/optimism/issues/16520) discusses adding a mode to `op-node` to use pre-Interop logic when a supervisor is not provided in trivial interop cases. The latest comment from tynes on July 9th indicates that this issue will be closed as it is no longer a priority. Previously, tynes also inquired on July 7th about the feasibility of running services in the same process, similar to `op-e2e` or `sysgo`, to address this.", "2025-09-04T03:27:34.379Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-07-08", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-07-08", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jul 8, 2025)\n## OVERVIEW \nThe day's activity focused on clarifying an existing issue regarding the initialization of precompile addresses within the OP Stack, specifically addressing why addresses 0x00-0xff are initialized with 1 wei balance.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Precompile Address Initialization Clarification\nA discussion continued on [#16620](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16620) regarding the initialization of addresses 0x00-0xff with 1 wei balance in the OP Stack. The latest comment from tynes clarified that these are precompile addresses, and the 1 wei balance is intentionally set due to \"obscure rules in how empty accounts work,\" ensuring they are not treated as empty accounts.", "2025-09-04T03:27:35.387Z"]
["ethereum-optimism/infra_day_2025-07-08", "ethereum-optimism/infra", "day", "2025-07-08", "# ethereum-optimism/infra Daily Update (Jul 8, 2025)\n\n## OVERVIEW \nThe day's development focused on enhancing `proxyd` with new error handling for client-canceled requests and introducing conditional rate limiting for transaction senders, improving robustness and control.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced `proxyd` Error Handling\nA new \"499\" error code has been introduced in `proxyd` to specifically track instances where a client cancels a request, improving metrics and visibility into client-side cancellations ([#420](https://github.com/ethereum-optimism/infra/pull/420)).\n\n### Conditional Rate Limiting for Transaction Senders\n`proxyd` now supports conditional rate limiting for transaction senders and interop, alongside a cleanup of transaction parsing logic ([#421](https://github.com/ethereum-optimism/infra/pull/421)).\n\n## NEWLY OPENED PULL REQUESTS\nNone.\n\n## CLOSED ISSUES\nNone.\n\n## NEW ISSUES\nNone.\n\n## ACTIVE ISSUES\n\n### Clarification on Precompile Address Initialization\nDiscussion continued on the initialization of addresses 0x00-0xff in the op-stack, which are set with 1 wei balance and no contract code. The latest comment clarifies that these are precompile addresses, and the 1 wei balance is a standard practice to prevent them from being considered empty accounts due to obscure rules ([#16620](https://github.com/ethereum-optimism/infra/issues/16620)).", "2025-09-04T03:27:35.736Z"]
["ethereum-optimism/ecosystem_day_2025-07-08", "ethereum-optimism/ecosystem", "day", "2025-07-08", "# ethereum-optimism/ecosystem Daily Update (Jul 8, 2025)\n## OVERVIEW \nToday's development focused on enhancing the `ponder-interop` and `autorelayer-interop` applications, specifically improving how pending withdrawals are handled in gas calculations and message processing. This work directly addresses private issue #397, aiming for more accurate gas provider balance management.\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Pending Withdrawal Handling for Gas Providers\nImprovements were made to how pending withdrawals are accounted for in gas calculations. The `ponder-interop` now returns withdrawal information alongside `GasProvider` for pending messages and claims, providing a more complete picture of gas availability. Concurrently, `autorelayer-interop` was updated to deduct pending withdrawals from the gas provider balance when determining if a pending message should be relayed, ensuring more accurate relaying decisions.\n* [#879](https://github.com/ethereum-optimism/ecosystem/pull/879)\n* [#883](https://github.com/ethereum-optimism/ecosystem/pull/883)\n\n### Package Versioning and Release Management\nSeveral packages, including `autorelayer-interop` and `ponder-interop`, had their versions updated as part of a routine release process. Additionally, the `supersim` package was released at version `0.1.0-alpha.57`.\n* [#881](https://github.com/ethereum-optimism/ecosystem/pull/881)\n* [#888](https://github.com/ethereum-optimism/ecosystem/pull/888)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Clarification on Initialized Addresses (0x00-0xff)\nDiscussion continued on the purpose of initializing addresses 0x00-0xff with 1 wei balance and no contract code in the OP Stack [#16620](https://github.com/ethereum-optimism/ecosystem/issues/16620). The latest comment clarifies that these are precompile addresses, and the 1 wei balance is a standard practice to prevent them from being considered \"empty accounts\" due to specific rules.", "2025-09-04T03:27:35.811Z"]
["ethereum-optimism/op-analytics_day_2025-07-08", "ethereum-optimism/op-analytics", "day", "2025-07-08", "# ethereum-optimism/op-analytics Daily Update (Jul 8, 2025)\n## OVERVIEW \nThe day's development focused on significant updates to the Dagster data pipeline, including multiple bumps to the Dagster version, the removal of decommissioned chains from ingestion, and enhancements for native transfer backfilling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Dagster Pipeline Enhancements and Updates\nMultiple updates were made to the Dagster data pipeline, including several version bumps to improve functionality and stability. This also included adding a Dagster rangespec for native transfers and enabling backfilling of native transfers through the Dagster UI without requiring redeployment.\n- [#1672](https://github.com/ethereum-optimism/op-analytics/pull/1672)\n- [#1673](https://github.com/ethereum-optimism/op-analytics/pull/1673)\n- [#1674](https://github.com/ethereum-optimism/op-analytics/pull/1674)\n- [#1675](https://github.com/ethereum-optimism/op-analytics/pull/1675)\n- [#1676](https://github.com/ethereum-optimism/op-analytics/pull/1676)\n- [#1677](https://github.com/ethereum-optimism/op-analytics/pull/1677)\n\n### Data Ingestion Streamlining\nEfforts were made to streamline data ingestion by removing Kroma from the ingestion process, as it has been decommissioned. This change ensures that other data is not blocked during deployments.\n- [#1671](https://github.com/ethereum-optimism/op-analytics/pull/1671)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Precompile Address Initialization Clarification\nDiscussion continued on [#16620](https://github.com/ethereum-optimism/op-analytics/issues/16620) regarding the initialization of addresses 0x00-0xff in the op-stack with 1 wei balance and no contract code. The latest comment from tynes clarified that these are precompile addresses, and the 1 wei balance is normal due to \"obscure rules in how empty accounts work,\" ensuring they are not treated as empty accounts.", "2025-09-04T03:27:36.837Z"]
["ethereum-optimism/specs_day_2025-07-08", "ethereum-optimism/specs", "day", "2025-07-08", "# ethereum-optimism/specs Daily Update (Jul 8, 2025)\n\n## OVERVIEW \nToday's development focused on refining interoperation specifications within the Superchain, specifically by adding a new derivation type and extending block reference functionality for improved L2 block origin tracking.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Interoperability Specification Enhancements\nImprovements were made to the `specs/interop/managed-node.md` file to enhance cross-chain interoperability within the Superchain. This includes the addition of `DerivationCurrentL1Update` to support ongoing discussions and the extension of `interop_blockRefByNumber` to `interop_l2BlockRefByNumber` to ensure the supervisor can accurately determine the L1 origin of L2 blocks.\n- [#733](https://github.com/ethereum-optimism/specs/pull/733)\n- [#735](https://github.com/ethereum-optimism/specs/pull/735)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Clarification on Precompile Address Initialization\nDiscussion continued on the initialization of addresses 0x00-0xff in the op-stack. The latest comment clarifies that these are precompile addresses, and the 1 wei balance is a standard practice due to rules concerning empty accounts, indicating that this initialization is intentional and serves a specific purpose.\n- [#16620](https://github.com/ethereum-optimism/specs/issues/16620)", "2025-09-04T03:27:37.501Z"]
["ethereum-optimism/supersim_day_2025-07-08", "ethereum-optimism/supersim", "day", "2025-07-08", "# ethereum-optimism/supersim Daily Update (Jul 8, 2025)\n## OVERVIEW \nThe day's development focused on updating the `GasTank` to its latest version, involving changes across multiple genesis files and the `interop-lib` submodule.\n## KEY TECHNICAL DEVELOPMENTS\n\n### GasTank and Genesis Updates\nThe `GasTank` component was updated to its latest version, requiring changes to the `interop-lib` gitsubmodule and several genesis files. This ensures `GasTank` is deployed from the most recent commit. ([#413](https://github.com/ethereum-optimism/supersim/pull/413))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Precompile Address Initialization\nDiscussion continued on [#16620](https://github.com/ethereum-optimism/supersim/issues/16620) regarding the initialization of addresses 0x00-0xff with 1 wei balance and no contract code. The latest comment clarified that these are precompile addresses, and the 1 wei balance is normal due to obscure rules concerning empty accounts, ensuring they are not treated as empty.", "2025-09-04T03:27:37.594Z"]
["ethereum-optimism/superchain-ops_day_2025-07-08", "ethereum-optimism/superchain-ops", "day", "2025-07-08", "# ethereum-optimism/superchain-ops Daily Update (Jul 8, 2025)\n## OVERVIEW \nThe day focused on critical bug fixes related to U16 Sepolia improvements, specifically addressing configuration and state override issues to ensure proper simulation and functionality of various upgrades and removals.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### U16 Sepolia Configuration and Validation Fixes\nMultiple bug fixes were implemented to address issues within the U16 Sepolia improvement tasks. This included adding necessary fixes for DPM and DGM related tasks, and updating validation files.\n- Add U16 Sepolia fixes ([#1113](https://github.com/ethereum-optimism/superchain-ops/pull/1113))\n\n### Configuration File Bug Resolution\nA significant bug in the `config.toml` files for U16 OPCM upgrades (v400-soneium and v400-uni) was resolved. This fix ensures that `isRc` and `superchainConfig` are properly set, leading to correct normalized hash generation.\n- fix: 015-U16 config.toml bug fix ([#1114](https://github.com/ethereum-optimism/superchain-ops/pull/1114))\n\n### Guardian Nonce Override for Simulation\nA state override was added to the U16 guardian nonce, specifically for the `017-U16-remove-dgm` task. This ensures that the task can be simulated correctly in a standalone state.\n- fix: 017-U16 guardian nonce override ([#1115](https://github.com/ethereum-optimism/superchain-ops/pull/1115))\n\n## NEWLY OPENED PULL REQUESTS\nNone\n\n## CLOSED ISSUES\nNone\n\n## NEW ISSUES\nNone\n\n## ACTIVE ISSUES\n### Precompile Address Initialization\nDiscussion on issue [#16620](https://github.com/ethereum-optimism/superchain-ops/issues/16620) clarified the purpose of initializing addresses 0x00-0xff with 1 wei balance in op-stack. The latest comment from tynes (Jul 8, 2025) explains that these are precompile addresses and the 1 wei balance is a standard practice due to \"obscure rules in how empty accounts work,\" ensuring they are not treated as empty accounts.", "2025-09-04T03:27:38.641Z"]
["ethereum-optimism/optimism_day_2025-07-08", "ethereum-optimism/optimism", "day", "2025-07-08", "# ethereum-optimism/optimism Daily Update (Jul 8, 2025)\n\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure, refactoring the op-supervisor for improved efficiency, and consolidating interop APIs. Key updates include test validation compliance and a new test for safe head database behavior.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Test Validation and Coverage\nSignificant progress was made in improving the robustness and compliance of the testing suite. This includes updating existing tests to meet validation scripts and adding new tests to cover critical scenarios.\n- Test validation compliance for `/L2` tests was achieved, removing them from the exclusion list and ensuring consistency across the test suite ([#16607](https://github.com/ethereum-optimism/optimism/pull/16607)).\n- A new test was added to `op-acceptance` to verify safe head database behavior when the Execution Layer (EL) state is deleted, crucial for maintaining data integrity during EL syncs ([#16627](https://github.com/ethereum-optimism/optimism/pull/16627)).\n\n### Op-Supervisor Refactoring and API Consolidation\nThe `op-supervisor` component underwent refactoring to streamline its operations and improve efficiency, alongside the consolidation of interop APIs for better consistency.\n- The `op-supervisor`'s rewinder mechanism was refactored, removing `ChainRewoundEvent` and simplifying `rewinderDB` interactions, addressing a known issue related to rewinder's use of events ([#16556](https://github.com/ethereum-optimism/optimism/pull/16556)).\n- The `interop_blockRefByNumber` API was removed and consolidated into `interop_L2BlockRefByNumber` within `op-supervisor` and `op-node`, aligning with recent spec changes and reducing API redundancy ([#16636](https://github.com/ethereum-optimism/optimism/pull/16636)).\n\n## NEWLY OPENED PULL REQUESTS\n- A Proof-of-Concept (PoC) implementation for `op-sync-tester` was opened ([#16637](https://github.com/ethereum-optimism/optimism/pull/16637)).\n- A refactor of the event system within `op-service` was initiated ([#16639](https://github.com/ethereum-optimism/optimism/pull/16639)).\n\n## CLOSED ISSUES\n\n### Op-Supervisor Rewinder Improvements\nAn issue concerning the `op-supervisor`'s rewinder mechanism was resolved, leading to a more streamlined and efficient process.\n- The issue tracking the revisiting of the rewinder's use of `ChainRewoundEvent` in `op-supervisor` was closed ([#16355](https://github.com/ethereum-optimism/optimism/issues/16355)).\n\n### API Consolidation\nA key issue related to API redundancy within `op-node` was addressed, contributing to a cleaner and more consistent API surface.\n- The issue to consolidate `interop_blockRefByNumber` and `interop_l2BlockRefByNumber` in `op-node` was closed ([#16604](https://github.com/ethereum-optimism/optimism/issues/16604)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Understanding Precompile Address Initialization\nDiscussion continued on the initialization of addresses 0x00-0xff within the op-stack.\n- A user inquired about the purpose of initializing addresses 0x00-0xff with 1 wei balance and no contract code, and whether any functionalities rely on this ([#16620](https://github.com/ethereum-optimism/optimism/issues/16620)).\n- The latest comment clarified that these are precompile addresses, and the 1 wei balance is a normal practice due to obscure rules governing empty accounts, ensuring they are not considered empty.", "2025-09-04T03:27:38.921Z"]
["ethereum-optimism/ecosystem_day_2025-07-09", "ethereum-optimism/ecosystem", "day", "2025-07-09", "# ethereum-optimism/ecosystem Daily Update (Jul 9, 2025)\n## OVERVIEW \nToday's activity focused on refining testing reliability, addressing an `op-geth` CPU usage concern, and reviewing fault proof runbooks. Several issues were closed, indicating progress in stabilizing the ecosystem.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Test Reliability Improvements\nThe issue concerning the reliability of acceptance tests was closed today [#16378](https://github.com/ethereum-optimism/ecosystem/issues/16378). The closure indicates that significant improvements have been made to the tests, with a commitment to continuous monitoring and further enhancements to prevent flakiness.\n\n### Interop Logic Prioritization\nThe issue related to adding a mode for `op-node` to use pre-Interop logic in trivial-Interop cases was closed [#16520](https://github.com/ethereum-optimism/ecosystem/issues/16520). This indicates a shift in prioritization, with the feature no longer being actively pursued.\n\n### Batcher Throttling Issue Resolution\nThe `op-batcher` `SetMaxDASize` issue was closed due to inactivity [#15355](https://github.com/ethereum-optimism/ecosystem/issues/15355). The issue was related to an RPC error when setting the maximum DA size.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussion on [#15789](https://github.com/ethereum-optimism/ecosystem/issues/15789) continues, with stevennevins outlining a detailed checklist of tasks. These include moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODO comments, rebasing updates from EVM safety refactoring, and fixing Go updates in the Go test/integration.\n\n### RV Audit - `TestCrossSafeUpdate` and Hazard Set Construction\nThe discussion on [#16548](https://github.com/ethereum-optimism/ecosystem/issues/16548) saw a new comment from DeVikingMark, indicating a pull request has been made to address the concerns raised in the issue regarding the `TestCrossSafeUpdate` and the lack of clear `invalid` signals during Hazard Set construction.\n\n### Abnormal CPU Usage with `op-geth`\nOn [#613](https://github.com/ethereum-optimism/ecosystem/issues/613), PierrickGT provided a `pprof` profile, confirming the high CPU usage issue. The latest update suggests that the performance issue might be related to an index update process, which took approximately 24 hours to complete on their system. Previous comments from jsvisa and hekich also pointed to the possibility of index rebuilding as the cause for temporary high CPU usage.", "2025-09-04T03:27:41.012Z"]
["ethereum-optimism/docs_day_2025-07-09", "ethereum-optimism/docs", "day", "2025-07-09", "# ethereum-optimism/docs Daily Update (Jul 9, 2025)\n## OVERVIEW \nToday's focus was on enhancing documentation for chain operators, including a comprehensive batcher deployment guide and updates to consensus configuration. Several issues related to test reliability and op-node functionality were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Operator Documentation Enhancements\n- A complete batcher deployment guide was added, covering both build-from-source and Docker setup options ([#1665](https://github.com/ethereum-optimism/docs/pull/1665)).\n- Instructions for Holocene and Isthmus were added to the consensus configuration documentation ([#1686](https://github.com/ethereum-optimism/docs/pull/1686)).\n\n### RPC Provider and Smart Contract Updates\n- Grove was added as an RPC Provider in the documentation ([#1685](https://github.com/ethereum-optimism/docs/pull/1685)).\n- A release-ready callout was updated within the smart contracts documentation ([#1687](https://github.com/ethereum-optimism/docs/pull/1687)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Test Reliability Improvements\n- The issue concerning the reliability of acceptance tests was closed, with significant improvements noted in test consistency ([#16378](https://github.com/ethereum-optimism/docs/issues/16378)).\n\n### Op-node Functionality and Batcher Issues\n- The issue regarding adding a mode to use pre-Interop logic in trivial-Interop cases for `op-node` was closed, as it is no longer being prioritized ([#16520](https://github.com/ethereum-optimism/docs/issues/16520)).\n- The `op-batcher SetMaxDASize` issue was closed due to inactivity, with no further problems reported ([#15355](https://github.com/ethereum-optimism/docs/issues/15355)).\n\n### Runbook Review\n- The issue for the v3 fault proof incident runbook final review was closed, with updates to references and versioning ([#16651](https://github.com/ethereum-optimism/docs/issues/16651)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract Changes\n- **[#15789](https://github.com/ethereum-optimism/docs/issues/15789) Fault Proof creator contract OPCM changes**: Discussions are ongoing regarding necessary OPCM changes to support recent updates. The latest comment outlines a detailed checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry`, unskipping and updating tests, reviewing comments, addressing TODOs, and rebasing updates from EVM safety refactoring.\n\n### Abnormal CPU Usage with op-geth\n- **[#613](https://github.com/ethereum-optimism/docs/issues/613) Abnormal CPU usage with latest op-geth (v1.101511.0)**: Users continue to report high CPU usage with `op-geth`. The latest comment confirms the issue and provides a `pprof` file, noting that the performance issue might be related to an index update that took about 24 hours to complete on an Orange Pi 5 Plus. Previous comments suggested that the high CPU usage could be temporary due to log indexing rebuilds or a persistent bug.\n\n### RV Audit - TestCrossSafeUpdate\n- **[#16548](https://github.com/ethereum-optimism/docs/issues/16548) RV Audit - `TestCrossSafeUpdate` testing impossible cases ; No clear `invalid` signal during Hazard Set construction**: The discussion revolves around a specific test (`TestCrossSafeUpdate`) that appears to be testing impossible cases. The latest comment indicates a pull request has been made to address this.", "2025-09-04T03:27:41.149Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-07-09", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-07-09", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jul 9, 2025)\n## OVERVIEW \nThe day saw a new feature addition with the integration of Super token to Soneium. Several issues were closed, including improvements to acceptance test reliability and resolution of a batcher issue. Discussions continued on fault proof creator contract changes and op-geth CPU usage.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Ecosystem Expansion\nA new feature was added to integrate the Super token into Soneium, expanding the Superchain ecosystem's reach and interoperability. ([#1171](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1171))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Test Reliability Improvements\nThe issue concerning the reliability of acceptance tests was closed, indicating significant progress in improving test consistency and reducing flakiness. ([#16378](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16378))\n\n### Batcher Configuration Resolution\nThe `op-batcher SetMaxDASize` issue, related to RPC availability and throttling, was closed due to inactivity, suggesting the problem may have been resolved or is no longer a priority. ([#15355](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15355))\n\n### Op-Node Interop Logic Deprioritization\nThe issue to add a mode for using pre-Interop logic in the `op-node` for trivial-Interop cases was closed, indicating a shift in prioritization for this feature. ([#16520](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16520))\n\n## NEW ISSUES\n### Fault Proof Incident Runbook Review\nA new issue was opened to conduct a final review of the v3 fault proof incident runbook and remove its \"draft\" label, ensuring it is ready for use. ([#16651](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16651))\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussions on the `Fault Proof creator contract OPCM changes` ([#15789](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15789)) are ongoing, with a detailed checklist of tasks being addressed. The latest update from stevennevins outlines several action items including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODO comments, and rebasing updates from EVM safety refactoring.\n\n### Abnormal CPU Usage with op-geth\nThe issue regarding `Abnormal CPU usage with latest op-geth (v1.101511.0)` ([#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613)) continues to be discussed. PierrickGT provided a `profile.pb.gz` file and noted that the performance issue might have been due to an index update, which took about 24 hours to complete. Previous comments from jsvisa and hekich also suggested that high CPU usage could be temporary due to log indexing rebuilds after backporting go-ethereum v1.15.11. cpuchainorg, however, expressed concerns about persistent high CPU usage and the quality assurance of op-geth releases.\n\n### RV Audit - TestCrossSafeUpdate Testing Impossible Cases\nDiscussion on `RV Audit - TestCrossSafeUpdate testing impossible cases` ([#16548](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16548)) saw a new comment from DeVikingMark, who created a pull request for review. The issue highlights a test that sets a custom `openBlockFn` to return `ErrAwaitReplacement`, suggesting a potential problem with testing impossible scenarios or a lack of clear `invalid` signals during Hazard Set construction.", "2025-09-04T03:27:42.205Z"]
["ethereum-optimism/infra_day_2025-07-09", "ethereum-optimism/infra", "day", "2025-07-09", "# ethereum-optimism/infra Daily Update (Jul 9, 2025)\n## OVERVIEW \nThe day saw progress in addressing long-standing issues, with several issues related to reliability and operational stability being closed. New development focused on interop validation and an initial commit for `op-spamoor`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Interop Validation and Core Logic Adjustments\nA new pull request was opened to force disable interop validation toggles and remove interop error code awareness, indicating adjustments to how interop logic is handled.\n- [#423](https://github.com/ethereum-optimism/infra/pull/423)\n\n### Initial `op-spamoor` Development\nAn initial commit for `op-spamoor` was made, marking the beginning of development for this component.\n- [#422](https://github.com/ethereum-optimism/infra/pull/422)\n\n## NEWLY OPENED PULL REQUESTS\n- [#422](https://github.com/ethereum-optimism/infra/pull/422) `op-spamoor: initial commit` - This PR introduces the foundational code for the `op-spamoor` component.\n- [#423](https://github.com/ethereum-optimism/infra/pull/423) `feat: force disable interop validation toggle and remove interop error code awareness` - This PR aims to modify interop validation behavior by disabling a toggle and removing specific error code awareness.\n\n## CLOSED ISSUES\n\n### Improved Test Reliability\nThe issue concerning the reliability of acceptance tests was closed, with the team noting significant improvements and a commitment to continuous monitoring and enhancement.\n- [#16378](https://github.com/ethereum-optimism/infra/issues/16378)\n\n### Resolution of `op-batcher` RPC Issue\nThe `op-batcher` `SetMaxDASize` RPC issue was closed due to inactivity, with a note to reopen if the problem persists.\n- [#15355](https://github.com/ethereum-optimism/infra/issues/15355)\n\n### Deprioritization of `op-node` Interop Logic\nThe issue to add a mode for `op-node` to use pre-Interop logic in trivial-Interop cases was closed, as it is no longer being prioritized.\n- [#16520](https://github.com/ethereum-optimism/infra/issues/16520)\n\n## NEW ISSUES\n### Fault Proof Incident Runbook Review\nA new issue was opened to conduct a final review of the v3 fault proof incident runbook and remove its \"draft\" label.\n- [#16651](https://github.com/ethereum-optimism/infra/issues/16651)\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussion continues on understanding and supporting OPCM changes for the Fault Proof creator contract. The latest comment outlines a detailed checklist of remaining tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODO comments, and rebasing updates from EVM safety refactoring.\n- [#15789](https://github.com/ethereum-optimism/infra/issues/15789)\n\n### RV Audit - `TestCrossSafeUpdate` and Hazard Set Construction\nThe issue regarding `TestCrossSafeUpdate` testing impossible cases and the lack of a clear `invalid` signal during Hazard Set construction remains active. A new pull request has been made to address this.\n- [#16548](https://github.com/ethereum-optimism/infra/issues/16548)\n\n### Abnormal CPU Usage with `op-geth`\nThe issue concerning abnormal CPU usage with `op-geth` v1.101511.0 is still active. A user reported that the performance issue was due to an index update, which took about 24 hours to complete on their system. A `profile.pb.gz` file was attached for further analysis.\n- [#613](https://github.com/ethereum-optimism/infra/issues/613)", "2025-09-04T03:27:43.122Z"]
["ethereum-optimism/op-geth_day_2025-07-09", "ethereum-optimism/op-geth", "day", "2025-07-09", "# ethereum-optimism/op-geth Daily Update (Jul 9, 2025)\n## OVERVIEW \nToday's development focused on updating the Superchain Registry commit and optimizing interop transaction handling. Several issues were closed, including one related to acceptance test reliability and another concerning `op-batcher`'s `SetMaxDASize` issue. A new issue was opened regarding transaction re-injection.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Registry Update\nThe Superchain Registry commit was bumped to `6621a0f1`, ensuring `op-geth` is aligned with the latest Superchain configurations.\n- [#640](https://github.com/ethereum-optimism/op-geth/pull/640)\n\n### Interop Transaction Handling Optimization\nA significant change was implemented to remove the `checkInterop` function from the block building path, addressing concerns about excessive time consumption during block construction.\n- [#585](https://github.com/ethereum-optimism/op-geth/pull/585)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Acceptance Test Reliability Improvements\nThe issue concerning the reliability of acceptance tests was closed, with the team noting significant improvements in test consistency.\n- [#16378](https://github.com/ethereum-optimism/op-geth/issues/16378)\n\n### `op-batcher` `SetMaxDASize` Resolution\nThe `op-batcher` `SetMaxDASize` issue, which caused RPC errors and shutdowns, was closed due to inactivity, with a note to reopen if the problem persists.\n- [#15355](https://github.com/ethereum-optimism/op-geth/issues/15355)\n\n### `op-node` Interop Logic Deprioritization\nA mode to use pre-Interop logic in the trivial-Interop case for `op-node` was deprioritized and the associated issue was closed.\n- [#16520](https://github.com/ethereum-optimism/op-geth/issues/16520)\n\n## NEW ISSUES\n\n### Transaction Pool Filtering on Reinjection\nA new issue was opened to address the problem of invalid interop transactions not being re-evaluated by filters when re-entered into the mempool after a block reorg.\n- [#641](https://github.com/ethereum-optimism/op-geth/issues/641)\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussions continue on understanding and supporting OPCM changes for the Fault Proof creator contract. The latest comment outlines a detailed checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, and addressing TODO comments.\n- [#15789](https://github.com/ethereum-optimism/op-geth/issues/15789)\n\n### RV Audit - Testing Impossible Cases and Hazard Set Construction\nThe discussion on this issue, related to the RV Audit, saw a new pull request being made for review. The issue highlights concerns about a test that sets a custom `openBlockFn` to return `ErrAwaitReplacement` and the lack of a clear `invalid` signal during Hazard Set construction.\n- [#16548](https://github.com/ethereum-optimism/op-geth/issues/16548)\n\n### Abnormal CPU Usage with Latest `op-geth`\nUsers are reporting abnormal CPU usage with `op-geth` v1.101511.0. The latest comment provides instructions on how to enable pprof and capture CPU performance data, and an attached profile suggests the issue might be related to index updates, which can take a significant amount of time. Previous comments also noted that the high CPU usage might be temporary during log indexing rebuilds.\n- [#613](https://github.com/ethereum-optimism/op-geth/issues/613)\n\n### Runbook v3 Final Review\nA new issue was opened to conduct a final review of the v3 fault proof incident runbook before removing its \"draft\" label. The latest comment indicates that references from other runbooks have been updated to point to V3, and the different runbook versions have been renamed to indicate applicable releases.\n- [#16651](https://github.com/ethereum-optimism/op-geth/issues/16651)", "2025-09-04T03:27:44.195Z"]
["ethereum-optimism/docs_day_2025-07-10", "ethereum-optimism/docs", "day", "2025-07-10", "# ethereum-optimism/docs Daily Update (Jul 10, 2025)\n## OVERVIEW \nThe day's activity focused on documentation updates related to the upcoming upgrade 16, with a specific pull request opened to add the execution date. An issue concerning interop prestate checks was closed after a detailed discussion on its feasibility and mitigation through tooling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Upgrade 16 Documentation\nDocumentation for the upcoming upgrade 16 was updated, specifically addressing changes related to this upgrade. ([#1690](https://github.com/ethereum-optimism/docs/pull/1690))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1689](https://github.com/ethereum-optimism/docs/pull/1689), was opened to add the execution date for upgrade 16.\n\n## CLOSED ISSUES\n\n### Interoperability Prestate Checks\nThe issue regarding checking the L2 genesis state for pre-interop CrossL2Inbox configuration faults ([#15765](https://github.com/ethereum-optimism/docs/issues/15765)) was closed. The discussion concluded that the execution client is not the ideal place for this validation, and the risk has been mitigated through improvements in the genesis generation tooling (op-deployer).\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n### Interop: check EL prestate for pre-interop CrossL2Inbox configuration fault ([#15765](https://github.com/ethereum-optimism/docs/issues/15765))\nThis issue was closed today. The latest comment from ajsutton at 2025-07-10T03:03:24Z stated that the issue is being closed as the execution client is not well-suited for this check, and the risk has been sufficiently mitigated by improvements in the genesis generation tooling. Previous discussions highlighted that `op-deployer` now automatically handles the inclusion of `CrossL2Inbox` based on the number of chains, ensuring correct genesis generation and reducing the need for this validation within the execution client itself.", "2025-09-04T03:27:44.654Z"]
["ethereum-optimism/superchain-ops_day_2025-07-09", "ethereum-optimism/superchain-ops", "day", "2025-07-09", "# ethereum-optimism/superchain-ops Daily Update (Jul 9, 2025)\n## OVERVIEW \nThe day's development focused on refining core functionalities and addressing operational issues. Key activities included refactoring Gnosis Safe transaction encoding logic, fixing template renaming, and executing several Sepolia runbooks. Multiple issues related to testing reliability, op-node functionality, and CPU usage were also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Gnosis Safe Logic Refactoring\nSignificant refactoring was performed to improve the organization and reusability of Gnosis Safe transaction encoding logic. Functions previously located in `MultisigTask` were moved to the `GnosisSafeHashes` library, enhancing modularity and maintainability. ([#1092](https://github.com/ethereum-optimism/superchain-ops/pull/1092))\n\n### Template and Runbook Updates\nA fix was implemented to rename a template by removing its version, streamlining future template management. Additionally, the status of three U16 Sepolia runbooks was executed, indicating progress in operational deployments. ([#1120](https://github.com/ethereum-optimism/superchain-ops/pull/1120), [#1117](https://github.com/ethereum-optimism/superchain-ops/pull/1117))\n\n## NEWLY OPENED PULL REQUESTS\n- [#1118](https://github.com/ethereum-optimism/superchain-ops/pull/1118): This pull request aims to enforce users to add the `op-contract` version to the template name, likely to improve versioning and clarity for contract templates.\n\n## CLOSED ISSUES\n\n### Testing and Reliability Improvements\nSeveral issues related to testing and reliability were closed. This includes improving the reliability of acceptance tests, with a focus on making them consistently pass on the first attempt rather than requiring multiple runs ([#16378](https://github.com/ethereum-optimism/superchain-ops/issues/16378)).\n\n### Operational and Node Functionality\nAn issue concerning the `op-batcher SetMaxDASize` problem, which caused the batcher to shut down due to an unavailable or broken RPC method, was closed due to inactivity ([#15355](https://github.com/ethereum-optimism/superchain-ops/issues/15355)). Another issue related to adding a mode to `op-node` to use pre-Interop logic in trivial-Interop cases was closed as it is no longer being prioritized ([#16520](https://github.com/ethereum-optimism/superchain-ops/issues/16520)).\n\n### Documentation and Review\nA runbook for v3 final review was closed, indicating that the review process for the fault proof incident runbook has been completed and updated references to other runbooks have been made ([#16651](https://github.com/ethereum-optimism/superchain-ops/issues/16651)).\n\n## NEW ISSUES\nNo new issues were opened on Jul 9, 2025.\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussion on [#15789](https://github.com/ethereum-optimism/superchain-ops/issues/15789) revolves around understanding and implementing OPCM changes for the Fault Proof creator contract. The latest comment outlines a detailed checklist of tasks, including moving WETH and L2ChainId to `implArgs`, fixing `StandardValidator` assertions, removing `anchorStateRegistry` from `StandardValidatorOverrides`, unskipping and updating tests in `DeployOPChain.t.sol`, reviewing comment responses, addressing TODO comments, rebasing updates from EVM safety, and fixing Go updates for integration tests.\n\n### Abnormal CPU Usage with op-geth\nIssue [#613](https://github.com/ethereum-optimism/superchain-ops/issues/613) addresses abnormal CPU usage with `op-geth`. The latest comment confirms that the performance issue was likely due to an index update, which took approximately 24 hours to complete on an Orange Pi 5 Plus. A `profile.pb.gz` file was attached to aid in debugging. Previous discussions highlighted that the high CPU usage might be temporary, related to log indexing rebuilds, and that the issue persists even after the index upgrade for some users.\n\n### RV Audit - `TestCrossSafeUpdate` and Hazard Set Construction\nIssue [#16548](https://github.com/ethereum-optimism/superchain-ops/issues/16548) discusses a test case (`TestCrossSafeUpdate`) that might be testing impossible scenarios and the lack of a clear `invalid` signal during Hazard Set construction. The latest comment indicates that a pull request has been made to address this, awaiting review.", "2025-09-04T03:27:46.159Z"]
["ethereum-optimism/ecosystem_day_2025-07-10", "ethereum-optimism/ecosystem", "day", "2025-07-10", "# ethereum-optimism/ecosystem Daily Update (Jul 10, 2025)\n## OVERVIEW \nToday's development focused on enhancing the relayer functionality within the ecosystem, specifically updating how GasProvider is specified during message relaying. This includes updates to `autorelayer-interop` and `ponder-interop` to align with the new `GasTank` ABI.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Relayer GasProvider Updates\nSignificant updates were implemented to modify how the `GasProvider` is specified during message relaying. This change, driven by a recent `GasTank` ABI update, ensures that the `GasProvider` is specified at the time of relay rather than claim, which is crucial for relay receipt generation. This involved changes across multiple components, including the `autorelayer-interop` and `ponder-interop` applications.\n- [#889](https://github.com/ethereum-optimism/ecosystem/pull/889)\n- [#890](https://github.com/ethereum-optimism/ecosystem/pull/890)\n- [#891](https://github.com/ethereum-optimism/ecosystem/pull/891)\n\n### Supersim Release\nA new release, `0.1.0-alpha.58`, was published for the `supersim` package.\n- [#892](https://github.com/ethereum-optimism/ecosystem/pull/892)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Superstacks Claim Flow Bugbash\nThe bugbash issues related to the Superstacks Claim Flow have been closed.\n- [#872](https://github.com/ethereum-optimism/ecosystem/issues/872)\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Interop: check EL prestate for pre-interop CrossL2Inbox configuration fault\nThis issue, concerning the presence of `CrossL2Inbox` in the L2 genesis state for chains not actively using interop, was closed today. The latest comment from ajsutton indicates that the execution client is not the ideal place for this validation due to dependency and world state availability challenges. It was argued that the genesis generation process, specifically `op-deployer`, has been improved to automatically handle the inclusion of `CrossL2Inbox` based on whether multiple chains are present, thereby mitigating the risk of incorrect genesis generation. The conclusion is that the problem has been addressed through tooling improvements rather than requiring additional checks within `op-geth` or `op-reth`.", "2025-09-04T03:27:46.180Z"]
["ethereum-optimism/optimism_day_2025-07-09", "ethereum-optimism/optimism", "day", "2025-07-09", "# ethereum-optimism/optimism Daily Update (Jul 9, 2025)\n## OVERVIEW \nToday's development focused on bug fixes, particularly in test validation and deployer functionality, alongside significant updates to `op-chain-ops` for withdrawal proving and `op-node` for safe head database management during EL sync.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Test Infrastructure Improvements\nBug fixes were implemented to ensure compliance of `/universal` tests with validation scripts and to address a broken test in `op-deployer` related to U16 updates.\n- Bug Fixes: [#16610](https://github.com/ethereum-optimism/optimism/pull/16610), [#16657](https://github.com/ethereum-optimism/optimism/pull/16657)\n\n### Withdrawal Proving and Dispute Monitoring Enhancements\nThe `op-chain-ops` script was updated to support proving withdrawals using super roots, and `op-dispute-mon` was improved to consider block numbers above `MaxInt64` as always invalid, preventing unnecessary output root requests.\n- Other Work: [#16641](https://github.com/ethereum-optimism/optimism/pull/16641), [#16643](https://github.com/ethereum-optimism/optimism/pull/16643)\n\n### Node Synchronization and Database Management\nA critical update to `op-node` ensures the safe head database is deleted when an EL sync is triggered, improving synchronization reliability.\n- Other Work: [#16644](https://github.com/ethereum-optimism/optimism/pull/16644)\n\n## NEWLY OPENED PULL REQUESTS\n- [#16646](https://github.com/ethereum-optimism/optimism/pull/16646): A test PR to trigger the pipeline.\n- [#16649](https://github.com/ethereum-optimism/optimism/pull/16649): Related to `Sc test/invar permissionless proposals`.\n- [#16654](https://github.com/ethereum-optimism/optimism/pull/16654): A fix to propagate goroutine errors to the main thread for accurate error handling in `listGames`.\n- [#16661](https://github.com/ethereum-optimism/optimism/pull/16661): A fix for a missing part.\n\n## CLOSED ISSUES\n\n### Test Reliability and Flakiness\nEfforts to improve the reliability of acceptance tests were concluded, with significant improvements noted in test consistency and flakiness monitoring.\n- Closed: [#16378](https://github.com/ethereum-optimism/optimism/issues/16378)\n\n### Interop Mode and Supervisor Logic\nSeveral issues related to the `op-node`'s trivial-interop mode, including operating without a supervisor and providing Interop proofs RPCs, were closed as they are no longer being prioritized.\n- Closed: [#16519](https://github.com/ethereum-optimism/optimism/issues/16519), [#16520](https://github.com/ethereum-optimism/optimism/issues/16520), [#16521](https://github.com/ethereum-optimism/optimism/issues/16521)\n\n### Batcher Throttling Issue\nAn issue concerning `op-batcher`'s `SetMaxDASize` RPC availability or breakage was closed due to inactivity.\n- Closed: [#15355](https://github.com/ethereum-optimism/optimism/issues/15355)\n\n## NEW ISSUES\n\n### Deployment and Verification Process\nA new issue proposes making `VerifyOPCM` a wrapper around `DeployImplementations` for v2, aiming to streamline the deployment and verification process.\n- New: [#16653](https://github.com/ethereum-optimism/optimism/issues/16653)\n\n### Fault Proof Runbook Review\nA final review of the v3 fault proof incident runbook is required before removing its \"draft\" label.\n- New: [#16651](https://github.com/ethereum-optimism/optimism/issues/16651)\n\n### Interop Transaction Reinjection Test\nA new test is needed to confirm that interop transactions are re-checked when a block is reorged and transactions are reinjected into the mempool.\n- New: [#16656](https://github.com/ethereum-optimism/optimism/issues/16656)\n\n## ACTIVE ISSUES\n\n### Fault Proof Creator Contract OPCM Changes\nDiscussion continues on the OPCM changes for the Fault Proof creator contract [#15789](https://github.com/ethereum-optimism/optimism/issues/15789). The latest update outlines a comprehensive checklist of tasks, including moving `WETH` and `L2ChainId` to `implArgs`, fixing `StandardValidator` assertions, addressing `TODO` comments, and rebasing updates from EVM safety refactoring.\n\n### RV Audit Findings\nAn ongoing discussion on RV Audit findings [#16548](https://github.com/ethereum-optimism/optimism/issues/16548) highlights issues with `TestCrossSafeUpdate` testing impossible cases and the lack of a clear `invalid` signal during Hazard Set construction. A pull request has been made to address these points.\n\n### Abnormal CPU Usage with op-geth\nThe issue of abnormal CPU usage with `op-geth` v1.101511.0 [#613](https://github.com/ethereum-optimism/optimism/issues/613) remains active. Recent comments suggest the high CPU usage might be temporary due to index updates, with one user confirming a return to normal after 24 hours. Another user provided a `pprof` file for analysis, indicating the issue might be related to index updates. There's also a discussion on how to properly enable and capture `pprof` metrics for debugging.", "2025-09-04T03:27:47.115Z"]
["ethereum-optimism/op-geth_day_2025-07-10", "ethereum-optimism/op-geth", "day", "2025-07-10", "# ethereum-optimism/op-geth Daily Update (Jul 10, 2025)\n## OVERVIEW \nThe day's development focused on enhancing transaction pool validation with a new per-transaction gas limit feature and refining transaction re-injection logic. A significant issue regarding interop prestate configuration was also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Transaction Pool Enhancements\n- Introduced a `MaxTxGasLimit` feature to enforce per-transaction gas limits, particularly useful for sequencers in single-sequencer rollups ([#626](https://github.com/ethereum-optimism/op-geth/pull/626)).\n- Refactored the transaction pool to move ingress filter checks into `addTxsLocked`, ensuring that re-injected transactions are properly filtered ([#642](https://github.com/ethereum-optimism/op-geth/pull/642)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Transaction Pool Filtering Improvement\n- Resolved an issue where transactions re-entered the mempool after a reorg without being re-evaluated by ingress filters, ensuring proper filtering on re-injection ([#641](https://github.com/ethereum-optimism/op-geth/issues/641)).\n\n### Interop Prestate Configuration\n- Closed an issue concerning the presence of `CrossL2Inbox` and other interop predeploys in the L2 genesis state, concluding that the execution client is not the ideal place for this validation and that the genesis generation tooling adequately mitigates the risk ([#15765](https://github.com/ethereum-optimism/op-geth/issues/15765)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Interop: check EL prestate for pre-interop CrossL2Inbox configuration fault ([#15765](https://github.com/ethereum-optimism/op-geth/issues/15765))\nThis issue, now closed, discussed the validation of the `CrossL2Inbox` and other interop predeploys in the L2 genesis state. The latest comment from ajsutton (2025-07-10T03:03:24Z) indicates that the issue is being closed because the execution client is not well-suited for this check. It was argued that the risk of incorrect genesis generation has been sufficiently mitigated by improvements in the `op-deployer` tooling, which now automatically determines the inclusion of `CrossL2Inbox` based on the number of chains and interop activation. This suggests that the problem has been addressed at the tooling level rather than within `op-geth` itself.", "2025-09-04T03:27:47.911Z"]
["ethereum-optimism/op-analytics_day_2025-07-10", "ethereum-optimism/op-analytics", "day", "2025-07-10", "# ethereum-optimism/op-analytics Daily Update (Jul 10, 2025)\n## OVERVIEW \nToday's development focused on enhancing the Revshare transfer logic within op-analytics, including expanding support for all inbound transfers and fixing an insert logic bug. This work improves data accuracy and broadens the scope of transfer tracking.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Revshare Transfer Logic\nSignificant updates were made to the Revshare transfer logic to improve its comprehensiveness and accuracy. This includes expanding the system to capture all inbound transfers, using a boolean flag to distinguish between known revshare addresses and other inbound transfers, which aids in identifying unmapped addresses. The update also refined how the system handles known revshare transfers.\n- [#1678](https://github.com/ethereum-optimism/op-analytics/pull/1678)\n- [#1679](https://github.com/ethereum-optimism/op-analytics/pull/1679)\n\n### Cross-Chain Revshare Support\nRevshare transfer support has been extended to include all chains, ensuring broader applicability and data collection across the Superchain ecosystem.\n- [#1680](https://github.com/ethereum-optimism/op-analytics/pull/1680)\n\n### Revshare Insert Logic Fix\nA critical bug affecting the Revshare insert logic was addressed and fixed, ensuring correct data insertion and integrity for Revshare transfers.\n- [#1681](https://github.com/ethereum-optimism/op-analytics/pull/1681)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Interoperability Configuration Validation\nIssue [#15765](https://github.com/ethereum-optimism/op-analytics/issues/15765), concerning the validation of CrossL2Inbox configuration in the L2 genesis state for pre-interop chains, has been closed. The discussion concluded that the execution client is not the ideal place for this validation, and the risk has been mitigated through improvements in the genesis generation tooling (op-deployer).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Interoperability Configuration Validation\nIssue [#15765](https://github.com/ethereum-optimism/op-analytics/issues/15765) was closed today. The latest comments from ajsutton indicate that the execution client is not well-suited for validating the presence of the CrossL2Inbox in the L2 genesis state. It was argued that adding this check would introduce unnecessary complexity to `op-geth`/`op-reth`. Instead, the risk of incorrect genesis generation has been mitigated by improvements in the `op-deployer` tool, which now correctly determines whether the CrossL2Inbox should be included based on the number of chains and interop activation. The conclusion is that the problem has been solved at the tooling level, making a client-side check redundant.", "2025-09-04T03:27:47.979Z"]
["ethereum-optimism/superchain-ops_day_2025-07-10", "ethereum-optimism/superchain-ops", "day", "2025-07-10", "# ethereum-optimism/superchain-ops Daily Update (Jul 10, 2025)\n## OVERVIEW \nThe day's activity focused on minor configuration updates within the `src/improvements` directory, specifically a nonce bump for a Uniswap-related upgrade. A long-standing issue concerning CrossL2Inbox configuration was also closed, with the team concluding that tooling mitigations address the initial concerns.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Configuration Updates for Uniswap Upgrade\nA minor configuration change was implemented to bump the nonce for a Uniswap-related upgrade. This update is part of the ongoing improvements within the `src/improvements` directory. ([#1122](https://github.com/ethereum-optimism/superchain-ops/pull/1122))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### CrossL2Inbox Configuration Validation\nIssue [#15765](https://github.com/ethereum-optimism/superchain-ops/issues/15765), concerning the validation of CrossL2Inbox configuration in the L2 genesis state, was closed. The team determined that the risk of incorrect genesis generation has been sufficiently mitigated by improvements in the `op-deployer` tooling, making client-side validation less critical.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-09-04T03:27:48.567Z"]
["ethereum-optimism/docs_day_2025-07-11", "ethereum-optimism/docs", "day", "2025-07-11", "# ethereum-optimism/docs Daily Update (Jul 11, 2025)\n## OVERVIEW \nThe day's activity for the `ethereum-optimism/docs` repository primarily focused on a significant infrastructure change, with a new pull request opened to migrate the documentation to Mintlify. This indicates a strategic move towards enhancing the documentation platform.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1691](https://github.com/ethereum-optimism/docs/pull/1691), was opened to migrate the documentation to Mintlify. This suggests an ongoing effort to improve the documentation platform and user experience.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were reported on this day.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were reported on this day.", "2025-09-04T03:27:49.222Z"]
["ethereum-optimism/supersim_day_2025-07-10", "ethereum-optimism/supersim", "day", "2025-07-10", "# ethereum-optimism/supersim Daily Update (Jul 10, 2025)\n\n## OVERVIEW \nToday's development focused on integrating the latest `GasTank` updates into the `supersim` repository, impacting several genesis files. A long-standing issue regarding interop prestate configuration was also closed, with the team concluding that tooling mitigations have addressed the underlying risk.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### GasTank Integration\nThe `GasTank` component was updated to its latest commit, reflecting improvements in the `interop-lib`. This update involved changes across multiple genesis files, ensuring compatibility and incorporating the newest features. ([#414](https://github.com/ethereum-optimism/supersim/pull/414))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Interop Prestate Configuration\nIssue [#15765](https://github.com/ethereum-optimism/supersim/issues/15765), which concerned checking the EL prestate for pre-interop `CrossL2Inbox` configuration faults, was closed. The team determined that the risk has been sufficiently mitigated by improvements in the genesis generation tooling, making client-side validation less critical.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Interop: check EL prestate for pre-interop CrossL2Inbox configuration fault ([#15765](https://github.com/ethereum-optimism/supersim/issues/15765))\nThis issue, created on May 7, 2025, was closed today. The discussion revolved around the necessity of the execution client validating the presence of `CrossL2Inbox` in the L2 genesis state for chains not actively using interop at genesis. The latest comment from ajsutton (Jul 10, 2025) concluded that the execution client is not ideally positioned for this validation due to dependency and world state availability challenges. Furthermore, the `op-deployer` tool now automatically handles the inclusion of `CrossL2Inbox` based on the number of chains and interop activation, significantly reducing the risk of incorrect genesis generation. Therefore, the issue was closed as the problem has been addressed through tooling improvements rather than client-side checks.", "2025-09-04T03:27:50.002Z"]
["ethereum-optimism/ecosystem_day_2025-07-11", "ethereum-optimism/ecosystem", "day", "2025-07-11", "# ethereum-optimism/ecosystem Daily Update (Jul 11, 2025)\n## OVERVIEW \nToday's development focused on enhancing the `ponder-interop` and `autorelayer-interop` applications by adding new API endpoints for pending claims and integrating these into gas provider balance calculations. Several package versions were also updated.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Gas Provider Claim Management\nA new API endpoint was added to `ponder-interop` to fetch pending claims for gas providers, improving visibility into outstanding relay costs. This functionality was then integrated into `autorelayer-interop` to accurately deduct unclaimed relays from gas provider balances, ensuring more precise balance calculations.\n- [#886](https://github.com/ethereum-optimism/ecosystem/pull/886)\n- [#887](https://github.com/ethereum-optimism/ecosystem/pull/887)\n\n### Package Versioning Updates\nMultiple packages across the ecosystem, including `autorelayer-interop`, `ponder-interop`, `sponsored-sender`, `superchain-playground`, `viem`, and `wagmi`, received version updates. These updates are part of the routine release process.\n- [#895](https://github.com/ethereum-optimism/ecosystem/pull/895)\n- [#897](https://github.com/ethereum-optimism/ecosystem/pull/897)\n- [#898](https://github.com/ethereum-optimism/ecosystem/pull/898)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Refactoring Dependency API Requests\nA new issue was opened to discuss moving the implementation details of dependency API requests out of the relayer and into a dedicated dependency client file. This aims to improve code organization and maintainability.\n- [#896](https://github.com/ethereum-optimism/ecosystem/issues/896)\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:27:50.351Z"]
["ethereum-optimism/op-analytics_day_2025-07-11", "ethereum-optimism/op-analytics", "day", "2025-07-11", "# ethereum-optimism/op-analytics Daily Update (Jul 11, 2025)\n## OVERVIEW \nThe day's development focused on updating chain metadata within `op-analytics`, specifically adding new Celo and Frax chain data. A new pull request was opened to refactor tokens and CGTs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Chain Data Updates\n*   Added Celo and Frax new CGT data, impacting `op_chains_tracking/inputs/chain_metadata_raw.csv`, `op_chains_tracking/inputs/clean_chain_metadata_and_upload.ipynb`, and `op_chains_tracking/outputs/chain_metadata.csv` ([#1683](https://github.com/ethereum-optimism/op-analytics/pull/1683)).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#1684](https://github.com/ethereum-optimism/op-analytics/pull/1684) Refactor Tokens / CGTs: This pull request aims to refactor the existing token and CGT structures.\n\n## CLOSED ISSUES\nNo issues were closed on Jul 11, 2025.\n\n## NEW ISSUES\nNo new issues were opened on Jul 11, 2025.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments on Jul 11, 2025.", "2025-09-04T03:27:50.587Z"]
["ethereum-optimism/ecosystem_day_2025-07-12", "ethereum-optimism/ecosystem", "day", "2025-07-12", "# ethereum-optimism/ecosystem Daily Update (Jul 12, 2025)\n## OVERVIEW \nNo development activity was recorded for the ethereum-optimism/ecosystem repository on July 12, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were recorded.", "2025-09-04T03:27:51.411Z"]
["ethereum-optimism/optimism_day_2025-07-10", "ethereum-optimism/optimism", "day", "2025-07-10", "# ethereum-optimism/optimism Daily Update (Jul 10, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes in `op-node` and `op-supervisor` to enhance stability and prevent deadlocks. Significant progress was also made on integrating the Standard Validator into OPCM, alongside updates to documentation and testing infrastructure.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Protocol Stability and Reliability\nCritical bug fixes were implemented to improve the stability of core Optimism components. The `op-node` received a fix to ensure proper mutex unlocking ([#16617](https://github.com/ethereum-optimism/optimism/pull/16617)), preventing potential deadlocks. Similarly, the `op-supervisor` was updated to remove redundant locks and resolve a deadlock issue ([#16642](https://github.com/ethereum-optimism/optimism/pull/16642)), addressing previously reported event overflow and congestion problems.\n\n### OPCM and Standard Validator Integration\nSignificant work was completed on integrating the Standard Validator into the Optimism Contracts Manager (OPCM) ([#16237](https://github.com/ethereum-optimism/optimism/pull/16237)). This integration aligns the Standard Validator with existing OPCM patterns, enhancing the modularity and maintainability of the contract system.\n\n### Developer Tooling and Documentation Improvements\nDocumentation for the Smart Contract Style Guide was updated to reflect new test conventions and validation workflows ([#16614](https://github.com/ethereum-optimism/optimism/pull/16614)), providing clearer guidelines for developers. Additionally, new log formats (`logfmtms` and `jsonms`) were added to `op-service` ([#16645](https://github.com/ethereum-optimism/optimism/pull/16645)), improving logging capabilities for debugging and monitoring.\n\n### Enhanced Testing Infrastructure\nThe `op-acceptance-tests` received an update to unify stopping conditions for interop load tests ([#16640](https://github.com/ethereum-optimism/optimism/pull/16640)). This change streamlines testing procedures by ensuring consistent budget depletion or timeout conditions across different test schedules.\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#16666](https://github.com/ethereum-optimism/optimism/pull/16666), was opened by Dependabot to bump the `github.com/docker/docker` dependency from `27.5.1+incompatible` to `28.3.2+incompatible`.\n\n## CLOSED ISSUES\n\n### Supervisor Stability and Event Handling\nSeveral issues related to the `op-supervisor`'s stability and event handling were closed. This includes the resolution of an event overflow problem on large unsafe head gaps ([#16335](https://github.com/ethereum-optimism/optimism/issues/16335)) and an investigation into spikes of `local-derived` events ([#16603](https://github.com/ethereum-optimism/optimism/issues/16603)). The discussions highlighted the complexity of event processing within the supervisor, with initial speculation pointing towards `ChainsDB` or `GlobalSyncExec` deadlocks. While a full panic stack trace was desired for complete confirmation, the fixes implemented are expected to mitigate these issues.\n\n### Interoperability and Genesis Configuration\nAn issue concerning the check for EL prestate regarding pre-interop `CrossL2Inbox` configuration faults ([#15765](https://github.com/ethereum-optimism/optimism/issues/15765)) was closed. The decision was made to close this issue as the execution client is not ideally positioned to perform this validation, and the risk of incorrect genesis generation has been significantly reduced through improvements in the `op-deployer` tooling. The `op-deployer` now automatically determines the inclusion of `CrossL2Inbox` based on the presence of multiple chains, ensuring correct deployment without requiring complex checks within the execution client.\n\n### OPCM Integration of Standard Validator\nThe task to integrate the `StandardValidator` into the OPCM ([#15799](https://github.com/ethereum-optimism/optimism/issues/15799)) was successfully closed. This work involved aligning the `StandardValidator` with existing OPCM patterns, such as `OPCMDeployer` and `OPCMUpgrader`, prioritizing consistency and minimizing complexity.\n\n## NEW ISSUES\n\n### Forge Test Linting Limitations\nA new issue, [#16662](https://github.com/ethereum-optimism/optimism/issues/16662), was opened to address limitations in the `lint-forge-tests-check-no-build` script. The script currently excludes test files under `test/libraries/` due to its inability to properly process artifacts for Solidity libraries, as it assumes contract-style ABIs. This prevents comprehensive linting for library-related tests.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:27:52.043Z"]
["ethereum-optimism/optimism_day_2025-07-12", "ethereum-optimism/optimism", "day", "2025-07-12", "# ethereum-optimism/optimism Daily Update (Jul 12, 2025)\n## OVERVIEW \nThe day's activity focused on identifying and addressing potential code redundancies within the `op-batcher` component, alongside an optimization effort for the RPC client's HTTP regex pattern.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this date.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#16678](https://github.com/ethereum-optimism/optimism/pull/16678), was opened to optimize the HTTP regex pattern used in the RPC client, aiming to improve efficiency.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\n### Op-Batcher Code Duplication\nA new issue, [#16677](https://github.com/ethereum-optimism/optimism/issues/16677), was opened to investigate potential duplicate code within the `op-batcher`. Specifically, it questions whether the `checkTxpool` function is still necessary in one location given its presence elsewhere.\n\n## ACTIVE ISSUES\n### Op-Batcher Code Duplication Discussion\nIssue [#16677](https://github.com/ethereum-optimism/optimism/issues/16677) is active with discussion. The latest comment from @chuwt confirms the observation, and @geoknee expressed gratitude for the insight, inviting a pull request to address the identified duplication.", "2025-09-04T03:27:52.636Z"]
["ethereum-optimism/superchain-ops_day_2025-07-11", "ethereum-optimism/superchain-ops", "day", "2025-07-11", "# ethereum-optimism/superchain-ops Daily Update (Jul 11, 2025)\n## OVERVIEW \nThe day's development focused on critical bug fixes related to U16 mainnet configurations and devnet task execution. Significant progress was also made in preparing for U16 upgrades across various chains by generating state diffs and setting execution flags.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### U16 Mainnet Bug Fixes and Configuration Updates\nMultiple fixes were implemented for U16 mainnet configurations, addressing issues related to enabling and removing DPM/DGM. Additionally, a devnet task for gas parameter updates was successfully executed.\n- [#1123](https://github.com/ethereum-optimism/superchain-ops/pull/1123)\n- [#1127](https://github.com/ethereum-optimism/superchain-ops/pull/1127)\n\n### U16 Upgrade Preparations and State Diffs\nPreparatory work for the U16 upgrade involved generating state differences for Op & Ink, Soneium, and Unichain. The Unichain U16 Sepolia task was also marked as executed.\n- [#1110](https://github.com/ethereum-optimism/superchain-ops/pull/1110)\n- [#1111](https://github.com/ethereum-optimism/superchain-ops/pull/1111)\n- [#1112](https://github.com/ethereum-optimism/superchain-ops/pull/1112)\n- [#1125](https://github.com/ethereum-optimism/superchain-ops/pull/1125)\n\n### Development Environment and Task Execution Enhancements\nA new devnet task for gas parameter rehearsal was introduced, including the deployment of a Gnosis Safe for SystemConfigOwner. A change was also made to disable nonce checks on nested `just execute` commands.\n- [#1116](https://github.com/ethereum-optimism/superchain-ops/pull/1116)\n- [#1119](https://github.com/ethereum-optimism/superchain-ops/pull/1119)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:27:52.656Z"]
["ethereum-optimism/optimism_day_2025-07-11", "ethereum-optimism/optimism", "day", "2025-07-11", "# ethereum-optimism/optimism Daily Update (Jul 11, 2025)\n## OVERVIEW \nToday's development focused on enhancing supervisor error handling, updating `op-geth` for the latest Holocene activation, and significant bug fixes across test validation, Kurtosis devnet setup, and fault proof challenger addresses. A new script for `op-program` prestate building was also introduced.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Supervisor and Geth Enhancements\nImprovements were made to the `op-supervisor` to map errors to relevant RPC error codes, enhancing interoperability and debugging ([#16652](https://github.com/ethereum-optimism/optimism/pull/16652)). The `op-geth` module was also updated to include the latest SCR changes and the swell-mainnet Holocene activation time ([#16655](https://github.com/ethereum-optimism/optimism/pull/16655)).\n\n### Test Infrastructure and Devnet Stability\nSignificant bug fixes were implemented to ensure validation compliance for various test files across legacy, periphery, safe, and L2 bridge folders ([#16613](https://github.com/ethereum-optimism/optimism/pull/16613)). The Kurtosis devnet's reverse proxy setup was fixed to prevent non-working configurations ([#16638](https://github.com/ethereum-optimism/optimism/pull/16638)). Additionally, the challenger address for devnet deploys in `op-e2e` was corrected to resolve CI workflow failures ([#16671](https://github.com/ethereum-optimism/optimism/pull/16671)).\n\n### OP-Program Tooling\nA new script was added to `op-program` for building canonized prestates, which will be used to generate all `op-program` prestates and make more accurate decisions on prestate versions based on experimental and release cannon VM versions ([#16670](https://github.com/ethereum-optimism/optimism/pull/16670)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Supervisor RPC Error Code Compliance\nThe issue regarding the `op-supervisor` RPC not matching the error-codes specification was closed ([#15771](https://github.com/ethereum-optimism/optimism/issues/15771)). This was addressed by mapping supervisor errors to relevant RPC error codes.\n\n### Kurtosis Devnet Network Accessibility\nThe problem where the L1 Network was not accessible when running under `devnet-sdk` in `op-acceptor` was closed ([#16127](https://github.com/ethereum-optimism/optimism/issues/16127)). The underlying issue was identified as a problem with reaching the L1 EL service through Kurtosis' reverse proxy.\n\n## NEW ISSUES\n\n### Interop Monitoring and Supervisor Authentication\nA new issue was opened concerning the authentication story for `op-interop-mon` and `op-supervisor` ([#16672](https://github.com/ethereum-optimism/optimism/issues/16672)). Currently, `op-interop-mon` calls `op-supervisor`'s `admin_SetFailsafeEnabled` API, and while supervisors are presently in local networks, authentication considerations are needed for this API.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:27:53.089Z"]
["ethereum-optimism/optimism_day_2025-07-13", "ethereum-optimism/optimism", "day", "2025-07-13", "# ethereum-optimism/optimism Daily Update (Jul 13, 2025)\n## OVERVIEW \nToday's development focused on enhancing the dispute monitoring system to check output roots against multiple rollup nodes and refining contract interfaces by removing duplicated structs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Dispute Monitoring Enhancements\nThe dispute monitoring system (`op-dispute-mon`) was updated to allow checking output roots against multiple rollup nodes, improving the robustness of the monitoring process. This change aligns with the goal of enhancing protocol security and decentralization. ([#16490](https://github.com/ethereum-optimism/optimism/pull/16490))\n\n### Contract Refinements\nA duplicated struct within the `contracts-bedrock` interfaces was removed, streamlining the codebase and improving maintainability. This contributes to overall code quality and efficiency. ([#16621](https://github.com/ethereum-optimism/optimism/pull/16621))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:27:53.153Z"]
["ethereum-optimism/docs_day_2025-07-14", "ethereum-optimism/docs", "day", "2025-07-14", "# ethereum-optimism/docs Daily Update (Jul 14, 2025)\n## OVERVIEW \nThe day's activity focused on a documentation update for node operators, specifically regarding the `p2p.sync.onlyreqtostatic` flag. Discussions continued on several active issues, including sync testing, interop transaction re-injection, and stress testing the expiry window.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Node Operator Documentation Update**\n    *   Updated `consensus-config.mdx` to document the `p2p.sync.onlyreqtostatic` flag, which restricts sync to static peers ([#1688](https://github.com/ethereum-optimism/docs/pull/1688)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Resolved Nonce Errors in Execution**\n    *   An issue related to nonce errors when approving and executing after one approval was closed, indicating a resolution ([#1106](https://github.com/ethereum-optimism/docs/issues/1106)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **[Tracking] op-sync-tester: service for mock EL sync testing** ([#16452](https://github.com/ethereum-optimism/docs/issues/16452))\n    *   Discussion revolved around session management for the `op-sync-tester`. @protolambda suggested using a UUID in the URL for session identification to avoid special RPC steps, leveraging HTTP middleware to attach session info to the context. @pcw109550 proposed a session management flow involving a `sync_init` RPC to initialize an API endpoint and return a session ID, with the sync tester registering a new endpoint for stateful proxying of CL requests.\n\n*   **Consider making VerifyOPCM a wrapper around DeployImplementations for v2** ([#16653](https://github.com/ethereum-optimism/docs/issues/16653))\n    *   @maurelian stated that auditors felt `VerifyOPCM` provides redundancy and complements `DeployImplementations.s.sol`, acting as a check if either script is modified. A suggested approach is to re-run `DeployImplementations` within `VerifyOPCM` alongside other checks.\n\n*   **E2E: Invalid Interop Tx Reinjection Test** ([#16656](https://github.com/ethereum-optimism/docs/issues/16656))\n    *   @pcw109550 outlined a testing approach using `op-test-sequencer` to force invalid execution messages, then checking for reorgs of invalid blocks, absence of invalid interop transactions in new L2 blocks, and their removal from the mempool. Reference was made to a PR for inspecting the mempool.\n\n*   **interop: Stress test expiry window** ([#15285](https://github.com/ethereum-optimism/docs/issues/15285))\n    *   @pauldowman clarified that the \"consolidation step\" refers to the final stage in the fault proof program where executing messages are validated after derivation. @mds1 sought clarification on the term.\n\n*   **op-batcher: duplicate code** ([#16677](https://github.com/ethereum-optimism/docs/issues/16677))\n    *   @geoknee acknowledged the observation by @chuwt regarding duplicate `checkTxpool` calls and welcomed a PR to address it.", "2025-09-04T03:27:55.614Z"]
["ethereum-optimism/ecosystem_day_2025-07-14", "ethereum-optimism/ecosystem", "day", "2025-07-14", "# ethereum-optimism/ecosystem Daily Update (Jul 14, 2025)\n## OVERVIEW \nThe day saw significant discussions on active issues, particularly around interop testing, sync tester improvements, and code refactoring. Several issues were closed, indicating progress in addressing known problems and porting tests.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**Resolved Nonce Errors in Multi-Approval Scenarios**\nThe issue concerning nonce errors when approving and executing after one approval was closed, indicating a resolution to this UX problem [#1106](https://github.com/ethereum-optimism/ecosystem/issues/1106).\n\n**Progress on Porting ERC20Bridge to Devstack**\nThe task of porting the `TestERC20Bridge` to devstack saw progress with a related pull request being opened, moving closer to its completion [#415](https://github.com/ethereum-optimism/ecosystem/issues/415).\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n**Sync Tester Enhancements and Session Management**\nDiscussions on [#16452](https://github.com/ethereum-optimism/ecosystem/issues/16452) focused on improving the `op-sync-tester` for long-range L2 consensus-layer sync testing. @protolambda and @pcw109550 debated session management, with @pcw109550 proposing a `sync_init` RPC and UUID-based session IDs for multiple chain configurations. @protolambda suggested using HTTP middleware to process requests and attach session info to the context, preferring a URL-based session identifier to avoid special `sync_init` steps.\n\n**Reviewing `VerifyOPCM` and `DeployImplementations` Relationship**\nOn [#16653](https://github.com/ethereum-optimism/ecosystem/issues/16653), @maurelian discussed the relationship between `VerifyOPCM.s.sol` and `DeployImplementations.s.sol`. Auditors felt `VerifyOPCM` provides valuable redundancy and acts as a check against modifications to `DeployImplementations`. A suggested approach is to re-run `DeployImplementations` within `VerifyOPCM` alongside other checks.\n\n**E2E Testing for Invalid Interop Transaction Reinjection**\nIssue [#16656](https://github.com/ethereum-optimism/ecosystem/issues/16656) addresses the need for an E2E test to confirm that interop transactions are re-checked when a block is reorged and transactions are reinjected into the mempool. @pcw109550 suggested using `op-test-sequencer` to force invalid execution messages and then verify that the invalid message block is reorged, the new L2 blocks do not contain invalid interop transactions, and the mempool is clear of the invalid transaction.\n\n**Stress Testing Interop Expiry Window**\nDiscussion on [#15285](https://github.com/ethereum-optimism/ecosystem/issues/15285) revolved around stress testing the interop expiry window. @pauldowman clarified that the \"consolidation step\" refers to the final stage in the fault proof program where the validity of executing messages is checked after derivation. While a microbenchmark has been done, the need for a worst-case scenario test on actual interop-enabled chains was reiterated to ensure no surprises.\n\n**Identifying Duplicate Code in `op-batcher`**\nOn [#16677](https://github.com/ethereum-optimism/ecosystem/issues/16677), @chuwt identified potential duplicate code in `op-batcher`, specifically questioning if `checkTxpool` is still needed in `driver.go` given that `publishStateToL1` already performs this check. @geoknee acknowledged the observation and welcomed a PR to address it.", "2025-09-04T03:27:56.834Z"]
["ethereum-optimism/op-analytics_day_2025-07-14", "ethereum-optimism/op-analytics", "day", "2025-07-14", "# ethereum-optimism/op-analytics Daily Update (Jul 14, 2025)\n## OVERVIEW \nThe day's development focused on significant updates to data pipelines, particularly for platform metrics and L2Beat/Dune API integrations, alongside general maintenance and version bumps.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Pipeline Enhancements\nSignificant work was done on establishing and refining data pipelines. A new pipeline for platform metrics was introduced to integrate data from platform tooling into the BigQuery database [#1616](https://github.com/ethereum-optimism/op-analytics/pull/1616). Adjustments were also made to handle evolutions in the L2Beat API provider field and the Dune API's date field format, ensuring continued data accuracy [#1685](https://github.com/ethereum-optimism/op-analytics/pull/1685), [#1688](https://github.com/ethereum-optimism/op-analytics/pull/1688).\n\n### Schema and Data Formatting Updates\nChanges were implemented to align data writes with current schemas, specifically by converting lists to comma-separated values for chain summaries [#1686](https://github.com/ethereum-optimism/op-analytics/pull/1686).\n\n### Version and Deployment Updates\nMultiple updates were made to bump versions and facilitate Dagster deployments [#1687](https://github.com/ethereum-optimism/op-analytics/pull/1687), [#1689](https://github.com/ethereum-optimism/op-analytics/pull/1689), [#1690](https://github.com/ethereum-optimism/op-analytics/pull/1690).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Development Workflow Improvements\nAn issue related to nonce errors when approving and executing after one approval was closed, indicating a resolution to a critical development workflow hurdle [#1106](https://github.com/ethereum-optimism/op-analytics/issues/1106).\n\n### Test Suite Expansion\nThe effort to port `TestERC20Bridge` to devstack was closed, signifying progress in expanding the test suite and ensuring broader compatibility [#415](https://github.com/ethereum-optimism/op-analytics/issues/415).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Sync Tester Development\nDiscussion on [#16452](https://github.com/ethereum-optimism/op-analytics/issues/16452) (Tracking] [Sync Tester] op-sync-tester: service for mock EL sync testing) revolved around session management for the sync tester. @protolambda suggested using HTTP middleware for pre-processing requests and attaching context, while @pcw109550 proposed a session management flow involving a `sync_init` RPC and UUID-generated session IDs for dedicated endpoints. The core idea is to avoid creating a full EL deployment for long-range sync testing.\n\n### Interop Transaction Reinjection Testing\nOn [#16656](https://github.com/ethereum-optimism/op-analytics/issues/16656) (E2E: Invalid Interop Tx Reinjection Test), @pcw109550 outlined a testing strategy using `op-test-sequencer` to force invalid execution messages and then verify reorgs, the absence of invalid interop transactions in new L2 blocks, and their removal from the mempool. This aims to confirm that interop transactions are re-checked upon block reorgs.\n\n### Fault Proof Consolidation Step\nIssue [#15285](https://github.com/ethereum-optimism/op-analytics/issues/15285) (interop: Stress test expiry window) saw @pauldowman clarify that the \"consolidation step\" refers to the final stage in the fault proof program where the validity of executing messages is checked after derivation. This discussion is part of understanding the impact of the expiry window on interop message processing.\n\n### `op-batcher` Code Duplication\nRegarding [#16677](https://github.com/ethereum-optimism/op-analytics/issues/16677) (op-batcher: duplicate code), @geoknee acknowledged @chuwt's observation about potential duplicate `checkTxpool` calls and welcomed a PR to address it. This indicates an opportunity for code cleanup and optimization in the `op-batcher`.\n\n### `VerifyOPCM` Script Redundancy\nOn [#16653](https://github.com/ethereum-optimism/op-analytics/issues/16653) (Consider making VerifyOPCM a wrapper around DeployImplementations for v2), @maurelian reported that auditors view `VerifyOPCM` as providing valuable redundancy and acting as a check against significant modifications to `DeployImplementations.s.sol`. A suggested approach is to re-run `DeployImplementations` within `VerifyOPCM` alongside its other checks.", "2025-09-04T03:27:58.235Z"]
["ethereum-optimism/op-geth_day_2025-07-14", "ethereum-optimism/op-geth", "day", "2025-07-14", "# ethereum-optimism/op-geth Daily Update (Jul 14, 2025)\n## OVERVIEW \nToday's development focused on enhancing tracing capabilities to include Optimism-specific fee recipient information and refining interop transaction handling within the miner and transaction pool to detect supervisor failsafe states.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Enhanced Tracing for Optimism-Specific Data**: Improvements were made to the tracing functionality to display the `OptimismBaseFeeRecipient` in prestate tracing results, including normal and diff modes, when Optimism is enabled. This provides more comprehensive debugging information for Optimism-specific transactions. ([#407](https://github.com/ethereum-optimism/op-geth/pull/407))\n\n*   **Robust Interop Transaction Management**: The system now detects supervisor failsafe states and rejects interop transactions if the failsafe is active. This involves caching the supervisor's failsafe response locally within the backend and integrating this check into the transaction ingress process in the mempool and miner. ([#636](https://github.com/ethereum-optimism/op-geth/pull/636))\n\n## NEWLY OPENED PULL REQUESTS\n\n*   A new pull request, [#643](https://github.com/ethereum-optimism/op-geth/pull/643), was opened to fix a p2p issue by using raw string literals for regular expressions.\n\n## CLOSED ISSUES\n\n*   **Resolved Nonce Errors in Execution**: An issue related to nonce errors when approving and executing transactions after a single approval was closed. This problem, which caused `StateOverrideManager` errors due to user-defined nonces being less than current actual nonces, was resolved by a related pull request in `superchain-ops`. ([#1106](https://github.com/ethereum-optimism/op-geth/issues/1106))\n\n*   **Progress on ERC20 Bridge Porting**: The task to port `TestERC20Bridge` to devstack was closed, with the porting work completed and referenced in a related pull request. ([#415](https://github.com/ethereum-optimism/op-geth/issues/415))\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n*   **Sync Tester Development and Session Management** ([#16452](https://github.com/ethereum-optimism/op-geth/issues/16452)): Discussions revolved around the design of a `sync-tester` service for mock EL sync testing, particularly focusing on session management. @protolambda suggested handling sessions more uniquely, possibly by attaching information to the context via HTTP middleware, and preferred not to create a `sync_init` RPC. @pcw109550 proposed a flow where the sync tester digests YAML config for multiple chains, users initialize API endpoints via `/chain/{chain_id}` with a `sync_init` RPC returning a UUID session ID, and the sync tester registers new endpoints `/{session_id}` to proxy CL requests.\n\n*   **Consider Making VerifyOPCM a Wrapper Around DeployImplementations for v2** ([#16653](https://github.com/ethereum-optimism/op-geth/issues/16653)): @maurelian discussed with auditors who felt that the `VerifyOPCM` script provides redundancy and complements `DeployImplementations.s.sol`. They suggested that if either script is modified significantly, the other acts as a check. A potential approach is to re-run `DeployImplementations` within `VerifyOPCM` alongside its other checks.\n\n*   **E2E: Invalid Interop Tx Reinjection Test** ([#16656](https://github.com/ethereum-optimism/op-geth/issues/16656)): @pcw109550 outlined a testing strategy using `op-test-sequencer` to force include invalid execution messages. The plan involves checking if the invalid message block is reorged, implicitly verifying that new L2 blocks do not contain invalid interop transactions, and explicitly checking the mempool to ensure the invalid message transaction is absent. A related PR ([#16569](https://github.com/ethereum-optimism/optimism/pull/16569)) was referenced for inspecting the mempool.\n\n*   **Interop: Stress Test Expiry Window** ([#15285](https://github.com/ethereum-optimism/op-geth/issues/15285)): @pauldowman clarified that the \"consolidation step\" refers to the final stage in the fault proof program where it validates executing messages after derivation. @mds1 sought clarification on this term. Earlier comments noted that the expiry window reduction to 7 days and microbenchmarks suggest no immediate issues, but a worst-case scenario test on actual interop-enabled chains is still desired.\n\n*   **op-batcher: duplicate code** ([#16677](https://github.com/ethereum-optimism/op-geth/issues/16677)): @chuwt questioned the necessity of `checkTxpool` in `op-batcher/batcher/driver.go` given that `publishStateToL1` already performs this check. @geoknee acknowledged the observation and welcomed a PR to address the duplication.\n\n*   **Add lint for checking spelling** ([#680](https://github.com/ethereum-optimism/op-geth/issues/680)): @JoshdfG expressed interest in taking on the task of adding a `codespell` workflow for spelling checks, referencing a similar workflow in the `reth` repository.", "2025-09-04T03:27:58.565Z"]
["ethereum-optimism/optimism_day_2025-07-14", "ethereum-optimism/optimism", "day", "2025-07-14", "# ethereum-optimism/optimism Daily Update (Jul 14, 2025)\n## OVERVIEW \nThe day saw significant progress in testing infrastructure with new acceptance tests for interop and improvements to Docker build speeds. Bug fixes addressed issues in acceptance tests for the rehearsal 1 devnet, and documentation was streamlined. Several new issues were opened focusing on `op-node` modularization and configuration, while a number of issues related to flashblocks and UX were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing and Build Efficiency\nNew acceptance tests were introduced for the pre-interop super proposer system, addressing a long-standing issue related to `op-proposer` acceptance tests for interop ([#16674](https://github.com/ethereum-optimism/optimism/pull/16674)). Additionally, Docker build speeds for releases and acceptance tests were improved through layer caching and deprecation fixes ([#16694](https://github.com/ethereum-optimism/optimism/pull/16694)).\n\n### Interoperability Monitoring and Bug Fixes\nBug fixes were implemented for `op-acceptance-tests` related to the rehearsal 1 devnet, ensuring test stability ([#16595](https://github.com/ethereum-optimism/optimism/pull/16595)). The `op-interop-mon` was updated to call `Supervisor SetFailsafeEnabled` upon negative metric signals, enhancing monitoring capabilities ([#16658](https://github.com/ethereum-optimism/optimism/pull/16658)).\n\n### Documentation and Code Clean-up\nOutdated entries in the Table of Contents were removed from the documentation, improving accuracy and relevance ([#16635](https://github.com/ethereum-optimism/optimism/pull/16635)). An unused `ReadCLIConfig` function was removed from `op-service/tls`, contributing to code cleanliness ([#16622](https://github.com/ethereum-optimism/optimism/pull/16622)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#16692](https://github.com/ethereum-optimism/optimism/pull/16692) `op-node`: cleanup node service/backend setup\n\n## CLOSED ISSUES\n\n### Flashblocks and Infrastructure Deployment\nSeveral issues related to Flashblocks deployment and infrastructure considerations were closed. This includes the deployment of a flashblocks-websocket-proxy in op-sepolia ([#16686](https://github.com/ethereum-optimism/optimism/issues/16686)), enabling flashblocks on sunnyside sequencers ([#16688](https://github.com/ethereum-optimism/optimism/issues/16688)), and discussions around the need for NVMe node deployment for `op-rbuilders` ([#16689](https://github.com/ethereum-optimism/optimism/issues/16689)) and dedicated namespacing for rbuilders ([#16690](https://github.com/ethereum-optimism/optimism/issues/16690)).\n\n### Batcher and Acceptance Test Improvements\nAn issue concerning the `op-batcher` preventing auto-DA switching to calldata when throttling is activated was closed ([#16691](https://github.com/ethereum-optimism/optimism/issues/16691)). The `op-proposer` acceptance tests for interop were completed and closed ([#15950](https://github.com/ethereum-optimism/optimism/issues/15950)).\n\n### UX and Code Duplication\nA UX issue related to nonce errors when approving and executing after one approval was closed ([#1106](https://github.com/ethereum-optimism/optimism/issues/1106)). A duplicate code observation in `op-batcher` was also closed ([#16677](https://github.com/ethereum-optimism/optimism/issues/16677)).\n\n### Test Porting\nThe task to port `TestERC20Bridge` to devstack was closed ([#415](https://github.com/ethereum-optimism/optimism/issues/415)).\n\n## NEW ISSUES\n\n### `op-node` Modularity and Configuration\nNew issues were opened to improve the `op-node`'s architecture, including splitting CLI/entrypoint/service/backend components ([#16680](https://github.com/ethereum-optimism/optimism/issues/16680)), organizing CLI flags for better categorization and deprecation handling ([#16681](https://github.com/ethereum-optimism/optimism/issues/16681)), improving service configuration by separating it into its own package ([#16682](https://github.com/ethereum-optimism/optimism/issues/16682)), and modularizing metrics for better encapsulation and categorization ([#16683](https://github.com/ethereum-optimism/optimism/issues/16683)). An overarching issue to improve the `op-node` core setup was also created ([#16679](https://github.com/ethereum-optimism/optimism/issues/16679)).\n\n## ACTIVE ISSUES\n\n### Sync Tester Development\nDiscussion on [#16452](https://github.com/ethereum-optimism/optimism/issues/16452) (`[Tracking] [Sync Tester] op-sync-tester: service for mock EL sync testing`) revolved around session management for the sync tester. @protolambda suggested using HTTP middleware to attach session information to the context based on a unique UUID in the URL, avoiding the need for a special `sync_init` RPC. @pcw109550 proposed an alternative flow involving a `sync_init` RPC to return a session ID, which would then be used to register a new endpoint for stateful proxying of CL requests.\n\n### Interoperability Stress Testing\nOn [#15285](https://github.com/ethereum-optimism/optimism/issues/15285) (`interop: Stress test expiry window`), @pauldowman clarified that the \"consolidation step\" refers to the final stage in the fault proof program where executing messages are validated after derivation. @mds1 sought clarification on the term.\n\n### `VerifyOPCM` and `DeployImplementations` Integration\nDiscussion on [#16653](https://github.com/ethereum-optimism/optimism/issues/16653) (`Consider making VerifyOPCM a wrapper around DeployImplementations for v2`) saw @maurelian stating that auditors felt `VerifyOPCM` provided redundancy and was complementary to `DeployImplementations.s.sol`. A suggestion was made to re-run `DeployImplementations` within `VerifyOPCM` alongside other checks.\n\n### Invalid Interop Tx Reinjection Test\nOn [#16656](https://github.com/ethereum-optimism/optimism/issues/16656) (`E2E: Invalid Interop Tx Reinjection Test`), @pcw109550 suggested using `op-test-sequencer` to force include invalid execution messages and then verify reorgs and mempool state. They also referenced a PR for inspecting the mempool and noted the complexity of testing scenarios where interop messages become invalid after dependency updates.", "2025-09-04T03:27:59.968Z"]
["ethereum-optimism/specs_day_2025-07-14", "ethereum-optimism/specs", "day", "2025-07-14", "# ethereum-optimism/specs Daily Update (Jul 14, 2025)\n## OVERVIEW \nThe day's activity focused on ongoing discussions and planning for several key areas, including interop stress testing, sync tester development, and E2E test improvements. Several issues were also closed, indicating progress on existing tasks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**Resolved Nonce Errors in User Approvals**\nAn issue related to nonce errors when approving and executing transactions after a single approval was closed, indicating a resolution to this user experience problem. ([#1106](https://github.com/ethereum-optimism/specs/issues/1106))\n\n**Progress on Devstack Porting**\nThe task of porting `TestERC20Bridge` to devstack has seen progress, with a related pull request opened in the `optimism` repository. ([#415](https://github.com/ethereum-optimism/specs/issues/415))\n\n## NEW ISSUES\n\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n**Sync Tester Development and Session Management**\nDiscussions continued on the `op-sync-tester` service for mock EL sync testing ([#16452](https://github.com/ethereum-optimism/specs/issues/16452)). The conversation revolved around session management, with `protolambda` suggesting using HTTP middleware to attach session information to the context based on a UUID in the URL, avoiding the need for a `sync_init` RPC. `pcw109550` proposed a session management flow involving a `sync_init` RPC to initialize an API endpoint and return a session ID, which would then be used to register a new endpoint for stateful proxying of CL requests.\n\n**Review of `VerifyOPCM` and `DeployImplementations` Relationship**\nThe discussion around making `VerifyOPCM` a wrapper around `DeployImplementations` for v2 continued ([#16653](https://github.com/ethereum-optimism/specs/issues/16653)). `maurelian` noted that auditors felt `VerifyOPCM` provided redundancy and was complementary to simply rerunning `DeployImplementations.s.sol`, acting as a check if either script is modified. A suggestion was made to re-run `DeployImplementations` within `VerifyOPCM` alongside other checks.\n\n**E2E Testing for Invalid Interop Tx Reinjection**\nDiscussions on an E2E test for invalid interop transaction reinjection after a block reorg continued ([#16656](https://github.com/ethereum-optimism/specs/issues/16656)). `pcw109550` suggested using `op-test-sequencer` to force include invalid execution messages and then verify that the invalid block is reorged, new L2 blocks do not contain the invalid interop transaction, and the mempool does not contain the invalid message transaction. A related PR was referenced for inspecting the mempool.\n\n**Stress Testing Interop Expiry Window**\nThe issue of stress testing the interop expiry window saw renewed discussion ([#15285](https://github.com/ethereum-optimism/specs/issues/15285)). `pauldowman` clarified that the \"consolidation step\" refers to the final step in the fault proof program where executing messages are validated after derivation. `mds1` sought clarification on the \"consolidation step.\" Earlier comments indicated that while the expiry window has been reduced and microbenchmarks done, an actual worst-case scenario test on interop-enabled chains is still desired.\n\n**Duplicate Code in `op-batcher`**\nA discussion regarding duplicate code in `op-batcher` was initiated ([#16677](https://github.com/ethereum-optimism/specs/issues/16677)). `chuwt` questioned if `checkTxpool` is still needed given that `publishStateToL1` already performs this check. `geoknee` acknowledged the observation and welcomed a PR to address it.\n\n**Adding a Spelling Lint**\nAn issue to add a spelling lint using `codespell` was active ([#680](https://github.com/ethereum-optimism/specs/issues/680)). `JoshdfG` expressed interest in taking on this task.", "2025-09-04T03:28:00.069Z"]
["ethereum-optimism/superchain-ops_day_2025-07-14", "ethereum-optimism/superchain-ops", "day", "2025-07-14", "# ethereum-optimism/superchain-ops Daily Update (Jul 14, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, code refactoring, documentation enhancements, or tests added. One issue was closed, related to a UX nonce error. Discussions continued on several active issues, including sync tester development, interop stress testing, and E2E test improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this date.\n\n## NEWLY OPENED PULL REQUESTS\nNo newly opened pull requests to report for this date.\n\n## CLOSED ISSUES\n### User Experience Improvements\nA UX issue related to nonce errors during approval and execution was closed [#1106](https://github.com/ethereum-optimism/superchain-ops/issues/1106). This issue was resolved by a pull request.\n\n## NEW ISSUES\nNo new issues to report for this date.\n\n## ACTIVE ISSUES\n### Sync Tester Development\nDiscussions on the `op-sync-tester` issue [#16452](https://github.com/ethereum-optimism/superchain-ops/issues/16452) focused on session management and API design. @protolambda suggested using UUIDs in the URL for session identification via HTTP middleware, avoiding the need for a special `sync_init` RPC. @pcw109550 proposed a session management flow involving a `sync_init` RPC to return a session ID, which would then be used to register a new endpoint for stateful proxying of CL requests to EL.\n\n### Interoperability Stress Testing\nThe issue concerning stress testing the interop expiry window [#15285](https://github.com/ethereum-optimism/superchain-ops/issues/15285) saw clarification on the \"consolidation step\" from @pauldowman, explaining it as the final step in the fault proof program that validates executing messages. @mds1 sought this clarification. Earlier comments indicated that while microbenchmarks were done, an actual worst-case scenario test on interop-enabled chains is still desired.\n\n### E2E Test Improvements\nDiscussions on the E2E invalid interop transaction reinjection test [#16656](https://github.com/ethereum-optimism/superchain-ops/issues/16656) centered on how to best implement the test. @pcw109550 suggested using `op-test-sequencer` to force include invalid execution messages, then checking for reorgs and ensuring the invalid transaction is not present in the mempool. Reference was made to a PR that allows inspecting the mempool.\n\n### Code Duplication in op-batcher\nThe issue regarding duplicate code in `op-batcher` [#16677](https://github.com/ethereum-optimism/superchain-ops/issues/16677) received a comment from @geoknee thanking @chuwt for the observation and inviting a PR to fix it. @chuwt confirmed willingness to create a PR.\n\n### Acceptance Test Porting\nThe issue to port `TestERC20Bridge` to devstack [#415](https://github.com/ethereum-optimism/superchain-ops/issues/415) was updated by @serpixel, noting that the porting has been completed and referencing the relevant pull request.", "2025-09-04T03:28:00.774Z"]
["ethereum-optimism/community-hub_day_2025-07-15", "ethereum-optimism/community-hub", "day", "2025-07-15", "# ethereum-optimism/community-hub Daily Update (Jul 15, 2025)\n## OVERVIEW \nThe day saw a new documentation addition for Superstacks allocation and significant progress on several long-standing issues, including the resolution of a chain fork test porting and discussions around sequencer infrastructure.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Documentation Expansion**\n    *   Added new documentation for Superstacks allocation, enhancing clarity on OP Token distribution. ([#1167](https://github.com/ethereum-optimism/community-hub/pull/1167))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Infrastructure Optimization Discussions**\n    *   Concluded discussions on the necessity of NVMe node deployment for op-rbuilders, deciding to skip it for now based on current performance and focusing on more immediate issues. ([#16689](https://github.com/ethereum-optimism/community-hub/issues/16689))\n    *   Resolved the discussion regarding dedicated namespacing for rbuilders, opting to keep flashblocks components in the same namespace as other sequencer components to simplify initial effort. ([#16690](https://github.com/ethereum-optimism/community-hub/issues/16690))\n*   **Test Suite Enhancements**\n    *   Successfully ported the `TestChainFork` to devstack, improving the acceptance test suite. ([#413](https://github.com/ethereum-optimism/community-hub/issues/413))\n*   **Codebase Refinement**\n    *   Closed an issue regarding duplicate code in `op-batcher`, suggesting a potential cleanup. ([#16677](https://github.com/ethereum-optimism/community-hub/issues/16677))\n*   **Flashblocks Enablement**\n    *   Deprioritized and closed the issue concerning enabling flashblocks on Sunnyside sequencers, shifting focus to stabilizing flashblocks on OP Labs Sepolia infrastructure first. ([#16688](https://github.com/ethereum-optimism/community-hub/issues/16688))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **Txpool Interop Transaction Inclusion** ([#635](https://github.com/ethereum-optimism/community-hub/issues/635))\n    *   Discussion continues on a flaky issue where invalid interop execution message transactions are conditionally included in the txpool. @pcw109550 provided detailed logs and artifacts from CI runs demonstrating the flakiness, where an invalid transaction was sometimes included and sometimes evicted. @axelKingsley is actively investigating but has been unable to reproduce the issue consistently despite extensive testing and tracing through `geth`'s `Add` function, noting that all transactions should pass through the ingress filter. The challenge lies in understanding how an invalid transaction bypasses this filter.", "2025-09-04T03:28:01.512Z"]
["ethereum-optimism/infra_day_2025-07-15", "ethereum-optimism/infra", "day", "2025-07-15", "# ethereum-optimism/infra Daily Update (Jul 15, 2025)\n## OVERVIEW \nToday's development focused on closing several long-standing acceptance test porting issues and addressing internal infrastructure discussions regarding sequencer configurations and flashblocks. A new pull request was opened to enable public access and authentication.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added. No other work was completed.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#424](https://github.com/ethereum-optimism/infra/pull/424), was opened to enable public access and authentication.\n\n## CLOSED ISSUES\n### Acceptance Test Porting\nThree acceptance test porting issues were closed today, indicating successful integration of these tests into the devstack:\n- [#413](https://github.com/ethereum-optimism/infra/issues/413) \"[acceptance] Port TestChainFork to devstack\" was closed as implemented in [#16594](https://github.com/ethereum-optimism/optimism/pull/16594).\n- [#412](https://github.com/ethereum-optimism/infra/issues/412) \"[acceptance] Port TestWithdrawalsRoot to devstack\" was closed as implemented in [#16547](https://github.com/ethereum-optimism/optimism/pull/16547).\n- [#415](https://github.com/ethereum-optimism/infra/issues/415) \"[acceptance] Port TestERC20Bridge to devstack\" was closed as ported in [#16695](https://github.com/ethereum-optimism/optimism/pull/16695).\n\n### Infrastructure Spikes and Discussions\nSeveral spike issues related to infrastructure configurations were closed after internal discussions:\n- [#16689](https://github.com/ethereum-optimism/infra/issues/16689) \"spike: discuss out the need of nvme node deployment of op-rbuilders\" was closed, with the decision to skip NVMe nodes for now based on current flashblocks generation performance.\n- [#16690](https://github.com/ethereum-optimism/infra/issues/16690) \"spike: discuss out the need of dedicated namespacing of rbuilders\" was closed, concluding that it's better to keep flashblocks components in the same namespace as other sequencer components, addressing monitoring gaps with additional labels.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Sequencer Configuration and Flashblocks\n- [#16688](https://github.com/ethereum-optimism/infra/issues/16688) \"enable flashblocks on sunnyside sequencers\": Discussion indicates that enabling flashblocks on Sunnyside sequencers has been deprioritized. The immediate focus is on getting flashblocks stably running on OP Labs Sepolia infrastructure first, with issue [#16685](https://github.com/ethereum-optimism/infra/issues/16685) being a blocker.\n\n### Transaction Pool Behavior\n- [#635](https://github.com/ethereum-optimism/infra/issues/635) \"txpool: invalid interop tx conditionally included\": The discussion highlights a persistent and difficult-to-reproduce bug where invalid interop transactions are occasionally included in the mempool. Despite extensive attempts to reproduce the issue and analysis of the `geth` codebase, the root cause remains elusive. Artifacts from a flaky CI run were provided as evidence of the behavior.", "2025-09-04T03:28:03.547Z"]
["ethereum-optimism/ecosystem_day_2025-07-15", "ethereum-optimism/ecosystem", "day", "2025-07-15", "# ethereum-optimism/ecosystem Daily Update (Jul 15, 2025)\n## OVERVIEW \nThe day saw significant progress in supporting sponsored messages with new API capabilities and relayer support. Initial setup for a \"verbs\" proof-of-concept SDK was also completed, alongside routine package versioning. Several issues were closed, including one related to `op-batcher` code duplication and another concerning `TestChainFork` porting.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Sponsored Message Handling\nAPI support for fetching sponsored messages has been added, extending the `/messages/pending` endpoint to filter by `filteredTargets` ([#899](https://github.com/ethereum-optimism/ecosystem/pull/899)). Concurrently, the autorelayer now supports relaying these sponsored messages by accepting a list of sponsored targets in its configuration ([#900](https://github.com/ethereum-optimism/ecosystem/pull/900)).\n\n### \"Verbs\" POC Setup\nAn initial proof-of-concept (POC) SDK for \"verbs\" integrations has been set up, including an empty function to confirm successful setup. This lays the groundwork for future money verb integrations on the OP Stack ([#901](https://github.com/ethereum-optimism/ecosystem/pull/901)).\n\n### Package Versioning\nRoutine package versioning updates were performed for `ponder-interop` ([#903](https://github.com/ethereum-optimism/ecosystem/pull/903)) and `autorelayer-interop` ([#904](https://github.com/ethereum-optimism/ecosystem/pull/904)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Code Duplication Resolution\nThe issue concerning duplicate code in `op-batcher`'s `checkTxpool` function was closed, indicating that the redundancy has been addressed or deemed unnecessary ([#16677](https://github.com/ethereum-optimism/ecosystem/issues/16677)).\n\n### Acceptance Test Porting\nThe task to port `TestChainFork` to devstack within the acceptance tests has been completed and closed ([#413](https://github.com/ethereum-optimism/ecosystem/issues/413)).\n\n### Builder Deployment and Namespacing Spikes\nDiscussions and spikes related to the necessity of NVMe node deployment for `op-rbuilders` and dedicated namespacing for rbuilders were concluded. It was decided to skip NVMe nodes for now and to stick with including flashblocks components in the same namespace as other sequencer components, addressing monitoring and alerting gaps with additional labels ([#16689](https://github.com/ethereum-optimism/ecosystem/issues/16689), [#16690](https://github.com/ethereum-optimism/ecosystem/issues/16690)).\n\n## NEW ISSUES\n\n### Verbs Integration\nNew issues have been opened to establish the \"verbs\" package and application within the ecosystem ([#905](https://github.com/ethereum-optimism/ecosystem/issues/905)) and to integrate a wallet solution, specifically Privy, into the \"verbs\" framework ([#906](https://github.com/ethereum-optimism/ecosystem/issues/906)).\n\n### Dependency Vulnerabilities\nA new issue was created to address and resolve identified dependency vulnerabilities within the project ([#907](https://github.com/ethereum-optimism/ecosystem/issues/907)).\n\n## ACTIVE ISSUES\n\n### `txpool`: Invalid Interop Tx Conditionally Included ([#635](https://github.com/ethereum-optimism/ecosystem/issues/635))\nDiscussion continues on the intermittent issue where invalid interop execution messages are conditionally included in the transaction pool. @pcw109550 provided detailed reproduction steps and artifacts from CI logs, showing instances where invalid transactions were inserted into the mempool, with some getting evicted and others stuck. @axelKingsley has been unable to reproduce the bug despite extensive testing and analysis of `geth`'s transaction submission flow, noting that all transactions should pass through ingress filters.\n\n### Enable Flashblocks on Sunnyside Sequencers ([#16688](https://github.com/ethereum-optimism/ecosystem/issues/16688))\nThe issue of enabling flashblocks on Sunnyside sequencers is ongoing. @yashvardhan-kukreja commented that this task has been deprioritized in favor of first achieving stable flashblocks operation on OP Labs Sepolia infrastructure, and that issue [#16685](https://github.com/ethereum-optimism/ecosystem/issues/16685) is a blocker.", "2025-09-04T03:28:03.586Z"]
["ethereum-optimism/op-analytics_day_2025-07-15", "ethereum-optimism/op-analytics", "day", "2025-07-15", "# ethereum-optimism/op-analytics Daily Update (Jul 15, 2025)\n\n## OVERVIEW \nThe day's activity focused on a critical fix to the provider mapping logic within the `op-analytics` codebase, ensuring correct string generation for BigQuery insertions. Additionally, several issues were closed, including discussions around sequencer configurations and a long-standing bug related to invalid transaction inclusion.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n- **Data Source Correction**: A critical fix was implemented to ensure the `provider` field in BigQuery insertions always generates a correct string, resolving an issue with the `providers to provider map`. ([#1691](https://github.com/ethereum-optimism/op-analytics/pull/1691))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n- **Sequencer Configuration Discussions Concluded**: Several discussions regarding sequencer configurations were closed. This includes the decision to deprioritize enabling flashblocks on Sunnyside sequencers in favor of stabilizing flashblocks on OP Labs Sepolia infra ([#16688](https://github.com/ethereum-optimism/op-analytics/issues/16688)), and the decision to skip NVMe node deployments for `op-rbuilders` for now, based on current performance observations ([#16689](https://github.com/ethereum-optimism/op-analytics/issues/16689)). The need for dedicated namespacing for `rbuilders` was also discussed and it was decided to keep them in the same namespace as other sequencer components, opting for additional labels for monitoring and alerting instead ([#16690](https://github.com/ethereum-optimism/op-analytics/issues/16690)).\n- **Duplicate Code Identified**: An issue regarding duplicate code in `op-batcher`'s `checkTxpool` function was closed, with a suggestion for a PR to address it. ([#16677](https://github.com/ethereum-optimism/op-analytics/issues/16677))\n- **Acceptance Test Porting Completed**: The task to port `TestChainFork` to `devstack` was closed, indicating its successful implementation. ([#413](https://github.com/ethereum-optimism/op-analytics/issues/413))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n- **Txpool: Invalid Interop Tx Conditionally Included**: Discussions continue on the flakiness of invalid interop transactions being conditionally included in the txpool ([#635](https://github.com/ethereum-optimism/op-analytics/issues/635)). @axelKingsley is actively investigating, attempting to reproduce the bug by running tests on repeat and analyzing `geth`'s transaction addition flow. Despite extensive tracing, no clear branching logic allowing invalid transactions to bypass filters has been found. @pcw109550 provided detailed artifacts and reproduction steps from CI runs where the issue was observed, including logs showing invalid transactions being inserted and sometimes getting stuck in the mempool.", "2025-09-04T03:28:04.147Z"]
["ethereum-optimism/op-geth_day_2025-07-15", "ethereum-optimism/op-geth", "day", "2025-07-15", "# ethereum-optimism/op-geth Daily Update (Jul 15, 2025)\n## OVERVIEW \nThe day saw significant activity in issue resolution, with several discussions concluding and issues being closed, particularly around flashblocks and builder deployments. A new pull request was opened for code refactoring.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#644](https://github.com/ethereum-optimism/op-geth/pull/644), was opened to refactor code by using `maps.Copy` for cleaner map handling.\n\n## CLOSED ISSUES\n### Flashblocks and Builder Deployment Strategy\nDiscussions concluded on the necessity of NVMe node deployment for `op-rbuilders` and dedicated namespacing for rbuilders. It was decided to skip NVMe nodes for now due to current flashblocks generation and to integrate flashblocks components within the existing sequencer namespace, adding labels for better monitoring and alerting rather than separate namespaces ([#16689](https://github.com/ethereum-optimism/op-geth/issues/16689), [#16690](https://github.com/ethereum-optimism/op-geth/issues/16690)).\n### Test Chain Fork Porting\nThe issue related to porting `TestChainFork` to devstack was closed, as it has been implemented in a related pull request ([#413](https://github.com/ethereum-optimism/op-geth/issues/413)).\n### Code Duplication in op-batcher\nAn issue identifying duplicate code in `op-batcher` was closed, with the observation that `checkTxpool` might be redundant ([#16677](https://github.com/ethereum-optimism/op-geth/issues/16677)).\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n### Flashblocks on Sunnyside Sequencers\nDiscussion on [#16688](https://github.com/ethereum-optimism/op-geth/issues/16688) indicates that enabling flashblocks on Sunnyside sequencers is currently deprioritized. The focus is on achieving stable flashblocks on OP Labs Sepolia infrastructure first. As of August 19th, all Sunnyside sequencers for Sepolia are running with Flashblocks and connected to the websocket proxy, with failover tested on a devnet.\n### Txpool: Invalid Interop Tx Conditionally Included\nIssue [#635](https://github.com/ethereum-optimism/op-geth/issues/635) continues to be investigated. A user reported experiencing the behavior where an invalid interop transaction was conditionally included in the mempool during `op-acceptance-tests` CI, leading to flakiness. Despite attempts to reproduce the bug by running tests in parallel and tracing `geth`'s transaction inclusion logic, the issue remains elusive. The core challenge is understanding how an invalid transaction could bypass the ingress filter and be included in the mempool.", "2025-09-04T03:28:04.687Z"]
["ethereum-optimism/community-hub_day_2025-07-16", "ethereum-optimism/community-hub", "day", "2025-07-16", "# ethereum-optimism/community-hub Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day's activity focused on maintenance, with the removal of an outdated airdrop banner and the closure of several long-standing issues related to sequencer stability, package updates, and node startup problems.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **UI/UX Improvements**\n    *   Removed the outdated airdrop banner from the theme configuration ([#1168](https://github.com/ethereum-optimism/community-hub/pull/1168)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Sequencer Stability & Recovery**\n    *   Closed issues related to sequencer halting on temporary errors ([#12240](https://github.com/ethereum-optimism/community-hub/issues/12240)) and recovery from sequence window expiration incidents ([#11228](https://github.com/ethereum-optimism/community-hub/issues/11228)), indicating these issues are no longer considered active or have been resolved.\n*   **Dependency Management**\n    *   Closed an issue regarding updating the `@eth-optimism/contracts-bedrock` NPM package, with a note that these packages are no longer being updated ([#13459](https://github.com/ethereum-optimism/community-hub/issues/13459)).\n*   **Node Operation**\n    *   Closed an issue concerning the inability to start a new node with `op-node`, assuming the problem has been resolved ([#15411](https://github.com/ethereum-optimism/community-hub/issues/15411)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **Recovery from sequence window expiration incident** ([#11228](https://github.com/ethereum-optimism/community-hub/issues/11228))\n    *   The issue was closed by mslipper, who requested it be reopened if still relevant. Previously, geoknee noted that \"incident mode\" (now \"recover mode\") was implemented, which helps address this. The discussion also touched upon manual intervention being reasonable for rare sequencing window expiry and automatic blob congestion handling.\n*   **Sequencer halting on temporary error** ([#12240](https://github.com/ethereum-optimism/community-hub/issues/12240))\n    *   This issue was closed by mslipper, who asked for it to be reopened if the problem persists. Earlier discussions included reports of sequencer halts when L1 becomes unavailable and attempts at simple fixes.\n*   **Update NPM Package: @eth-optimism/contracts-bedrock** ([#13459](https://github.com/ethereum-optimism/community-hub/issues/13459))\n    *   The issue was closed by mslipper, stating that the NPM packages are no longer being updated.\n*   **Can not start new node with op-node** ([#15411](https://github.com/ethereum-optimism/community-hub/issues/15411))\n    *   The issue was closed by geoknee, assuming it was resolved, but inviting reopening if it remains an issue. An earlier comment suggested trying Alchemy as the L1 RPC.", "2025-09-04T03:28:07.382Z"]
["ethereum-optimism/docs_day_2025-07-16", "ethereum-optimism/docs", "day", "2025-07-16", "# ethereum-optimism/docs Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day's activity focused on minor documentation fixes, including an update to the `upgrade-op-contracts-1-3-1-8.mdx` file and removal of \"Base\" references from `upgrade-16.mdx`. Several long-standing issues related to sequencer behavior and package updates were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Refinements\nMinor adjustments were made to existing documentation. This included a small fix to the `deploy_config.json` within the 1.3 to 1.8 contract upgrade guide ([#1692](https://github.com/ethereum-optimism/docs/pull/1692)) and the removal of \"Base\" references from the `upgrade-16.mdx` notice ([#1695](https://github.com/ethereum-optimism/docs/pull/1695)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Sequencer Stability and Recovery\nSeveral issues related to sequencer behavior and recovery mechanisms were closed. This includes an issue concerning recovery from sequence window expiration ([#11228](https://github.com/ethereum-optimism/docs/issues/11228)) and another addressing sequencer halting due to temporary errors ([#12240](https://github.com/ethereum-optimism/docs/issues/12240)). Both were closed as they are either resolved or no longer considered relevant.\n\n### Package and Node Operation Updates\nAn issue regarding the update of the `@eth-optimism/contracts-bedrock` NPM package was closed, with a note that these packages are no longer being updated ([#13459](https://github.com/ethereum-optimism/docs/issues/13459)). Additionally, an issue where a new node could not be started with `op-node` was closed, presumed resolved ([#15411](https://github.com/ethereum-optimism/docs/issues/15411)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:07.469Z"]
["ethereum-optimism/design-docs_day_2025-07-16", "ethereum-optimism/design-docs", "day", "2025-07-16", "# ethereum-optimism/design-docs Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day's activity focused on closing several long-standing issues related to sequencer stability, node operation, and package updates. No new development work was initiated or completed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features were added, bugs fixed, code refactored, documentation enhanced, or tests added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n### Sequencer Stability and Recovery\nSeveral issues concerning sequencer behavior and recovery mechanisms were closed. This includes the recovery from sequence window expiration incidents ([#11228](https://github.com/ethereum-optimism/design-docs/issues/11228)) and sequencer halting on temporary errors ([#12240](https://github.com/ethereum-optimism/design-docs/issues/12240)). These issues were closed as they were either resolved or deemed no longer relevant.\n\n### Node Operation and Package Updates\nAn issue regarding the inability to start a new node with `op-node` ([#15411](https://github.com/ethereum-optimism/design-docs/issues/15411)) was closed, with the assumption that it was resolved. Additionally, a request to update the `@eth-optimism/contracts-bedrock` NPM package ([#13459](https://github.com/ethereum-optimism/design-docs/issues/13459)) was closed, as the NPM packages are no longer being updated.\n\n### Test Porting\nAn acceptance issue to port `TestChainFork` to `devstack` ([#413](https://github.com/ethereum-optimism/design-docs/issues/413)) was closed, as it was implemented in a related pull request.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n### Recovery from sequence window expiration incident ([#11228](https://github.com/ethereum-optimism/design-docs/issues/11228))\nThis issue, concerning the recovery process when the `op-batcher` stops and the sequence window expires, was closed by mslipper, who requested it be reopened if still relevant. Earlier discussions included the implementation of \"recover mode\" in [#13550](https://github.com/ethereum-optimism/optimism/pull/13550) and considerations for manual intervention. The automatic handling of blob congestion by the batcher was also noted.\n\n### Sequencer halting on temporary error ([#12240](https://github.com/ethereum-optimism/design-docs/issues/12240))\nThis issue, detailing instances where the sequencer halts due to temporary errors, was closed by mslipper, with a request to reopen if the issue persists. Previous comments highlighted similar experiences with sequencer halts when L1 becomes unavailable and a potential fix implemented in [#12258](https://github.com/ethereum-optimism/optimism/pull/12258).\n\n### Update NPM Package: @eth-optimism/contracts-bedrock ([#13459](https://github.com/ethereum-optimism/design-docs/issues/13459))\nThis issue, requesting an update to the `@eth-optimism/contracts-bedrock` NPM package, was closed by mslipper, stating that the NPM packages are no longer being updated.", "2025-09-04T03:28:07.479Z"]
["ethereum-optimism/superchain-ops_day_2025-07-15", "ethereum-optimism/superchain-ops", "day", "2025-07-15", "# ethereum-optimism/superchain-ops Daily Update (Jul 15, 2025)\n## OVERVIEW \nThe day's development focused on refining multisig task functionality with improved printing and code clarity. Additionally, validation files were updated for consistency, and discussions continued on critical infrastructure issues like flashblocks and builder deployments.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Multisig Task Improvements\nSignificant refactoring was done to the `MultisigTask` contract, enhancing code organization and readability, particularly for safe transaction handling and printing functionality. A property within the `SafeData` struct was also renamed for better clarity.\n- [#1090](https://github.com/ethereum-optimism/superchain-ops/pull/1090)\n- [#1129](https://github.com/ethereum-optimism/superchain-ops/pull/1129)\n\n### Validation File Updates\nAn incorrect address and nonce in the validation files for task 004 were updated to ensure consistency and accuracy.\n- [#865](https://github.com/ethereum-optimism/superchain-ops/pull/865)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Infrastructure Deployment Decisions\nDiscussions concluded regarding the necessity of NVMe node deployment for `op-rbuilders` and dedicated namespacing for rbuilders, with decisions made to skip NVMe for now and integrate flashblocks components into existing namespaces.\n- [#16689](https://github.com/ethereum-optimism/superchain-ops/issues/16689)\n- [#16690](https://github.com/ethereum-optimism/superchain-ops/issues/16690)\n\n### Code Duplication Resolution\nAn issue concerning duplicate code in the `op-batcher` was identified and subsequently closed.\n- [#16677](https://github.com/ethereum-optimism/superchain-ops/issues/16677)\n\n### Test Porting Completion\nThe task to port `TestChainFork` to devstack was completed and implemented.\n- [#413](https://github.com/ethereum-optimism/superchain-ops/issues/413)\n\n## NEW ISSUES\n\n### Block Explorer Migration\nA new issue was opened to track the migration from Etherscan to Blockscout for L2 block explorer needs for OP Mainnet and OP Sepolia, requiring updates across the repository.\n- [#1131](https://github.com/ethereum-optimism/superchain-ops/issues/1131)\n\n## ACTIVE ISSUES\n\n### Flashblocks on Sunnyside Sequencers\nThe discussion around enabling flashblocks on Sunnyside sequencers for OP Sepolia continues. It has been deprioritized in favor of stabilizing flashblocks on OP Labs Sepolia infrastructure first. The issue [#16685](https://github.com/ethereum-optimism/superchain-ops/issues/16685) is considered a blocker.\n- [#16688](https://github.com/ethereum-optimism/superchain-ops/issues/16688)\n\n### Txpool Invalid Interop Tx Inclusion\nThe investigation into why invalid interop execution message transactions are conditionally included in the txpool is ongoing. Despite extensive tracing and reproduction attempts, the exact cause remains elusive. A specific instance of flakiness in CI tests was highlighted, where an invalid transaction was included and stuck in the mempool.\n- [#635](https://github.com/ethereum-optimism/superchain-ops/issues/635)", "2025-09-04T03:28:07.717Z"]
["ethereum-optimism/infra_day_2025-07-16", "ethereum-optimism/infra", "day", "2025-07-16", "# ethereum-optimism/infra Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day's development focused on a critical bug fix in `op-acceptor` to ensure accurate test duration reporting. Several long-standing issues, including those related to sequencer recovery and outdated NPM packages, were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### `op-acceptor` Bug Fixes\nA bug in `op-acceptor` was fixed ([#425](https://github.com/ethereum-optimism/infra/pull/425)) that previously caused test runs to report zero durations on failed runs. This ensures that test runs now show a non-zero total duration regardless of their result status, improving the accuracy of test reporting.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Test Infrastructure Improvements\nAn issue related to converting the `ChainFork` test to use `devstack` was closed ([#367](https://github.com/ethereum-optimism/infra/issues/367)). This aligns with the team's goal of migrating to `op-devstack` for testing.\n\n### Sequencer Stability and Recovery\nTwo issues concerning sequencer behavior were closed. One addressed recovery from sequence window expiration incidents ([#11228](https://github.com/ethereum-optimism/infra/issues/11228)), and another focused on sequencer halting due to temporary errors ([#12240](https://github.com/ethereum-optimism/infra/issues/12240)). Both were closed with the note to reopen if the issues persist.\n\n### Dependency Management\nAn issue requesting an update to the `@eth-optimism/contracts-bedrock` NPM package was closed ([#13459](https://github.com/ethereum-optimism/infra/issues/13459)). The resolution indicated that these NPM packages are no longer being updated.\n\n### Node Operation Issues\nAn issue where a new node could not be started with `op-node` was closed ([#15411](https://github.com/ethereum-optimism/infra/issues/15411)), with the assumption that it was resolved.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments had new activity today.", "2025-09-04T03:28:10.116Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-07-16", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-07-16", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day's activity primarily focused on closing several long-standing issues related to sequencer stability, node operation, and package updates, indicating a cleanup of the issue backlog. A new pull request was opened to add DGOLD tokens.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, tests, or other work were completed and merged on this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1174](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1174), was opened to add DGOLD tokens.\n\n## CLOSED ISSUES\n### Sequencer and Node Stability Improvements\nSeveral issues related to sequencer and node stability were closed, indicating a resolution or a decision to no longer pursue these specific problems.\n- [#11228](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/11228): Recovery from sequence window expiration incident was closed, with a comment to reopen if still relevant.\n- [#12240](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/12240): Sequencer halting on temporary error was closed, with a comment to reopen if the issue persists.\n- [#15411](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15411): \"Can not start new node with op-node\" was closed, with the assumption that it was resolved.\n\n### Package and Test Updates\nAn issue concerning an outdated NPM package was closed, and a test porting task was also closed.\n- [#13459](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/13459): \"Update NPM Package: @eth-optimism/contracts-bedrock\" was closed, with the clarification that NPM packages are no longer being updated.\n- [#413](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/413): \"[acceptance] Port TestChainFork to devstack\" was closed, noting its implementation in a related pull request.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments or new comments on this day.", "2025-09-04T03:28:10.354Z"]
["ethereum-optimism/op-analytics_day_2025-07-16", "ethereum-optimism/op-analytics", "day", "2025-07-16", "# ethereum-optimism/op-analytics Daily Update (Jul 16, 2025)\n## OVERVIEW \nToday's development focused on enhancing data pipeline capabilities with new mapping utilities and scheduling platform metrics. Several long-standing issues related to sequencer stability and package updates were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Pipeline Enhancements\n- Implemented a configuration-driven manual mapping system to improve chain metadata transformations and data quality during aggregation, adding `mapping_utils.py` and related CSV resources. ([#1682](https://github.com/ethereum-optimism/op-analytics/pull/1682))\n\n### Infrastructure and Scheduling\n- Scheduled the platform metrics job to ensure regular execution. ([#1693](https://github.com/ethereum-optimism/op-analytics/pull/1693))\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1695](https://github.com/ethereum-optimism/op-analytics/pull/1695), was opened to \"Build fees sankey\".\n\n## CLOSED ISSUES\n\n### Sequencer Stability and Recovery\n- The issue regarding recovery from sequence window expiration incidents was closed, with a note that \"incident mode\" has been implemented. ([#11228](https://github.com/ethereum-optimism/op-analytics/issues/11228))\n- The issue concerning sequencer halting on temporary errors was closed, with a request to reopen if the problem persists. ([#12240](https://github.com/ethereum-optimism/op-analytics/issues/12240))\n- An issue where a new node could not start with `op-node` was closed, with the assumption that it was resolved. ([#15411](https://github.com/ethereum-optimism/op-analytics/issues/15411))\n\n### Package and Test Updates\n- The request to update the `@eth-optimism/contracts-bedrock` NPM package was closed, stating that these packages are no longer being updated. ([#13459](https://github.com/ethereum-optimism/op-analytics/issues/13459))\n- The acceptance issue to port `TestChainFork` to devstack was closed, noting its implementation in a related pull request. ([#413](https://github.com/ethereum-optimism/op-analytics/issues/413))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified.", "2025-09-04T03:28:10.630Z"]
["ethereum-optimism/op-geth_day_2025-07-16", "ethereum-optimism/op-geth", "day", "2025-07-16", "# ethereum-optimism/op-geth Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day's activity focused on addressing and closing several long-standing issues related to sequencer stability, recovery mechanisms, and dependency updates. A new pull request was opened to improve fee estimation logic.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#645](https://github.com/ethereum-optimism/op-geth/pull/645), was opened to add a block size capacity check for the `SuggestOptimismPriorityFee` function within the GPO (Gas Price Oracle) to improve fee estimation.\n\n## CLOSED ISSUES\n\n### Sequencer Stability and Recovery\nSeveral issues related to sequencer operation and recovery were closed. This includes [#11228](https://github.com/ethereum-optimism/op-geth/issues/11228), concerning recovery from sequence window expiration incidents, and [#12240](https://github.com/ethereum-optimism/op-geth/issues/12240), addressing sequencer halting due to temporary errors. Both were closed as they are no longer considered relevant or persistent.\n\n### Dependency and Node Start-up Issues\nThe issue [#13459](https://github.com/ethereum-optimism/op-geth/issues/13459), regarding updating the `@eth-optimism/contracts-bedrock` NPM package, was closed with the note that NPM packages are no longer being updated. Additionally, [#15411](https://github.com/ethereum-optimism/op-geth/issues/15411), which reported an inability to start a new node with `op-node`, was closed, presumably resolved.\n\n## NEW ISSUES\n\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments.", "2025-09-04T03:28:11.558Z"]
["ethereum-optimism/specs_day_2025-07-16", "ethereum-optimism/specs", "day", "2025-07-16", "# ethereum-optimism/specs Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, or code refactoring. A new pull request was opened to add a spell-checking lint. Several long-standing issues related to sequencer stability, package updates, and node startup were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#738](https://github.com/ethereum-optimism/specs/pull/738), was opened to introduce a linting rule for checking spelling.\n\n## CLOSED ISSUES\n\n### Sequencer Stability and Recovery\nTwo issues related to sequencer stability and recovery from errors were closed. [#11228](https://github.com/ethereum-optimism/specs/issues/11228), concerning recovery from sequence window expiration, was closed as \"Closing this for now. Please reopen if it's still relevant.\" after previous discussions on \"incident mode\" implementation. Similarly, [#12240](https://github.com/ethereum-optimism/specs/issues/12240), addressing sequencer halting on temporary errors, was closed with \"Closing this for now. Please reopen if this issue still persists.\"\n\n### Package and Node Startup Issues\nAn issue regarding an outdated NPM package, [#13459](https://github.com/ethereum-optimism/specs/issues/13459), was closed with the clarification that \"we are no longer updating the NPM packages.\" Additionally, [#15411](https://github.com/ethereum-optimism/specs/issues/15411), which reported an inability to start a new node with `op-node`, was closed with the assumption that it was resolved.\n\n## NEW ISSUES\n\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments had new activity on this day.", "2025-09-04T03:28:12.541Z"]
["ethereum-optimism/ecosystem_day_2025-07-16", "ethereum-optimism/ecosystem", "day", "2025-07-16", "# ethereum-optimism/ecosystem Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day saw significant progress in bug fixes related to BigInt serialization in the relayer and the integration of wallet functionality into the verbs-sdk, alongside routine package versioning. Several critical infrastructure issues were closed, and new issues were opened to enhance the verbs ecosystem.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Relayer Bug Fixes and Ponder API Updates\nA critical bug affecting BigInt serialization in the relayer was fixed, ensuring proper data handling. This involved updating all Ponder API endpoints to serialize `BigInt`s as `String`s instead of `Number`s, which is the correct approach for large integer values.\n- [#902](https://github.com/ethereum-optimism/ecosystem/pull/902)\n\n### Verbs SDK Wallet Integration\nThe `verbs-sdk` now includes comprehensive wallet integration. This involved establishing configuration and types for the SDK, creating a `Wallet` class, integrating with Privy as the initial wallet adapter, and extending the `verbs-service` to utilize the new SDK.\n- [#908](https://github.com/ethereum-optimism/ecosystem/pull/908)\n\n### Package Versioning\nRoutine package versioning was performed, updating `autorelayer-interop` and `ponder-interop` to their latest versions.\n- [#909](https://github.com/ethereum-optimism/ecosystem/pull/909)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Jul 16, 2025.\n\n## CLOSED ISSUES\n\n### Infrastructure Stability and Recovery\nSeveral long-standing issues related to sequencer stability and recovery from errors were closed. This includes addressing the recovery from sequence window expiration incidents and sequencer halting on temporary errors, indicating improved robustness of the Optimism infrastructure.\n- [#11228](https://github.com/ethereum-optimism/ecosystem/issues/11228)\n- [#12240](https://github.com/ethereum-optimism/ecosystem/issues/12240)\n\n### Package Updates and Node Operation\nAn issue concerning the outdated `@eth-optimism/contracts-bedrock` NPM package was closed with the clarification that these packages are no longer being updated. Additionally, a problem preventing new nodes from starting with `op-node` was resolved.\n- [#13459](https://github.com/ethereum-optimism/ecosystem/issues/13459)\n- [#15411](https://github.com/ethereum-optimism/ecosystem/issues/15411)\n\n### Verbs Ecosystem Initialization\nThe foundational issue for adding the `verbs` package and app to the ecosystem was closed, marking a significant step in the development of the verbs functionality.\n- [#905](https://github.com/ethereum-optimism/ecosystem/issues/905)\n\n## NEW ISSUES\n\n### Verbs Ecosystem Development\nNew issues were opened to further develop the `verbs` ecosystem, focusing on user interface and wallet management.\n- [#910](https://github.com/ethereum-optimism/ecosystem/issues/910): Create a `verbs-demo` UI repository to facilitate testing and visualization of `verbs` functionality.\n- [#913](https://github.com/ethereum-optimism/ecosystem/issues/913): Add an endpoint to the `verbs` service to list all created wallets, enhancing wallet management capabilities.\n- [#912](https://github.com/ethereum-optimism/ecosystem/issues/912): Configure hosting for `verbs-ui` and `verbs-service` to make them publicly accessible.\n\n## ACTIVE ISSUES\n\n### Recovery from Sequence Window Expiration Incident\nIssue [#11228](https://github.com/ethereum-optimism/ecosystem/issues/11228) was closed on Jul 16, 2025, with `mslipper` stating, \"Closing this for now. Please reopen if it's still relevant.\" This issue, which discussed the recovery process when the `op-batcher` stops batch submission and the sequence window expires, had seen previous discussions about the implementation of \"incident mode\" (now \"recover mode\") and potential batcher changes. `geoknee` had previously noted that `incident mode` was implemented and questioned if the issue should be closed given that some manual intervention is expected for such rare events.\n\n### Sequencer Halting on Temporary Error\nIssue [#12240](https://github.com/ethereum-optimism/ecosystem/issues/12240) was also closed on Jul 16, 2025, by `mslipper` with the comment, \"Closing this for now. Please reopen if this issue still persists.\" This issue described instances where the sequencer would halt due to temporary errors, including when the L1 becomes unavailable. Earlier discussions involved `emilianobonassi` noting similar sequencer halts and `sebastianst` providing a potential fix and a docker image for testing.\n\n### Update NPM Package: @eth-optimism/contracts-bedrock\nIssue [#13459](https://github.com/ethereum-optimism/ecosystem/issues/13459) was closed on Jul 16, 2025, by `mslipper` who clarified, \"Hi there - we are no longer updating the NPM packages.\" This resolves the user's request for an update to the `@eth-optimism/contracts-bedrock` package.", "2025-09-04T03:28:12.925Z"]
["ethereum-optimism/superchain-ops_day_2025-07-16", "ethereum-optimism/superchain-ops", "day", "2025-07-16", "# ethereum-optimism/superchain-ops Daily Update (Jul 16, 2025)\n\n## OVERVIEW \nToday's development focused on integrating Security Council Rehearsals with the new `superchain-ops` system and streamlining CI configurations. Several long-standing issues related to sequencer stability and package updates were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Security Council Rehearsal Integration\nThe initial step for integrating Security Council Rehearsals into the new `superchain-ops` system was implemented. This involved adding new rehearsal scripts, documentation, and related files, laying the groundwork for future rehearsal steps [#1121](https://github.com/ethereum-optimism/superchain-ops/pull/1121).\n\n### CI Configuration Streamlining\nOld CI configurations for rehearsals were removed, as CI for rehearsal templates will now be handled via the `just simulate-all-templates` CI job, aligning with the approach for other templates [#1130](https://github.com/ethereum-optimism/superchain-ops/pull/1130).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Sequencer Stability and Recovery\nSeveral issues related to sequencer stability and recovery mechanisms were closed. This includes an issue concerning recovery from sequence window expiration incidents [#11228](https://github.com/ethereum-optimism/superchain-ops/issues/11228) and another addressing sequencer halting on temporary errors [#12240](https://github.com/ethereum-optimism/superchain-ops/issues/12240). An issue regarding the inability to start a new node with `op-node` was also closed [#15411](https://github.com/ethereum-optimism/superchain-ops/issues/15411).\n\n### Package and Test Updates\nAn issue requesting an update to the `@eth-optimism/contracts-bedrock` NPM package was closed, with a note that these packages are no longer being updated [#13459](https://github.com/ethereum-optimism/superchain-ops/issues/13459). Additionally, an acceptance test porting `TestChainFork` to `devstack` was closed, as it was implemented in a separate repository [#413](https://github.com/ethereum-optimism/superchain-ops/issues/413).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified today.", "2025-09-04T03:28:13.576Z"]
["ethereum-optimism/superchain-registry_day_2025-07-16", "ethereum-optimism/superchain-registry", "day", "2025-07-16", "# ethereum-optimism/superchain-registry Daily Update (Jul 16, 2025)\n## OVERVIEW \nThe day's activity focused on a critical update to the Superchain Registry with the addition of a new prestate for Upgrade 16, alongside the closure of several long-standing issues related to sequencer stability and package updates.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Superchain Registry Updates:** A significant update was made to the `standard-prestates.toml` file, adding the absolute prestate approved by governance for Upgrade 16. This ensures the registry reflects the latest protocol configurations. ([#1084](https://github.com/ethereum-optimism/superchain-registry/pull/1084))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Sequencer Stability Improvements:** Several issues related to sequencer behavior and stability were closed, including recovery from sequence window expiration incidents ([#11228](https://github.com/ethereum-optimism/superchain-registry/issues/11228)) and sequencer halting on temporary errors ([#12240](https://github.com/ethereum-optimism/superchain-registry/issues/12240)). These closures indicate progress in addressing critical operational challenges.\n*   **Developer Tooling and Package Updates:** An issue concerning the outdated `@eth-optimism/contracts-bedrock` NPM package was closed ([#13459](https://github.com/ethereum-optimism/superchain-registry/issues/13459)), with a note indicating that these NPM packages are no longer being updated. Additionally, an issue regarding the inability to start a new node with `op-node` was closed, presumed resolved ([#15411](https://github.com/ethereum-optimism/superchain-registry/issues/15411)).\n*   **Test Porting Completion:** The issue to port `TestChainFork` to devstack was closed ([#413](https://github.com/ethereum-optimism/superchain-registry/issues/413)), indicating the successful implementation of this acceptance test.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were updated today.", "2025-09-04T03:28:14.033Z"]
["ethereum-optimism/optimism_day_2025-07-16", "ethereum-optimism/optimism", "day", "2025-07-16", "# ethereum-optimism/optimism Daily Update (Jul 16, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure with new sysgo support and improved SuperchainConfig test coverage, alongside migrating Cannon memory reservation tests. Several long-standing issues were closed, streamlining the project backlog.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing Infrastructure\nSignificant progress was made in bolstering the project's testing capabilities. New in-memory (sysgo) tests were added to CI and local environments, improving the efficiency and scope of testing for `op-acceptance-tests` ([#16550](https://github.com/ethereum-optimism/optimism/pull/16550)). Additionally, the `SuperchainConfig` test suite saw a substantial increase in coverage and quality, notably being the first PR created entirely with AI assistance ([#16675](https://github.com/ethereum-optimism/optimism/pull/16675)).\n\n### Cannon Test Framework Migration\nMemory reservation-related tests within the Cannon project were migrated to utilize the new DiffTester framework, streamlining the testing process for `mipsevm` components ([#16709](https://github.com/ethereum-optimism/optimism/pull/16709)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Streamlining Configuration and Release Processes\nSeveral issues related to project configuration and release workflows were closed. This includes discussions around a PR-based release workflow ([#12683](https://github.com/ethereum-optimism/optimism/issues/12683)) and the replacement of Makefiles with Justfiles for improved monorepo setup ([#12686](https://github.com/ethereum-optimism/optimism/issues/12686)). An issue regarding an outdated NPM package for `contracts-bedrock` was also closed, with a note that NPM packages are no longer being updated ([#13459](https://github.com/ethereum-optimism/optimism/issues/13459)).\n\n### Addressing Sequencer Stability and Recovery\nIssues concerning sequencer stability and recovery mechanisms were resolved. This includes the recovery from sequence window expiration incidents, with \"recover mode\" already implemented ([#11228](https://github.com/ethereum-optimism/optimism/issues/11228)). An issue where the sequencer was halting on temporary errors was also closed, with a request to reopen if the problem persists ([#12240](https://github.com/ethereum-optimism/optimism/issues/12240)).\n\n### Node Startup and Operation\nA problem preventing new nodes from starting with `op-node` was closed, with the assumption that it was resolved and a request to reopen if the issue reoccurs ([#15411](https://github.com/ethereum-optimism/optimism/issues/15411)).\n\n## NEW ISSUES\n\n### Optimism Portal Contract Manager (OPCM) Upgrade Input Refinement\nTwo new issues were opened regarding the `OpChainConfig` struct used as input for the `OPCM.upgrade()` function. Both issues propose removing the `proxyAdmin` field from this struct, as it is no longer required and can be derived from `systemConfigProxy.proxyAdmin()` ([#16728](https://github.com/ethereum-optimism/optimism/issues/16728), [#16729](https://github.com/ethereum-optimism/optimism/issues/16729)).\n\n## ACTIVE ISSUES\n\n### Porting TestChainFork to Devstack\nThe discussion on [#413](https://github.com/ethereum-optimism/optimism/issues/413) regarding porting `TestChainFork` to devstack saw recent activity. A comment from `scharissis` questioned if this issue is a duplicate of `infra/issues/367` and suggested closing one of them. Previously, `serpixel` noted that the issue was implemented in [#16594](https://github.com/ethereum-optimism/optimism/pull/16594).", "2025-09-04T03:28:15.031Z"]
["ethereum-optimism/op-analytics_day_2025-07-17", "ethereum-optimism/op-analytics", "day", "2025-07-17", "# ethereum-optimism/op-analytics Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day's development focused on expanding data ingestion capabilities by adding Celo chain support. Additionally, a new issue was opened regarding the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia references within the repository.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Ingestion Expansion\n- Added support for the Celo chain, including the ability to backfill data through configuration, enhancing the data pipeline's coverage ([#1694](https://github.com/ethereum-optimism/op-analytics/pull/1694)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Etherscan to Blockscout Migration\n- A new issue was created to track the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia references within the repository ([#1697](https://github.com/ethereum-optimism/op-analytics/issues/1697)).\n\n## ACTIVE ISSUES\n\n### Etherscan to Blockscout Migration Discussion\n- Issue [#1696](https://github.com/ethereum-optimism/op-analytics/issues/1696) discusses the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia. The latest comments indicate that a related pull request ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)) addresses this migration and is awaiting reviews and approval.\n\n### TestPectra Port to Devstack\n- Issue [#416](https://github.com/ethereum-optimism/op-analytics/issues/416) concerns porting TestPectra to devstack. The latest comment confirms that this has been implemented in a separate pull request ([#16744](https://github.com/ethereum-optimism/optimism/pull/16744)).", "2025-09-04T03:28:15.471Z"]
["ethereum-optimism/ecosystem_day_2025-07-17", "ethereum-optimism/ecosystem", "day", "2025-07-17", "# ethereum-optimism/ecosystem Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day saw significant progress in developer tooling with the addition of a UI for the `verbs-service`, enhancing visual tracking of feature development. Several issues related to wallet integration and UI development for the `verbs` project were closed, indicating a push towards improved developer experience. New issues were opened concerning migration to Blockscout and further `verbs` functionality.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Verbs UI Development\nA new Vite application, `verbs-ui`, was added to provide a visual interface for the `verbs-service`. This aims to improve the ability to track new feature progress for the backend service. ([#911](https://github.com/ethereum-optimism/ecosystem/pull/911))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Verbs UI and Wallet Integration\nTwo key issues related to the `verbs` project were closed. This includes the creation of a demo UI repository ([#910](https://github.com/ethereum-optimism/ecosystem/issues/910)) and the integration of a wallet package into `verbs` ([#906](https://github.com/ethereum-optimism/ecosystem/issues/906)).\n\n## NEW ISSUES\n\n### Block Explorer Migration\nA new issue was created to track the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia, requiring updates across the repository to reflect this change. ([#917](https://github.com/ethereum-optimism/ecosystem/issues/917))\n\n### Verbs Feature Expansion and Hosting\nNew issues were opened to implement a \"lend\" verb within the `verbs` project, which involves wrapping the Morpho SDK and adding API endpoints for lending functionalities ([#915](https://github.com/ethereum-optimism/ecosystem/issues/915)). Additionally, efforts to set up hosting for both `verbs-ui` and `verbs-service` were initiated. ([#916](https://github.com/ethereum-optimism/ecosystem/issues/916))\n\n## ACTIVE ISSUES\n\n### Etherscan to Blockscout Migration\nDiscussion on the Etherscan to Blockscout migration ([#1696](https://github.com/ethereum-optimism/ecosystem/issues/1696)) indicates that a pull request ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)) addressing this change is awaiting review and approval. The issue is expected to be closed once the PR is merged.\n\n### TestPectra Port to Devstack\nThe issue concerning the porting of TestPectra to devstack ([#416](https://github.com/ethereum-optimism/ecosystem/issues/416)) has seen progress, with an implementation noted in a related pull request ([#16744](https://github.com/ethereum-optimism/optimism/pull/16744)).", "2025-09-04T03:28:15.917Z"]
["ethereum-optimism/specs_day_2025-07-17", "ethereum-optimism/specs", "day", "2025-07-17", "# ethereum-optimism/specs Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day's activity focused on addressing existing issues, particularly the migration from Etherscan to Blockscout and the porting of TestPectra to devstack.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n### Etherscan to Blockscout Migration\nIssue [#1696](https://github.com/ethereum-optimism/specs/issues/1696) discusses the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia. The issue aims to identify and replace all Etherscan references with Blockscout in the repository. A pull request ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)) has been created to address this, and it is currently awaiting reviews and approval.\n\n### Porting TestPectra to Devstack\nIssue [#416](https://github.com/ethereum-optimism/specs/issues/416) concerns porting TestPectra to devstack. This has been implemented in pull request [#16744](https://github.com/ethereum-optimism/optimism/pull/16744).", "2025-09-04T03:28:15.947Z"]
["ethereum-optimism/superchain-ops_day_2025-07-17", "ethereum-optimism/superchain-ops", "day", "2025-07-17", "# ethereum-optimism/superchain-ops Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day's development focused on significant updates to Security Council Rehearsals, enhancing the process for removing signers and implementing nested upgrades within the new superchain-ops improvements system.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Security Council Rehearsal Enhancements\nUpdates were made to the Security Council Rehearsals, specifically for removing signers and implementing nested upgrades. This involved removing old templating for signer removal and introducing a new GnosisSafe signer removal template within the superchain-ops improvements system. Additionally, deployment scripts for nested rehearsals were refactored, and comprehensive documentation was added for the third security council rehearsal step. ([#1128](https://github.com/ethereum-optimism/superchain-ops/pull/1128), [#1132](https://github.com/ethereum-optimism/superchain-ops/pull/1132))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Etherscan to Blockscout Migration\nDiscussion on [#1696](https://github.com/ethereum-optimism/superchain-ops/issues/1696) centers on migrating from Etherscan to Blockscout for OP Mainnet and OP Sepolia. A pull request ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)) addressing this migration has been submitted and is awaiting reviews and approval. The issue is expected to be closed once the PR is merged.\n\n### Porting TestPectra to Devstack\nIssue [#416](https://github.com/ethereum-optimism/superchain-ops/issues/416) regarding porting TestPectra to devstack has been implemented in [#16744](https://github.com/ethereum-optimism/optimism/pull/16744).", "2025-09-04T03:28:17.222Z"]
["ethereum-optimism/superchain-registry_day_2025-07-17", "ethereum-optimism/superchain-registry", "day", "2025-07-17", "# ethereum-optimism/superchain-registry Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day's primary focus was on migrating Etherscan references to Blockscout across the repository, impacting various configuration and documentation files. This effort aims to align the registry with the ongoing transition to Blockscout for OP Mainnet and OP Sepolia.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n- **Etherscan to Blockscout Migration**: All Etherscan dependencies were migrated to Blockscout, ensuring that no \"etherscan\" references remain in the repository. This involved extensive changes across configuration files, documentation, and internal operational scripts. ([#1085](https://github.com/ethereum-optimism/superchain-registry/pull/1085))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n- **Etherscan to Blockscout Migration**: Discussion on [#1696](https://github.com/ethereum-optimism/superchain-registry/issues/1696) centered on the migration of Etherscan references to Blockscout for OP Mainnet and OP Sepolia. A related PR ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)) was mentioned as addressing this, with approval from @bradleycamacho and a note from @fainashalts to close the issue once the PR is merged.\n- **Port TestPectra to devstack**: Issue [#416](https://github.com/ethereum-optimism/superchain-registry/issues/416) saw an update from @serpixel, confirming that the feature was implemented in [#16744](https://github.com/ethereum-optimism/optimism/pull/16744).", "2025-09-04T03:28:17.685Z"]
["ethereum-optimism/docs_day_2025-07-17", "ethereum-optimism/docs", "day", "2025-07-17", "# ethereum-optimism/docs Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day's activity focused on addressing documentation updates related to the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia, with a new issue opened to track this change. An existing issue related to porting TestPectra was also updated.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Etherscan to Blockscout Migration\nA new issue was opened to track the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia. The issue [#1696](https://github.com/ethereum-optimism/docs/issues/1696) aims to identify and replace all references to Etherscan with Blockscout within the documentation. A related pull request [#1693](https://github.com/ethereum-optimism/docs/pull/1693) has been created to address this.\n\n## ACTIVE ISSUES\n\n### TestPectra Porting\nThe issue [#416](https://github.com/ethereum-optimism/docs/issues/416), concerning the porting of TestPectra to devstack, received an update. The latest comment indicates that this has been implemented in [#16744](https://github.com/ethereum-optimism/optimism/pull/16744).", "2025-09-04T03:28:18.098Z"]
["ethereum-optimism/community-hub_day_2025-07-17", "ethereum-optimism/community-hub", "day", "2025-07-17", "# ethereum-optimism/community-hub Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day's activity focused on the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia references within the repository, with a new issue opened to track this effort. Discussions also continued on porting TestPectra to devstack.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Block Explorer Migration\nA new issue was opened to track the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia references within the repository [#1169](https://github.com/ethereum-optimism/community-hub/issues/1169).\n\n## ACTIVE ISSUES\n### Etherscan to Blockscout Migration\nDiscussion on the Etherscan to Blockscout migration [#1696](https://github.com/ethereum-optimism/community-hub/issues/1696) continued, with @krofax linking a pull request ([pr](https://github.com/ethereum-optimism/docs/pull/1693)) that addresses the migration. @fainashalts acknowledged this and suggested closing the issue once the PR is merged, and @bradleycamacho approved the PR.\n\n### Porting TestPectra to Devstack\nThe active issue regarding porting TestPectra to devstack [#416](https://github.com/ethereum-optimism/community-hub/issues/416) saw a comment from @serpixel indicating that it has been implemented in [#16744](https://github.com/ethereum-optimism/optimism/pull/16744).", "2025-09-04T03:28:18.529Z"]
["ethereum-optimism/optimism_day_2025-07-17", "ethereum-optimism/optimism", "day", "2025-07-17", "# ethereum-optimism/optimism Daily Update (Jul 17, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure with a new operator fees test and temporary skips for interop failures. Significant progress was also made on dispute game robustness and node sanity checks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing and Test Infrastructure\nA new feature was added to port the Isthmus operator fees test to devstack, which incidentally implements improved private-key management for devnet-sdk ([#16721](https://github.com/ethereum-optimism/optimism/pull/16721)). Additionally, a temporal test skip was implemented for `op-acceptance-tests` due to `op-geth` version bump issues, specifically for interop acceptance test failures ([#16732](https://github.com/ethereum-optimism/optimism/pull/16732)).\n\n### Dispute Game and Node Stability Improvements\nWork continued on improving the robustness of the dispute game system by adding a Super Dispute Game test case for unsafe proposals, where a game's root claim contains both valid and invalid output roots ([#16723](https://github.com/ethereum-optimism/optimism/pull/16723)). Furthermore, sanity checks were introduced to `op-node` to prevent reorgs from supervisors when interop is not active and to limit reorgs to a day's worth of L2 blocks ([#16554](https://github.com/ethereum-optimism/optimism/pull/16554)).\n\n### Dependency and Build Process Refinements\nA fix was implemented in `dispute-mon` to remove the lazy dial option, addressing an issue where `op-dispute-mon` would fail on startup if a node was unavailable ([#16720](https://github.com/ethereum-optimism/optimism/pull/16720)). A partial revert was also performed on Dockerfile retry changes, as they were causing issues ([#16739](https://github.com/ethereum-optimism/optimism/pull/16739)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Dispute Game and Fault Proof Testing\nAn issue related to adding a Super Dispute Game test covering unsafe proposals for a non-zero step was closed ([#15678](https://github.com/ethereum-optimism/optimism/issues/15678)). Additionally, an investigation into adding NAT tests for the fault proof system was concluded ([#14118](https://github.com/ethereum-optimism/optimism/issues/14118)).\n\n### Node Sanity Checks and Devnet Improvements\nThe issue concerning the addition of sanity checks to `op-node` for interop was closed ([#15761](https://github.com/ethereum-optimism/optimism/issues/15761)). Improvements to private-key management and interfaces within `devnet-sdk` were also completed ([#15040](https://github.com/ethereum-optimism/optimism/issues/15040)).\n\n## NEW ISSUES\n\n### Testing Infrastructure Challenges\nA new issue was opened regarding handling failing tests in `op-acceptance-tests` due to an `op-geth` version bump, specifically for `v1.101511.1` ([#16731](https://github.com/ethereum-optimism/optimism/issues/16731)). Another issue proposes running Kurtosis tests against `op-geth` and `op-reth` repositories ([#16741](https://github.com/ethereum-optimism/optimism/issues/16741)).\n\n### Code Structure and Build Process Improvements\nAn issue was created to reorganize MIPS logic to encapsulate memory access, aiming to prevent issues like those related to memory tracking and reservation handling ([#16736](https://github.com/ethereum-optimism/optimism/issues/16736)). A general health issue was also opened to add retry mechanisms whilst building Docker images ([#16742](https://github.com/ethereum-optimism/optimism/issues/16742)).\n\n## ACTIVE ISSUES\n\n### Etherscan to Blockscout Migration\nDiscussions are ongoing regarding the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia ([#1696](https://github.com/ethereum-optimism/optimism/issues/1696)). The latest comments indicate that a pull request ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)) addresses this migration and is awaiting reviews and approval.\n\n### Porting TestPectra to Devstack\nThe issue of porting `TestPectra` to devstack is active ([#416](https://github.com/ethereum-optimism/optimism/issues/416)). The latest comment confirms that this has been implemented in pull request [#16744](https://github.com/ethereum-optimism/optimism/pull/16744).", "2025-09-04T03:28:18.662Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-07-17", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-07-17", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day's activity focused on addressing the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia references within the repository, with a new issue opened to track this effort.\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, tests, or other work were completed and merged on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n### Block Explorer Migration\nA new issue was opened to track the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia references within the repository. This involves finding and replacing all instances of Etherscan with Blockscout for these networks. [#1175](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1175)\n\n## ACTIVE ISSUES\n### Block Explorer Migration Discussion\nDiscussion continued on the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia. A pull request ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)) addressing this migration was identified and is awaiting reviews and approval. The issue is expected to be closed once the linked PR is merged. [#1696](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1696)\n\n### TestPectra Porting\nAn update was provided on the porting of TestPectra to devstack, indicating that it has been implemented in a separate pull request ([#16744](https://github.com/ethereum-optimism/optimism/pull/16744)). [#416](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/416)", "2025-09-04T03:28:19.469Z"]
["ethereum-optimism/infra_day_2025-07-17", "ethereum-optimism/infra", "day", "2025-07-17", "# ethereum-optimism/infra Daily Update (Jul 17, 2025)\n## OVERVIEW \nThe day saw the closure of one issue related to porting acceptance tests to devstack. A new issue was opened concerning the migration from Etherscan to Blockscout, with active discussion and a related PR already in progress in another repository.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added directly to this repository today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n**Acceptance Test Porting**\n*   The issue to port `TestOperatorFee` to devstack was closed today ([#414](https://github.com/ethereum-optimism/infra/issues/414)).\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n**Etherscan to Blockscout Migration**\n*   Discussion on [#1696](https://github.com/ethereum-optimism/infra/issues/1696) focuses on migrating from Etherscan to Blockscout for OP Mainnet and OP Sepolia.\n*   A related pull request ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)) in the `ethereum-optimism/docs` repository addresses this migration, awaiting reviews and approval.\n*   The issue is expected to be closed once the related PR is merged.\n\n**Porting Pectra Tests to Devstack**\n*   Issue [#416](https://github.com/ethereum-optimism/infra/issues/416) discusses porting `TestPectra` to devstack.\n*   A comment indicates that this has been implemented in a pull request ([#16744](https://github.com/ethereum-optimism/optimism/pull/16744)) within the `ethereum-optimism/optimism` repository.", "2025-09-04T03:28:20.052Z"]
["ethereum-optimism/docs_day_2025-07-18", "ethereum-optimism/docs", "day", "2025-07-18", "# ethereum-optimism/docs Daily Update (Jul 18, 2025)\n## OVERVIEW \nToday's focus was on documentation consistency, with a significant update to explorer links across various sections. Additionally, progress was made on resolving interop acceptance test failures and aligning test topologies with production environments.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Standardization\nA major effort was undertaken to standardize explorer URLs throughout the documentation, ensuring consistency and preventing broken links across numerous pages related to app development, Superchain, and the OP Stack. This enhancement improves the overall user experience and reliability of the documentation. ([#1693](https://github.com/ethereum-optimism/docs/pull/1693))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Interop Acceptance Test Resolution\nAn issue related to failing interop acceptance tests due to an `op-geth` version bump was closed, with a solution identified in a related pull request. ([#16731](https://github.com/ethereum-optimism/docs/issues/16731))\n\n### Interop Test Functionality\nThe issue concerning the basic functionality of an interop network in acceptance tests was closed, with the responsibility for its resolution transferred to the Protocol team. ([#298](https://github.com/ethereum-optimism/docs/issues/298))\n\n## NEW ISSUES\n\n### Acceptance Test Topology Alignment\nA new issue was opened to address the discrepancy between the current local Kurtosis interop devnet topology and the production environment, aiming to match the acceptance test topology to real-world conditions. ([#16746](https://github.com/ethereum-optimism/docs/issues/16746))\n\n## ACTIVE ISSUES\n\n### Acceptance Test Topology Alignment ([#16746](https://github.com/ethereum-optimism/docs/issues/16746))\nThe discussion highlights that the current Kurtosis interop devnet exposes the sequencer publicly, which differs from production. This issue stems from a missing flag in the `op-geth` sequencer used by acceptance tests, causing test failures. The focus is on making the Kurtosisnet YAML description match the production environment, including adding `proxyd` and `verifier` nodes.", "2025-09-04T03:28:20.693Z"]
["ethereum-optimism/ecosystem_day_2025-07-18", "ethereum-optimism/ecosystem", "day", "2025-07-18", "# ethereum-optimism/ecosystem Daily Update (Jul 18, 2025)\n## OVERVIEW \nThe day saw progress in the `verbs` project with the addition of wallet querying functionality and the initiation of its migration to a standalone repository. Several interop acceptance test issues were also addressed and closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Verbs Wallet Querying\nA new feature was added to the `verbs` SDK and service, enabling the querying of wallets. This involved adding `getAllWallets` to the SDK and a corresponding `GET /wallets` endpoint to the service, along with updates to the UI. ([#914](https://github.com/ethereum-optimism/ecosystem/pull/914))\n\n### Verbs Repository Migration\nWork has begun to move the `verbs` project into its own dedicated repository, aiming to make it a standalone project independent of the broader ecosystem context. This involves copying the `verbs` applications and setting up CI steps in the new repository. ([#918](https://github.com/ethereum-optimism/ecosystem/issues/918))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Interop Acceptance Test Resolution\nSeveral issues related to interop acceptance tests were closed. This includes handling a failing test due to an `op-geth` version bump ([#16731](https://github.com/ethereum-optimism/ecosystem/issues/16731)) and the general acceptance test for interop networks ([#298](https://github.com/ethereum-optimism/ecosystem/issues/298)).\n\n## NEW ISSUES\n\n### Verbs Standalone Repository\nA new issue was opened to track the migration of the `verbs` project to a solo repository, aiming to decouple it from the main ecosystem repository. This involves copying the `verbs` apps and setting up CI in the new repo, with a future step to remove them from the current repository. ([#918](https://github.com/ethereum-optimism/ecosystem/issues/918))\n\n## ACTIVE ISSUES\n\n### Interop Acceptance Test Topology\nDiscussion continued on matching the acceptance test topology to real-world production environments. The issue highlights that the current local Kurtosis interop devnet exposes the sequencer publicly, which deviates from production. This problem stems from an `op-geth` sequencer not setting the proper flag, causing test failures. The focus is on making the Kurtosisnet YAML description match production, including adding `proxyd` and verifier nodes. ([#16746](https://github.com/ethereum-optimism/ecosystem/issues/16746))", "2025-09-04T03:28:21.597Z"]
["ethereum-optimism/op-analytics_day_2025-07-18", "ethereum-optimism/op-analytics", "day", "2025-07-18", "# ethereum-optimism/op-analytics Daily Update (Jul 18, 2025)\n## OVERVIEW \nToday's development focused on refining data ingestion processes, particularly for Ethereum and Celo, within the Superchain analytics. Efforts included adding Ethereum to Goldsky data ingestion and temporarily disabling block batch processing for both Ethereum and Celo to address processing issues.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Ingestion Refinements\nImprovements were made to the data ingestion pipeline, specifically by adding Ethereum to the Goldsky data ingestion process to expand the scope of Superchain analytics. ([#1696](https://github.com/ethereum-optimism/op-analytics/pull/1696))\n\n### Block Batch Processing Adjustments\nTemporary measures were implemented to manage non-standard chain processing. This included ignoring Celo in block batch processing due to non-standard chain behavior and turning off block batch models for Ethereum pending further investigation into ingestion processes. ([#1698](https://github.com/ethereum-optimism/op-analytics/pull/1698), [#1699](https://github.com/ethereum-optimism/op-analytics/pull/1699))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Interoperability Test Resolution\nAn issue related to interop acceptance tests failing due to an op-geth version bump was closed, with a linked pull request expected to provide a solution. ([#16731](https://github.com/ethereum-optimism/op-analytics/issues/16731))\n\n### Acceptance Test Handover\nThe general interop acceptance test issue was closed, indicating that its handling will be transferred to the Protocol team. ([#298](https://github.com/ethereum-optimism/op-analytics/issues/298))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Acceptance Test Topology Alignment\nDiscussion continues on aligning the acceptance test topology with the real-world production environment. The issue [#16746](https://github.com/ethereum-optimism/op-analytics/issues/16746) highlights that the current local Kurtosis interop devnet exposes the sequencer publicly, which deviates from production. The latest comment from pcw109550 at 2025-07-18T11:40:27Z clarifies that this issue stems from a missing flag in the op-geth sequencer used by acceptance tests, causing test failures. The focus is now on making the Kurtosisnet YAML description match production, including adding components like proxyd and verifier nodes.", "2025-09-04T03:28:22.150Z"]
["ethereum-optimism/superchain-registry_day_2025-07-18", "ethereum-optimism/superchain-registry", "day", "2025-07-18", "# ethereum-optimism/superchain-registry Daily Update (Jul 18, 2025)\n## OVERVIEW \nThe day's activity focused on addressing and closing issues related to acceptance testing and interop network functionality. Key progress was made in resolving test failures caused by `op-geth` version bumps and aligning test topologies with production environments.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Interop Acceptance Test Resolution\nAn issue concerning the basic functionality of an interop network acceptance test was closed, with the resolution that it will be handled by the Protocol team.\n- [#298](https://github.com/ethereum-optimism/superchain-registry/issues/298)\n\n### `op-geth` Version Bump Test Failures\nAn issue related to `op-acceptance-tests` failing due to an `op-geth` version bump was closed. The resolution points to a specific pull request in the `optimism` repository that will address the problem.\n- [#16731](https://github.com/ethereum-optimism/superchain-registry/issues/16731)\n\n## NEW ISSUES\n### Acceptance Test Topology Alignment\nA new issue was opened to address the discrepancy between the acceptance test topology and the real-world production topology, specifically regarding the exposure of the sequencer to the public in the local Kurtosis interop devnet.\n- [#16746](https://github.com/ethereum-optimism/superchain-registry/issues/16746)\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:23.288Z"]
["ethereum-optimism/op-analytics_day_2025-07-19", "ethereum-optimism/op-analytics", "day", "2025-07-19", "# ethereum-optimism/op-analytics Daily Update (Jul 19, 2025)\n## OVERVIEW \nThe day's activity primarily involved the opening of a new draft pull request to modify models for L1 handling. A previously opened issue regarding static code analysis was closed after discussion confirmed existing tooling.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nA new draft pull request, [#1700](https://github.com/ethereum-optimism/op-analytics/pull/1700), was opened to modify models for L1 handling. This PR is currently in a draft state, indicating ongoing work.\n\n## CLOSED ISSUES\n### Static Code Analysis Integration\nIssue [#16752](https://github.com/ethereum-optimism/op-analytics/issues/16752), \"Integrate golangci-lint for Static Code Analysis,\" was closed today. The discussion confirmed that `golangci-lint` is already part of the CI process. Further suggestions were made to include the `.golangci-lint.yaml` file in the repository and incorporate additional linters like `staticcheck` and `revive`.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:23.571Z"]
["ethereum-optimism/optimism_day_2025-07-19", "ethereum-optimism/optimism", "day", "2025-07-19", "# ethereum-optimism/optimism Daily Update (Jul 19, 2025)\n## OVERVIEW \nThe day saw no new code contributions, bug fixes, or documentation enhancements. The primary activity involved the creation and swift closure of an issue related to static code analysis, confirming existing tooling.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Static Code Analysis Tooling\nAn issue proposing the integration of `golangci-lint` for static code analysis ([#16752](https://github.com/ethereum-optimism/optimism/issues/16752)) was opened and quickly closed. It was confirmed that `golangci-lint` is already part of the CI process. A follow-up comment suggested adding a `.golangci-lint.yaml` file and incorporating additional linters like `staticcheck` and `revive`.\n\n## NEW ISSUES\n### General Inquiries\nA new issue with a brief title was opened ([#16751](https://github.com/ethereum-optimism/optimism/issues/16751)).\n### Code Quality Tooling Discussion\nAn issue was opened to discuss integrating `golangci-lint` for static code analysis ([#16752](https://github.com/ethereum-optimism/optimism/issues/16752)). This issue was subsequently closed as the tool is already in use.\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments today.", "2025-09-04T03:28:24.066Z"]
["ethereum-optimism/superchain-ops_day_2025-07-18", "ethereum-optimism/superchain-ops", "day", "2025-07-18", "# ethereum-optimism/superchain-ops Daily Update (Jul 18, 2025)\n## OVERVIEW \nToday's development focused on minor bug fixes and performance improvements, alongside addressing issues related to acceptance tests and network topology. A key bug fix involved updating README files for the U16 upgrade, and a performance enhancement was made in state diff decoding. Several issues related to acceptance testing and network configuration were also discussed and some closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation and Upgrade Validation Improvements\n*   Updated README and validation files for the U16 upgrade, specifically for opcm-upgrade-v400-op-ink, opcm-upgrade-v400-soneium, and opcm-upgrade-v400-uni, ensuring accuracy and completeness for ongoing improvements. ([#1134](https://github.com/ethereum-optimism/superchain-ops/pull/1134))\n*   Added missing `approvedHashes` entries in validation files for enabling and removing DPM/DGM, crucial for correct system operation. ([#1135](https://github.com/ethereum-optimism/superchain-ops/pull/1135))\n\n### Performance Enhancements\n*   Implemented a small performance improvement in state diff decoding by optimizing the `AccountAccessParser.sol` to avoid redundant calls to `getStateDiffFor`. ([#1138](https://github.com/ethereum-optimism/superchain-ops/pull/1138))\n\n## NEWLY OPENED PULL REQUESTS\n*   [#1136](https://github.com/ethereum-optimism/superchain-ops/pull/1136): A new pull request was opened to add a fallback `address.json` file to all test tasks, aiming to improve performance.\n\n## CLOSED ISSUES\n\n### Acceptance Test Resolution\n*   The issue concerning failing acceptance tests due to an `op-geth` version bump was closed. The problem was identified as related to `TestExecMessageInvalidAttributes` and `TestRegularMessage`, which were temporarily skipped. ([#16731](https://github.com/ethereum-optimism/superchain-ops/issues/16731))\n*   The general acceptance test for interop networks was closed, with the resolution that it will be handled by the Protocol team. ([#298](https://github.com/ethereum-optimism/superchain-ops/issues/298))\n\n## NEW ISSUES\n*   No new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Acceptance Test Topology Alignment\n*   **[#16746](https://github.com/ethereum-optimism/superchain-ops/issues/16746) Match acceptance test topology to real world topology**: This issue highlights a divergence between the current local Kurtosis interop devnet, which exposes the sequencer to the public, and the production topology. The goal is to align the test environment with production, including adding `proxyd` and verifier nodes. The issue stems from an `op-geth` sequencer in the interop Kurtosis devnet not setting the proper flag, leading to test failures. The discussion indicates a focus on making the Kurtosisnet YAML description match production.", "2025-09-04T03:28:24.324Z"]
["ethereum-optimism/optimism_day_2025-07-18", "ethereum-optimism/optimism", "day", "2025-07-18", "# ethereum-optimism/optimism Daily Update (Jul 18, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure, particularly for Pectra and Ecotone features, and improving deployment tools. Significant work was also done on gnosis CLI utilities and migrating custom memory reservation tests.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing and Devstack Integration\nEfforts were made to port Pectra and Ecotone tests to the devstack environment, integrating them into the acceptance test suite. This expands the coverage and robustness of the testing framework. Additionally, custom memory reservation tests for Cannon were migrated to a new DiffTester framework, streamlining differential testing.\n- [#16744](https://github.com/ethereum-optimism/optimism/pull/16744)\n- [#16727](https://github.com/ethereum-optimism/optimism/pull/16727)\n\n### Deployment Tooling Improvements\nA new command was added to `op-deployer` to simplify `OPCM.migrate` calls, enhancing the deployment process. This streamlines a critical operation for chain management.\n- [#16710](https://github.com/ethereum-optimism/optimism/pull/16710)\n\n### Gnosis CLI and Interoperability Updates\nWork continued on the Gnosis CLI, including adding a command-line interface for sending transactions and refactoring code for better modularity and importability into other projects like `netchef`. Furthermore, `rollup.interopmempoolfiltering` was added to ELs in Kurtosis, aiming to align the acceptance test topology more closely with production environments.\n- [#16743](https://github.com/ethereum-optimism/optimism/pull/16743)\n- [#16745](https://github.com/ethereum-optimism/optimism/pull/16745)\n- [#16735](https://github.com/ethereum-optimism/optimism/pull/16735)\n\n## NEWLY OPENED PULL REQUESTS\n- [#16747](https://github.com/ethereum-optimism/optimism/pull/16747): This pull request is titled \"16588 tweaks\" and likely contains minor adjustments or fixes related to a previous PR or issue.\n- [#16750](https://github.com/ethereum-optimism/optimism/pull/16750): This pull request, \"refactor(test): improve L1 bridges test coverage and quality with AI assistance [Prompt v0.6.5 - v0.6.6]\", aims to enhance the quality and coverage of L1 bridges tests, potentially leveraging AI for assistance.\n\n## CLOSED ISSUES\n\n### Resolution of Interop Test Failures\nAn issue where interop acceptance tests were failing due to an `op-geth` version bump has been closed. The resolution is expected to come from a related pull request.\n- [#16731](https://github.com/ethereum-optimism/optimism/issues/16731)\n\n### Interop Network Acceptance Test Closure\nThe long-standing issue to add an acceptance test for basic interop network functionality has been closed, with the note that it will be handled by the Protocol team.\n- [#298](https://github.com/ethereum-optimism/optimism/issues/298)\n\n## NEW ISSUES\n\n### Acceptance Test Topology Discrepancy\nA new issue has been opened to address the discrepancy between the current local Kurtosis interop devnet topology and the production environment. The current setup exposes the sequencer publicly, which does not match real-world production topologies.\n- [#16746](https://github.com/ethereum-optimism/optimism/issues/16746)\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:24.533Z"]
["ethereum-optimism/op-analytics_day_2025-07-20", "ethereum-optimism/op-analytics", "day", "2025-07-20", "# ethereum-optimism/op-analytics Daily Update (Jul 20, 2025)\n## OVERVIEW \nToday's development focused on addressing data pipeline issues, specifically excluding Ethereum from Goldsky temporarily and reordering schema columns to maintain data integrity.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Pipeline Adjustments\nEfforts were made to temporarily exclude Ethereum from Goldsky due to downstream blockbatch model failures after ingestion, indicating a need for rollback on an existing change. This also involved reordering schema columns to align with expected structures. ([#1701](https://github.com/ethereum-optimism/op-analytics/pull/1701), [#1702](https://github.com/ethereum-optimism/op-analytics/pull/1702))\n\n## NEWLY OPENED PULL REQUESTS\n- No new pull requests were opened today.\n\n## CLOSED ISSUES\n- No issues were closed today.\n\n## NEW ISSUES\n- No new issues were reported today.\n\n## ACTIVE ISSUES\n- No active issues with more than 3 comments.", "2025-09-04T03:28:24.628Z"]
["ethereum-optimism/community-hub_day_2025-07-21", "ethereum-optimism/community-hub", "day", "2025-07-21", "# ethereum-optimism/community-hub Daily Update (Jul 21, 2025)\n## OVERVIEW \nThe day's activity focused on minor documentation updates, specifically removing a deprecated tracker and updating a link. Several issues related to `op-supervisor` and `flashblocks` were closed, indicating progress in those areas.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Documentation Updates:**\n    *   Removed a deprecated dashboard tracker from the documentation ([#1170](https://github.com/ethereum-optimism/community-hub/pull/1170)).\n    *   Updated a link related to claiming within the `op-token` section ([#1171](https://github.com/ethereum-optimism/community-hub/pull/1171)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Flashblocks Deployment Progress:**\n    *   The issue concerning the configuration of `flashblocks-rpc` via Base's `flashblocks node-reth` was closed in favor of a new issue ([#16544](https://github.com/ethereum-optimism/community-hub/issues/16544)).\n    *   The issue regarding the non-public enablement of `flashblocks` on `op-sepolia` was closed, indicating progress towards a new milestone ([#16496](https://github.com/ethereum-optimism/community-hub/issues/16496)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **`op-supervisor`, `op-node`: Improve reset unsafe target** ([#16314](https://github.com/ethereum-optimism/community-hub/issues/16314))\n    The issue was closed on July 25th, with a comment indicating that all actionable items have been addressed, primarily through work in `optimism/pull/16557` and related PRs. The decision to close was also influenced by upcoming refactoring of components. The issue aimed to improve how the supervisor handles reset targets for all labels, with partial implementation noted in `optimism/pull/16557`.", "2025-09-04T03:28:26.527Z"]
["ethereum-optimism/op-analytics_day_2025-07-21", "ethereum-optimism/op-analytics", "day", "2025-07-21", "# ethereum-optimism/op-analytics Daily Update (Jul 21, 2025)\n## OVERVIEW \nThe day saw the addition of a new notebook for DefiLlama full backfills. Several issues related to flashblocks enablement and op-supervisor/op-node improvements were actively discussed and some were closed, indicating progress in those areas.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Data Backfill Enhancements**\n    *   A new notebook was added to support full backfills for DefiLlama data, improving data availability and analysis capabilities ([#1703](https://github.com/ethereum-optimism/op-analytics/pull/1703)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Flashblocks Deployment Progress**\n    *   Issues related to enabling flashblocks on op-sepolia and configuring reth-enabled flashblocks nodes were closed, indicating progress towards their deployment and integration ([#16544](https://github.com/ethereum-optimism/op-analytics/issues/16544), [#16496](https://github.com/ethereum-optimism/op-analytics/issues/16496)). These were closed in favor of a new milestone and a new issue respectively.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **op-supervisor and op-node Reset Improvements** ([#16314](https://github.com/ethereum-optimism/op-analytics/issues/16314))\n    *   Discussions on improving the `op-supervisor` and `op-node` reset unsafe target functionality continued. The latest comments from July 21st suggest that most actionable items have been addressed, with a proposal to close the issue given upcoming refactoring. The issue was subsequently closed on July 25th due to recent project changes, with an option to re-open or create a new issue if needed.", "2025-09-04T03:28:27.146Z"]
["ethereum-optimism/infra_day_2025-07-21", "ethereum-optimism/infra", "day", "2025-07-21", "# ethereum-optimism/infra Daily Update (Jul 21, 2025)\n## OVERVIEW \nThe day saw progress in closing out issues related to flashblocks enablement and supervisor improvements, with discussions indicating a shift towards new approaches for ongoing work.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n**Flashblocks Deployment Strategy Refinement**\n*   The issue concerning enabling flashblocks non-publicly on op-sepolia was closed in favor of creating a new milestone, indicating a strategic shift in how this deployment will be managed ([#16496](https://github.com/ethereum-optimism/infra/issues/16496)).\n*   The issue tracking the configuration of a reth-enabled flashblocks node was closed in favor of a new issue, suggesting a revised approach to integrating reth with flashblocks ([#16544](https://github.com/ethereum-optimism/infra/issues/16544)).\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n**Supervisor Target Improvement**\n*   Discussion on [#16314](https://github.com/ethereum-optimism/infra/issues/16314) (op-supervisor,op-node: Improve reset unsafe target) indicates that most actionable items have been covered by existing PRs, specifically referencing https://github.com/ethereum-optimism/optimism/pull/16557. The latest comment from \"nonsense\" on July 21, 2025, suggests that the issue might be closed soon, given that further refactoring of these components is anticipated. The issue was subsequently closed on July 25, 2025, due to recent project changes, with an option to re-open or create a new issue if needed.", "2025-09-04T03:28:27.214Z"]
["ethereum-optimism/docs_day_2025-07-21", "ethereum-optimism/docs", "day", "2025-07-21", "# ethereum-optimism/docs Daily Update (Jul 21, 2025)\n## OVERVIEW \nThe day's focus was on documentation maintenance, with bug fixes addressing image links and lock issues. Several new pull requests were opened for content migration and upgrade timestamp additions. Progress was also made on closing issues related to Etherscan migration and flashblocks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Link and Display Fixes\nCritical bug fixes were implemented to ensure the accuracy and proper display of documentation content. This included resolving issues with image links across various operator, stack, and superchain documentation pages, and fixing lock-related display problems in upgrade notices.\n- Fix images links ([#1694](https://github.com/ethereum-optimism/docs/pull/1694))\n- Fix lock issues ([#1699](https://github.com/ethereum-optimism/docs/pull/1699))\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n- A feature to add a timestamp of the upgrade and update the list of affected chains ([#1697](https://github.com/ethereum-optimism/docs/pull/1697)).\n- A pull request for content migration redirects ([#1700](https://github.com/ethereum-optimism/docs/pull/1700)).\n\n## CLOSED ISSUES\n\n### Etherscan to Blockscout Migration\nThe issue concerning the migration from Etherscan to Blockscout references within the documentation was closed, with a pull request addressing this change awaiting review and approval.\n- Etherscan --> Blockscout migration ([#1696](https://github.com/ethereum-optimism/docs/issues/1696))\n\n### Flashblocks Deployment Progress\nTwo issues related to the deployment and enablement of flashblocks were closed, indicating progress towards their integration.\n- flashblocks: reth-enabled flashblocks node ([#16544](https://github.com/ethereum-optimism/docs/issues/16544))\n- enable flashblocks non-publicly on op-sepolia ([#16496](https://github.com/ethereum-optimism/docs/issues/16496))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### op-supervisor,op-node: Improve reset unsafe target ([#16314](https://github.com/ethereum-optimism/docs/issues/16314))\nThe discussion on improving the `op-supervisor` and `op-node` reset unsafe target functionality indicates that most actionable items have been covered, particularly with work done in a related pull request. The issue is being considered for closure, especially given upcoming refactoring of these components. The current implementation partially addresses the need for the supervisor to provide correct reset targets, but still lacks handling for pre- and post-Interop scenarios where the supervisor's logs database differs.", "2025-09-04T03:28:27.788Z"]
["ethereum-optimism/op-geth_day_2025-07-21", "ethereum-optimism/op-geth", "day", "2025-07-21", "# ethereum-optimism/op-geth Daily Update (Jul 21, 2025)\n## OVERVIEW \nThe day's development focused on refining Superchain configurations by skipping Celo Mainnet genesis processing due to its non-standard genesis. Several issues related to flashblocks enablement and transaction pool cost tracking were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Configuration Enhancements\n*   Skipped Celo Mainnet genesis processing in `op-geth` due to its non-standard genesis, ensuring compatibility and stability within the Superchain ecosystem ([#646](https://github.com/ethereum-optimism/op-geth/pull/646)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Transaction Pool Improvements\n*   The issue concerning the periodic update of tracked rollup costs in the transaction pool was closed ([#573](https://github.com/ethereum-optimism/op-geth/issues/573)). This addresses a previous bug fix and ensures more accurate cost tracking.\n\n### Flashblocks Enablement Progress\n*   The issue related to configuring `flashblocks-rpc` (node-reth) to serve flashblocks RPC via Base's flashblocks node-reth was closed ([#16544](https://github.com/ethereum-optimism/op-geth/issues/16544)). This was closed in favor of a new issue.\n*   The issue regarding the non-public enablement of flashblocks on Op-Sepolia was closed ([#16496](https://github.com/ethereum-optimism/op-geth/issues/16496)). This was closed in favor of the creation of a new milestone.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Supervisor Reset Target Improvement\n*   Discussion on [#16314](https://github.com/ethereum-optimism/op-geth/issues/16314) (op-supervisor,op-node: Improve reset unsafe target) indicates that much of the actionable work has been completed, particularly with the implementation in `optimism/pull/16557`. The issue is being considered for closure, with a suggestion to re-open or create a new issue if further work is needed after upcoming refactoring. The latest comment from \"nonsense\" on July 25, 2025, confirms the closure of the issue, stating that it can be re-opened or a new issue created if necessary.", "2025-09-04T03:28:27.921Z"]
["ethereum-optimism/superchain-ops_day_2025-07-21", "ethereum-optimism/superchain-ops", "day", "2025-07-21", "# ethereum-optimism/superchain-ops Daily Update (Jul 21, 2025)\n## OVERVIEW \nThe day's development focused on critical bug fixes related to documentation and storage interpretations for U16 upgrade validation files. Several issues concerning flashblocks enablement and supervisor behavior were closed, indicating progress in those areas.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation and Validation File Corrections\nSignificant effort was put into correcting documentation and validation files for the U16 upgrade. This included general documentation fixes and specific corrections to how `AnchorStateRegistry` storage was interpreted in validation files, ensuring accuracy for upcoming upgrades.\n- Doc fixes: [#1139](https://github.com/ethereum-optimism/superchain-ops/pull/1139)\n- AnchorStateRegistry storage interpretation fixes: [#1141](https://github.com/ethereum-optimism/superchain-ops/pull/1141)\n\n## NEWLY OPENED PULL REQUESTS\nNone\n\n## CLOSED ISSUES\n\n### Flashblocks Enablement Progress\nTwo issues related to the enablement of flashblocks were closed, indicating progress in integrating this feature.\n- Flashblocks RPC configuration: [#16544](https://github.com/ethereum-optimism/superchain-ops/issues/16544)\n- Non-public flashblocks deployment on op-sepolia: [#16496](https://github.com/ethereum-optimism/superchain-ops/issues/16496)\n\n## NEW ISSUES\nNone\n\n## ACTIVE ISSUES\n\n### op-supervisor,op-node: Improve reset unsafe target ([#16314](https://github.com/ethereum-optimism/superchain-ops/issues/16314))\nThe discussion on this issue indicates that most actionable items have been addressed, primarily through work in the `optimism` repository. The issue is being considered for closure due to recent project changes and upcoming refactoring of related components. The latest comment from July 25th confirms the closure, suggesting re-opening or creating a new issue if needed.", "2025-09-04T03:28:29.449Z"]
["ethereum-optimism/superchain-registry_day_2025-07-21", "ethereum-optimism/superchain-registry", "day", "2025-07-21", "# ethereum-optimism/superchain-registry Daily Update (Jul 21, 2025)\n## OVERVIEW \nThe day's development focused on expanding the Superchain Registry by re-adding Celo mainnet, including necessary adjustments for its unique genesis history. Additionally, several issues related to flashblocks enablement and supervisor improvements were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Registry Expansion\nCelo mainnet was re-added to the Superchain Registry, with specific handling for its genesis validity check due to its history as an Ethereum L1 fork converted to an L2. This update involved modifications to `CHAINS.md`, `chainList.json`, `chainList.toml`, `ops/cmd/check_genesis_integrity/main.go`, `superchain/configs/mainnet/celo.toml`, `superchain/extra/addresses/addresses.json`, and `superchain/extra/genesis/mainnet/celo.json.zst`. ([#1086](https://github.com/ethereum-optimism/superchain-registry/pull/1086))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Enablement Progress\nTwo issues related to flashblocks enablement were closed. [#16544](https://github.com/ethereum-optimism/superchain-registry/issues/16544), concerning a reth-enabled flashblocks node, was closed in favor of a new issue. Similarly, [#16496](https://github.com/ethereum-optimism/superchain-registry/issues/16496), which aimed to enable flashblocks non-publicly on op-sepolia, was closed in favor of a milestone creation.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Supervisor and Node Reset Improvements\nDiscussion on [#16314](https://github.com/ethereum-optimism/superchain-registry/issues/16314) regarding `op-supervisor` and `op-node` improvements for resetting unsafe targets continued. The latest comment from `nonsense` on July 21st, 2025, suggested that all actionable items in the issue have been covered, particularly with work done in `optimism/pull/16557` and related PRs. The comment also inquired if anything else needed to be done given upcoming refactoring of these components, indicating a potential closure of the issue. A subsequent comment on July 25th, 2025, confirmed the closure of the issue due to recent project changes, with an option to re-open or create a new issue if needed.", "2025-09-04T03:28:30.154Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-07-22", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-07-22", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jul 22, 2025)\n## OVERVIEW \nToday's development focused on expanding token support within the Superchain ecosystem by adding the QUICK token on Base. Additionally, significant progress was made in refining documentation, particularly the fault proof incident runbook, and addressing an issue related to configurable DA types for interop SuperSystem.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Ecosystem Expansion\n- Added the $QUICK token on the Base chain, including an update to its logo, enhancing the range of supported assets within the Superchain. ([#1170](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1170))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Documentation and Runbook Finalization\n- The \"Runbook v3 final review\" issue was closed, with updates to references from other runbooks to point to V3. The three different versions of the runbook were renamed to indicate which releases they apply to (v1 = pre-OPCM; v2 = U14 & U15; v3 = U16+), and each now links to the others. ([#16651](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16651))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Interoperability and Data Availability Configuration\n- The issue \"op-e2e: Configurable DA type for interop SuperSystem\" ([#15406](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15406)) was briefly closed due to automation but has been reopened. The discussion revolves around the need for a batcher that posts using blobs rather than calldata for interop fault proof testing. While it was previously suggested that this might not block RC Beta due to existing test coverage for blob preimage, the issue remains active for future resolution, particularly before removing pre-interop fault proof support. The latest comment indicates an incorrect closure and subsequent reopening.", "2025-09-04T03:28:30.603Z"]
["ethereum-optimism/specs_day_2025-07-21", "ethereum-optimism/specs", "day", "2025-07-21", "# ethereum-optimism/specs Daily Update (Jul 21, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out several long-standing issues related to Interop specifications and flashblocks. Two older issues concerning Interop event indexing and block rules were closed, alongside two flashblocks-related issues. Discussions continued on an active issue regarding op-supervisor and op-node improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, tests, or other work were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Interoperability Specification Updates\nTwo issues related to Interoperability specifications were closed. [#277](https://github.com/ethereum-optimism/specs/issues/277) addressed updating the event-index wildcard/intent feature, which was initially drafted in PR #108 and needed to account for `executing-me`. [#609](https://github.com/ethereum-optimism/specs/issues/609) focused on upgrading block rules specifications.\n\n### Flashblocks Deployment Progress\nTwo issues concerning flashblocks deployment were closed. [#16544](https://github.com/ethereum-optimism/specs/issues/16544) aimed to enable flashblocks non-publicly on op-sepolia, which was closed in favor of a new milestone. [#16496](https://github.com/ethereum-optimism/specs/issues/16496) was about configuring `flashblocks-rpc` (node-reth) to serve flashblocks RPC via Base's flashblocks node-reth, and was closed in favor of [#16687](https://github.com/ethereum-optimism/specs/issues/16687).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Supervisor and Node Reset Target Improvements\nDiscussion continued on [#16314](https://github.com/ethereum-optimism/specs/issues/16314), which focuses on improving the `op-supervisor` and `op-node`'s ability to reset unsafe targets. A comment from @nonsense on July 21st suggested that most actionable items were covered by PR [#16557](https://github.com/ethereum-optimism/optimism/pull/16557) and related PRs, and questioned if further work was needed given upcoming refactoring. The issue was subsequently closed on July 25th, with @nonsense stating it could be re-opened or a new issue created if necessary.", "2025-09-04T03:28:30.802Z"]
["ethereum-optimism/docs_day_2025-07-23", "ethereum-optimism/docs", "day", "2025-07-23", "# ethereum-optimism/docs Daily Update (Jul 23, 2025)\n## OVERVIEW \nThe day saw the creation of a new issue related to a 2024 Q4 audit and a comment on an existing issue regarding semgrep rules. A flashblocks-websocket-proxy deployment issue was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Infrastructure Deployment\nAn issue concerning the deployment of a flashblocks-websocket-proxy in op-sepolia was closed, with the resolution linked to a pull request in the k8s repository ([#16686](https://github.com/ethereum-optimism/docs/issues/16686)).\n\n## NEW ISSUES\n### Audit-Related Documentation\nA new issue was opened to track updates required for a 2024 Q4 audit, including a template for describing necessary changes and acceptance criteria ([#1701](https://github.com/ethereum-optimism/docs/issues/1701)).\n\n## ACTIVE ISSUES\n### Code Quality and Semgrep Rules\nDiscussion continued on adding a semgrep rule to enforce naming conventions for private/internal and public functions. A comment from `copilot-swe-agent` indicated an error due to GitHub Actions being disabled for the repository, preventing further work on the issue ([#15115](https://github.com/ethereum-optimism/docs/issues/15115)).\n\n### Test Target Setup and Teardown\nAn issue regarding incorporating test target setup/teardown as an `op-acceptor` concern received a new comment. The comment linked to related pull requests in the `optimism` and `infra` repositories, indicating ongoing work or discussions related to improving test compatibility across different network targets ([#375](https://github.com/ethereum-optimism/docs/issues/375)).", "2025-09-04T03:28:33.223Z"]
["ethereum-optimism/op-analytics_day_2025-07-22", "ethereum-optimism/op-analytics", "day", "2025-07-22", "# ethereum-optimism/op-analytics Daily Update (Jul 22, 2025)\n## OVERVIEW \nThe day saw significant activity in dependency updates and data pipeline refinements, including a fix for DefiLlama notebooks and adjustments to L2 priority fee calculations. Several bumps to Dagster and refined transaction models were also implemented.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Pipeline Refinements\n- Fixed discrepancies in L2 priority fee calculations, aiming for no difference between calculated and actual fees ([#1704](https://github.com/ethereum-optimism/op-analytics/pull/1704)).\n- Addressed a bug in the DefiLlama full backfills notebook ([#1705](https://github.com/ethereum-optimism/op-analytics/pull/1705)).\n\n### Dependency and Model Updates\n- Bumped the Dagster version in `Makefile` and `helm/dagster/values.yaml` ([#1708](https://github.com/ethereum-optimism/op-analytics/pull/1708), [#1710](https://github.com/ethereum-optimism/op-analytics/pull/1710)).\n- Updated refined transaction models, impacting `Makefile`, `helm/dagster/values.yaml`, and `src/op_analytics/cli/subcommands/chains/app.py` ([#1709](https://github.com/ethereum-optimism/op-analytics/pull/1709)).\n\n### Infrastructure and Tooling\n- Implemented changes related to CircleCI pushes, affecting `helper_functions/opstack_metadata_utils.py` and `op_chains_tracking` notebooks ([#1707](https://github.com/ethereum-optimism/op-analytics/pull/1707)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#1706](https://github.com/ethereum-optimism/op-analytics/pull/1706): \"Chain metadata aggregator PR3 - Loaders\" was opened, indicating ongoing work on chain metadata aggregation.\n\n## CLOSED ISSUES\n\n### Runbook Finalization\n- The \"Runbook v3 final review\" issue ([#16651](https://github.com/ethereum-optimism/op-analytics/issues/16651)) was closed after a final review. References from other runbooks were updated to point to V3, and the three versions of the runbook were renamed to clearly indicate which upgrade versions they cover (v1 = pre-OPCM; v2 = U14 & U15; v3 = U16+), with each linking to the others.\n\n### Interop SuperSystem Configuration\n- The issue \"op-e2e: Configurable DA type for interop SuperSystem\" ([#15406](https://github.com/ethereum-optimism/op-analytics/issues/15406)) was closed. However, it was noted that it was closed incorrectly due to automation and was subsequently reopened.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n- **op-e2e: Configurable DA type for interop SuperSystem** ([#15406](https://github.com/ethereum-optimism/op-analytics/issues/15406)): This issue was briefly closed due to automation but was immediately reopened. The discussion highlights the need for a batcher that posts using blobs for interop FP testing, rather than calldata. Previous comments questioned its relevance for RC Beta and suggested using `op-devstack` instead of `SuperSystem` or `interopgen`. The latest comment confirms the incorrect closure and reopening of the issue.", "2025-09-04T03:28:33.242Z"]
["ethereum-optimism/superchain-ops_day_2025-07-22", "ethereum-optimism/superchain-ops", "day", "2025-07-22", "# ethereum-optimism/superchain-ops Daily Update (Jul 22, 2025)\n## OVERVIEW \nToday's development focused on preparing for the July 2025 Security Council rehearsals, updating the status of several U16 tasks to \"READY TO SIGN,\" and improving validation instructions. An important issue regarding the fault proof incident runbook was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Security Council Rehearsal Preparation\n- Created the \"Rehearsal 1 - Welcome\" playbook for Cohort B 2025 signers, including new READMEs and images for simulation success and state diffs. ([#1140](https://github.com/ethereum-optimism/superchain-ops/pull/1140))\n- Added new rehearsal materials for \"rehearsal-2-remove-signer\" and \"rehearsal-3-nested-upgrade,\" including environment files, READMEs, and images. ([#1140](https://github.com/ethereum-optimism/superchain-ops/pull/1140))\n\n### Task Status Updates and Validation Improvements\n- Marked U16 tasks 016-021 as \"READY TO SIGN\" by updating their status in respective README files. ([#1142](https://github.com/ethereum-optimism/superchain-ops/pull/1142))\n- Improved ASR validation instructions for tasks 017, 018, and 019. ([#1143](https://github.com/ethereum-optimism/superchain-ops/pull/1143))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Fault Proof Runbook Finalization\n- The \"Runbook v3 final review\" issue was closed after a final review and updates to references from other runbooks. The runbooks were renamed to indicate applicable upgrade versions (v1 = pre-OPCM; v2 = U14 & U15; v3 = U16+), with cross-linking between versions. ([#16651](https://github.com/ethereum-optimism/superchain-ops/issues/16651))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Configurable DA type for interop SuperSystem\n- The issue was incorrectly closed due to automation and has been reopened. ([#15406](https://github.com/ethereum-optimism/superchain-ops/issues/15406))\n- Previous discussions indicated that while this is needed before removing pre-interop fault dispute code, it doesn't block interop shipping or RC beta.\n- There's a recommendation against using `SuperSystem` or `interopgen` in favor of `op-devstack` for better configuration.", "2025-09-04T03:28:33.822Z"]
["ethereum-optimism/ecosystem_day_2025-07-23", "ethereum-optimism/ecosystem", "day", "2025-07-23", "# ethereum-optimism/ecosystem Daily Update (Jul 23, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out several issues, particularly around the Superchain tools and the `verbs` project, indicating a focus on refining existing functionalities and preparing for standalone deployments.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Superchain Tooling Refinement\nSeveral issues related to Superchain tools and demos were closed, indicating progress in stabilizing and integrating these components. This includes the closure of [#864](https://github.com/ethereum-optimism/ecosystem/issues/864) concerning the Superchain tools RCT Demo and [#865](https://github.com/ethereum-optimism/ecosystem/issues/865) which aimed to integrate the `interop-alpha` demo app into the Superchain playground.\n\n### Verbs Project Development\nSignificant work was completed on the `verbs` project, with issues related to its hosting and repository structure being closed. Specifically, [#916](https://github.com/ethereum-optimism/ecosystem/issues/916) addressed the hosting setup for `verbs-ui`, and [#918](https://github.com/ethereum-optimism/ecosystem/issues/918) focused on moving `verbs` to a solo repository to enable it as a standalone project.\n\n### Infrastructure and Audit Planning\nAn issue related to deploying a flashblocks-websocket-proxy in op-sepolia, [#16686](https://github.com/ethereum-optimism/ecosystem/issues/16686), was closed, with a reference to a related pull request in the `k8s` repository. Additionally, a new audit-related issue, [#1701](https://github.com/ethereum-optimism/ecosystem/issues/1701), was opened and subsequently closed, indicating initial planning for a Q4 2024 audit.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Semgrep Rule for Private/Internal Functions\nDiscussion on [#15115](https://github.com/ethereum-optimism/ecosystem/issues/15115) regarding adding a semgrep rule for private/internal functions saw a new comment from `copilot-swe-agent`. The agent reported an error preventing it from working on the issue, specifically that GitHub Actions are disabled for the repository. It suggested re-enabling GitHub Actions and reassigning the issue to allow it to proceed.\n\n### Test Target Setup/Teardown\nIssue [#375](https://github.com/ethereum-optimism/ecosystem/issues/375), which discusses incorporating test target setup/teardown as an `op-acceptor` concern, received a new comment from `scharissis`. This comment provided related pull requests from the `optimism` and `infra` repositories, indicating ongoing work and dependencies for this task. The issue was later closed by `teddyknox` who stated that Kurtosis is no longer considered important for network testing compared to Sysgo.", "2025-09-04T03:28:36.887Z"]
["ethereum-optimism/infra_day_2025-07-23", "ethereum-optimism/infra", "day", "2025-07-23", "# ethereum-optimism/infra Daily Update (Jul 23, 2025)\n## OVERVIEW \nThe day saw significant progress in the `op-acceptor` with the introduction of a gateless mode for test execution and a fix for a flaky test. Several issues were closed, including a long-standing flaky test and a deployment task.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Test Execution with Gateless Mode\nA new gateless mode has been introduced in `op-acceptor` ([#428](https://github.com/ethereum-optimism/infra/pull/428)). This feature allows `op-acceptor` to automatically discover and run all tests within a specified directory, streamlining the testing process.\n\n### Improved Test Stability\nA persistent flaky test in `op-acceptor` has been addressed and made more robust ([#430](https://github.com/ethereum-optimism/infra/pull/430)). This fix resolves a recurring issue in CI, improving the reliability of test runs.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Jul 23, 2025.\n\n## CLOSED ISSUES\n\n### Resolved Flaky Test\nThe long-standing flaky test issue in `op-acceptor` has been resolved ([#348](https://github.com/ethereum-optimism/infra/issues/348)). This fix improves the stability and reliability of CI pipelines.\n\n### Flashblocks Deployment Completed\nThe task to deploy a flashblocks-websocket-proxy in op-sepolia has been successfully completed ([#16686](https://github.com/ethereum-optimism/infra/issues/16686)). This deployment enhances flashblocks capabilities on the op-sepolia network.\n\n### New Audit Task Initiated\nA new issue for the 2024 Q4 Audit, specifically for a page-path, has been opened and subsequently closed, indicating initial setup or categorization ([#1701](https://github.com/ethereum-optimism/infra/issues/1701)).\n\n## NEW ISSUES\nNo new issues were opened on Jul 23, 2025.\n\n## ACTIVE ISSUES\n\n### Semgrep Rule for Function Naming\nIssue [#15115](https://github.com/ethereum-optimism/infra/issues/15115) discusses adding a semgrep rule to enforce naming conventions for private/internal (starting with underscore) and public (not starting with underscore) functions. The latest comment from `copilot-swe-agent` indicates an error encountered while attempting to work on the issue, specifically that GitHub Actions is disabled for the repository, preventing automated assistance.\n\n### Test Target Setup/Teardown in op-acceptor\nIssue [#375](https://github.com/ethereum-optimism/infra/issues/375) focuses on incorporating test target setup and teardown as a concern of `op-acceptor`. The latest comment from `scharissis` highlights related pull requests ([#16550](https://github.com/ethereum-optimism/optimism/pull/16550) and [#428](https://github.com/ethereum-optimism/infra/pull/428)) that are relevant to this discussion, indicating ongoing work or considerations for test environment management.", "2025-09-04T03:28:37.145Z"]
["ethereum-optimism/specs_day_2025-07-23", "ethereum-optimism/specs", "day", "2025-07-23", "# ethereum-optimism/specs Daily Update (Jul 23, 2025)\n## OVERVIEW \nThe day saw the closure of an issue related to deploying a flashblocks-websocket-proxy in op-sepolia, indicating progress in network infrastructure. An internal audit-related issue was also opened.\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**Network Infrastructure Deployment**\nAn issue concerning the deployment of a flashblocks-websocket-proxy in op-sepolia was closed, indicating successful implementation or resolution related to flashblocks-enabled sequencers. ([#16686](https://github.com/ethereum-optimism/specs/issues/16686))\n\n**Internal Audit Tracking**\nA new issue was opened and subsequently closed, serving as a placeholder for a Q4 2024 audit, likely for internal tracking purposes. ([#1701](https://github.com/ethereum-optimism/specs/issues/1701))\n\n## NEW ISSUES\nNo new issues were opened that remained active at the end of the day.\n\n## ACTIVE ISSUES\n\n**Code Style and Semgrep Rule for Function Naming**\nIssue [#15115](https://github.com/ethereum-optimism/specs/issues/15115) discusses adding a semgrep rule to enforce naming conventions for private/internal functions (starting with an underscore) and public functions (not starting with an underscore). The latest comment from `copilot-swe-agent` indicates an error due to GitHub Actions being disabled for the repository, preventing automated work on the issue.\n\n**Test Target Setup and Teardown Integration**\nIssue [#375](https://github.com/ethereum-optimism/specs/issues/375) addresses the need to incorporate test target setup/teardown as an `op-acceptor` concern to improve compatibility of acceptance tests across various test target networks (e.g., sysgo, kurtosis, devnet). The latest comment from `scharissis` links to related pull requests in other repositories, suggesting ongoing work or discussions around this integration.", "2025-09-04T03:28:37.983Z"]
["ethereum-optimism/design-docs_day_2025-07-24", "ethereum-optimism/design-docs", "day", "2025-07-24", "# ethereum-optimism/design-docs Daily Update (Jul 24, 2025)\n\n## OVERVIEW \nThe day's activity focused on discussions around monitoring and alerting improvements for flashblocks, specifically detailing metrics and thresholds for peer count, block progression, pending transactions, and flashblocks-related SLAs.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n### Flashblocks Monitoring and Alerting Improvements\nDiscussion on [#16388](https://github.com/ethereum-optimism/design-docs/issues/16388) continued with detailed notes from a call between yashvardhan-kukreja and Jacob. Key points include:\n- **Peer Count:** Minimum of 4 peers.\n- **Block Progression:** SLAs around block progression and divergence.\n- **Pending Transactions:** Alerts if pending transactions exceed approximately 60 or spike, with verbose runbook instructions.\n- **Flashblocks SLA:** A flashblocks-related SLA-like metric (p99 over a specified time interval) using `reth_op_rbuilder_total_block_built_duration`.\n- **Flashblocks-websocket-proxy:** Monitoring for connection failures, errors, and the absence of metrics.\n- **Flashblocks-RPC Node-Reth:** Metrics related to failing to listen to the flashblocks-websocket-proxy, including upstream errors (count below a number) and upstream messages (rate below a number).\n- **Op-Node-Rbuilder:** Inheriting most op-node alerts and metrics.\nAn associated PR, https://github.com/ethereum-optimism/k8s/pull/7162, was linked to this issue.", "2025-09-04T03:28:39.364Z"]
["ethereum-optimism/supersim_day_2025-07-23", "ethereum-optimism/supersim", "day", "2025-07-23", "# ethereum-optimism/supersim Daily Update (Jul 23, 2025)\n\n## OVERVIEW \nThe day's development focused on integrating UniV4 deployments into supersim, enhancing the simulation environment for future protocol interactions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### UniV4 Integration\nUniV4 deployments were added to supersim, making UniV4 available as part of the chain addresses in viem. This involved updates across various genesis files, contract sources, and interop components. ([#397](https://github.com/ethereum-optimism/supersim/pull/397))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Infrastructure Deployment\nA flashblocks-websocket-proxy was deployed in op-sepolia, pointing to flashblocks-enabled sequencers. ([#16686](https://github.com/ethereum-optimism/supersim/issues/16686))\n\n### Audit-Related Documentation\nAn internal audit-related issue for Q4 2024 was opened and closed, likely for documentation or tracking purposes. ([#1701](https://github.com/ethereum-optimism/supersim/issues/1701))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Code Style and Semgrep Rules\nDiscussion on [#15115](https://github.com/ethereum-optimism/supersim/issues/15115) (Add semgrep rule for private/internal functions) indicates an attempt to enforce a new semgrep rule requiring private/internal functions to start with an underscore and public functions to not. The latest comment from `copilot-swe-agent` at 2025-07-23T20:43:48Z reports an error due to GitHub Actions being disabled for the repository, preventing progress on the issue.\n\n### Test Target Setup and Teardown\nIssue [#375](https://github.com/ethereum-optimism/supersim/issues/375) (Incorporate test target setup / teardown as an op-acceptor concern) discusses improving compatibility of acceptance tests across different test target networks. The latest comment from `scharissis` at 2025-07-23T08:07:21Z links to related pull requests in the `optimism` and `infra` repositories, suggesting ongoing work or considerations for this integration.", "2025-09-04T03:28:39.890Z"]
["ethereum-optimism/infra_day_2025-07-24", "ethereum-optimism/infra", "day", "2025-07-24", "# ethereum-optimism/infra Daily Update (Jul 24, 2025)\n## OVERVIEW \nThe day focused on bug fixes, specifically addressing a flaky test in `op-acceptor`, and logging improvements for transaction errors in `op-ufm`.\n## KEY TECHNICAL DEVELOPMENTS\n\n### Bug Fixes and Stability Improvements\nA flaky test in `op-acceptor` was identified and fixed, ensuring more reliable CI/CD runs. This resolves a long-standing issue related to incorrect exit codes for runtime errors.\n- Fixed flaky test in `op-acceptor` ([#431](https://github.com/ethereum-optimism/infra/pull/431))\n\n### Transaction Error Logging Enhancements\nImprovements were made to `op-ufm` to record logs for \"transaction not found\" errors, which is a preliminary step towards future system changes.\n- Recorded logs for transaction not found errors in `op-ufm` ([#433](https://github.com/ethereum-optimism/infra/pull/433))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#432](https://github.com/ethereum-optimism/infra/pull/432), was opened to remove \"not found transaction\" as an ignorable error, and is currently blocked.\n\n## CLOSED ISSUES\n\n### Test Reliability Improvement\nA bug related to incorrect exit codes in CI for runtime errors in `op-acceptor` was closed, following the fix implemented in a related pull request.\n- Resolved incorrect exit-code in CI for runtime errors ([#244](https://github.com/ethereum-optimism/infra/issues/244))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Flashblocks Monitoring and Alerting Improvements\nDiscussion on [#16388](https://github.com/ethereum-optimism/infra/issues/16388) continues to focus on establishing comprehensive monitoring and alerting for flashblocks integration, particularly for op-sepolia. Recent comments from yashvardhan-kukreja outline specific metrics and SLAs for peer count, block progression, pending transactions, and flashblocks-related performance (p99 over time). The discussion also covers monitoring `flashblocks-websocket-proxy` connections and `flashblocks-rpc` node-reth metrics for upstream errors and messages, as well as inheriting alerts and metrics for `op-node-rbuilder`. A related PR in the k8s repo ([https://github.com/ethereum-optimism/k8s/pull/7162](https://github.com/ethereum-optimism/k8s/pull/7162)) was also associated with this issue.", "2025-09-04T03:28:40.620Z"]
["ethereum-optimism/docs_day_2025-07-25", "ethereum-optimism/docs", "day", "2025-07-25", "# ethereum-optimism/docs Daily Update (Jul 25, 2025)\n## OVERVIEW \nToday's development focused on significant documentation enhancements, particularly adding support for Nethermind to the OP Docs. This update involved extensive changes across various operator-related documentation pages and the calculator component. Additionally, two long-standing issues related to supervisor functionality and logging utilities were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Node Operator Documentation Expansion\nA major update was implemented to integrate Nethermind support into the Optimism documentation. This involved modifying numerous pages related to node operators, including architecture, configuration, JSON-RPC, and management topics, ensuring comprehensive guidance for users running Nethermind nodes. ([#1615](https://github.com/ethereum-optimism/docs/pull/1615))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Supervisor and Node Reset Improvements\nAn issue concerning the `op-supervisor` and `op-node`'s ability to improve reset unsafe targets was closed. The discussion highlighted that significant progress had been made in related PRs, and given recent project changes, the issue was no longer considered actionable. ([#16314](https://github.com/ethereum-optimism/docs/issues/16314))\n\n### Enhanced Logging Utility\nAn issue related to creating a more reusable logger utility for changing log levels of sub-loggers was closed. The resolution indicated that the desired functionality for adjusting log levels based on context data is already supported via `op-service` and its log handler methods. ([#15139](https://github.com/ethereum-optimism/docs/issues/15139))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:41.989Z"]
["ethereum-optimism/specs_day_2025-07-24", "ethereum-optimism/specs", "day", "2025-07-24", "# ethereum-optimism/specs Daily Update (Jul 24, 2025)\n## OVERVIEW \nThe day's development focused on minor bug fixes within the `specs` repository, specifically addressing JSON formatting and correcting internal documentation links.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Link Corrections\nSeveral internal links within the `specs/protocol/derivation.md` file were fixed to correctly reference glossary terms, improving navigation and accuracy within the documentation. ([#740](https://github.com/ethereum-optimism/specs/pull/740))\n\n### Configuration File Formatting Fixes\nA trailing comma in the `.markdownlint.json` configuration file was removed, resolving a JSON syntax error. ([#737](https://github.com/ethereum-optimism/specs/pull/737))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Flashblocks Monitoring and Alerting Improvements\nDiscussions on [#16388](https://github.com/ethereum-optimism/specs/issues/16388) continued, focusing on establishing comprehensive monitoring and alerting for flashblocks integration, particularly for op-sepolia. Key points from the latest comments include defining specific metrics and thresholds for alerts, such as minimum peer count (4), SLAs for block progression and divergence, and handling pending transactions (alert if exceeding ~60). There was also a focus on flashblocks-specific metrics like `reth_op_rbuilder_total_block_built_duration` (p99 over time interval) and monitoring `flashblocks-websocket-proxy` connections for failures and errors. Additionally, metrics for `flashblocks-rpc` node-reth related to upstream errors and message rates were discussed, along with inheriting most op-node alerts and metrics for `op-node-rbuilder`. An associated PR, https://github.com/ethereum-optimism/k8s/pull/7162, was linked.", "2025-09-04T03:28:42.233Z"]
["ethereum-optimism/superchain-ops_day_2025-07-24", "ethereum-optimism/superchain-ops", "day", "2025-07-24", "# ethereum-optimism/superchain-ops Daily Update (Jul 24, 2025)\n## OVERVIEW \nThe day focused on critical bug fixes within the `superchain-ops` repository, specifically addressing issues related to OPCM task support for multiple targets and the use of historical prestates for speedrun templates.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### OPCM Task Base Improvements\nBug fixes were implemented to enhance the `OPCMTaskBase` to support multiple OPCM targets, which is crucial for enabling speedrun templates from U13 to U16. This involved modifications to several OPCM template files.\n- [#1146](https://github.com/ethereum-optimism/superchain-ops/pull/1146)\n\n### Speedrun Prestate Management\nA bug fix was introduced to utilize historical prestates for speedruns, preventing creation collision errors that arise from using a single prestate for each upgrade. This change impacts the `OPCMUpgradeV200toV400.sol` template and related test configurations.\n- [#1147](https://github.com/ethereum-optimism/superchain-ops/pull/1147)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Flashblocks Monitoring and Alerting Improvements\nIssue [#16388](https://github.com/ethereum-optimism/superchain-ops/issues/16388) focuses on establishing monitoring and alerting for flashblocks, particularly as op-sepolia approaches flashblocks enablement. Recent discussions highlight key metrics and alerts needed:\n- **Peer Count & SLAs:** Minimum peer count of 4, with SLAs around block progression and divergence.\n- **Pending Transactions:** Alerts for spikes in pending transactions (e.g., beyond ~60), requiring verbose runbooks.\n- **Flashblocks-related SLA:** A p99 metric over a time interval for `reth_op_rbuilder_total_block_built_duration`.\n- **Flashblocks-websocket-proxy:** Monitoring for connection failures, errors, and the absence of metrics.\n- **Flashblocks-RPC Node-Reth:** Alerts for upstream errors (count below a number) and upstream messages (rate below a number) indicating issues with listening to the websocket proxy.\n- **op-node-rbuilder:** Inheriting most op-node alerts and metrics.\nAn associated PR, https://github.com/ethereum-optimism/k8s/pull/7162, was mentioned in relation to this issue.", "2025-09-04T03:28:42.735Z"]
["ethereum-optimism/infra_day_2025-07-25", "ethereum-optimism/infra", "day", "2025-07-25", "# ethereum-optimism/infra Daily Update (Jul 25, 2025)\n## OVERVIEW \nThe day's development focused on refining transaction handling within the `op-ufm` package, with a specific update to functionally ignore not found transactions. Additionally, two long-standing issues related to supervisor target resets and logger utility were closed, indicating progress in addressing technical debt. A new issue was opened concerning configurable test skips in `op-acceptor`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Transaction Handling Improvements:**\n    *   Implemented a change to functionally ignore \"not found\" transactions within the `op-ufm` package, specifically affecting `heartbeat.go` and `roundtrip.go`. ([#437](https://github.com/ethereum-optimism/infra/pull/437))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\n\n*   **Supervisor Target Reset Refinement:**\n    *   The issue concerning improving the `op-supervisor` and `op-node`'s reset unsafe target mechanism was closed. This issue aimed to enhance how the supervisor determines and requests reset targets from the node. ([#16314](https://github.com/ethereum-optimism/infra/issues/16314))\n*   **Logger Utility Enhancement:**\n    *   The issue related to creating a more reusable logger utility in `op-service` for changing sub-logger log levels was closed. This aimed to provide better control over log levels for different components. ([#15139](https://github.com/ethereum-optimism/infra/issues/15139))\n\n## NEW ISSUES\n\n*   **Configurable Test Skips:**\n    *   A new acceptance issue was opened to allow configurable skips in `op-acceptor`, addressing the current behavior where skipped tests are counted as failures. This aims to provide flexibility for users who prefer skips to remain as such. ([#434](https://github.com/ethereum-optimism/infra/issues/434))\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments on this day.", "2025-09-04T03:28:43.170Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-07-27", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-07-27", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jul 27, 2025)\n## OVERVIEW \nThe day's development activity for the `ethereum-optimism.github.io` repository was minimal, with no completed work. The primary activity involved the opening of a new pull request related to tBTC Sepolia.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n*   **Feature Development**\n    *   A new feature pull request, [#1179](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1179), titled \"Feat/tbtc sepolia,\" was opened. This PR likely introduces support or documentation related to tBTC on the Sepolia testnet.\n\n## CLOSED ISSUES\nNo issues were closed during this period.\n\n## NEW ISSUES\nNo new issues were opened during this period.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:28:44.550Z"]
["ethereum-optimism/superchain-ops_day_2025-07-25", "ethereum-optimism/superchain-ops", "day", "2025-07-25", "# ethereum-optimism/superchain-ops Daily Update (Jul 25, 2025)\n## OVERVIEW \nThe day's activities focused on updating the status of several U16 tasks to \"EXECUTED\" with corresponding Etherscan transaction hashes. Additionally, two long-standing issues related to supervisor target resets and logger utility were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### U16 Task Execution Updates\nThe status of U16 tasks 016-021 was updated from \"READY TO SIGN\" to \"EXECUTED\", confirming their successful on-chain completion. This involved updating relevant documentation files with the execution status and transaction hashes. ([#1148](https://github.com/ethereum-optimism/superchain-ops/pull/1148))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Supervisor Target Reset Improvements\nAn issue concerning improvements to the `op-supervisor` and `op-node`'s ability to reset unsafe targets was closed. The issue was partially addressed by a pull request in the `optimism` repository, and the decision was made to close it given recent project changes and upcoming refactoring. ([#16314](https://github.com/ethereum-optimism/superchain-ops/issues/16314))\n\n### Logger Utility Refinement\nA long-standing issue regarding a more reusable logger utility to change the log-level of sub-loggers was closed. The discussion concluded that the current approach of adjusting log levels based on context data within the log handler method is sufficient, and the existing `op-service` functionality supports this for devstack. ([#15139](https://github.com/ethereum-optimism/superchain-ops/issues/15139))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:44.947Z"]
["ethereum-optimism/superchain-registry_day_2025-07-25", "ethereum-optimism/superchain-registry", "day", "2025-07-25", "# ethereum-optimism/superchain-registry Daily Update (Jul 25, 2025)\n## OVERVIEW \nThe day's activity focused on updating standard versions for `op-contracts/v4.0.0` across mainnet and Sepolia. Additionally, two long-standing issues related to `op-supervisor` and `op-service` logging were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Standard Version Updates**: The `superchain-registry` was updated to include `op-contracts/v4.0.0` upgrade entries for both mainnet and Sepolia standard versions, ensuring compatibility and readiness for future deployments ([#1088](https://github.com/ethereum-optimism/superchain-registry/pull/1088)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Supervisor Target Improvement**: An issue concerning the improvement of `op-supervisor` and `op-node` reset unsafe targets was closed, with the rationale that recent project changes made it no longer necessary to track ([#16314](https://github.com/ethereum-optimism/superchain-registry/issues/16314)).\n*   **Logger Utility Refinement**: An issue seeking a more reusable logger utility in `op-service` for changing sub-logger log-levels was closed, as the functionality is now supported through existing mechanisms for adjusting log levels based on context data ([#15139](https://github.com/ethereum-optimism/superchain-registry/issues/15139)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were updated today.", "2025-09-04T03:28:45.009Z"]
["ethereum-optimism/optimism_day_2025-07-27", "ethereum-optimism/optimism", "day", "2025-07-27", "# ethereum-optimism/optimism Daily Update (Jul 27, 2025)\n## OVERVIEW \nNo development activity was recorded for the `ethereum-optimism/optimism` repository on July 27, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments were recorded for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were recorded.", "2025-09-04T03:28:45.554Z"]
["ethereum-optimism/superchain-ops_day_2025-07-27", "ethereum-optimism/superchain-ops", "day", "2025-07-27", "# ethereum-optimism/superchain-ops Daily Update (Jul 27, 2025)\n## OVERVIEW \nThe day's development focused on a crucial bug fix in `superchain-ops`, specifically addressing how configuration overrides are applied. This ensures that template developers can reliably assert on state overrides within the `_templateSetup` function, improving the robustness of development workflows.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Configuration Override Application Fix\nA bug fix was implemented to ensure that configuration overrides are applied earlier in the process. This allows developers to assert on these overrides within the `_templateSetup` function, which is critical for proper template development and validation. This change impacts the `MultisigTask.sol` file. ([#1151](https://github.com/ethereum-optimism/superchain-ops/pull/1151))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:46.341Z"]
["ethereum-optimism/op-geth_day_2025-07-27", "ethereum-optimism/op-geth", "day", "2025-07-27", "# ethereum-optimism/op-geth Daily Update (Jul 27, 2025)\n## OVERVIEW \nThe day saw minimal development activity with no new features, bug fixes, or code refactoring. A single issue, [#647](https://github.com/ethereum-optimism/op-geth/issues/647), was opened and immediately closed.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo significant technical developments occurred.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Issue Closure\nA single issue, [#647](https://github.com/ethereum-optimism/op-geth/issues/647), titled \"MiG\", was opened and closed on the same day. The issue body contained a template for feature rationale and implementation, with a note indicating willingness to implement.\n\n## NEW ISSUES\n### New Issue Creation\nA single new issue, [#647](https://github.com/ethereum-optimism/op-geth/issues/647), titled \"MiG\", was created. The issue's body included a standard template for feature requests, asking for rationale and implementation ideas.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:46.490Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-07-28", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-07-28", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe primary development on July 28, 2025, involved expanding the Superchain token list by adding the TOWNS token to both Base and Ethereum chains.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Token List Expansion\nThe Superchain token list was updated to include the TOWNS token, with its details and addresses for both Ethereum and Base chains. This enhancement supports cross-chain interoperability within the Superchain ecosystem. ([#1178](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1178))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Tracking Min Base Fee\nDiscussions continued on tracking the \"Min Base Fee\" ([#16807](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16807)). The latest comments highlight ongoing work and related pull requests, including a reth draft for early review and other in-flight work related to `op-alloy` and `optimism` repositories.", "2025-09-04T03:28:47.243Z"]
["ethereum-optimism/design-docs_day_2025-07-28", "ethereum-optimism/design-docs", "day", "2025-07-28", "# ethereum-optimism/design-docs Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe day saw the opening of a new pull request for revenue sharing design and a new issue for congestion-based builder transaction reordering. Discussions continued on the active \"Min Base Fee\" tracking issue, with updates on related in-flight work.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#309](https://github.com/ethereum-optimism/design-docs/pull/309), was opened to propose a design for revenue sharing.\n\n## CLOSED ISSUES\n\nNo issues were closed on this date.\n\n## NEW ISSUES\n\n### Congestion-Based Transaction Reordering\nA new issue, [#306](https://github.com/ethereum-optimism/design-docs/issues/306), was opened to request a design document on congestion-based builder transaction reordering. The idea involves tracking excess DA usage over time with an exponential cost/score penalty, potentially implemented outside the protocol to test the concept for L1 congestion cost.\n\n## ACTIVE ISSUES\n\n### Min Base Fee Tracking\nDiscussions continued on the tracking issue for \"Min Base Fee,\" [#16807](https://github.com/ethereum-optimism/design-docs/issues/16807). The latest comments highlight ongoing related work, including a reth draft ([https://github.com/paradigmxyz/reth/pull/17704](https://github.com/paradigmxyz/reth/pull/17704)) and other in-flight work ([https://github.com/alloy-rs/op-alloy/pull/580](https://github.com/alloy-rs/op-alloy/pull/580), [https://github.com/ethereum-optimism/optimism/pull/16852](https://github.com/ethereum-optimism/optimism/pull/16852)).", "2025-09-04T03:28:47.746Z"]
["ethereum-optimism/infra_day_2025-07-28", "ethereum-optimism/infra", "day", "2025-07-28", "# ethereum-optimism/infra Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe day saw significant enhancements to the `op-acceptor` tool, primarily focusing on improving test execution flexibility and performance. Key updates include the ability to allow test skips and the introduction of parallel testing capabilities, leading to the closure of two related issues.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Test Execution Flexibility\nThe `op-acceptor` tool now offers greater flexibility in handling test skips. A new flag allows users to optionally disable the conversion of test skips into failures, addressing a previously identified need for configurable skip behavior. ([#435](https://github.com/ethereum-optimism/infra/pull/435))\n\n### Improved Test Performance with Parallel Execution\nA major feature addition to `op-acceptor` is the ability to run multiple test packages concurrently. This new default behavior automatically determines the concurrency factor based on system cores, significantly improving testing efficiency. ([#438](https://github.com/ethereum-optimism/infra/pull/438))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `op-acceptor` Test Behavior Configuration\nTwo issues related to `op-acceptor`'s test behavior have been closed. This includes the implementation of a feature to allow test skips to be treated as skips rather than failures ([#434](https://github.com/ethereum-optimism/infra/issues/434)) and the introduction of parallel test execution for improved performance ([#184](https://github.com/ethereum-optimism/infra/issues/184)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Tracking Min Base Fee\nDiscussions continue on the `[Tracking] Min Base Fee` issue ([#16807](https://github.com/ethereum-optimism/infra/issues/16807)). The latest comments highlight ongoing related work, including a reth draft for early review and other in-flight pull requests in `op-alloy` and `optimism` that are relevant to the minimum base fee implementation.", "2025-09-04T03:28:48.252Z"]
["ethereum-optimism/op-analytics_day_2025-07-28", "ethereum-optimism/op-analytics", "day", "2025-07-28", "# ethereum-optimism/op-analytics Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe day's development focused on enhancing data ingestion capabilities within `op-analytics`, specifically by integrating a new process to pull top EVM contracts from Dune, improving the system's ability to access and utilize external data sources.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Data Ingestion Enhancements\nA new feature was introduced to pull top EVM contracts from Dune, improving data ingestion capabilities. This involved updates to the `Makefile`, new notebook for ad-hoc analysis, and modifications to the `dune.py` and `dataaccess.py` files to support this new data source. ([#1711](https://github.com/ethereum-optimism/op-analytics/pull/1711))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n\n### Tracking Min Base Fee\nDiscussions on [#16807](https://github.com/ethereum-optimism/op-analytics/issues/16807) continue to track the \"Min Base Fee\" initiative, referencing the ratified design document. Recent comments highlight ongoing related work, including a reth draft ([https://github.com/paradigmxyz/reth/pull/17704](https://github.com/paradigmxyz/reth/pull/17704)), and other in-flight work such as `alloy-rs/op-alloy` ([https://github.com/alloy-rs/op-alloy/pull/580](https://github.com/alloy-rs/op-alloy/pull/580)) and `ethereum-optimism/optimism` ([https://github.com/ethereum-optimism/optimism/pull/16852](https://github.com/ethereum-optimism/optimism/pull/16852)).", "2025-09-04T03:28:48.760Z"]
["ethereum-optimism/superchain-registry_day_2025-07-28", "ethereum-optimism/superchain-registry", "day", "2025-07-28", "# ethereum-optimism/superchain-registry Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe day's development focused on a minor bug fix within the `superchain-registry` by correcting a comment error in configuration files.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Bug Fixes\n*   A comment error was fixed in `validation/standard/standard-config-params-mainnet.toml` and `validation/standard/standard-config-params-sepolia.toml` ([#1089](https://github.com/ethereum-optimism/superchain-registry/pull/1089)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n\n### Tracking Min Base Fee\nDiscussion on tracking the \"Min Base Fee\" ([#16807](https://github.com/ethereum-optimism/superchain-registry/issues/16807)) continued, with `wlawt` providing updates on related in-flight work, including pull requests in `op-alloy` and `optimism`, and an early reth draft for review.", "2025-09-04T03:28:49.719Z"]
["ethereum-optimism/superchain-ops_day_2025-07-28", "ethereum-optimism/superchain-ops", "day", "2025-07-28", "# ethereum-optimism/superchain-ops Daily Update (Jul 28, 2025)\n## OVERVIEW \nThe day focused on code refactoring to simplify the `MultisigTask` and significant updates to security council rehearsal documentation and playbooks, including the addition of a new rehearsal playbook.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Codebase Refinements\nA significant refactoring effort was completed to simplify the `MultisigTask` by removing the `root address` state variable, aiming to reduce complexity and improve code readability. ([#1149](https://github.com/ethereum-optimism/superchain-ops/pull/1149))\n\n### Security Council Rehearsal Updates\nNew playbooks and documentation updates were implemented for the Security Council rehearsals. This includes the addition of a playbook for the \"Remove Signer\" rehearsal for Cohort B 2025 and small updates to existing rehearsal documentation based on recent executions. ([#1153](https://github.com/ethereum-optimism/superchain-ops/pull/1153), [#1154](https://github.com/ethereum-optimism/superchain-ops/pull/1154))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Tracking Min Base Fee\nDiscussion continues on the \"[Tracking] Min Base Fee\" issue ([#16807](https://github.com/ethereum-optimism/superchain-ops/issues/16807)). The latest comments highlight ongoing work related to this feature, including a reth draft for early review and other in-flight work in `op-alloy` and the main `optimism` repository.", "2025-09-04T03:28:49.950Z"]
["ethereum-optimism/docs_day_2025-07-28", "ethereum-optimism/docs", "day", "2025-07-28", "# ethereum-optimism/docs Daily Update (Jul 28, 2025)\n\n## OVERVIEW \nThe day's activity focused on administrative tasks, specifically closing out several metrics reports and an audit-related issue. No new features, bug fixes, or code refactoring were completed.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Monthly Metrics Reporting\nThree issues related to monthly metrics reports for June 2025 were closed. These reports track various statistics such as time to first response, time to close, and time to answer for both opened pull requests and closed issues within the repository.\n- [#1682](https://github.com/ethereum-optimism/docs/issues/1682)\n- [#1681](https://github.com/ethereum-optimism/docs/issues/1681)\n\n### 2024 Q4 Audit Tracking\nAn issue tracking a specific page path audit from Q4 2024 was closed. This issue likely pertained to a review of documentation content.\n- [#1701](https://github.com/ethereum-optimism/docs/issues/1701)\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Tracking Min Base Fee Implementation\nDiscussion continues on [#16807](https://github.com/ethereum-optimism/docs/issues/16807), which tracks the implementation of the Min Base Fee based on a ratified design document. The latest comments highlight ongoing work in related repositories, including a reth draft and pull requests in `op-alloy` and `optimism`, indicating active development and coordination across different components of the Optimism ecosystem.", "2025-09-04T03:28:51.047Z"]
["ethereum-optimism/community-hub_day_2025-07-29", "ethereum-optimism/community-hub", "day", "2025-07-29", "# ethereum-optimism/community-hub Daily Update (Jul 29, 2025)\n## OVERVIEW \nThe day's activity for the `community-hub` repository was minimal, with no completed work. A new pull request was opened for typo corrections, and an active issue regarding congestion-based builder transaction reordering received a new comment.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo key technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1172](https://github.com/ethereum-optimism/community-hub/pull/1172), was opened to address typo corrections within the repository.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Congestion-based Builder Transaction Reordering\nIssue [#306](https://github.com/ethereum-optimism/community-hub/issues/306), which focuses on designing a congestion-based builder transaction reordering mechanism, received a new comment from `moonfury-ops`. The comment, posted at 2025-07-29T20:33:56Z, expresses interest in collaborating on the issue. The issue's body outlines the idea of tracking excess DA usage over time with an exponential cost/score penalty, suggesting it could be implemented outside the protocol to test the concept for an L1 congestion cost component.", "2025-09-04T03:28:51.572Z"]
["ethereum-optimism/docs_day_2025-07-29", "ethereum-optimism/docs", "day", "2025-07-29", "# ethereum-optimism/docs Daily Update (Jul 29, 2025)\n## OVERVIEW \nThe day saw no new code contributions, bug fixes, or documentation enhancements. The primary activity involved a new comment on an existing issue related to congestion-based builder transaction reordering.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments or completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Congestion-based Builder Transaction Reordering Discussion\nThe discussion on issue [#306](https://github.com/ethereum-optimism/docs/issues/306), concerning congestion-based builder transaction reordering, saw a new comment from @moonfury-ops. The comment, posted at 2025-07-29T20:33:56Z, expressed interest in collaborating on the issue with @sebastianst. This issue proposes designing a system to track data availability usage excess over time, applying an exponential cost/score penalty, and suggests that this could be implemented outside the protocol to test the idea for an L1 congestion cost component.", "2025-09-04T03:28:52.029Z"]
["ethereum-optimism/design-docs_day_2025-07-29", "ethereum-optimism/design-docs", "day", "2025-07-29", "# ethereum-optimism/design-docs Daily Update (Jul 29, 2025)\n## OVERVIEW \nThe day's activity primarily involved the creation of a new issue concerning a failure modes analysis for `min-base-fee` and a new comment on an active issue related to congestion-based builder transaction reordering.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Risk Analysis and Documentation\nA new issue was opened to conduct a Failure Modes Analysis for `min-base-fee`. This analysis is crucial for understanding potential risks and ensuring the robustness of the system. Alternative risk modeling is acceptable, and coordination with @mds1 is advised for the latest guidance. This work is linked to a previous pull request and an overarching tracking ticket.\n- [#311](https://github.com/ethereum-optimism/design-docs/issues/311) min-base-fee: conduct Failure Modes Analysis\n\n## ACTIVE ISSUES\n### Congestion-based Builder Transaction Reordering\nDiscussion continued on the issue concerning congestion-based builder transaction reordering. A new comment from `moonfury-ops` expressed interest in collaborating with `sebastianst` on this design document. The issue aims to explore tracking DA usage excess over time with an exponential cost/score penalty as a potential mechanism, which could be implemented outside the protocol to test the idea for an L1 congestion cost component.\n- [#306](https://github.com/ethereum-optimism/design-docs/issues/306) Congestion-based builder transaction reordering", "2025-09-04T03:28:52.325Z"]
["ethereum-optimism/infra_day_2025-07-29", "ethereum-optimism/infra", "day", "2025-07-29", "# ethereum-optimism/infra Daily Update (Jul 29, 2025)\n## OVERVIEW \nThe day saw no new code contributions, features, or bug fixes. The primary activity involved a new comment on an existing issue related to congestion-based builder transaction reordering.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were observed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Congestion-based Builder Transaction Reordering\nDiscussion continued on [#306](https://github.com/ethereum-optimism/infra/issues/306), which proposes designing a system for congestion-based builder transaction reordering. The latest comment from moonfury-ops at 20:33:56Z expressed interest in collaborating on the issue with @sebastianst. The issue aims to track data availability usage excess over time and apply an exponential cost/score penalty, potentially as an external implementation to test the idea for an L1 congestion cost component.", "2025-09-04T03:28:53.175Z"]
["ethereum-optimism/ecosystem_day_2025-07-29", "ethereum-optimism/ecosystem", "day", "2025-07-29", "# ethereum-optimism/ecosystem Daily Update (Jul 29, 2025)\n## OVERVIEW \nThe primary focus for the day was the addition of a new feature: an RCT demo page within the Superchain Playground, involving significant updates across various application and utility packages.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Playground Enhancements\nA new RCT demo page was introduced to the Superchain Playground application. This feature involved extensive modifications to the application's routing, providers, and numerous components related to Uniswap actions, token handling, and chain interactions. This enhancement aims to improve developer experience and demonstrate cross-chain interoperability within the Superchain. ([#919](https://github.com/ethereum-optimism/ecosystem/pull/919))\n\n### Viem and Utility Package Updates\nSupporting the Superchain Playground enhancements, significant changes were made to the `viem` and `utils-app` packages. These updates include new ABIs, address sets, and chain configurations, particularly for `interopAlpha` and `supersim` chains, facilitating the new demo page's functionality. ([#919](https://github.com/ethereum-optimism/ecosystem/pull/919))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Congestion-based builder transaction reordering\nDiscussion continued on issue [#306](https://github.com/ethereum-optimism/ecosystem/issues/306), which proposes writing a design document for congestion-based builder transaction reordering. The core idea involves tracking excess DA usage over time and applying an exponential cost/score penalty. A recent comment from `moonfury-ops` at 2025-07-29T20:33:56Z expressed interest in collaborating on this topic. This issue explores potential mechanisms for managing network congestion, which could be implemented outside the core protocol as a test for a future L1 congestion cost component.", "2025-09-04T03:28:53.871Z"]
["ethereum-optimism/op-analytics_day_2025-07-29", "ethereum-optimism/op-analytics", "day", "2025-07-29", "# ethereum-optimism/op-analytics Daily Update (Jul 29, 2025)\n## OVERVIEW \nThe day's activity focused on maintenance within the `op-analytics` repository, specifically updating the Dune Top Contracts. This involved modifications to the `Makefile`, a notebook, and Python source files related to Dune data.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Dune Data Management\nAn update was implemented for the Dune Top Contracts, involving changes across several files to ensure the data remains current and accurate. This work included modifications to the `Makefile`, a Jupyter notebook, and Python scripts responsible for handling Dune data. ([#1712](https://github.com/ethereum-optimism/op-analytics/pull/1712))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Congestion-based Builder Transaction Reordering\nDiscussion continued on the design for congestion-based builder transaction reordering ([#306](https://github.com/ethereum-optimism/op-analytics/issues/306)). The latest comment from `moonfury-ops` at 2025-07-29T20:33:56Z expressed interest in collaborating on this issue. The issue's description outlines the need for a design document to explore tracking DA usage excess over time with an exponential cost/score penalty, noting that this concept could be implemented outside the protocol to test ideas for an L1 congestion cost component.", "2025-09-04T03:28:53.906Z"]
["ethereum-optimism/superchain-registry_day_2025-07-29", "ethereum-optimism/superchain-registry", "day", "2025-07-29", "# ethereum-optimism/superchain-registry Daily Update (Jul 29, 2025)\n## OVERVIEW \nThe day saw no new code contributions, features, or bug fixes. The primary activity involved a community member expressing interest in collaborating on an existing active issue.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were created today.\n\n## ACTIVE ISSUES\n### Congestion-based Builder Transaction Reordering\nDiscussion on [#306](https://github.com/ethereum-optimism/superchain-registry/issues/306) continued with a new comment from `moonfury-ops` at 20:33:56Z, expressing interest in collaborating on the issue with `sebastianst`. The issue proposes writing a design document for congestion-based builder transaction reordering, suggesting tracking DA usage excess over time with an exponential cost/score penalty. This concept could be implemented outside the protocol to test its viability for an L1 congestion cost component.", "2025-09-04T03:28:55.078Z"]
["ethereum-optimism/infra_day_2025-07-30", "ethereum-optimism/infra", "day", "2025-07-30", "# ethereum-optimism/infra Daily Update (Jul 30, 2025)\n## OVERVIEW \nToday's development focused on enhancing Proxyd's configurability, specifically allowing backend response timeouts to be set in milliseconds and per backend. A new issue was opened to port TestFjord to Devstack for improved testing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Proxyd Configuration Enhancements\nA significant update was made to Proxyd, enabling more granular control over backend response timeouts. This allows timeouts to be specified in milliseconds and configured individually for each backend, addressing the need for faster RPC calls in rollups. ([#436](https://github.com/ethereum-optimism/infra/pull/436))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Devstack Integration for TestFjord\nA new acceptance issue was opened to port TestFjord (holocene gate) to Devstack. This is crucial for running it in sysgo and persistent devnets, enhancing testing capabilities. ([#440](https://github.com/ethereum-optimism/infra/issues/440))\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:55.632Z"]
["ethereum-optimism/specs_day_2025-07-29", "ethereum-optimism/specs", "day", "2025-07-29", "# ethereum-optimism/specs Daily Update (Jul 29, 2025)\n## OVERVIEW \nToday's development focused on refining documentation and specifications, including critical bug fixes for broken links and typos, clarifying API specifications, and general repository maintenance.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation and Specification Refinements\nSeveral updates were made to improve the accuracy and clarity of the project's documentation and specifications. This included fixing a broken link to the EAS.sol repository in the predeploys documentation ([#716](https://github.com/ethereum-optimism/specs/pull/716)), correcting a typo in `sequencer.md` ([#721](https://github.com/ethereum-optimism/specs/pull/721)), and adding an article to `alt-da.md` with minor grammatical corrections ([#704](https://github.com/ethereum-optimism/specs/pull/704)).\n\n### API Specification Clarifications\nThe Supervisor API specification was updated to clarify the representation of null or non-existent block references in `syncStatus` method responses, ensuring more robust API interactions ([#739](https://github.ethereum-optimism/specs/pull/739)).\n\n### Repository Maintenance and Cleanup\nGeneral maintenance tasks included adding a standardized legal footer to the documentation site ([#595](https://github.com/ethereum-optimism/specs/pull/595)), removing the custom gas token feature from the spec as it is no longer being pursued ([#689](https://github.com/ethereum-optimism/specs/pull/689)), and removing the `CODEOWNERS` file to streamline the review process based on team feedback ([#743](https://github.com/ethereum-optimism/specs/pull/743)).\n\n## NEWLY OPENED PULL REQUESTS\nNone.\n\n## CLOSED ISSUES\nNone.\n\n## NEW ISSUES\nNone.\n\n## ACTIVE ISSUES\n### Congestion-based builder transaction reordering\nIssue [#306](https://github.com/ethereum-optimism/specs/issues/306) discusses the need for a design document on congestion-based builder transaction reordering. The latest comment from moonfury-ops at 2025-07-29T20:33:56Z indicates an interest in collaborating on this task, asking for an opportunity to work with the issue creator. This suggests potential progress on defining a mechanism to track and penalize excessive Data Availability (DA) usage, possibly as an external protocol component to test ideas for L1 congestion cost.", "2025-09-04T03:28:55.651Z"]
["ethereum-optimism/op-analytics_day_2025-07-30", "ethereum-optimism/op-analytics", "day", "2025-07-30", "# ethereum-optimism/op-analytics Daily Update (Jul 30, 2025)\n## OVERVIEW \nThe day's activity in op-analytics focused on updates to ad-hoc notebooks, specifically modifying existing files related to daily aggregated traces and transactions.\n## KEY TECHNICAL DEVELOPMENTS\n\n### Notebook Updates\n- Modified existing notebooks for daily aggregated traces and transactions. ([#1713](https://github.com/ethereum-optimism/op-analytics/pull/1713))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:56.006Z"]
["ethereum-optimism/specs_day_2025-07-30", "ethereum-optimism/specs", "day", "2025-07-30", "# ethereum-optimism/specs Daily Update (Jul 30, 2025)\n## OVERVIEW \nThe day's development focused on clarifying safety level terminology within the interop specifications, specifically aligning `unsafe` with `local-unsafe` to improve consistency.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Interoperability Specification Refinement\nA key update was made to the `specs/interop/supervisor.md` file to clarify the `SafetyLevel` terminology. This change explicitly mentions that the `unsafe` safety level matches `local-unsafe`, addressing a previous inconsistency between specifications and implementation. This enhancement improves the clarity and accuracy of the interoperability specifications. ([#722](https://github.com/ethereum-optimism/specs/pull/722))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### RPC and Safety Level Terminology Alignment\nTwo issues related to RPC specifications and safety level terminology were closed today. Issue [#714](https://github.com/ethereum-optimism/specs/issues/714) concerned the `interop_ready` RPC, while issue [#717](https://github.com/ethereum-optimism/specs/issues/717) addressed the inconsistency between `Unsafe` in specs and `LocalUnsafe` in implementation, and `Safe` in specs versus `CrossSafe` in implementation. Both issues were resolved, contributing to improved clarity and consistency in the specifications.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:57.010Z"]
["ethereum-optimism/superchain-ops_day_2025-07-30", "ethereum-optimism/superchain-ops", "day", "2025-07-30", "# ethereum-optimism/superchain-ops Daily Update (Jul 30, 2025)\n## OVERVIEW \nThe day's development focused on preparing for future SuperchainConfig updates, specifically by adding a new template to unpause the SuperchainConfig after the U16 upgrade. This enhancement streamlines future operational tasks related to Superchain configuration.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Configuration Template Updates\nA new template was added to facilitate the unpausing of the SuperchainConfig, specifically tailored for changes required after the U16 upgrade. This update includes modifications to `MultisigTask.sol` and introduces new template files for unpausing the SuperchainConfig. ([#1137](https://github.com/ethereum-optimism/superchain-ops/pull/1137))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo issues are currently active with more than 3 comments.", "2025-09-04T03:28:57.068Z"]
["ethereum-optimism/superchain-registry_day_2025-07-30", "ethereum-optimism/superchain-registry", "day", "2025-07-30", "# ethereum-optimism/superchain-registry Daily Update (Jul 30, 2025)\n## OVERVIEW \nThe day's activity for the `superchain-registry` repository was minimal, with the primary development being the initiation of a new pull request to add a mainnet chain.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n*   **New Chain Addition:** A new pull request, [#1091](https://github.com/ethereum-optimism/superchain-registry/pull/1091), was opened to add the \"Silent Data mainnet chain\" to the registry. This PR is currently open and awaiting review.\n\n## CLOSED ISSUES\nNo closed issues to report for this period.\n\n## NEW ISSUES\nNo new issues to report for this period.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:28:57.215Z"]
["ethereum-optimism/optimism_day_2025-07-30", "ethereum-optimism/optimism", "day", "2025-07-30", "# ethereum-optimism/optimism Daily Update (Jul 30, 2025)\n## OVERVIEW \nThe day's activity was light, with no completed work, new pull requests, or closed issues. The primary development involved the creation of a new issue focused on scaling the Cannon VM runner for fault proof programs.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Fault Proof System Enhancements\nA new issue, [#16910](https://github.com/ethereum-optimism/optimism/issues/16910), was opened to address the scaling of the Cannon VM runner. The goal is to increase the coverage of mainnet blocks by the `op-challenger-runner`, which continuously runs Cannon and fault proof programs. The issue highlights that the current single-threaded nature of the fault proof program limits capacity, suggesting a need for improvements to handle more extensive testing and verification.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:28:57.648Z"]
["ethereum-optimism/design-docs_day_2025-07-31", "ethereum-optimism/design-docs", "day", "2025-07-31", "# ethereum-optimism/design-docs Daily Update (Jul 31, 2025)\n## OVERVIEW \nThe day saw the initiation of a new design document for L1 congestion fees and the resolution of a long-standing issue regarding L2 testnet tutorial clarifications.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work was reported for the day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#312](https://github.com/ethereum-optimism/design-docs/pull/312), was opened to add the initial draft of the L1 congestion fee design document.\n\n## CLOSED ISSUES\n\n### Documentation Clarification\nIssue [#1401](https://github.com/ethereum-optimism/design-docs/issues/1401), concerning clarification needed on the L1 contract deployment documentation within the L2 Testnet Tutorial, was closed.\n\n## NEW ISSUES\n\nNo new issues were reported for the day.\n\n## ACTIVE ISSUES\n\n### L2 Testnet Tutorial Clarification\nIssue [#1401](https://github.com/ethereum-optimism/design-docs/issues/1401) was closed today. The latest comment from @krofax apologized for the delay and stated that the relevant documentation has been updated, inviting users to raise the issue again if further blockers are encountered. Previous discussions highlighted confusion regarding the recommended deployment tools and the need for streamlined documentation.", "2025-09-04T03:28:58.107Z"]
["ethereum-optimism/docs_day_2025-07-31", "ethereum-optimism/docs", "day", "2025-07-31", "# ethereum-optimism/docs Daily Update (Jul 31, 2025)\n## OVERVIEW \nThe day's activity focused on resolving a long-standing documentation clarity issue regarding L1 contract deployment in the L2 Testnet Tutorial.\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n## CLOSED ISSUES\n### Documentation Clarification\nA long-standing issue regarding the clarity of the L1 contract deployment documentation in the L2 Testnet Tutorial was closed. The issue, [#1401](https://github.com/ethereum-optimism/docs/issues/1401), highlighted confusion around using `op-deployer` versus script-based deployment. The resolution indicates that the relevant documentation has been updated.\n## NEW ISSUES\nNo new issues were reported.\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:28:58.371Z"]
["ethereum-optimism/design-docs_day_2025-08-01", "ethereum-optimism/design-docs", "day", "2025-08-01", "# ethereum-optimism/design-docs Daily Update (Aug 1, 2025)\n## OVERVIEW \nThe day's development focused on refining the operator fee formula with a new scalar fix. A new pull request was opened to address custom gas token migration. Discussions continued on tracking the Min Base Fee and estimating state growth for a related feature.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Fee Formula Refinement\nA new feature was added to fix the operator fee scalar, refining the `operatorFee` calculation within the protocol. This update introduces a more precise formula for operator fees. ([#299](https://github.com/ethereum-optimism/design-docs/pull/299))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#313](https://github.com/ethereum-optimism/design-docs/pull/313), was opened to add custom gas token migration functionality.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were opened on this date.\n\n## ACTIVE ISSUES\n\n### Min Base Fee Tracking and Specification\nDiscussions continued on tracking the Min Base Fee ([#16807](https://github.com/ethereum-optimism/design-docs/issues/16807)). The latest comment from wlawt on August 1st, 2025, shared an early reth draft ([https://github.com/paradigmxyz/reth/pull/17704](https://github.com/paradigmxyz/reth/pull/17704)) to gather early feedback and insights. Previous comments from July 28th, 2025, also by wlawt, highlighted other related in-flight work, including updates to op-alloy and optimism repositories.\n\n### Min Base Fee Specification and State Growth Estimation\nThe issue concerning the specification of the min-base-fee ([#742](https://github.com/ethereum-optimism/design-docs/issues/742)) saw a new comment from geoknee on August 1st, 2025. This comment emphasized the need to compute a rough estimate for the state growth implied by this feature, suggesting its inclusion in the motivation section of the specifications. This estimation is now being tracked separately in [#316](https://github.com/ethereum-optimism/design-docs/issues/316).", "2025-09-04T03:29:00.678Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-01", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-01", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 1, 2025)\n## OVERVIEW \nThe day's activity primarily involved the opening of a new pull request to add a token to the list. Discussions continued on active issues related to the Min Base Fee specification and its implications.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo key technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request was opened to add the PEPE Community (PEPE) token to the token list. This is a straightforward addition to the repository's data.\n- [#1180](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1180) Add PEPE Community (PEPE) token to token list\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\nDiscussions continued on the \"Min Base Fee\" tracking issue, with a focus on ongoing development and specification.\n- **Min Base Fee Tracking and Specification**\n    - On [#16807](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16807), `wlawt` provided an update on an early reth draft related to the Min Base Fee, aiming for earlier feedback and broader review. This indicates active development and coordination across different repositories for this feature.\n    - On [#742](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/742), `geoknee` commented on the need to compute a rough estimate for the state growth implied by the Min Base Fee feature. This estimate is intended for inclusion in the motivation section of the specifications, highlighting a focus on understanding the practical implications and documenting them thoroughly.", "2025-09-04T03:29:00.887Z"]
["ethereum-optimism/docs_day_2025-08-01", "ethereum-optimism/docs", "day", "2025-08-01", "# ethereum-optimism/docs Daily Update (Aug 1, 2025)\n## OVERVIEW \nToday's development focused on a critical bug fix in the `spin-batcher` documentation, correcting a broken link to the sequencer guide. Additionally, new issues were opened to track monthly metrics reports and to begin documenting the `MinBaseFee` feature, indicating upcoming documentation efforts.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Bug Fixes\nA bug fix was implemented to correct a broken link within the `spin-batcher` documentation, specifically addressing the link to the sequencer guide. This ensures users can correctly navigate to relevant information. ([#1709](https://github.com/ethereum-optimism/docs/pull/1709))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Monthly Metrics Reporting\nTwo new issues were created to track the monthly metrics reports for July 2025. These include a report for closed issues ([#1707](https://github.com/ethereum-optimism/docs/issues/1707)) and another for opened pull requests ([#1708](https://github.com/ethereum-optimism/docs/issues/1708)).\n\n### MinBaseFee Feature Documentation\nA new issue was opened to begin the documentation process for the `MinBaseFee` feature ([#1710](https://github.com/ethereum-optimism/docs/issues/1710)). This indicates an upcoming focus on documenting this new functionality.\n\n## ACTIVE ISSUES\n\n### Min Base Fee Tracking and Specification\nDiscussions continued on the `MinBaseFee` feature, with updates on related in-flight work across different repositories. A new comment highlighted an early reth draft, emphasizing the need for early decisions and broader review. Additionally, a discussion point was raised regarding computing a rough estimate for state growth implied by this feature, which was later decided to be tracked in a separate design document issue. ([#16807](https://github.com/ethereum-optimism/docs/issues/16807), [#742](https://github.com/ethereum-optimism/docs/issues/742))", "2025-09-04T03:29:01.218Z"]
["ethereum-optimism/infra_day_2025-08-01", "ethereum-optimism/infra", "day", "2025-08-01", "# ethereum-optimism/infra Daily Update (Aug 1, 2025)\n## OVERVIEW \nThe day's development focused on stability improvements, specifically addressing a flaky test in the `op-acceptor` component to enhance reliability.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### `op-acceptor` Stability Improvements\nA flaky test within the `op-acceptor` component was identified and fixed, improving the reliability of the test suite and the stability of the `op-acceptor/runner` module. ([#439](https://github.com/ethereum-optimism/infra/pull/439))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Tracking Min Base Fee Implementation\nDiscussion continued on the `Min Base Fee` tracking issue [#16807](https://github.com/ethereum-optimism/infra/issues/16807). The latest comment from `wlawt` on August 1, 2025, at 15:46:47Z, shared an early reth draft (https://github.com/paradigmxyz/reth/pull/17704) for early review and decision-making. This follows a previous update from `wlawt` on July 28, 2025, at 16:19:48Z, which listed other related in-flight work, including https://github.com/alloy-rs/op-alloy/pull/580 and https://github.com/ethereum-optimism/optimism/pull/16852.\n\n### Min-Base-Fee Specification Development\nOn issue [#742](https://github.com/ethereum-optimism/infra/issues/742), which tracks the specification for the `min-base-fee`, `geoknee` commented on August 1, 2025, at 21:26:38Z, stating the need to compute a rough estimate for the state growth implied by this feature. This estimate is intended for inclusion in the motivation section of the specifications.", "2025-09-04T03:29:01.464Z"]
["ethereum-optimism/op-analytics_day_2025-08-02", "ethereum-optimism/op-analytics", "day", "2025-08-02", "# ethereum-optimism/op-analytics Daily Update (Aug 2, 2025)\n## OVERVIEW \nThe day's development focused on refining data processing by adding Celo and Ethereum to an exclusion list for model publishing.\n\n## KEY TECHNICAL DEVELOPMENTS\n### Data Pipeline Refinements\nAn exclusion list was implemented to prevent Celo and Ethereum data from being published by certain models, as they are not yet ready for this process ([#1716](https://github.com/ethereum-optimism/op-analytics/pull/1716)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments.", "2025-09-04T03:29:02.795Z"]
["ethereum-optimism/specs_day_2025-08-01", "ethereum-optimism/specs", "day", "2025-08-01", "# ethereum-optimism/specs Daily Update (Aug 1, 2025)\n## OVERVIEW \nThe day's development focused on refining the fault-proof specifications, specifically making small cleanups to the Optimism Portal documentation. Discussions continued on the Min Base Fee tracking issue, with new related work being noted.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Fault Proof System Refinements\nSmall improvements were made to the Optimism Portal specifications, ensuring that details present in the code are accurately reflected in the documentation. This enhances the clarity and completeness of the fault-proof system's description. ([#745](https://github.com/ethereum-optimism/specs/pull/745))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Min Base Fee Tracking and Specification\nDiscussions on the Min Base Fee tracking issue ([#16807](https://github.com/ethereum-optimism/specs/issues/16807)) continued, with wlawt sharing an early reth draft ([https://github.com/paradigmxyz/reth/pull/17704](https://github.com/paradigmxyz/reth/pull/17704)) for early feedback. wlawt also highlighted other related in-flight work, including op-alloy ([https://github.com/alloy-rs/op-alloy/pull/580](https://github.com/alloy-rs/op-alloy/pull/580)) and optimism ([https://github.com/ethereum-optimism/optimism/pull/16852](https://github.com/ethereum-optimism/optimism/pull/16852)) repositories.\n\nOn the related issue to write the min-base-fee specification ([#742](https://github.com/ethereum-optimism/specs/issues/742)), geoknee commented on the need to compute a rough estimate for the state growth implied by this feature, suggesting its inclusion in the motivation section of the specs. This estimate was later decided to be better placed in the FMA, with tracking noted in a design-docs issue ([https://github.com/ethereum-optimism/design-docs/issues/316](https://github.com/ethereum-optimism/design-docs/issues/316)).", "2025-09-04T03:29:03.494Z"]
["ethereum-optimism/Retro-Funding_day_2025-08-03", "ethereum-optimism/Retro-Funding", "day", "2025-08-03", "# ethereum-optimism/Retro-Funding Daily Update (Aug 3, 2025)\n## OVERVIEW \nThe Retro-Funding repository had no development activity on August 3, 2025. No new features were added, bugs fixed, code refactored, documentation enhanced, or tests added.\n## KEY TECHNICAL DEVELOPMENTS\nNo technical developments occurred on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo issues had activity with more than 3 comments.", "2025-09-04T03:29:03.857Z"]
["ethereum-optimism/infra_day_2025-08-03", "ethereum-optimism/infra", "day", "2025-08-03", "# ethereum-optimism/infra Daily Update (Aug 3, 2025)\n## OVERVIEW \nThe day's activity focused on initiating new development, with a significant new pull request opened to introduce a GitHub event manager.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n*   **New Tooling for GitHub Event Management**\n    A new pull request, [#441](https://github.com/ethereum-optimism/infra/pull/441), was opened to introduce an open-source GitHub event manager. This new tool aims to streamline the handling of GitHub events within the infrastructure.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments to report.", "2025-09-04T03:29:04.692Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-03", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-03", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 3, 2025)\n## OVERVIEW \nThe day's development focused on a new pull request to add the PepeCommunity (PEPE) token for the Ethereum to Base bridge, indicating ongoing efforts to expand token support.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- **Token Bridge Expansion**: A new pull request, [#1181](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1181), was opened to add the PepeCommunity (PEPE) token for the Ethereum to Base bridge.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-09-04T03:29:04.757Z"]
["ethereum-optimism/optimism_day_2025-08-03", "ethereum-optimism/optimism", "day", "2025-08-03", "# ethereum-optimism/optimism Daily Update (Aug 3, 2025)\n## OVERVIEW \nThe day's activity focused on a single new pull request aimed at refining L1 validator wallet generation. No other development work, bug fixes, or documentation enhancements were completed.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n*   **L1 Validator Wallet Generation Improvement:** A new pull request, [#16953](https://github.com/ethereum-optimism/optimism/pull/16953), was opened to fix the L1 validator wallet generation process by ensuring it correctly uses the `Count` field from `mnemonics.yaml`.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified.", "2025-09-04T03:29:05.318Z"]
["ethereum-optimism/Retro-Funding_day_2025-08-04", "ethereum-optimism/Retro-Funding", "day", "2025-08-04", "# ethereum-optimism/Retro-Funding Daily Update (Aug 4, 2025)\n## OVERVIEW \nToday's focus was on preparing for the M6 results snapshot, which included significant updates to metric variant weights for onchain builders and the addition of PageRank propagation support for devtooling project links. Dependency bumps for `protobuf` and `urllib3` were also completed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### M6 Results Snapshot and Metric Adjustments\nThe repository saw a major update with the M6 results snapshot, which included significant changes to how metrics are calculated and utilized. This involved adding support for PageRank propagation in devtooling project links and adjusting metric variant weights for onchain builders, specifically increasing `growth` and decreasing `retention`. ([#71](https://github.com/ethereum-optimism/Retro-Funding/pull/71))\n\n### Dependency Updates\nRoutine maintenance included bumping the `protobuf` library from 5.29.3 to 5.29.5 and `urllib3` from 2.3.0 to 2.5.0, ensuring the project uses the latest stable versions of these dependencies. ([#66](https://github.com/ethereum-optimism/Retro-Funding/pull/66), [#67](https://github.com/ethereum-optimism/Retro-Funding/pull/67))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Dev Tooling Dependency Clarification\nThe issue concerning the distinction between direct and transitive dependencies in Dev Tooling ([#49](https://github.com/ethereum-optimism/Retro-Funding/issues/49)) was closed today. This matter was addressed during M5, with the resolution implemented in a previous pull request.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:29:06.232Z"]
["ethereum-optimism/optimism_day_2025-08-04", "ethereum-optimism/optimism", "day", "2025-08-04", "# ethereum-optimism/optimism Daily Update (Aug 4, 2025)\n\n## OVERVIEW\nThe day saw a minor documentation enhancement with a fix to the Table of Contents. A long-standing issue related to developer tooling and dependency management was closed, indicating progress in addressing foundational development concerns.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\n- **Documentation Improvements**: A new pull request, [#16956](https://github.com/ethereum-optimism/optimism/pull/16956), was opened to address a fix in the Table of Contents for the documentation.\n\n## CLOSED ISSUES\n\n- **Developer Tooling Resolution**: The issue concerning \"Dev Tooling: Direct vs Transitive dependencies\" ([#49](https://github.com/ethereum-optimism/optimism/issues/49)) was closed today. This issue, created on May 21, 2025, was addressed during M5, with a specific reference to a pull request in the Retro-Funding repository.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\nNo active issues had more than 3 comments today.", "2025-09-04T03:29:06.471Z"]
["ethereum-optimism/Retro-Funding_day_2025-08-06", "ethereum-optimism/Retro-Funding", "day", "2025-08-06", "# ethereum-optimism/Retro-Funding Daily Update (Aug 6, 2025)\n\n## OVERVIEW \nThe day's development focused on resolving an issue where a project with consolidated deployments was inappropriately flagged in the Retro-Funding results, leading to a bug fix and an update to relevant data files.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Project Data Correction**\n    *   A bug was fixed where a project with consolidated deployments was re-listed incorrectly, impacting on-chain metrics and project metadata. This involved updates to `eval-algos/S7/utils/queries.py` and several files within `results/S7/M6/data/` and `results/S7/M6/outputs/`. ([#73](https://github.com/ethereum-optimism/Retro-Funding/pull/73))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Resolution of Inappropriately Flagged Project**\n    *   An issue concerning a project being inappropriately flagged in the Retro-Funding results was reported and subsequently resolved. The project, \"World Mini Apps,\" which includes \"SuperCat,\" \"NFT,\" and \"Claim Race\" mini-apps, was flagged in a previous PR. The resolution was confirmed by the team. ([#72](https://github.com/ethereum-optimism/Retro-Funding/issues/72))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo issues with more than 3 comments are currently active.", "2025-09-04T03:29:06.582Z"]
["ethereum-optimism/design-docs_day_2025-08-06", "ethereum-optimism/design-docs", "day", "2025-08-06", "# ethereum-optimism/design-docs Daily Update (Aug 6, 2025)\n## OVERVIEW \nThe day's activity primarily focused on addressing a user-reported issue regarding an inappropriately flagged project within the Retro-Funding process. This issue was successfully resolved.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Retro-Funding Project Flagging Resolution\nAn issue concerning a project being inappropriately flagged in the Retro-Funding process was reported and subsequently resolved. The user's project, \"World Mini Apps,\" which includes \"SuperCat,\" \"NFT,\" and \"Claim Race\" mini-apps, was flagged, leading to an inquiry about the OP allocation. The Optimism team investigated and confirmed the resolution of the issue. ([#72](https://github.com/ethereum-optimism/design-docs/issues/72))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Retro-Funding Project Flagging Inquiry\nIssue [#72](https://github.com/ethereum-optimism/design-docs/issues/72), \"Onchain Builders: Project got flagged inappropriately,\" was opened and closed on the same day. The user, \"sexychinese,\" reported that their project, \"World Mini Apps,\" was incorrectly flagged in a Retro-Funding PR. The Optimism team, specifically \"ccerv1,\" acknowledged the issue and confirmed it was resolved, referencing issue [#73](https://github.com/ethereum-optimism/design-docs/issues/73) as the resolution. The user also provided specific app IDs for clarity.", "2025-09-04T03:29:07.247Z"]
["ethereum-optimism/docs_day_2025-08-09", "ethereum-optimism/docs", "day", "2025-08-09", "# ethereum-optimism/docs Daily Update (Aug 9, 2025)\n## OVERVIEW \nThe day's activity for the `ethereum-optimism/docs` repository was minimal, with no new features, bug fixes, code refactoring, or documentation enhancements. The primary activity involved the creation of a new issue related to a Q4 2024 audit.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo key technical developments occurred on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n### Audit-Related Documentation\nA new issue was opened to track updates required for a 2024 Q4 audit, specifically concerning a page path. This issue includes sections for describing the required updates and defining acceptance criteria for the assignee. ([#1713](https://github.com/ethereum-optimism/docs/issues/1713))\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:29:10.073Z"]
["ethereum-optimism/design-docs_day_2025-08-10", "ethereum-optimism/design-docs", "day", "2025-08-10", "# ethereum-optimism/design-docs Daily Update (Aug 10, 2025)\n## OVERVIEW \nThe day's activity focused on closing an issue related to the min-base-fee failure modes analysis, confirming its completion with a linked Notion document. An active issue regarding `op-proposer` transaction failures also saw new comments, indicating ongoing community discussion and troubleshooting.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Analysis Completed\nThe issue [#311](https://github.com/ethereum-optimism/design-docs/issues/311) concerning the min-base-fee failure modes analysis was closed today. A Notion document detailing the \"MinBaseFee Threat Model\" was provided as confirmation of completion.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### op-proposer Transaction Failure Discussions\nThe active issue [#13502](https://github.com/ethereum-optimism/design-docs/issues/13502), \"op-proposer Failed to create a transaction,\" received new comments today. A user, \"17718597202,\" reported encountering the same error and shared their `op-proposer` startup command, seeking a solution. This indicates continued community engagement and troubleshooting efforts for this problem.", "2025-09-04T03:29:11.058Z"]
["ethereum-optimism/design-docs_day_2025-08-11", "ethereum-optimism/design-docs", "day", "2025-08-11", "# ethereum-optimism/design-docs Daily Update (Aug 11, 2025)\n## OVERVIEW \nThe day's activity focused on security documentation with the addition of a threat model report for MinBaseFee and ongoing discussions around its specification and state growth implications.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Security Documentation for MinBaseFee:** A comprehensive threat model report for the MinBaseFee feature was added, migrating content previously held in Notion. This includes detailed analysis and supporting images. ([#314](https://github.com/ethereum-optimism/design-docs/pull/314))\n\n## NEWLY OPENED PULL REQUESTS\n*   A new pull request, [#315](https://github.com/ethereum-optimism/design-docs/pull/315), was opened to update the minimum base fee documentation to align with the latest implementation.\n\n## CLOSED ISSUES\n\n*   **Congestion-Based Builder Transaction Reordering:** The issue discussing the design document for congestion-based builder transaction reordering was closed. ([#306](https://github.com/ethereum-optimism/design-docs/issues/306))\n\n## NEW ISSUES\n\n*   **Min-Base-Fee State Growth Estimate:** A new issue, [#316](https://github.com/ethereum-optimism/design-docs/issues/316), was created to add a state growth estimate to the MinBaseFee Feature Model Analysis (FMA). Initial napkin math suggests approximately 16MB of state growth per year due to an extra byte for `minBaseFeeLog2` per block.\n\n## ACTIVE ISSUES\n\n*   **op-test-sequencer Integration:** Discussion on [#15265](https://github.com/ethereum-optimism/design-docs/issues/15265) indicates that adding `op-test-sequencer` to the devnet environment and Kurtosis is required for running reorg tests in the `kona-supervisor` devstack environment. This issue was previously deprioritized but has been re-opened due to a pending todo in the code.\n*   **Min-Base-Fee Specification:** On [#742](https://github.com/ethereum-optimism/design-docs/issues/742), it was noted that the state growth estimate for MinBaseFee, initially considered for the specification, was decided to be better placed in the FMA, leading to the creation of a new issue ([#316](https://github.com/ethereum-optimism/design-docs/issues/316)) to track this.", "2025-09-04T03:29:12.366Z"]
["ethereum-optimism/docs_day_2025-08-12", "ethereum-optimism/docs", "day", "2025-08-12", "# ethereum-optimism/docs Daily Update (Aug 12, 2025)\n## OVERVIEW \nNo new development activity was recorded for the `ethereum-optimism/docs` repository on August 12, 2025.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo key technical developments to report.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:29:13.356Z"]
["ethereum-optimism/design-docs_day_2025-08-12", "ethereum-optimism/design-docs", "day", "2025-08-12", "# ethereum-optimism/design-docs Daily Update (Aug 12, 2025)\n## OVERVIEW \nThe day's development focused on enhancing protocol design documentation, specifically adding guidance for naming activation checks within decoupled features. Two new pull requests were opened, proposing updates related to data availability footprint limits and a new liveness module.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Design Enhancements\nA new feature was added to the `protocol/decoupled-features.md` file, providing guidance on the naming conventions for activation checks within decoupled features. This update aims to improve clarity and consistency in protocol design documentation. ([#318](https://github.com/ethereum-optimism/design-docs/pull/318))\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n*   [#317](https://github.com/ethereum-optimism/design-docs/pull/317) \"Jovian: DA footprint block limit\" proposes changes related to data availability footprint block limits.\n*   [#320](https://github.com/ethereum-optimism/design-docs/pull/320) \"feat: liveness module v2\" introduces a new version of the liveness module.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-09-04T03:29:14.351Z"]
["ethereum-optimism/ecosystem_day_2025-08-12", "ethereum-optimism/ecosystem", "day", "2025-08-12", "# ethereum-optimism/ecosystem Daily Update (Aug 12, 2025)\n## OVERVIEW \nThe day's activity for the `ethereum-optimism/ecosystem` repository was minimal, with no completed work, new pull requests, or closed issues. A single new issue was opened concerning a font update for the Optimism app.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo key technical developments occurred on this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n### UI/UX Enhancements\nA new issue was opened to update the font on `app.optimism.io/bridge/deposit` to use the brand font, Riforma. This aims to improve the visual consistency of the application. ([#922](https://github.com/ethereum-optimism/ecosystem/issues/922))\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments on this day.", "2025-09-04T03:29:14.939Z"]
["ethereum-optimism/docs_day_2025-08-13", "ethereum-optimism/docs", "day", "2025-08-13", "# ethereum-optimism/docs Daily Update (Aug 13, 2025)\n## OVERVIEW \nThe day's activity focused on re-evaluating and re-opening existing issues to track further necessary work. This includes continued efforts on `op-challenger` acceptance tests for interop chains and `op-sync-tester` support for the `eth` namespace.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n\n### `op-challenger` Interoperability Testing Re-evaluation\nIssue [#15948](https://github.com/ethereum-optimism/docs/issues/15948), concerning `op-challenger` acceptance tests on interop chains, was re-opened on August 13th by mbaxter to address remaining TODOs. The issue aims to ensure `op-challenger` successfully disputes invalid proposals and, if possible, covers game resolution. Previous discussions highlighted the need to identify the `op-challenger`'s EOA for assertion purposes.\n\n### `op-sync-tester` `eth` Namespace Support\nIssue [#16700](https://github.com/ethereum-optimism/docs/issues/16700), which tracks `op-sync-tester` support for the `eth` namespace, was re-opened on August 13th by pcw109550 to track test case implementation for the `eth` namespace. The issue outlines the need for `op-sync-tester` to serve `eth_getBlockReceipts`, `eth_getBlockByHash`, and `eth_getBlockByNumber` methods for blocks prior to the `test_head`.", "2025-09-04T03:29:17.050Z"]
["ethereum-optimism/design-docs_day_2025-08-13", "ethereum-optimism/design-docs", "day", "2025-08-13", "# ethereum-optimism/design-docs Daily Update (Aug 13, 2025)\n## OVERVIEW \nToday's development focused on refining the `min-base-fee` documentation, specifically addressing database growth estimates. Two new pull requests were opened, and one issue related to the `min-base-fee` was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Refinement of Minimum Base Fee Documentation\nDocumentation for the `min-base-fee` feature underwent updates to include and then refine estimates for database growth. Initial estimates were added, and subsequently, the assessment of database growth was downgraded to \"unlikely.\" This work is captured in [#319](https://github.com/ethereum-optimism/design-docs/pull/319) and [#321](https://github.com/ethereum-optimism/design-docs/pull/321).\n\n## NEWLY OPENED PULL REQUESTS\n- **Nonceless Execution**: A new pull request, [#322](https://github.com/ethereum-optimism/design-docs/pull/322), was opened to discuss nonceless execution.\n- **Decoupled Features Addendum**: Another pull request, [#323](https://github.com/ethereum-optimism/design-docs/pull/323), was opened to add an addendum on MinBaseFee and the rationale behind why toggles are not always suitable.\n\n## CLOSED ISSUES\n\n### Minimum Base Fee State Growth Estimate\nThe issue [#316](https://github.com/ethereum-optimism/design-docs/issues/316), which requested the addition of a state growth estimate to the FMA for `min-base-fee`, was closed today. This issue was addressed by the updates in the `min-base-fee` documentation.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### op-challenger acceptance tests on interop\nIssue [#15948](https://github.com/ethereum-optimism/design-docs/issues/15948) was reopened today by mbaxter, noting that there are still a few TODOs pointing to this ticket that need to be addressed. The issue aims to add acceptance tests for `op-challenger` functionality on interop chains, specifically covering invalid proposal disputes and game resolution. Previous discussions included how acceptance tests can identify the `op-challenger`'s EOA to assert that invalid proposals were disputed by it.\n\n### op-sync-tester: Support eth namespace\nIssue [#16700](https://github.com/ethereum-optimism/design-docs/issues/16700) was reopened by pcw109550 to track the implementation of test cases for the `eth` namespace. The issue focuses on enabling `op-sync-tester` to serve RPC methods like `eth_getBlockReceipts`, `eth_getBlockByHash`, and `eth_getBlockByNumber` for blocks prior to the `test_head`.", "2025-09-04T03:29:18.079Z"]
["ethereum-optimism/design-docs_day_2025-08-14", "ethereum-optimism/design-docs", "day", "2025-08-14", "# ethereum-optimism/design-docs Daily Update (Aug 14, 2025)\n## OVERVIEW \nThe day saw the introduction of a new feature related to `TimelockGuard` and the opening of an issue to migrate FP recovery tasks. Discussions continued on an existing issue regarding event call graphs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### New Feature Introduction\nA new feature, `TimelockGuard`, was introduced, indicating potential enhancements in security or time-based operations within the system. ([#324](https://github.com/ethereum-optimism/design-docs/pull/324))\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#324](https://github.com/ethereum-optimism/design-docs/pull/324), titled \"feat: TimelockGuard\", was opened.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\n### Fault Proof Recovery Task Migration\nA new issue, [#1162](https://github.com/ethereum-optimism/design-docs/issues/1162), was opened to track the migration of blacklist games tasks to a new template framework and the removal of old FP recovery tasks.\n\n## ACTIVE ISSUES\n\n### Event Call Graph Tracing\nDiscussion continued on [#16874](https://github.com/ethereum-optimism/design-docs/issues/16874), which aims to add logic to trace event flow. On Aug 14, 2025, @sashass1315 informed @pcw109550 that a PR had been added for review. On Aug 15, 2025, @pcw109550 responded, stating that while the contribution was appreciated, the team is leaning towards removing the entire event system, suggesting the PR might not be merged, though the code could still be useful for control flow analysis during the system's removal. The issue was later closed on Aug 25, 2025, as similar functionality was found in another PR.", "2025-09-04T03:29:18.576Z"]
["ethereum-optimism/superchain-registry_day_2025-08-14", "ethereum-optimism/superchain-registry", "day", "2025-08-14", "# ethereum-optimism/superchain-registry Daily Update (Aug 14, 2025)\n## OVERVIEW \nThe day's activity primarily involved the opening of a new pull request to update an address for Celo and the creation of a new issue related to migrating FP recovery tasks. Discussions continued on an existing issue concerning event call graphs.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1095](https://github.com/ethereum-optimism/superchain-registry/pull/1095), was opened to update the `AnchorStateRegistryProxy` address for Celo.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n### Task Migration\nA new issue, [#1162](https://github.com/ethereum-optimism/superchain-registry/issues/1162), was created to migrate blacklist games tasks to a new template framework and remove old FP recovery tasks.\n\n## ACTIVE ISSUES\n### Event Call Graph Discussion\nDiscussion continued on [#16874](https://github.com/ethereum-optimism/superchain-registry/issues/16874), which proposes adding logic to trace event flow. On Aug 14, 2025, @sashass1315 mentioned they had added a PR and requested a review. On Aug 15, 2025, @pcw109550 responded, stating that while they appreciated the contribution, the team was leaning towards removing the entire event system, suggesting the PR might not be merged but the code could still be useful for understanding control flow. The issue was later closed on Aug 25, 2025, by @mslipper, who noted that similar functionality exists in another PR.\n\n### FP Recovery Task Migration\nA new issue, [#1162](https://github.com/ethereum-optimism/superchain-registry/issues/1162), was opened on Aug 14, 2025, to migrate FP recovery tasks. @blmalone offered assistance with sync time or async work and availability for PR review on the same day.", "2025-09-04T03:29:20.892Z"]
["ethereum-optimism/optimism_day_2025-08-17", "ethereum-optimism/optimism", "day", "2025-08-17", "# ethereum-optimism/optimism Daily Update (Aug 17, 2025)\n## OVERVIEW \nThe day's development focused on a single new pull request aimed at improving the accuracy of unsafe data availability bytes within the op-batcher and op-node components by leveraging channel data availability estimates.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#17104](https://github.com/ethereum-optimism/optimism/pull/17104), was opened. This feature aims to enhance the accuracy of `unsafe_da_bytes` in the `op-batcher` and `op-node` by utilizing channel data availability estimates.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were reported.", "2025-09-04T03:29:22.265Z"]
["ethereum-optimism/design-docs_day_2025-08-18", "ethereum-optimism/design-docs", "day", "2025-08-18", "# ethereum-optimism/design-docs Daily Update (Aug 18, 2025)\n## OVERVIEW \nThe day's activity in the `ethereum-optimism/design-docs` repository primarily involved discussions on an active issue related to the event system, with progress noted on associated pull requests.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed on this date.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n### Event System Updates\nDiscussions continued on [#17001](https://github.com/ethereum-optimism/design-docs/issues/17001) regarding the removal of two events from the event system. On August 18, 2025, joshklop commented, referencing the first associated pull request: \"#17122\". This indicates ongoing work and progress towards resolving the issue.", "2025-09-04T03:29:22.602Z"]
["ethereum-optimism/optimism_day_2025-08-16", "ethereum-optimism/optimism", "day", "2025-08-16", "# ethereum-optimism/optimism Daily Update (Aug 16, 2025)\n## OVERVIEW \nThe day's development focused on internal optimizations and preparing for future stability. Key activities included refining `op-node` event handling, optimizing string formatting, and addressing test flakiness to improve the development experience.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Internal Code Refinements\nEfforts were made to streamline internal code. This included removing unnecessary events from `op-node` to improve efficiency and readability ([#17100](https://github.com/ethereum-optimism/optimism/pull/17100)). Additionally, an optimization was implemented for nested `fmt.Sprintf` calls within `formatBigIntFixedPrecision` to enhance performance ([#17102](https://github.com/ethereum-optimism/optimism/pull/17102)).\n\n### Test Stability Improvements\nA significant focus was on resolving flakiness in acceptance tests, particularly during their initialization phase ([#17103](https://github.com/ethereum-optimism/optimism/pull/17103)). This work aims to ensure more reliable and consistent test results, which is crucial for maintaining code quality and accelerating development cycles.\n\n## NEWLY OPENED PULL REQUESTS\n- [#17100](https://github.com/ethereum-optimism/optimism/pull/17100) op-node: Remove more events: This PR aims to further reduce the number of events processed by `op-node`, likely to improve performance or simplify event handling logic.\n- [#17102](https://github.com/ethereum-optimism/optimism/pull/17102) refactor: optimize nested fmt.Sprintf in formatBigIntFixedPrecision: This PR proposes a refactoring to optimize string formatting operations, specifically targeting nested `fmt.Sprintf` calls for better efficiency.\n- [#17103](https://github.com/ethereum-optimism/optimism/pull/17103) fix: resolve flaky acceptance tests during initialization: This PR addresses an issue causing acceptance tests to be unreliable, focusing on flakiness that occurs during the test initialization phase.\n\n## CLOSED ISSUES\nNo issues were closed on Aug 16, 2025.\n\n## NEW ISSUES\nNo new issues were opened on Aug 16, 2025.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were identified on Aug 16, 2025.", "2025-09-04T03:29:23.058Z"]
["ethereum-optimism/docs_day_2025-08-18", "ethereum-optimism/docs", "day", "2025-08-18", "# ethereum-optimism/docs Daily Update (Aug 18, 2025)\n## OVERVIEW \nToday's focus was on critical documentation updates, including corrections to the Fault Proofs Explainer, an outdated chain-dev-net tutorial, and a precompile tutorial to ensure EIP-7587 compliance.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Accuracy and Updates\n- Corrected misleading information in the Fault Proofs Explainer to accurately reflect the `op-challenger` tool ([#1706](https://github.com/ethereum-optimism/docs/pull/1706)).\n- Updated the `chain-dev-net.mdx` tutorial, which was outdated and prevented new users from launching the devnet ([#1714](https://github.com/ethereum-optimism/docs/pull/1714)).\n\n### Tutorial Enhancements for EIP-7587 Compliance\n- Fixed a precompile address conflict in the \"Adding a precompile\" tutorial to ensure compliance with EIP-7587 ([#1715](https://github.com/ethereum-optimism/docs/pull/1715)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Event System Refactoring\n- Discussion on [#17001](https://github.com/ethereum-optimism/docs/issues/17001) continues regarding the removal of two events from the event system. Recent comments indicate progress with specific pull requests linked: `optimism/pull/17122`, `optimism/pull/17165`, `optimism/pull/16997`, and `optimism/pull/17161`. The issue was closed on August 21, 2025.", "2025-09-04T03:29:23.429Z"]
["ethereum-optimism/ecosystem_day_2025-08-18", "ethereum-optimism/ecosystem", "day", "2025-08-18", "# ethereum-optimism/ecosystem Daily Update (Aug 18, 2025)\n## OVERVIEW \nThe day's activity focused on addressing existing issues, with a notable closure of an issue related to implementing a \"lend\" verb. There were no new features, bug fixes, or code refactoring activities.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Lending Verb Implementation\nThe issue [#915](https://github.com/ethereum-optimism/ecosystem/issues/915) \"Implement lend verb\" was closed today. This issue outlined the steps to introduce a \"lend\" verb, including wrapping the Morpho SDK, hardcoding a single Morpho pool, and implementing API endpoints for account creation, retrieval, lending deposits, and position retrieval.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Event System Refinement\nDiscussion continued on [#17001](https://github.com/ethereum-optimism/ecosystem/issues/17001) \"Remove two events from event system\". The latest comments indicate that progress is being made on removing the specified events, with references to related pull requests: https://github.com/ethereum-optimism/optimism/pull/16997, https://github.com/ethereum-optimism/optimism/pull/17161, https://github.com/ethereum-optimism/optimism/pull/17165, and #17122. The issue is expected to be closed on August 21, 2025.", "2025-09-04T03:29:25.128Z"]
["ethereum-optimism/superchain-ops_day_2025-08-18", "ethereum-optimism/superchain-ops", "day", "2025-08-18", "# ethereum-optimism/superchain-ops Daily Update (Aug 18, 2025)\n## OVERVIEW \nToday's development focused on refining the CI/CD pipeline, significantly increasing test coverage across various components, and migrating blacklist game templates to the new templating framework.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### CI/CD Pipeline Refinement\nThe CI configuration was cleaned up by removing obsolete jobs and tasks, streamlining the pipeline in preparation for a new superchain-ops system. This refactoring improves efficiency and maintainability. ([#1164](https://github.com/ethereum-optimism/superchain-ops/pull/1164))\n\n### Enhanced Test Coverage\nSignificant progress was made in increasing test coverage across the codebase, particularly for `SimpleAddressRegistry.sol`, `StackedSimulator.sol`, and `TaskManager.sol`, as well as various test libraries and task-related tests. This effort aims to improve code robustness and reliability. ([#1166](https://github.com/ethereum-optimism/superchain-ops/pull/1166))\n\n### Template Migration\nA new blacklist game template was created using the updated superchain-ops templating framework, marking a step towards migrating existing tasks to the new system. ([#1168](https://github.com/ethereum-optimism/superchain-ops/pull/1168))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1169](https://github.com/ethereum-optimism/superchain-ops/pull/1169), was opened to address a monorepo update.\n\n## CLOSED ISSUES\n\n### Template Migration Progress\nThe issue concerning the migration of FP recovery tasks, specifically the blacklist games task, to the new template framework was closed. This indicates successful completion of the migration and removal of old tasks. ([#1162](https://github.com/ethereum-optimism/superchain-ops/issues/1162))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Event System Refinement\nDiscussions continued on [#17001](https://github.com/ethereum-optimism/superchain-ops/issues/17001), which aims to remove two events from the event system. Recent comments indicate progress with related pull requests, including [#16997](https://github.com/ethereum-optimism/optimism/pull/16997), [#17161](https://github.com/ethereum-optimism/optimism/pull/17161), [#17165](https://github.com/ethereum-optimism/optimism/pull/17165), and [#17122](https://github.com/ethereum-optimism/optimism/pull/17122), suggesting that the work is actively being addressed through code changes.", "2025-09-04T03:29:25.819Z"]
["ethereum-optimism/design-docs_day_2025-08-19", "ethereum-optimism/design-docs", "day", "2025-08-19", "# ethereum-optimism/design-docs Daily Update (Aug 19, 2025)\n## OVERVIEW \nThe day saw the opening of a new pull request for a Single-Approval Long-Delay TimelockGuard. An issue related to enabling flashblocks on Sunnyside sequencers was closed, confirming their successful implementation. Discussions continued on an existing issue regarding missing test logs in `op-acceptance-tests` and an audit-related issue.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#326](https://github.com/ethereum-optimism/design-docs/pull/326), titled \"Single-Approval Long-Delay TimelockGuard,\" was opened. Its status and progress are pending.\n\n## CLOSED ISSUES\n\n### Flashblocks Implementation Confirmed\nThe issue [#16688](https://github.com/ethereum-optimism/design-docs/issues/16688), concerning the enablement of flashblocks on Sunnyside sequencers, was closed. It was confirmed that all Sunnyside sequencers for Sepolia, both voting and non-voting, are running with Flashblocks and are connected to the websocket proxy. Failover has been tested on a devnet.\n\n## NEW ISSUES\n\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\n### Missing Test Logs in `op-acceptance-tests`\nDiscussion continued on issue [#17151](https://github.com/ethereum-optimism/design-docs/issues/17151) regarding missing test logs in `op-acceptance-tests`. The latest comment indicates that the workflow job (\"go-tests-short\") is not intended for acceptance tests, and while it contains some sysgo acceptance tests, they are not run via `op-acceptor`, which would capture logs into files. Work is in progress to move these tests, which is expected to resolve the issue.\n\n### Outdated Content on Audit Page\nA comment was added to issue [#1673](https://github.com/ethereum-optimism/design-docs/issues/1673), which is related to a 2024 Q4 audit and an outdated page. The comment requests clarification on which specific page is being referred to for updates.", "2025-09-04T03:29:25.892Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-08-19", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-08-19", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Aug 19, 2025)\n## OVERVIEW \nThe day saw the resolution of an issue concerning Flashblocks enablement on Sunnyside sequencers for Sepolia, confirming their operational status. A new issue was opened regarding missing test logs in `op-acceptance-tests`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**Flashblocks Enablement on Sunnyside Sepolia Sequencers**\nThe issue [#16688](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16688) was closed, confirming that all Sunnyside sequencers (voting and non-voting) for Sepolia are running with Flashblocks enabled and are connected to the websocket proxy. Failover has been tested on the eris-0 devnet.\n\n## NEW ISSUES\n\n**Missing Test Logs in `op-acceptance-tests`**\nA new issue [#17151](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17151) was opened, reporting that despite multiple failed tests in a CI run, the logs for `op-acceptance-tests` are missing.\n\n## ACTIVE ISSUES\n\n**Flashblocks Enablement on Sunnyside Sepolia Sequencers**\nIssue [#16688](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16688) was closed today. The latest comment from parkgunou confirmed that all Sunnyside sequencers for Sepolia are running with Flashblocks and are connected to the websocket proxy. They also noted that failover has been tested on the eris-0 devnet, marking the issue as resolved from their side. Previously, yashvardhan-kukreja had indicated that this issue was deprioritized in favor of getting Flashblocks stable on OP Labs Sepolia infra, and that issue [#16685](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16685) was a blocker.\n\n**Missing Test Logs in `op-acceptance-tests`**\nIssue [#17151](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17151) was opened today. scharissis commented that the \"go-tests-short\" workflow job is not intended for acceptance tests and that the few sysgo acceptance tests it runs are not via `op-acceptor`, which would capture logs. They are working on moving these tests, which should resolve the issue.\n\n**[2024 Q4 Audit] [page-path]**\nIssue [#1673](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1673) received a new comment from krofax today, asking for clarification on which page cshein45 was referring to. The issue's body describes the need to update outdated content related to the Movement Network, including MOVE token utility and DAO governance structure.", "2025-09-04T03:29:28.154Z"]
["ethereum-optimism/op-geth_day_2025-08-19", "ethereum-optimism/op-geth", "day", "2025-08-19", "# ethereum-optimism/op-geth Daily Update (Aug 19, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to fix inconsistent function names in comments. Two issues were closed, one confirming flashblocks enablement on Sunnyside sequencers and another regarding missing test logs. An ongoing issue about outdated audit content also received a new comment.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#661](https://github.com/ethereum-optimism/op-geth/pull/661), was opened to address inconsistent function names within comments, aiming to improve code readability and maintainability.\n\n## CLOSED ISSUES\n### Flashblocks Enablement\nIssue [#16688](https://github.com/ethereum-optimism/op-geth/issues/16688) was closed, confirming that all Sunnyside sequencers (both voting and non-voting) for Sepolia are now running with Flashblocks enabled and are connected to the websocket proxy. Failover has been tested on the eris-0 devnet.\n\n### Test Log Visibility\nIssue [#17151](https://github.com/ethereum-optimism/op-geth/issues/17151) was closed, with the resolution that the missing test logs were found within one of the root logs. A related pull request ([#16755](https://github.com/ethereum-optimism/optimism/pull/16755)) is in progress to move acceptance tests to a system that captures logs more effectively.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n### Outdated Audit Content\nIssue [#1673](https://github.com/ethereum-optimism/op-geth/issues/1673), concerning a 2024 Q4 audit and outdated content on a specific page, received a new comment. The latest comment from @krofax at 2025-08-19T14:12:35Z requested clarification on which page the issue refers to, indicating that the problem description lacks specificity.", "2025-09-04T03:29:28.426Z"]
["ethereum-optimism/superchain-ops_day_2025-08-19", "ethereum-optimism/superchain-ops", "day", "2025-08-19", "# ethereum-optimism/superchain-ops Daily Update (Aug 19, 2025)\n## OVERVIEW \nThe day's development included the addition of a new template for BlacklistGamesV400. Two issues were closed, one regarding flashblocks on Sunnyside sequencers and another concerning missing test logs in `op-acceptance-tests`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Template Additions\nA new `BlacklistGamesV400` template was added, building on a previous pull request. This involved changes to `src/improvements/template/BlacklistGamesV400.sol` and related test files. ([#1170](https://github.com/ethereum-optimism/superchain-ops/pull/1170))\n\n## NEWLY OPENED PULL REQUESTS\n- No new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks on Sunnyside Sequencers\nThe issue concerning enabling flashblocks on Sunnyside sequencers was closed. It was confirmed that all voting and non-voting sequencers for Sepolia on Sunnyside are running with Flashblocks and are connected to the websocket proxy. ([#16688](https://github.com/ethereum-optimism/superchain-ops/issues/16688))\n\n### Test Log Visibility\nAn issue regarding missing test logs in `op-acceptance-tests` was closed. The logs were subsequently located in one of the root logs. ([#17151](https://github.com/ethereum-optimism/superchain-ops/issues/17151))\n\n## NEW ISSUES\n- No new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Outdated Content in Audit Documentation\nIssue [#1673](https://github.com/ethereum-optimism/superchain-ops/issues/1673) highlights outdated content on a page related to the Movement Network, specifically concerning MOVE token utility and DAO governance. The latest comment from krofax requests clarification on which specific page is being referred to.", "2025-09-04T03:29:30.710Z"]
["ethereum-optimism/infra_day_2025-08-19", "ethereum-optimism/infra", "day", "2025-08-19", "# ethereum-optimism/infra Daily Update (Aug 19, 2025)\n## OVERVIEW \nThe day saw the closure of two issues, including the successful enablement of Flashblocks on Sunnyside sequencers for Sepolia and the porting of a test to Devstack. An issue regarding missing test logs was also opened and discussed.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Test Porting and Infrastructure Updates\nThe issue of porting the `TestBalanceSnapshot` from the devnet SDK to Devstack was successfully closed [#442](https://github.com/ethereum-optimism/infra/issues/442). Additionally, the task to enable Flashblocks on Sunnyside sequencers for Sepolia was completed and closed [#16688](https://github.com/ethereum-optimism/infra/issues/16688).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Test Log Visibility\nIssue [#17151](https://github.com/ethereum-optimism/infra/issues/17151) \"op-acceptance-tests: Missing test logs\" was opened today. The issue describes a problem where CI runs report failed tests, but the corresponding logs are missing. A comment from scharissis clarifies that the \"go-tests-short\" workflow job is not intended for acceptance tests and that the few sysgo acceptance tests it runs are not executed via `op-acceptor`, which would capture logs. They are actively working on moving these tests, which is expected to resolve the issue.\n\n### Outdated Documentation\nIssue [#1673](https://github.com/ethereum-optimism/infra/issues/1673) \"[2024 Q4 Audit] [page-path]\" remains open. The issue highlights that the current content on a specific page is outdated and needs to reflect recent developments in the Movement Network, including updates to the MOVE token utility and DAO governance structure. The latest comment from krofax asks for clarification on which page the issue refers to.", "2025-09-04T03:29:31.481Z"]
["ethereum-optimism/superchain-registry_day_2025-08-19", "ethereum-optimism/superchain-registry", "day", "2025-08-19", "# ethereum-optimism/superchain-registry Daily Update (Aug 19, 2025)\n## OVERVIEW \nThe day's activity focused on resolving a long-standing issue regarding flashblocks on Sunnyside sequencers and addressing a new report of missing test logs in `op-acceptance-tests`.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Flashblocks Enabled for Sunnyside Sequencers\nThe issue of enabling flashblocks on Sunnyside sequencers for Sepolia was resolved. All Sunnyside sequencers, both voting and non-voting, are now running with Flashblocks and are connected to the websocket proxy. Failover has been tested on the `eris-0` devnet. ([#16688](https://github.com/ethereum-optimism/superchain-registry/issues/16688))\n\n## NEW ISSUES\n### Missing Test Logs in `op-acceptance-tests`\nA new issue was opened regarding missing test logs in `op-acceptance-tests` within a specific CI run. Despite multiple test failures, the logs were not readily available. ([#17151](https://github.com/ethereum-optimism/superchain-registry/issues/17151))\n\n## ACTIVE ISSUES\n### Missing Test Logs in `op-acceptance-tests` ([#17151](https://github.com/ethereum-optimism/superchain-registry/issues/17151))\nThis issue, opened today, highlights that a CI run reported failed tests but lacked corresponding logs. A comment from scharissis clarified that the \"go-tests-short\" workflow job is not intended for acceptance tests and that the few sysgo acceptance tests it runs are not executed via `op-acceptor`, which would capture logs. They are actively working on moving these tests, which is expected to resolve the issue. The issue was later closed on Aug 25, 2025, with a comment indicating the logs were found in one of the root logs.\n\n### 2024 Q4 Audit - Page Path ([#1673](https://github.com/ethereum-optimism/superchain-registry/issues/1673))\nThis issue, created on June 29, 2025, describes the need to update outdated content related to the Movement Network, specifically regarding MOVE token utility and DAO governance structure. The latest comment from krofax on Aug 19, 2025, asks for clarification on which specific page the user is referring to.", "2025-09-04T03:29:31.997Z"]
["ethereum-optimism/design-docs_day_2025-08-20", "ethereum-optimism/design-docs", "day", "2025-08-20", "# ethereum-optimism/design-docs Daily Update (Aug 20, 2025)\n## OVERVIEW \nThe day's activity primarily involved ongoing discussions on existing issues, particularly concerning RPC response content types and event system modifications. No new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### RPC Response Content Type Discussion\nDiscussion continued on [#389](https://github.com/ethereum-optimism/design-docs/issues/389) regarding missing content types in RPC responses for `eth_getTransactionByHash` and its potential impact on `eth_getTransactionReceipt` with Wagmi. A new comment from OBlackmon3 at 2025-08-20T17:43:20Z asked how to suggest a fix for this issue.\n\n### Event System Modification Tracking\nOngoing discussion on [#17001](https://github.com/ethereum-optimism/design-docs/issues/17001) about removing two events from the event system. Joshklop provided an update at 2025-08-20T17:21:02Z, linking to a second related pull request: https://github.com/ethereum-optimism/optimism/pull/17165.", "2025-09-04T03:29:32.888Z"]
["ethereum-optimism/op-geth_day_2025-08-20", "ethereum-optimism/op-geth", "day", "2025-08-20", "# ethereum-optimism/op-geth Daily Update (Aug 20, 2025)\n## OVERVIEW \nThe day's development focused on a critical bug fix in the engine API, specifically addressing issues with checks and execution payload creation within `beacon/engine` and `eth/catalyst`. An active issue regarding missing content types in RPC responses also saw new comments.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Engine API Bug Fixes\n*   Corrected errors and improved checks in the engine API related to `beacon/engine` and `eth/catalyst` to ensure proper execution payload creation and API functionality. ([#662](https://github.com/ethereum-optimism/op-geth/pull/662))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### RPC Response Content Type\nDiscussion continued on [#389](https://github.com/ethereum-optimism/op-geth/issues/389), which highlights that OP Chain A and B RPC responses for `eth` queries are missing content types. A new comment from OBlackmon3 on August 20, 2025, inquired about suggesting a fix for this issue, indicating ongoing interest in resolving the problem.", "2025-09-04T03:29:34.932Z"]
["ethereum-optimism/infra_day_2025-08-20", "ethereum-optimism/infra", "day", "2025-08-20", "# ethereum-optimism/infra Daily Update (Aug 20, 2025)\n## OVERVIEW \nThe day saw the closure of an issue related to porting interop readiness tests to Devstack. Discussions continued on active issues concerning event system modifications and RPC response content types.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, tests, or other work were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Interoperability Test Porting\nAn issue concerning the porting of `TestInteropReadiness` from the devnet SDK to Devstack was closed today [#443](https://github.com/ethereum-optimism/infra/issues/443).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Event System Modifications\nDiscussions on issue [#17001](https://github.com/ethereum-optimism/infra/issues/17001), \"Remove two events from event system,\" continued with new comments. The latest comment from pcw109550 at 2025-08-21T08:50:07Z referenced related pull requests: https://github.com/ethereum-optimism/optimism/pull/16997 and https://github.com/ethereum-optimism/optimism/pull/17161. Previously, joshklop at 2025-08-20T17:21:02Z linked to a second pull request: https://github.com/ethereum-optimism/optimism/pull/17165, and at 2025-08-18T20:09:41Z, to the first one: #17122.\n\n### RPC Response Content Type\nThe issue [#389](https://github.com/ethereum-optimism/infra/issues/389), \"OP Chain A and B rpc response for eth rpc queries is missing content type,\" saw a new comment from OBlackmon3 at 2025-08-20T17:43:20Z asking how to suggest a fix for the problem. The issue describes that RPC responses for `eth_getTransactionByHash` and `eth_getTransactionReceipt` are missing content type headers, potentially affecting how libraries like Wagmi read transaction receipts.", "2025-09-04T03:29:34.951Z"]
["ethereum-optimism/specs_day_2025-08-20", "ethereum-optimism/specs", "day", "2025-08-20", "# ethereum-optimism/specs Daily Update (Aug 20, 2025)\n\n## OVERVIEW \nThe day's development focused on enhancing the managed node specification with a new method for interoperation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Managed Node Interoperability\n- A new `resetPreInterop` method was added to the managed node specification, improving interoperation capabilities within the system. ([#744](https://github.com/ethereum-optimism/specs/pull/744))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Event System Refinement\nDiscussion on [#17001](https://github.com/ethereum-optimism/specs/issues/17001) regarding the removal of two events from the event system continued. The latest comments from pcw109550 and joshklop provided links to related pull requests ([https://github.com/ethereum-optimism/optimism/pull/16997](https://github.com/ethereum-optimism/optimism/pull/16997), [https://github.com/ethereum-optimism/optimism/pull/17161](https://github.com/ethereum-optimism/optimism/pull/17161), [https://github.com/ethereum-optimism/optimism/pull/17165](https://github.com/ethereum-optimism/optimism/pull/17165), [#17122](https://github.com/ethereum-optimism/specs/pull/17122)), indicating active work towards resolving this issue.\n\n### RPC Response Content Type\nThe issue [#389](https://github.com/ethereum-optimism/specs/issues/389), concerning missing content types in RPC responses for `eth_rpc` queries from OP Chain A and B, saw a new comment from OBlackmon3 asking how to suggest a fix. This indicates ongoing interest in resolving the RPC response formatting.", "2025-09-04T03:29:36.242Z"]
["ethereum-optimism/superchain-registry_day_2025-08-20", "ethereum-optimism/superchain-registry", "day", "2025-08-20", "# ethereum-optimism/superchain-registry Daily Update (Aug 20, 2025)\n## OVERVIEW \nThe day's development focused on routine maintenance, specifically updating codegen results to reflect recent changes in chain data. This ensures the registry remains current and accurate.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Codegen Updates\n*   Updated codegen results, affecting `chainList.json`, `chainList.toml`, and `superchain/extra/addresses/addresses.json` to synchronize with the latest data. ([#1098](https://github.com/ethereum-optimism/superchain-registry/pull/1098))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on this day.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were reported on this day.\n\n## ACTIVE ISSUES\n\n### RPC Response Content Type Issue\nDiscussion continues on [#389](https://github.com/ethereum-optimism/superchain-registry/issues/389) regarding missing content types in RPC responses for OP Chain A and B. A new comment from OBlackmon3 on Aug 20, 2025, asks for guidance on suggesting a fix, indicating ongoing community interest in resolving this issue. The problem is also believed to affect how wagmi reads `eth_getTransactionReceipt`.\n\n### Event System Refinement\nIssue [#17001](https://github.com/ethereum-optimism/superchain-registry/issues/17001) discusses the removal of two events from the event system. On Aug 20, 2025, joshklop provided a link to a relevant pull request ([https://github.com/ethereum-optimism/optimism/pull/17165](https://github.com/ethereum-optimism/optimism/pull/17165)) for the second event, following up on a previous link for the first event. This issue was subsequently closed on Aug 21, 2025.", "2025-09-04T03:29:37.370Z"]
["ethereum-optimism/design-docs_day_2025-08-21", "ethereum-optimism/design-docs", "day", "2025-08-21", "# ethereum-optimism/design-docs Daily Update (Aug 21, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out several long-standing issues related to proofs, acceptance testing, and event system cleanup. Efforts are ongoing to improve contract verification processes.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**Proofs System and Acceptance Testing Finalization**\nThe work on interop acceptance testing for the proofs system has been completed and closed. This includes the finalization of `op-challenger` acceptance tests for interop chains, ensuring the functionality for disputing invalid proposals.\n- [#15946](https://github.com/ethereum-optimism/design-docs/issues/15946)\n- [#15948](https://github.com/ethereum-optimism/design-docs/issues/15948)\n\n**Event System Cleanup**\nTwo events have been successfully removed from the event system, streamlining the codebase.\n- [#17001](https://github.com/ethereum-optimism/design-docs/issues/17001)\n\n**Test Target Setup Refinement**\nAn issue concerning the incorporation of test target setup/teardown as an `op-acceptor` concern was closed, with the rationale that Kurtosis is no longer considered critical for network testing compared to `sysgo`.\n- [#375](https://github.com/ethereum-optimism/design-docs/issues/375)\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n\n**Contract Verification Improvements**\nDiscussion on [#14813](https://github.com/ethereum-optimism/design-docs/issues/14813) highlights the ongoing effort to enhance contract verification. The latest comment from `bitwise` suggests revisiting `op-deployer` contract verification to leverage `forge verify-contract` once `forge` binary support is implemented. This aims to reduce custom verification code and streamline the process for both Etherscan and Blockscout. Earlier discussions also considered integrating with Sourcify for broader block explorer compatibility.", "2025-09-04T03:29:37.898Z"]
["ethereum-optimism/community-hub_day_2025-08-21", "ethereum-optimism/community-hub", "day", "2025-08-21", "# ethereum-optimism/community-hub Daily Update (Aug 21, 2025)\n## OVERVIEW \nThe day's activity focused on cleanup and maintenance within the `community-hub` repository, specifically removing outdated documentation files related to contribution paths. Several long-standing issues, including those concerning proof system acceptance testing and event system cleanup, were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Cleanup\nOutdated documentation files related to contribution paths were removed, streamlining the `pages/contribute` section. This includes the removal of `ambassador-req.mdx` and `translators.mdx`, and an update to the `_meta.json` file to reflect these changes.\n- [#1174](https://github.com/ethereum-optimism/community-hub/pull/1174)\n- [#1175](https://github.com/ethereum-optimism/community-hub/pull/1175)\n- [#1176](https://github.com/ethereum-optimism/community-hub/pull/1176)\n\n## NEWLY OPENED PULL REQUESTS\n- No new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Proof System Acceptance Testing\nTwo key issues related to the proof system acceptance testing for interop chains were closed. This includes the overarching issue for interop acceptance testing and a specific issue for `op-challenger` acceptance tests, indicating significant progress in validating the proof system.\n- [#15946](https://github.com/ethereum-optimism/community-hub/issues/15946)\n- [#15948](https://github.com/ethereum-optimism/community-hub/issues/15948)\n\n### Event System Cleanup\nAn issue tracking the removal of two events from the event system was closed, with links to the relevant pull requests that completed the task.\n- [#17001](https://github.com/ethereum-optimism/community-hub/issues/17001)\n\n### Test Target Setup Refinement\nAn issue concerning the incorporation of test target setup/teardown as an `op-acceptor` concern was closed, with the rationale that Kurtosis is no longer considered as important for network testing compared to Sysgo.\n- [#375](https://github.com/ethereum-optimism/community-hub/issues/375)\n\n## NEW ISSUES\n- No new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Contract Verification Improvements\nDiscussion on [#14813](https://github.com/ethereum-optimism/community-hub/issues/14813) highlights the ongoing effort to improve contract verification. The latest comment suggests revisiting `op-deployer` contract verification to leverage `forge verify-contract` once forge binary support is implemented. This aims to reduce custom verification code and streamline the process by passing correct arguments to the forge command. Earlier discussions also considered using Sourcify for verification.", "2025-09-04T03:29:38.096Z"]
["ethereum-optimism/specs_day_2025-08-21", "ethereum-optimism/specs", "day", "2025-08-21", "# ethereum-optimism/specs Daily Update (Aug 21, 2025)\n## OVERVIEW \nToday's development focused on refining supervisor data availability error codes and linking RPC error codes within the `specs/interop` directory. Several long-standing issues related to proofs interop acceptance testing and event system cleanup were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Supervisor Interoperability Enhancements\nWork continued on improving the clarity and structure of supervisor-related specifications. This included refactoring data availability error codes to align with ongoing efforts towards a specific issue ([#724](https://github.com/ethereum-optimism/specs/pull/724)) and linking supervisor RPC error codes to the contents section for better navigation and reference ([#685](https://github.com/ethereum-optimism/specs/pull/685)). These changes primarily affected the `specs/interop/supervisor.md` file.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Proofs Interoperability Acceptance Testing Completed\nSignificant progress was made in the area of proofs interoperability. The umbrella issue for \"proofs: Interop Acceptance Testing\" ([#15946](https://github.com/ethereum-optimism/specs/issues/15946)) was closed as all sub-issues were completed. Specifically, the \"op-challenger acceptance tests on interop\" issue ([#15948](https://github.com/ethereum-optimism/specs/issues/15948)) was also closed, indicating that acceptance tests for op-challenger functionality on interop chains are now in place.\n\n### Event System Cleanup\nTwo events were successfully removed from the event system ([#17001](https://github.com/ethereum-optimism/specs/issues/17001)), with associated pull requests already merged in the `optimism` repository.\n\n### Test Target Setup Refinement\nThe issue concerning the incorporation of test target setup/teardown as an `op-acceptor` concern ([#375](https://github.com/ethereum-optimism/specs/issues/375)) was closed. The rationale for closing was that Kurtosis is no longer considered as important for network testing compared to Sysgo.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Contract Verification Improvements\nThe discussion around \"contract verification improvements\" ([#14813](https://github.com/ethereum-optimism/specs/issues/14813)) saw a recent comment from `bitwiseguy` on August 21, 2025. The suggestion is to revisit `op-deployer` contract verification once `forge` binary support is implemented, allowing for shelling out to `forge verify-contract` for verification against Etherscan and Blockscout. This approach aims to reduce custom verification code by leveraging `forge`'s capabilities. Earlier comments also suggested considering Sourcify for verification.", "2025-09-04T03:29:40.791Z"]
["ethereum-optimism/superchain-ops_day_2025-08-21", "ethereum-optimism/superchain-ops", "day", "2025-08-21", "# ethereum-optimism/superchain-ops Daily Update (Aug 21, 2025)\n## OVERVIEW \nToday's activity focused on closing out several long-standing issues related to proofs and acceptance testing, indicating significant progress in validating core Optimism functionalities. Additionally, an issue concerning contract verification improvements saw new discussion.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, tests added, or other work were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Proofs System Acceptance Testing\nThe umbrella issue for proofs interop acceptance testing, [#15946](https://github.com/ethereum-optimism/superchain-ops/issues/15946), was closed as all sub-issues are complete. This includes the closure of [#15948](https://github.com/ethereum-optimism/superchain-ops/issues/15948), which focused on `op-challenger` acceptance tests for interop chains, asserting its functionality in disputing invalid proposals.\n\n### Event System Refinement\nTwo events were removed from the event system, leading to the closure of issue [#17001](https://github.com/ethereum-optimism/superchain-ops/issues/17001).\n\n### Test Target Setup\nIssue [#375](https://github.com/ethereum-optimism/superchain-ops/issues/375), concerning the incorporation of test target setup/teardown as an `op-acceptor` concern, was closed as Kurtosis is no longer considered important for network testing compared to Sysgo.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Contract Verification Improvements\nIssue [#14813](https://github.com/ethereum-optimism/superchain-ops/issues/14813) saw recent discussion regarding contract verification improvements. The latest comment suggests revisiting `op-deployer` contract verification once Forge binary support is implemented, aiming to leverage `forge verify-contract` and reduce custom verification code. Previous discussions also considered using Sourcify for verification.", "2025-09-04T03:29:41.121Z"]
["ethereum-optimism/docs_day_2025-08-22", "ethereum-optimism/docs", "day", "2025-08-22", "# ethereum-optimism/docs Daily Update (Aug 22, 2025)\n## OVERVIEW \nThe day's activity focused on documentation maintenance, specifically removing an outdated deprecation notice related to Custom Gas Tokens. This ensures the documentation remains current and accurate for users.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Maintenance\n*   Removed the deprecation notice for Custom Gas Tokens, updating `pages/notices/_meta.json` and `pages/notices/custom-gas-tokens-deprecation.mdx` to reflect current information. ([#1721](https://github.com/ethereum-optimism/docs/pull/1721))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Validation Test Refinement\nDiscussion on [#686](https://github.com/ethereum-optimism/docs/issues/686) continues regarding adding validation tests for chain configurations. The latest comment from alfonso-op (2025-08-22T17:01:27Z) indicates a planned discussion with @bitwiseguy and Tess to review \"not planned\" validation tests and determine if any should still be implemented. This follows an earlier action item for @bitwiseguy to create sub-issues for different validation tests (2024-12-11T15:13:17Z). Previous comments from geoknee (2024-11-25T18:04:39Z) suggested moving complexity into pure functions for easier testing and increasing code coverage, highlighting the brittleness of TOML file parsing (2024-11-25T18:02:51Z).", "2025-09-04T03:29:43.015Z"]
["ethereum-optimism/infra_day_2025-08-22", "ethereum-optimism/infra", "day", "2025-08-22", "# ethereum-optimism/infra Daily Update (Aug 22, 2025)\n## OVERVIEW \nToday's development focused on a new work-in-progress feature related to consensus layer proxy polling. Discussions continued on an active issue concerning validation testing, with a recent comment from alfonso-op.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#449](https://github.com/ethereum-optimism/infra/pull/449), was opened. This PR is a work-in-progress feature for a `consensus_aware_consensus_layer proxyd poller`, with a note that it needs cleaning up.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Validation Test Coverage and Strategy\nDiscussion continued on [#686](https://github.com/ethereum-optimism/infra/issues/686), which addresses the need for improved validation testing to prevent bugs. The latest comment from alfonso-op (Aug 22, 2025) suggests a follow-up chat with @bitwiseguy and Tess to review validation tests marked as \"not planned\" and determine if any should still be implemented. Earlier comments from alfonso-op (Dec 11, 2024) tasked @bitwiseguy with creating sub-issues for specific validation tests. geoknee (Nov 25, 2024) proposed moving complexity into pure functions in regular `.go` files to formalize them as production code, making them easier to test and improve code coverage. geoknee also highlighted the brittleness of TOML file parsing and the issue of ignoring empty structs, which can lead to easy breakage, referencing [#705](https://github.com/ethereum-optimism/infra/issues/705).", "2025-09-04T03:29:43.611Z"]
["ethereum-optimism/superchain-ops_day_2025-08-22", "ethereum-optimism/superchain-ops", "day", "2025-08-22", "# ethereum-optimism/superchain-ops Daily Update (Aug 22, 2025)\n\n## OVERVIEW \nThe day's development focused on adding a new template contract, `UpdateRetirementTimestampV400`, compatible with `op-contracts/v4.0.0`. This involved modifications across `src/improvements` and `test/tasks` directories.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Contract Template Expansion\nA new template contract, `UpdateRetirementTimestampV400`, was introduced to support `op-contracts/v4.0.0` compatibility. This addition involved creating new files and updating existing test configurations to accommodate the new template. ([#1171](https://github.com/ethereum-optimism/superchain-ops/pull/1171))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Validation Testing Enhancements\nDiscussion on issue [#686](https://github.com/ethereum-optimism/superchain-ops/issues/686) continues, focusing on improving validation testing to prevent bugs similar to #685. The latest comment from alfonso-op on August 22, 2025, suggests a follow-up discussion with @bitwiseguy and Tess to review \"not planned\" validation tests for potential implementation. Previous discussions highlighted the need to refactor tests, move complexity into pure functions for better testability, and increase code coverage, especially for parsing standard TOML files which are prone to errors.", "2025-09-04T03:29:43.847Z"]
["ethereum-optimism/design-docs_day_2025-08-24", "ethereum-optimism/design-docs", "day", "2025-08-24", "# ethereum-optimism/design-docs Daily Update (Aug 24, 2025)\n## OVERVIEW \nA new design document was added for the `op-deployer` focusing on the use of Forge, indicating progress in deployment tooling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Deployment Tooling Documentation\nA design document was added for `op-deployer` detailing the use of Forge, contributing to the `protocol` area. ([#325](https://github.com/ethereum-optimism/design-docs/pull/325))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n\n### Flashblocks Monitoring and Alerting Improvements\nDiscussion on [#16388](https://github.com/ethereum-optimism/design-docs/issues/16388) continued with a new comment from yashvardhan-kukreja linking to an associated PR in the `k8s` repository. Previous discussions outlined rough notes for monitoring and alerting, including peer count, block progression SLAs, pending transaction thresholds, flashblocks-related SLA metrics, and monitoring for `flashblocks-websocket-proxy` connections and `flashblocks-rpc` node-reth metrics. The discussion also touched upon inheriting `op-node` alerts and metrics for `op-node-rbuilder`.", "2025-09-04T03:29:45.911Z"]
["ethereum-optimism/design-docs_day_2025-08-25", "ethereum-optimism/design-docs", "day", "2025-08-25", "# ethereum-optimism/design-docs Daily Update (Aug 25, 2025)\n## OVERVIEW \nThe day saw the opening of two new pull requests, one for a Reactive Security Council and another for a fee splitter. Several issues were closed, primarily related to internal tooling, logging, and a postmortem.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n- A proposal for a [Reactive Security Council](https://github.com/ethereum-optimism/design-docs/pull/327) was initiated.\n- A feature to [add a fee splitter](https://github.com/ethereum-optimism/design-docs/pull/328) was introduced.\n\n## CLOSED ISSUES\n\n### Internal Tooling and Event System Refinements\nSeveral issues related to internal tooling and event handling were closed. This includes the closure of [#16874](https://github.com/ethereum-optimism/design-docs/issues/16874) concerning an \"Event Call Graph\" for `op-service`, as the team is leaning towards removing the entire event system. Additionally, [#17151](https://github.com/ethereum-optimism/design-docs/issues/17151) regarding \"Missing test logs\" in `op-acceptance-tests` was closed as the logs were located.\n\n### Logging and Postmortem Documentation\nIssues related to logging and postmortem analysis were addressed. [#17007](https://github.com/ethereum-optimism/design-docs/issues/17007) on cleaning up `op-up` logging was closed, as it was deemed not worthwhile without `op-geth` eliminating global logger use. The postmortem for a \"Scalar fix\" in [#17012](https://github.com/ethereum-optimism/design-docs/issues/17012) was also closed, indicating its completion.\n\n### Consensus-Influencing Event Nonces\nThe tracking issue [#13543](https://github.com/ethereum-optimism/design-docs/issues/13543) concerning \"Consensus influencing event nonces\" was closed, with the rationale that its implementation is not planned for the time being.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments to report for this period.", "2025-09-04T03:29:48.774Z"]
["ethereum-optimism/design-docs_day_2025-08-26", "ethereum-optimism/design-docs", "day", "2025-08-26", "# ethereum-optimism/design-docs Daily Update (Aug 26, 2025)\n## OVERVIEW \nThe day saw significant progress in protocol design with the introduction of Custom Gas Token support and documentation enhancements for the LiquidityController.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Custom Gas Token (CGT) Protocol Design\nA new design for Custom Gas Token (CGT) support on OP Stack was introduced, replacing previous experimental approaches with a minimal, flexible, and future-proof architecture. This aims to support a broader range of gas token functionalities. ([#305](https://github.com/ethereum-optimism/design-docs/pull/305))\n\n### Liquidity Controller Documentation Update\nDocumentation for the `LiquidityController` was enhanced by adding details for a new `deauthorizeMinter` function. This function enables chain operators to remove, replace, or deprecate previously authorized minters, improving operational flexibility. ([#329](https://github.com/ethereum-optimism/design-docs/pull/329))\n\n## NEWLY OPENED PULL REQUESTS\nNone.\n\n## CLOSED ISSUES\n\n### Challenger Support in op-up\nThe issue concerning the support of the challenger in `op-up` was closed, with the conclusion that distributing the challenger within `op-up` for `sysgo` use is likely not worth the effort. The focus will shift towards other backends like Docker that do not require binary distribution. ([#17005](https://github.com/ethereum-optimism/design-docs/issues/17005))\n\n## NEW ISSUES\nNone.\n\n## ACTIVE ISSUES\n\n### op-proposer Failed to Create Transaction ([#13502](https://github.com/ethereum-optimism/design-docs/issues/13502))\nThe discussion on this issue, which concerns the `op-proposer` failing to create transactions, saw a key resolution. A user confirmed that setting `--game-type=1` fixed the problem, aligning with previous suggestions to check and correctly configure the game type, especially for `PermissionedFaultDisputeGame`.\n\n### Sync Test Using the Sync-Tester ([#16703](https://github.com/ethereum-optimism/design-docs/issues/16703))\nThe issue was reopened to address the need for testing every Hard Fork (HF) transition, not just Isthmus. New test case ideas were proposed, including checking all OP Stack HF transitions with real data, validating multiple CLs syncing together with individual mock EL endpoints, and testing user transactions within L2 blocks to ensure L2CLs are synced. Items 2 and 3 are being tracked in a separate issue.\n\n### Load Testing Flashblocks on Devnets ([#16756](https://github.com/ethereum-optimism/design-docs/issues/16756))\nThe issue, which aims to perform load tests on `eris-0` to ensure public readiness, was briefly marked as done by accident but is still active. The team is currently working on a report summarizing the outcomes, including load test scenarios, networks used, and results.\n\n### Alert When Non-Flashblocks-Enabled Sequencer is Active or Flashblocks are Turned Off ([#16867](https://github.com/ethereum-optimism/design-docs/issues/16867))\nThis issue focuses on creating an alert for situations where a non-flashblocks-enabled sequencer becomes active or flashblocks are disabled, indicating a potential issue. A pull request related to `rollup-boost` is in progress, and an alert will be created once it lands.\n\n### Alert on Low Peer Count Health of Flashblocks-Enabled Sequencer ([#16868](https://github.com/ethereum-optimism/design-docs/issues/16868))\nThe discussion highlighted the criticality of healthy peers for flashblocks-enabled sequencers. It was noted that peer count alerting for `op-node` sequencer peering already exists for counts less than 2. The plan is to extend this by adding `reth`/`op-rbuilder` peer count alerts for this specific scenario.", "2025-09-04T03:29:55.544Z"]
["ethereum-optimism/design-docs_day_2025-08-28", "ethereum-optimism/design-docs", "day", "2025-08-28", "# ethereum-optimism/design-docs Daily Update (Aug 28, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to refine documentation, specifically removing irrelevant lines from a creator pattern document. Discussions continued on several active issues, including enabling flashblock tests, improving monorepo CI for `op-geth` PRs, and enhancing documentation for `op-deployer`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#330](https://github.com/ethereum-optimism/design-docs/pull/330), was opened to fix and clarify the creator pattern documentation by removing irrelevant and unclear lines regarding immutable arguments.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Documentation for `op-deployer`\nDiscussion on [#1530](https://github.com/ethereum-optimism/design-docs/issues/1530) continued with a new comment from krofax, who highlighted a \"rich PR\" ([#1705](https://github.com/ethereum-optimism/docs/pull/1705)) that overhauls the existing \"Create an op stack Rollup testnet with op-deployer\" documentation. This suggests ongoing efforts to improve the clarity and accuracy of deployment guides.\n\n### Monorepo CI for `op-geth` PRs\nThe discussion on [#665](https://github.com/ethereum-optimism/design-docs/issues/665) saw a new comment from ajsutton proposing \"Option C\": a periodic job in the monorepo to check for the latest `op-geth` commit from the optimism branch. This job would notify via Slack if it fails, aiming to quickly alert to integration issues, though it might produce false alarms between `op-geth` and monorepo PR merges.\n\n### Flashblock Tests for Persistent Devnets\nStevmark11 commented on [#17248](https://github.com/ethereum-optimism/design-docs/issues/17248), reiterating the need to enable flashblock tests against persistent devnets. The comment emphasizes that the necessary gate is already in place, and the primary task is to ensure its correct functionality, classifying it as an XS-S task size.", "2025-09-04T03:30:07.611Z"]
["ethereum-optimism/design-docs_day_2025-08-29", "ethereum-optimism/design-docs", "day", "2025-08-29", "# ethereum-optimism/design-docs Daily Update (Aug 29, 2025)\n## OVERVIEW \nThe day saw a new pull request clarifying dispute game creators and the closure of an issue related to the min-base-fee specification. Discussions continued on deprecating the req-resp p2p sync, with new insights into alternative unsafe block sync mechanisms.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#331](https://github.com/ethereum-optimism/design-docs/pull/331), was opened to clarify the design document regarding dispute game creators.\n\n## CLOSED ISSUES\n\n### Specification Finalization\nThe issue related to the `min-base-fee` specification, [#742](https://github.com/ethereum-optimism/design-docs/issues/742), was closed today, indicating its finalization via a related pull request in the specs repository.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Deprecating Req-Resp P2P Sync\nDiscussion continued on [#14108](https://github.com/ethereum-optimism/design-docs/issues/14108), which aims to remove the req-resp p2p sync. The latest comment from `tessr` provided extensive context and ideas from @emilianobonassi regarding an alternative unsafe block sync mechanism. This alternative is highlighted for being cheaper, simpler, faster for scale-out and recovery, and complementary to existing p2p methods. It proposes a centralized driver for gossiping blocks, where the sequencer leader publishes the latest unsafe block via Redis, and other nodes subscribe and inject it via the `admin_postUnsafePayload` API. On restarts, a sidecar checks sync status against the sequencer leader and queries the EL to fetch and inject blocks.", "2025-09-04T03:30:15.595Z"]
["ethereum-optimism/docs_day_2025-08-31", "ethereum-optimism/docs", "day", "2025-08-31", "# ethereum-optimism/docs Daily Update (Aug 31, 2025)\n## OVERVIEW \nThe day's activity for the `ethereum-optimism/docs` repository primarily involved dependency management, with a new pull request opened to update the `next` package.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Dependency Updates\nA new pull request was opened to update the `next` package from version 14.2.21 to 14.2.32, ensuring the documentation site utilizes the latest stable version of the framework.\n- [#1729](https://github.com/ethereum-optimism/docs/pull/1729)\n\n## NEWLY OPENED PULL REQUESTS\n- [#1729](https://github.com/ethereum-optimism/docs/pull/1729): This pull request proposes bumping the `next` dependency from version 14.2.21 to 14.2.32.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo issues had more than 3 comments today.", "2025-09-04T03:30:20.987Z"]
["ethereum-optimism/Retro-Funding_day_2025-09-01", "ethereum-optimism/Retro-Funding", "day", "2025-09-01", "# ethereum-optimism/Retro-Funding Daily Update (Sep 1, 2025)\n## OVERVIEW \nThe day saw the resolution of an `op-proposer` error related to `GameAlreadyExists` and ongoing discussions regarding `op-dispute-mon` support for new game types, specifically Kona and Cannon.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**Proposer Error Resolution**\nAn issue concerning persistent `op-proposer` errors, specifically `GameAlreadyExists`, was closed. The error was clarified to be expected when the safe head has not advanced, leading to repeated proposals of the same output. Solutions involve ensuring the batcher is running correctly and potentially shortening its maximum channel duration for more frequent proposals. ([#17042](https://github.com/ethereum-optimism/Retro-Funding/issues/17042))\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n\n**Dispute Monitor Support for New Game Types**\nDiscussions continued on the need for `op-dispute-mon` to support `cannon-kona` game types ([#17286](https://github.com/ethereum-optimism/Retro-Funding/issues/17286)). The initial understanding that `dispute-mon` should only look at specific game types was clarified; it must return an error if it encounters an unsupported game type. The issue was updated to reflect the need to support `cannon-kona` games.", "2025-09-04T03:30:21.627Z"]
["ethereum-optimism/docs_day_2025-09-01", "ethereum-optimism/docs", "day", "2025-09-01", "# ethereum-optimism/docs Daily Update (Sep 1, 2025)\n## OVERVIEW \nThe day's activity focused on documentation maintenance with a new pull request to remove a dead link. Two new issues were opened for August metrics reports, and one issue related to `op-proposer` errors was closed after discussion.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1732](https://github.com/ethereum-optimism/docs/pull/1732), was opened to remove a dead link from the documentation.\n\n## CLOSED ISSUES\n\n### Op-proposer Error Resolution\nIssue [#17042](https://github.com/ethereum-optimism/docs/issues/17042), concerning persistent `op-proposer` errors, was closed. The discussion clarified that `GameAlreadyExists` errors are expected if the safe head has not advanced, indicating no new valid proposals. Solutions involve ensuring the batcher is running correctly and potentially shortening its maximum channel duration.\n\n## NEW ISSUES\n\n### Monthly Metrics Reports\nTwo new issues were opened to track monthly metrics:\n- [#1730](https://github.com/ethereum-optimism/docs/issues/1730) for the August 2025 metrics report on closed issues.\n- [#1731](https://github.com/ethereum-optimism/docs/issues/1731) for the August 2025 metrics report on opened pull requests.\n\n## ACTIVE ISSUES\n\n### Op-dispute-mon Support for Kona + Cannon\nIssue [#17286](https://github.com/ethereum-optimism/docs/issues/17286) discusses the need for `op-dispute-mon` to support `cannon-kona` game types. The latest comment from pauldowman indicates a change to \"Update to support cannon-kona games.\" Earlier, ajsutton clarified that `dispute-mon` must return an error for unsupported game types and that arbitrary game types cannot be created without an existing implementation. The core challenge is updating `dispute-mon` to recognize and handle these new game types.", "2025-09-04T03:30:23.067Z"]
["ethereum-optimism/infra_day_2025-09-01", "ethereum-optimism/infra", "day", "2025-09-01", "# ethereum-optimism/infra Daily Update (Sep 1, 2025)\n## OVERVIEW \nThe day's activity focused on addressing an `op-proposer` error and discussing `op-dispute-mon` support for new game types. A key `op-proposer` issue was closed with a clear explanation of expected behavior.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Op-proposer Error Clarification\nThe issue regarding `op-proposer` errors was closed, with an explanation that the `GameAlreadyExists` error is expected when the safe head has not advanced, meaning there is no new valid proposal. Users are advised to ensure the batcher is running correctly and consider shortening its maximum channel duration for more frequent proposals. ([#17042](https://github.com/ethereum-optimism/infra/issues/17042))\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n### Kona + Cannon: op-dispute-mon support\nDiscussion continued on supporting Kona + Cannon game types in `op-dispute-mon` ([#17286](https://github.com/ethereum-optimism/infra/issues/17286)). A comment clarified that `dispute-mon` must return an error for unsupported game types and that an implementation for a game type must be set before it can be created. The need to update `dispute-mon` to specifically support cannon-kana game types was highlighted.", "2025-09-04T03:30:23.086Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-01", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-01", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 1, 2025)\n## OVERVIEW \nThe day saw the opening of a new pull request to add the FLIXX token for Base. A significant issue regarding `op-proposer` errors was closed, with a resolution provided. Discussions continued on an active issue concerning `op-dispute-mon` support for Kona + Cannon game types.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1195](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1195), was opened to add the FLIXX token for Base.\n\n## CLOSED ISSUES\n### Proposer Error Resolution\nIssue [#17042](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17042), concerning `op-proposer` errors, was closed. The errors, primarily `GameAlreadyExists`, were clarified as expected behavior when the safe head has not advanced, leading to no new valid proposals. The resolution suggests ensuring the batcher is running correctly and considering shortening its maximum channel duration for more frequent proposals.\n\n## NEW ISSUES\nNo new issues were opened.\n\n## ACTIVE ISSUES\n### Dispute Monitor Support for New Game Types\nIssue [#17286](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17286), \"Kona + Cannon: op-dispute-mon support,\" remains active. The discussion revolves around the need for `op-dispute-mon` to support `cannon-kona` game types. Ajsutton clarified that `dispute-mon` must return an error for unsupported game types and that arbitrary game types cannot be created without an existing implementation. The issue was updated to specifically state \"Update to support cannon-kona games.\"", "2025-09-04T03:30:23.213Z"]
["ethereum-optimism/optimism_day_2025-09-01", "ethereum-optimism/optimism", "day", "2025-09-01", "# ethereum-optimism/optimism Daily Update (Sep 1, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure with explicit sync tester bindings and refining the op-challenger's response delay configuration. A significant change was the removal of the frozen file check, streamlining the development process.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Testing Infrastructure Enhancements\n- Explicitly exposed read-only Execution Layer (EL) access for preset interactions within the sync tester, improving testability and interaction with the EL using DSL. ([#17275](https://github.com/ethereum-optimism/optimism/pull/17275))\n\n### Op-Challenger Configuration Improvements\n- Introduced configurable parameters (`ResponseDelay` and `ResponseDelayAfter`) to control the delay between game responses in the op-challenger, allowing for more flexible and robust testing of fault proofs. ([#16988](https://github.com/ethereum-optimism/optimism/pull/16988))\n\n### Development Workflow Streamlining\n- Removed the frozen file check from the CI/CD pipeline, indicating a shift away from strict code freezing and aiming to accelerate the `develop` branch's progress. ([#17289](https://github.com/ethereum-optimism/optimism/pull/17289))\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#17295](https://github.com/ethereum-optimism/optimism/pull/17295), was opened to add bounds checking and validation to the `calculateSubWordMaskAndOffset` function within the MIPS EVM.\n\n## CLOSED ISSUES\n\n### Op-Proposer Error Resolution\n- The issue regarding persistent `op-proposer` errors ([#17042](https://github.com/ethereum-optimism/optimism/issues/17042)) was closed. The errors, primarily `GameAlreadyExists`, are expected when the safe head has not advanced, meaning no new valid proposals can be made. The resolution suggests ensuring the batcher is running correctly and potentially shortening its maximum channel duration for more frequent proposals.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Dispute Monitor Support for New Game Types\n- Issue [#17286](https://github.com/ethereum-optimism/optimism/issues/17286), concerning `op-dispute-mon` support for Kona + Cannon game types, remains active. The discussion clarifies that `dispute-mon` must return an error for unsupported game types. The core challenge is to update `dispute-mon` to explicitly support `cannon-kona` game types, rather than changing it to only look at specific game types. The issue description was updated to reflect the need to \"Update to support cannon-kona games.\"", "2025-09-04T03:30:25.208Z"]
["ethereum-optimism/Retro-Funding_day_2025-09-02", "ethereum-optimism/Retro-Funding", "day", "2025-09-02", "# ethereum-optimism/Retro-Funding Daily Update (Sep 2, 2025)\n## OVERVIEW \nThe primary focus for the day was on establishing the foundational scaffolding for Season 8 (S8) retro funding calculations, replicating the Season 7 structure with unified tooling to create a generic, season-agnostic framework.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Retro Funding Calculation Scaffolding\n- Initial scaffolding for Season 8 (S8) retro funding calculations has been added, mirroring the Season 7 structure. This includes new configuration, data fetching, and processing utilities designed to be season-agnostic. ([#74](https://github.com/ethereum-optimism/Retro-Funding/pull/74))\n- Core models for allocators, devtooling, and onchain builders have been introduced or updated to support the new generic framework. ([#74](https://github.com/ethereum-optimism/Retro-Funding/pull/74))\n- New query files for S8 have been added alongside existing S7 queries, facilitating data retrieval for both seasons within the unified tooling. ([#74](https://github.com/ethereum-optimism/Retro-Funding/pull/74))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Kona + Cannon Support in OPCM\nDiscussion on [#17285](https://github.com/ethereum-optimism/Retro-Funding/issues/17285) centers on the necessary changes in OPCM to support Kona + Cannon. The latest comment from ajsutton confirms that OPCM will need to support deploying the new game type, specifically highlighting a code block in `contracts-bedrock` that will require updates. Earlier, pauldowman suggested confirming if any changes are needed before closing the issue.\n\n### Kona + Cannon Support in op-dispute-mon\nIssue [#17286](https://github.com/ethereum-optimism/Retro-Funding/issues/17286) addresses the need for `op-dispute-mon` to support Kona + Cannon game types. pauldowman updated the issue description to \"Update to support cannon-kona games.\" ajsutton previously clarified that `dispute-mon` must return an error for unsupported game types and that it will need to be updated to explicitly support cannon-kana game types, rather than just looking at specific game types.", "2025-09-04T03:30:25.240Z"]
["ethereum-optimism/design-docs_day_2025-09-02", "ethereum-optimism/design-docs", "day", "2025-09-02", "# ethereum-optimism/design-docs Daily Update (Sep 2, 2025)\n## OVERVIEW \nThe day's development focused on a critical design document fix for the OPCM Superchain upgrade, ensuring protocol security and alignment with future Superchain interoperability.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Design Document Updates\n*   A design document for the OPCM Superchain upgrade fix was added, addressing a critical fix for the protocol. ([#310](https://github.com/ethereum-optimism/design-docs/pull/310))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Kona + Cannon Support in OPCM\nDiscussion on [#17285](https://github.com/ethereum-optimism/design-docs/issues/17285) revolves around the necessary changes in OPCM to support Kona + Cannon. The latest comment from ajsutton clarifies that OPCM needs to support deploying the new game type, specifically highlighting an `if` block in `OPContractsManager.sol` that will require updates. Earlier, pauldowman suggested confirming if any action is truly needed before closing the issue.\n\n### Kona + Cannon Support in op-dispute-mon\nIssue [#17286](https://github.com/ethereum-optimism/design-docs/issues/17286) focuses on updating `op-dispute-mon` to support Kona + Cannon game types. The latest comment from pauldowman indicates the issue description was changed to \"Update to support cannon-kona games.\" Previously, ajsutton emphasized that `dispute-mon` must return an error for unsupported game types and will need to be updated to explicitly support cannon-kana game types.", "2025-09-04T03:30:25.499Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-02", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-02", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 2, 2025)\n## OVERVIEW \nThe day's activity focused on refining chain data management by closing an issue related to using the Superchain Registry for token lists. Discussions continued on supporting Kona + Cannon in OPCM and op-dispute-mon.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n### Superchain Registry Integration\nThe issue of using the Superchain Registry to pull in chains available for token lists was closed. This aims to streamline chain data management by leveraging the registry instead of maintaining a local list, with a definition of done including validating the flow and updating `chains.ts`. ([#1122](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1122))\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n\n### Kona + Cannon Support in OPCM\nDiscussions continued regarding the necessary changes in OPCM to support Kona + Cannon. A comment from `ajsutton` on September 3rd, 2025, indicated that OPCM needs to support deploying the new game type, specifically highlighting a section in `contracts-bedrock` that will require updates. `pauldowman` on September 2nd, 2025, suggested confirming if any changes are truly needed before closing the issue. ([#17285](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17285))\n\n### Kona + Cannon Support in op-dispute-mon\nThe conversation around `op-dispute-mon` support for Kona + Cannon games saw `pauldowman` on September 2nd, 2025, clarifying the issue description to \"Update to support cannon-kona games.\" Earlier, `ajsutton` on September 1st, 2025, questioned the initial phrasing \"It needs a change to only look at specific game types,\" emphasizing that `dispute-mon` must error on unsupported games and will need to be updated to explicitly support `cannon-kana` game types. ([#17286](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17286))", "2025-09-04T03:30:25.993Z"]
["ethereum-optimism/op-geth_day_2025-09-02", "ethereum-optimism/op-geth", "day", "2025-09-02", "# ethereum-optimism/op-geth Daily Update (Sep 2, 2025)\n## OVERVIEW \nThe primary focus for September 2, 2025, was a significant merge of `go-ethereum v1.16.2` into `op-geth`, updating the codebase with the latest upstream changes. Discussions continued on active issues related to Kona + Cannon support for OPCM and op-dispute-mon.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Upstream Geth Integration\nThe `op-geth` repository was updated by merging `go-ethereum v1.16.2` into the codebase ([#663](https://github.com/ethereum-optimism/op-geth/pull/663)). This merge incorporated numerous changes across various components, including `cmd/geth`, `cmd/workload`, `beacon/params`, `accounts/abi`, and `cmd/devp2p`, ensuring `op-geth` remains aligned with the latest Geth developments.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened on Sep 2, 2025.\n\n## CLOSED ISSUES\nNo issues were closed on Sep 2, 2025.\n\n## NEW ISSUES\nNo new issues were opened on Sep 2, 2025.\n\n## ACTIVE ISSUES\n\n### Kona + Cannon Support for OPCM\nDiscussion continued on verifying the necessary changes in OPCM to support Kona + Cannon ([#17285](https://github.com/ethereum-optimism/op-geth/issues/17285)). The latest comment from ajsutton (2025-09-03T00:12:04Z) indicates that OPCM will need to support deploying the new game type, specifically updating a conditional block in `OPContractsManager.sol`. Previously, pauldowman (2025-09-02T16:09:33Z) suggested confirming if any changes are needed before closing the issue.\n\n### Kona + Cannon Support for op-dispute-mon\nThe issue regarding `op-dispute-mon` support for Kona + Cannon games saw further discussion ([#17286](https://github.com/ethereum-optimism/op-geth/issues/17286)). pauldowman (2025-09-02T21:25:01Z) clarified the issue to \"Update to support cannon-kona games.\" This followed ajsutton's comment (2025-09-01T20:55:30Z) emphasizing that `dispute-mon` must return an error for unsupported game types and will require updates to support cannon-kana game types.", "2025-09-04T03:30:28.226Z"]
["ethereum-optimism/infra_day_2025-09-02", "ethereum-optimism/infra", "day", "2025-09-02", "# ethereum-optimism/infra Daily Update (Sep 2, 2025)\n## OVERVIEW \nThe day's development focused on significant refactoring within the `op-acceptor` component, enhancing test runner modularity and logging capabilities. Additionally, two key acceptance testing issues related to porting tests to Devstack were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### `op-acceptor` Test Runner Refactoring\nThe monolithic `op-acceptor` test runner was significantly refactored into five focused components, improving maintainability and separation of concerns. This involved splitting the 1,755-line `runner.go` file into `TestExecutor`, `OutputParser`, and other modules. ([#448](https://github.com/ethereum-optimism/infra/pull/448))\n\n### Enhanced `op-acceptor` Logging\nLogging within `op-acceptor` was refined by splitting per-test logs into three distinct files: a plaintext `.txt` file, a raw JSON `.json` file, and a test result summary `.log` file. The HTML report was also updated to link to these new log formats. ([#453](https://github.com/ethereum-optimism/infra/pull/453))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Devstack Test Porting\nTwo issues related to porting acceptance tests to Devstack were closed. This includes porting `TestFjord` ([#440](https://github.com/ethereum-optimism/infra/issues/440)) and `TestSmokeTestFailure` along with `TestInteropSystemNoop` ([#444](https://github.com/ethereum-optimism/infra/issues/444)) to the Devstack environment.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Kona + Cannon: OPCM Support\nDiscussion on [#17285](https://github.com/ethereum-optimism/infra/issues/17285) revolves around the necessary changes in OPCM to support Kona + Cannon. The latest comment from ajsutton clarifies that OPCM needs to support deploying the new game type, specifically highlighting a section in `contracts-bedrock` that will require updates. Earlier, pauldowman suggested confirming if any changes are truly needed before closing the issue.\n\n### Kona + Cannon: op-dispute-mon Support\nOn [#17286](https://github.com/ethereum-optimism/infra/issues/17286), the focus is on updating `op-dispute-mon` to support `cannon-kona` game types. pauldowman's latest comment clarifies the issue's objective to \"Update to support cannon-kona games.\" Previously, ajsutton emphasized that `dispute-mon` must return an error for unsupported game types and that it will need to be updated to explicitly support `cannon-kana` game types, rather than just looking at specific types.", "2025-09-04T03:30:28.344Z"]
["ethereum-optimism/superchain-ops_day_2025-09-02", "ethereum-optimism/superchain-ops", "day", "2025-09-02", "# ethereum-optimism/superchain-ops Daily Update (Sep 2, 2025)\n## OVERVIEW \nToday's development focused on performance enhancements for CI processes and a critical bug fix for Worldchain's nonce update. Efforts were made to reduce common CI failures and improve test execution speed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### CI Performance Improvements\nSignificant strides were made in optimizing Continuous Integration (CI) performance. This included reducing concurrent processes to mitigate 502 errors and skipping account access decoding/printing in CI, leading to a 40% performance gain in regression tests.\n- [#1177](https://github.com/ethereum-optimism/superchain-ops/pull/1177)\n- [#1178](https://github.com/ethereum-optimism/superchain-ops/pull/1178)\n\n### Worldchain Nonce Update Fix\nA critical bug related to Worldchain's nonce update was addressed, ensuring the correct nonce number is used for L1 ownership transfers.\n- [#1176](https://github.com/ethereum-optimism/superchain-ops/pull/1176)\n\n## NEWLY OPENED PULL REQUESTS\n- [#1179](https://github.com/ethereum-optimism/superchain-ops/pull/1179): This PR aims to enable and disable LivenessModule2 templates.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Kona + Cannon Support in OPCM\nDiscussion on [#17285](https://github.com/ethereum-optimism/superchain-ops/issues/17285) revolves around the necessary changes in OPCM to support Kona + Cannon. The latest comment from ajsutton suggests that OPCM will need to support deploying the new game type, specifically updating a conditional block in `OPContractsManager.sol`. Earlier, pauldowman questioned if any changes were needed at all, indicating a need for confirmation before closing the issue.\n\n### Kona + Cannon Support in op-dispute-mon\nIssue [#17286](https://github.com/ethereum-optimism/superchain-ops/issues/17286) focuses on updating `op-dispute-mon` to support Kona + Cannon game types. The latest comment from pauldowman clarifies the issue's objective to \"Update to support cannon-kona games.\" Previously, ajsutton emphasized that `dispute-mon` must return an error for unsupported game types and that it needs to be updated to explicitly support cannon-kana game types, rather than just looking at specific game types.", "2025-09-04T03:30:29.125Z"]
["ethereum-optimism/ecosystem_day_2025-09-02", "ethereum-optimism/ecosystem", "day", "2025-09-02", "# ethereum-optimism/ecosystem Daily Update (Sep 2, 2025)\n## OVERVIEW \nToday's development focused on removing the `verbs` packages from the repository, indicating a shift in project structure. Several issues related to marketing site migration and font updates were closed, while new issues were opened to track the React migration and related UI/UX enhancements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Project Restructuring: Verbs Package Removal\n*   The `verbs` service, UI, and SDK packages were removed from the repository, as they have been moved to a separate dedicated repository. This streamlines the `ecosystem` repository by externalizing specific functionalities. ([#946](https://github.com/ethereum-optimism/ecosystem/pull/946))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Marketing Site Font Updates\n*   Multiple issues related to updating fonts on various Optimism applications and documentation sites, including `app.optimism.io`, `docs.optimism.io`, `console.optimism.io`, and `community.optimism.io`, were closed. This indicates a consistent brand font update across the Optimism ecosystem. ([#922](https://github.com/ethereum-optimism/ecosystem/issues/922), [#923](https://github.com/ethereum-optimism/ecosystem/issues/923), [#924](https://github.com/ethereum-optimism/ecosystem/issues/924), [#933](https://github.com/ethereum-optimism/ecosystem/issues/933))\n\n### Design System and Security Enhancements\n*   The implementation of a Storybook and design system for `optimism.io` was completed, suggesting progress in establishing consistent UI/UX guidelines. ([#931](https://github.com/ethereum-optimism/ecosystem/issues/931))\n*   A Content Security Policy (CSP) was added to `oplabs.co`, enhancing the security posture of the site. ([#934](https://github.com/ethereum-optimism/ecosystem/issues/934))\n*   An update to `localchain.dev` was completed, including the addition of \"atlas\" and making the logo clickable. ([#932](https://github.com/ethereum-optimism/ecosystem/issues/932))\n\n## NEW ISSUES\n\n### Optimism Marketing Site React Migration\n*   A tracking issue has been opened for the migration of the Optimism marketing site to a modern stack using Next.js 15 + TypeScript. ([#937](https://github.com/ethereum-optimism/ecosystem/issues/937))\n*   Related setup tasks include establishing a monorepo with shared configurations ([#938](https://github.com/ethereum-optimism/ecosystem/issues/938)), bootstrapping the Next.js app with Netlify CI/CD ([#939](https://github.com/ethereum-optimism/ecosystem/issues/939)), initializing Sanity studio with starter schemas ([#940](https://github.com/ethereum-optimism/ecosystem/issues/940)), and configuring Storybook with Tailwind support ([#941](https://github.com/ethereum-optimism/ecosystem/issues/941)).\n\n### UI/UX and Site Enhancements\n*   Plans are in place to create a shared UI package for reusable components like buttons and typography. ([#942](https://github.com/ethereum-optimism/ecosystem/issues/942))\n*   Core site elements such as navigation, footer, hero, and card grid components are slated for implementation. ([#943](https://github.com/ethereum-optimism/ecosystem/issues/943))\n*   The introduction of Framer Motion basics for shared animation patterns is also planned. ([#944](https://github.com/ethereum-optimism/ecosystem/issues/944))\n*   A spike has been initiated to explore `status.optimism.io`. ([#945](https://github.com/ethereum-optimism/ecosystem/issues/945))\n\n## ACTIVE ISSUES\n\n### Kona + Cannon: OPCM Support ([#17285](https://github.com/ethereum-optimism/ecosystem/issues/17285))\n*   The discussion revolves around verifying necessary changes in OPCM to support Kona + Cannon, specifically ensuring it doesn't assume Cannon as the only game type.\n*   A comment from ajsutton clarifies that OPCM needs to support deploying the new game type, and a specific `if` block in `OPContractsManager.sol` will likely require updates.\n*   pauldowman suggests confirming if any action is truly needed before closing the issue.\n\n### Kona + Cannon: op-dispute-mon Support ([#17286](https://github.com/ethereum-optimism/ecosystem/issues/17286))\n*   The issue addresses the need for `op-dispute-mon` to support Kona + Cannon game types, as it currently explicitly checks for certain game types.\n*   ajsutton questions the initial phrasing \"only look at specific game types,\" emphasizing that `dispute-mon` *must* return an error for unsupported game types and that new game types require explicit support.\n*   pauldowman updated the issue description to \"Update to support cannon-kona games,\" reflecting the need for direct support for the new game types.", "2025-09-04T03:30:29.189Z"]
["ethereum-optimism/superchain-registry_day_2025-09-02", "ethereum-optimism/superchain-registry", "day", "2025-09-02", "# ethereum-optimism/superchain-registry Daily Update (Sep 2, 2025)\n## OVERVIEW \nToday's development focused on refining the CI pipeline by removing the Codecov integration. Additionally, a new pull request was opened to update contract addresses, and discussions continued on active issues related to Kona + Cannon support in OPCM and op-dispute-mon.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### CI Pipeline Enhancements\nThe continuous integration configuration was streamlined by removing the Codecov integration, which was causing build failures. This change aims to improve the reliability of the CI pipeline. ([#1101](https://github.com/ethereum-optimism/superchain-registry/pull/1101))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1100](https://github.com/ethereum-optimism/superchain-registry/pull/1100), was opened to update contract addresses for u16. This PR is currently open and awaiting review.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Kona + Cannon Support in OPCM\nDiscussions continued on [#17285](https://github.com/ethereum-optimism/superchain-registry/issues/17285) regarding the changes needed in OPCM to support Kona + Cannon. The latest comment from ajsutton clarifies that OPCM will need to support deploying the new game type, specifically highlighting a section in `OPContractsManager.sol` that will require updates. Earlier, pauldowman suggested confirming if any changes are truly needed before closing the issue.\n\n### Kona + Cannon Support in op-dispute-mon\nThe issue [#17286](https://github.com/ethereum-optimism/superchain-registry/issues/17286) saw further discussion regarding op-dispute-mon's support for Kona + Cannon. pauldowman updated the issue description to \"Update to support cannon-kona games.\" This follows ajsutton's earlier comment emphasizing that `op-dispute-mon` must return an error for unsupported game types and will need to be updated to explicitly support cannon-kana game types, rather than just looking at specific game types.", "2025-09-04T03:30:30.539Z"]
["ethereum-optimism/optimism_day_2025-09-02", "ethereum-optimism/optimism", "day", "2025-09-02", "# ethereum-optimism/optimism Daily Update (Sep 2, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure by porting additional acceptance tests to Devstack and updating the `op-geth` dependency. Significant progress was made in improving `op-deployer` configurability and adding sync namespace support to `op-sync-tester`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing Infrastructure\nEfforts were concentrated on migrating existing acceptance tests to the Devstack environment, improving the robustness and coverage of the testing suite. This included porting Fjord (Holocene) tests and critical smoke tests.\n- Ported Fjord (Holocene) tests to Devstack, requiring modifications to default fees in `init.go` e2e to ensure compatibility ([#16920](https://github.com/ethereum-optimism/optimism/pull/16920)).\n- Completed the migration of `TestSmokeTestFailure` and `TestInteropSystemNoop` to Devstack, finalizing the porting of remaining tests ([#17300](https://github.com/ethereum-optimism/optimism/pull/17300)).\n- Added support for the sync namespace (`sync_getSession`, `sync_deleteSession`, `sync_listSessions`) within `op-sync-tester`, enhancing its capabilities for session management and diagnostics ([#17299](https://github.com/ethereum-optimism/optimism/pull/17299)).\n\n### Dependency Updates and Deployment Enhancements\nKey dependencies were updated, and the `op-deployer` tool received an important configurability improvement.\n- Updated the `op-geth` dependency to `v1.16.2`, incorporating upstream merges ([#17228](https://github.com/ethereum-optimism/optimism/pull/17228)).\n- Introduced a configurable `chainIntent.GasLimit` field in `op-deployer`, allowing users to set custom gas limits for chains in their intent files, with a default fallback to `standard.GasLimit` during initialization ([#17271](https://github.com/ethereum-optimism/optimism/pull/17271)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17297](https://github.com/ethereum-optimism/optimism/pull/17297) `fix(kurtosis-devnet)`: Updates the `ethereum-package` to resolve a Teku genesis mismatch.\n- [#17301](https://github.com/ethereum-optimism/optimism/pull/17301) `fix(op-acceptance-tests)`: Addresses storage-to-hash alignment in `StateGetter GetState`.\n- [#17304](https://github.com/ethereum-optimism/optimism/pull/17304) `op-deployer`: Includes contracts build in the 'just build' recipe.\n- [#17307](https://github.com/ethereum-optimism/optimism/pull/17307) `min-base-fee`: Integrates `op-geth` code related to minimum base fees.\n- [#17309](https://github.com/ethereum-optimism/optimism/pull/17309) `fix(op-node)`: Fixes issues with p2p gossip parameters parsing.\n- [#17310](https://github.com/ethereum-optimism/optimism/pull/17310) `feat(op-acceptance-tests)`: Introduces `op-acceptor v3.1.0`.\n\n## CLOSED ISSUES\n\n### Sync Tester Functionality\nThe `op-sync-tester` now fully supports the sync namespace, enabling better session management and diagnostic capabilities for test harnesses.\n- The issue tracking the implementation of `sync_getSession`, `sync_deleteSession`, and `sync_listSessions` in `op-sync-tester` has been closed ([#16778](https://github.com/ethereum-optimism/optimism/issues/16778)).\n\n## NEW ISSUES\n\n### Testing and Compatibility\nNew issues have been opened to address flakiness in existing tests and ensure compatibility with upcoming protocol changes.\n- An issue was created to tame the flakiness of `TestPreNoInbox` in `op-acceptance-tests` ([#17298](https://github.com/ethereum-optimism/optimism/issues/17298)).\n- Issues were opened to ensure `op-program` and Kona have passing action tests for Jovian ([#17302](https://github.com/ethereum-optimism/optimism/issues/17302), [#17303](https://github.com/ethereum-optimism/optimism/issues/17303)).\n- An issue was created to support U16a changes ([#17306](https://github.com/ethereum-optimism/optimism/issues/17306)).\n\n### Protocol Design and Bug Tracking\nDiscussions have begun on the design of an aggregate dispute game, and a bug related to p2p gossip configuration has been identified.\n- A new issue tracks the initial design phase for an aggregate dispute game (multi-proofs) ([#17305](https://github.com/ethereum-optimism/optimism/issues/17305)).\n- A bug was reported where `ConfigureGossip` in `op-node/p2p/gossip` overwrites sane defaults with zero values ([#17308](https://github.com/ethereum-optimism/optimism/issues/17308)).\n\n## ACTIVE ISSUES\n\n### Kona + Cannon Compatibility\nDiscussions on [#17285](https://github.com/ethereum-optimism/optimism/issues/17285) and [#17286](https://github.com/ethereum-optimism/optimism/issues/17286) revolve around ensuring compatibility of `OPContractsManager` (OPCM) and `op-dispute-mon` with the Kona + Cannon game types. For OPCM, the main point is to support deploying the new game type, specifically updating the `if` block that handles game type implementations. For `op-dispute-mon`, the discussion clarified that it must return an error for unsupported game types and needs to be updated to specifically support `cannon-kona` game types, rather than just looking at \"specific game types.\" The issue description for `op-dispute-mon` was updated to reflect this.", "2025-09-04T03:30:32.091Z"]
["ethereum-optimism/Retro-Funding_day_2025-09-03", "ethereum-optimism/Retro-Funding", "day", "2025-09-03", "# ethereum-optimism/Retro-Funding Daily Update (Sep 3, 2025)\n## OVERVIEW \nToday's development focused on a critical bug fix in the Retro-Funding repository, specifically addressing missing monthly summary metrics. Discussions continued on several active issues, including improvements to CircleCI configuration, Cannon and Kona integration, and P2P gossip configuration.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Bug Fixes\n- **Retro-Funding Metrics Correction**: A bug was fixed where Enso monthly summary metrics were missing from the `onchain__results.json` file for S7/M6, ensuring accurate data reporting. ([#75](https://github.com/ethereum-optimism/Retro-Funding/pull/75))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Improving CI/CD User Experience and Testability\nDiscussions on [#17184](https://github.com/ethereum-optimism/Retro-Funding/issues/17184) centered on improving the user experience and testability of the monorepo's CircleCI configuration. Key points included identifying high-value CI jobs for local execution (e.g., `kurtosis` and `go-tests-short`), addressing friction from automated prerequisite setup, and the potential for automating CircleCI config syntax validation. There was also an interesting idea about dynamically sorting Go tests by execution time to optimize local test runs and potentially categorize them for post-merge execution if they exceed certain time thresholds.\n\n### Kona + Cannon Integration and OPCM Support\nDiscussions on [#17285](https://github.com/ethereum-optimism/Retro-Funding/issues/17285) and [#17283](https://github.com/ethereum-optimism/Retro-Funding/issues/17283) continued regarding the integration of Kona and Cannon into the tooling and OPCM. For OPCM support, it was confirmed that the system needs to support deploying the new game type, specifically updating an `if` block in `OPContractsManager.sol`. For standard prestates integration, the suggestion was to use a `type = \"cannon-kona\"` field in `standard-prestates.toml`, with the version number not necessarily needing to match `op-program`.\n\n### P2P Gossip Configuration Bug\nIssue [#17308](https://github.com/ethereum-optimism/Retro-Funding/issues/17308) highlighted a bug where `ConfigureGossip` overwrites sane defaults with zero values, leading to panics in certain tests due to invalid configurations (e.g., `Dhi=0` and `Dscore=4`). The discussion explored whether to make invalid configs work or to introduce a `DefaultP2PConfig` method that returns a fully filled, valid configuration with sensible defaults, allowing tests to modify only necessary options.\n\n### Sync Test Using Sync-Tester\nIssue [#16703](https://github.com/ethereum-optimism/Retro-Funding/issues/16703) was reopened as not all Hardfork (HF) transitions were tested. Suggestions for future test cases include checking every OP Stack HF transition, using multiple CLs with a single Sync Tester to validate multi-CL syncing, and incorporating user transactions into L2 blocks to ensure L2CLs sync correctly.\n\n### Go 1.25 Compatibility for Cannon\nDiscussion on [#17060](https://github.com/ethereum-optimism/Retro-Funding/issues/17060) noted the release of Go 1.25.1, but questioned if it includes the MIPS fix.\n\n### Min-Base-Fee for PayloadAttributesV3\nIssue [#650](https://github.com/ethereum-optimism/Retro-Funding/issues/650) received a comment pointing to the updated specs for `minBaseFee` in `PayloadAttributesV3`.\n\n### Script for Permissionless Devnet Spinup\nIssue [#346](https://github.com/ethereum-optimism/Retro-Funding/issues/346) had a comment asking if it could be closed, indicating potential completion or irrelevance.", "2025-09-04T03:30:33.210Z"]
["ethereum-optimism/design-docs_day_2025-09-03", "ethereum-optimism/design-docs", "day", "2025-09-03", "# ethereum-optimism/design-docs Daily Update (Sep 3, 2025)\n## OVERVIEW \nThe day saw active discussions on several existing issues, particularly concerning CI/CD improvements, Cannon/Kona integration, and P2P gossip configuration. Two new pull requests were opened, focusing on documentation and base fee calculation.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened:\n*   [#332](https://github.com/ethereum-optimism/design-docs/pull/332) \"change readme\" aims to update the repository's README file.\n*   [#333](https://github.com/ethereum-optimism/design-docs/pull/333) \"min-base-fee FMA: update calculation for DB growth\" proposes an update to the minimum base fee calculation.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were reported on this day.\n\n## ACTIVE ISSUES\n*   **CI/CD and Developer Experience Improvements**\n    *   [#17184](https://github.com/ethereum-optimism/design-docs/issues/17184) \"Improve UX and testability of CircleCI config\": Discussions continued on improving the monorepo's CircleCI configuration. Key points included identifying high-value CI jobs for local execution (e.g., `kurtosis` and `go-tests-short`), addressing friction from manual prerequisite setup, and the potential for automating CircleCI config validation. There was also an interesting idea about dynamically sorting Go tests by run time to optimize local testing.\n*   **Cannon and Kona Integration**\n    *   [#17285](https://github.com/ethereum-optimism/design-docs/issues/17285) \"Kona + Cannon: OPCM support\": Discussion confirmed that the `OPContractsManager.sol` will need updates to support deploying the new game type for Kona + Cannon.\n    *   [#17283](https://github.com/ethereum-optimism/design-docs/issues/17283) \"Kona + Cannon: standard prestates integration\": The discussion focused on how to integrate Cannon + Kona prestates into `standard-prestates.toml`, with a suggestion to use `type = \"cannon-kona\"` for clarity.\n*   **P2P Gossip Configuration Bug**\n    *   [#17308](https://github.com/ethereum-optimism/design-docs/issues/17308) \"op-node/p2p/gossip - ConfigureGossip overwrites sane defaults with zero values\": This issue describes a bug where `ConfigureGossip` overwrites sane default values with zero values from the CLI configuration, leading to panics in some tests. The latest comments discuss whether a `DefaultP2PConfig` method should be introduced to provide valid defaults, or if the current approach of assuming zero values are invalid should be maintained.\n*   **Sync Tester Enhancements**\n    *   [#16703](https://github.com/ethereum-optimism/design-docs/issues/16703) \"op-sync-tester,op-acceptance-tests: sync test using the sync-tester\": The issue was reopened as not all Hardfork transitions were tested. The latest comment from `pcw109550` confirms the reopening due to incomplete testing of each Hardfork transition.\n*   **Go 1.25 Compatibility**\n    *   [#17060](https://github.com/ethereum-optimism/design-docs/issues/17060) \"cannon: Support go1.25\": The release of Go 1.25.1 was noted, but it was also pointed out that this release does not appear to include the MIPS fix.\n*   **Min-Base-Fee Updates**\n    *   [#650](https://github.com/ethereum-optimism/design-docs/issues/650) \"min-base-fee: add an extra `uint64` for `minBaseFee` in `PayloadAttributesV3`\": A comment linked to the updated specs for the Jovian overview.", "2025-09-04T03:30:33.697Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-03", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-03", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 3, 2025)\n## OVERVIEW \nThe day's development focused on expanding the Superchain Token List by adding support for several new tokens, including ARCv2, MITY, CIOTX, and FORT, enhancing the ecosystem's interoperability.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Token List Expansion\n*   Added ARCv2 token to the Base network for official bridge support ([#1184](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1184)).\n*   Integrated MITY (Fission Bio) token with contract addresses for Ethereum and Base networks ([#1185](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1185)).\n*   Included CIOTX token on the Base network ([#1191](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1191)).\n*   Added FORT token contracts ([#1194](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1194)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Cannon and Kona Integration\nDiscussions continued on integrating Cannon and Kona into the tooling for managing absolute prestates ([#17283](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17283)). The latest comment suggests a format for `standard-prestates.toml` using `type = \"cannon-kona\"` and clarifies that the version number does not need to match `op-program`. Additionally, the OPCM support for Kona + Cannon is being verified ([#17285](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17285)), with a recent comment highlighting the need to update the `OPContractsManager.sol` to support deploying the new game type.\n\n### P2P Gossip Configuration Bug\nAn active discussion is ongoing regarding a bug where `ConfigureGossip` overwrites sane defaults with zero values in `op-node/p2p/gossip` ([#17308](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17308)). The latest comments discuss the implications of invalid zero values in the configuration and explore potential solutions, including a `DefaultP2PConfig` method to return a valid P2PConfig with sensible defaults. The issue was initially discovered due to panics in tests after a `go-libp2p-pubsub` dependency update.\n\n### CircleCI Configuration Improvements\nDiscussions are progressing on improving the UX and testability of the CircleCI configuration ([#17184](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17184)). Recent comments gather information on the highest value monorepo CI jobs to run locally, the friction caused by prerequisite setup steps, and the value of automating CircleCI config syntax validation. Ideas for dynamically sorting Go tests by run time to optimize local testing are also being explored.\n\n### Sync Test Enhancements\nThe issue concerning sync tests using `op-sync-tester` and `op-acceptance-tests` was reopened ([#16703](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16703)). The latest comment indicates that the issue was reopened because not every Hardfork transition was tested. Previous suggestions included testing all OP Stack HF transitions, using multiple CLs with a single Sync Tester, and incorporating user transactions in L2 blocks for syncing validation.\n\n### Go 1.25 Compatibility for Cannon\nThe compatibility of Cannon with Go 1.25 is being tracked ([#17060](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17060)). Go 1.25.1 has been released, but a recent comment notes that it does not appear to include a specific MIPS fix.\n\n### Min Base Fee in PayloadAttributesV3\nThe issue to add an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` is active ([#650](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/650)). A recent comment points to the relevant specs for the Jovian overview.\n\n### Scripted Permissionless Devnet Spinup\nThe issue to script the permissionless devnet spinup process is being reviewed for closure ([#346](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/346)). A recent comment asks if the issue can be closed, indicating potential progress or resolution.", "2025-09-04T03:30:34.488Z"]
["ethereum-optimism/op-analytics_day_2025-09-03", "ethereum-optimism/op-analytics", "day", "2025-09-03", "# ethereum-optimism/op-analytics Daily Update (Sep 3, 2025)\n## OVERVIEW \nThe day's development focused on adding new chain analysis output, including updated gas limit data and various analytical plots for several chains. Discussions on active issues covered CI/CD improvements, P2P gossip configuration, and Kona/Cannon integration.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Chain Analysis Output Updates\nNew chain analysis output was added, including updated gas limit data for Ink, Mode, Soneium, Unichain, and Worldchain. This update also included new analytical plots and an updated README for the `jovian_analysis` notebook. ([#1740](https://github.com/ethereum-optimism/op-analytics/pull/1740))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### CI/CD and Developer Experience Improvements\nDiscussions continued on improving the UX and testability of the CircleCI configuration ([#17184](https://github.com/ethereum-optimism/op-analytics/issues/17184)). Key points included identifying high-value CI jobs for local execution (e.g., `kurtosis` and `go-tests-short`), addressing friction from prerequisite setup steps, and exploring the automation of CircleCI config validation. There was also an interesting idea about dynamically sorting Go tests by execution time to optimize local test runs and potentially move longer tests to post-merge CI.\n\n### P2P Gossip Configuration Bug\nA bug was reported regarding `ConfigureGossip` overwriting sane defaults with zero values in the `op-node/p2p/gossip` module ([#17308](https://github.com/ethereum-optimism/op-analytics/issues/17308)). The discussion clarified that a configuration with zero values for certain parameters (like `Dhi`) is invalid and can lead to panics in `go-libp2p-pubsub`. Potential solutions discussed included adding a `DefaultP2PConfig` method to return a fully valid configuration with sensible defaults, or modifying the current setup to handle zero values more robustly.\n\n### Kona + Cannon Integration\nDiscussions around Kona and Cannon integration continued across multiple issues. For OPCM support ([#17285](https://github.com/ethereum-optimism/op-analytics/issues/17285)), the focus was on ensuring OPCM can deploy the new game type, specifically updating the relevant `if` block in `OPContractsManager.sol`. For standard prestates integration ([#17283](https://github.com/ethereum-optimism/op-analytics/issues/17283)), the conversation centered on how to represent the new `cannon-kona` type in `standard-prestates.toml`, with a suggestion to use `type = \"cannon-kona\"` and a new hash.\n\n### Sync Tester Enhancements\nThe issue for adding sync acceptance tests using the sync tester ([#16703](https://github.com/ethereum-optimism/op-analytics/issues/16703)) was reopened. The latest comments highlighted the need to test every OP Stack Hard Fork transition, not just Isthmus, and suggested ideas for future test cases, such as multiple CLs with a single sync tester and user transactions within L2 blocks.\n\n### Go 1.25 Compatibility\nThe issue concerning Cannon's compatibility with Go 1.25 ([#17060](https://github.com/ethereum-optimism/op-analytics/issues/17060)) noted the release of Go 1.25.1. However, it was pointed out that this release does not appear to include the MIPS fix, which might still be a concern.", "2025-09-04T03:30:35.071Z"]
["ethereum-optimism/infra_day_2025-09-03", "ethereum-optimism/infra", "day", "2025-09-03", "# ethereum-optimism/infra Daily Update (Sep 3, 2025)\n## OVERVIEW \nToday's focus was on refining existing infrastructure, with significant discussions around improving CI/CD processes, addressing P2P gossip configuration, and preparing for future protocol upgrades. A key achievement was the closure of an issue related to persistent devnet testing.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Devnet Testing and Setup Refinement\nThe issue concerning getting all tests running and passing in persistent devnets has been closed, indicating significant progress in this area [#398](https://github.com/ethereum-optimism/infra/issues/398). Additionally, the issue related to scripting permissionless devnet spinup is being considered for closure, suggesting improvements in devnet setup automation [#346](https://github.com/ethereum-optimism/infra/issues/346).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### CI/CD and Developer Experience Improvements\nDiscussions continue on improving the UX and testability of the CircleCI configuration [#17184](https://github.com/ethereum-optimism/infra/issues/17184). Key points include identifying high-value CI jobs for local execution (e.g., `kurtosis` and `go-tests-short`), addressing friction from prerequisite setup steps, and exploring dynamic sorting of Go tests by duration to optimize local and CI test runs. The idea of new manifest files for Go packages based on test duration and a script to update them locally was proposed.\n\n### P2P Gossip Configuration Bug\nAn active discussion is ongoing regarding a bug where `ConfigureGossip` overwrites sane defaults with zero values in `op-node/p2p/gossip` [#17308](https://github.com/ethereum-optimism/infra/issues/17308). The core problem is that zero values from CLI changes can lead to invalid configurations, causing panics in `go-libp2p-pubsub`. A potential solution discussed is adding a `DefaultP2PConfig` method to return a fully filled, valid configuration with sensible defaults, allowing tests to modify only necessary options.\n\n### Kona + Cannon Integration and Compatibility\nDiscussions are active on integrating Kona + Cannon into existing tooling and ensuring compatibility. This includes verifying necessary changes in OPCM to support the new game type [#17285](https://github.com/ethereum-optimism/infra/issues/17285) and integrating Cannon + Kona into standard prestates management, with a proposed format for `standard-prestates.toml` [#17283](https://github.com/ethereum-optimism/infra/issues/17283). Additionally, compatibility testing with Go 1.25 for Cannon is underway, with the recent release of Go 1.25.1 noted [#17060](https://github.com/ethereum-optimism/infra/issues/17060).\n\n### Sync Tester Development\nThe issue concerning sync tests using `op-sync-tester` and `op-acceptance-tests` is active [#16703](https://github.com/ethereum-optimism/infra/issues/16703). The issue was reopened as not all HF transitions were tested. Ideas for test cases include checking every OP Stack HF transition, supporting multiple CLs with a single sync tester, and incorporating user transactions into L2 blocks for sync validation.", "2025-09-04T03:30:38.070Z"]
["ethereum-optimism/infra_day_2025-09-04", "ethereum-optimism/infra", "day", "2025-09-04", "# ethereum-optimism/infra Daily Update (Sep 4, 2025)\n## OVERVIEW \nThe day's development focused on enhancing tool version management within the repository by introducing `mise`, aiming for streamlined project-wide adoption.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Tool Version Management Enhancement\nA significant feature was added to improve tool version management across the repository. The introduction of `mise` aims to standardize and simplify how tools are managed, with `op-acceptor` leading the initial adoption. This change impacts several core components, including `op-acceptor`, `op-conductor-mon`, and `op-conductor-ops`, laying the groundwork for broader project integration. ([#452](https://github.com/ethereum-optimism/infra/pull/452))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### P2P Gossip Configuration Overwrites\nDiscussion continued on an issue where `ConfigureGossip` overwrites default values with zero values, leading to invalid configurations and panics in certain test environments. The latest comments highlight the debate between making invalid configurations work versus enforcing valid defaults. A user (`wood-jp`) explained that a dependency update exposed this issue, causing panics in tests due to `Dhi=0` and `Dscore=4`. The core of the problem is that `MeshDHi` is unset in tests, defaulting to 0, which then clobbers the intended default of 12. An alternative solution proposed by `ajsutton` is to introduce a `DefaultP2PConfig` method to return a fully valid configuration with sensible defaults, allowing tests to modify only necessary options. ([#17308](https://github.com/ethereum-optimism/infra/issues/17308))\n\n### op-geth Initialization Error\nUsers continue to report an \"head block is not reachable\" error during `op-geth` initialization. A recent comment from `cliff0412` indicates they also encountered this issue. Previously, `SyedMuhamadYasir` suggested that this error might not be critical and to proceed with the setup, while `lei335` found that re-running the initialization command resolved it for them. However, `mikelear` noted that despite proceeding, `geth` remains at Block 0, leading to further issues with block proposals. ([#420](https://github.com/ethereum-optimism/infra/issues/420))", "2025-09-04T03:30:38.550Z"]
["ethereum-optimism/superchain-ops_day_2025-09-03", "ethereum-optimism/superchain-ops", "day", "2025-09-03", "# ethereum-optimism/superchain-ops Daily Update (Sep 3, 2025)\n## OVERVIEW \nThe day's development focused on a critical bug fix related to the Go version update for `mise`, ensuring compatibility for `eip712sign`. Several new pull requests were opened, primarily for Superchain network upgrades. Active discussions continued on various issues, including CI improvements, Cannon/Kona integration, and P2P gossip configuration.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Go Version Compatibility\nA bug fix was implemented to update the Go version used by `mise` from `1.22.7` to `1.24.6`. This change addresses a warning encountered when running `just install-eip712sign`, ensuring that `github.com/base/eip712sign@v0.0.11` can properly function as it requires Go version `1.23.0` or higher. ([#1183](https://github.com/ethereum-optimism/superchain-ops/pull/1183))\n\n## NEWLY OPENED PULL REQUESTS\nFour new pull requests were opened today:\n- [#1180](https://github.com/ethereum-optimism/superchain-ops/pull/1180) proposes an upgrade for Zora Sepolia from U13 to U16.\n- [#1181](https://github.com/ethereum-optimism/superchain-ops/pull/1181) suggests an upgrade for Metal Sepolia from U13 to U16.\n- [#1182](https://github.com/ethereum-optimism/superchain-ops/pull/1182) aims to upgrade Mode Sepolia from U13 to U16.\n- [#1184](https://github.com/ethereum-optimism/superchain-ops/pull/1184) addresses a fix for CI alerts related to forge tests.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### CI/CD and Developer Experience Improvements\nDiscussions on [#17184](https://github.com/ethereum-optimism/superchain-ops/issues/17184) focused on improving the user experience and testability of the CircleCI configuration. Key pain points include the difficulty of local testing and the daunting size of the monorepo's CircleCI config. Suggestions include enabling local execution of high-value CI jobs like `kurtosis` and `go-tests-short`, addressing the manual setup required for local testing, and potentially automating the validation of `config.yml` syntax. There was also an interesting idea about dynamically sorting Go tests by execution time to optimize test job durations and allow developers to run more tests within their time budget.\n\n### Kona + Cannon Integration\nIssue [#17285](https://github.com/ethereum-optimism/superchain-ops/issues/17285) is tracking the necessary changes in OPCM to support Kona + Cannon. The latest comment confirms that OPCM will need to support deploying the new game type, specifically updating a conditional block in `OPContractsManager.sol`.\nRelatedly, [#17283](https://github.com/ethereum-optimism/superchain-ops/issues/17283) discusses integrating Cannon + Kona into the tooling for managing absolute prestates. The proposed solution involves adding a new `type = \"cannon-kona\"` field to `standard-prestates.toml` with a corresponding hash.\n\n### P2P Gossip Configuration Bug\nIssue [#17308](https://github.com/ethereum-optimism/superchain-ops/issues/17308) highlights a bug where `ConfigureGossip` overwrites sane default values with zero values, leading to panics in certain tests due to invalid configurations (e.g., `Dhi=0` and `Dscore=4`). The discussion revolves around whether to allow invalid configurations to work or to enforce valid configurations through a `DefaultP2PConfig` method that returns sensible defaults. The reporter provided a PR to address the issue by ensuring that zero values do not clobber valid defaults.\n\n### Sync Test Enhancements\nIssue [#16703](https://github.com/ethereum-optimism/superchain-ops/issues/16703) was reopened as not all Hardfork transitions were tested. The discussion outlines ideas for future test cases, including checking all OP Stack Hardfork transitions, supporting multiple CLs with a single Sync Tester, and incorporating user transactions into L2 blocks for sync validation.\n\n### Min-Base-Fee and Jovian Specs\nIssue [#650](https://github.com/ethereum-optimism/superchain-ops/issues/650) is tracking the addition of an extra `uint64` for `minBaseFee` in `PayloadAttributesV3`. The latest comment points to the Jovian specs for reference.\n\n### Script Permissionless Devnet Spinup\nIssue [#346](https://github.com/ethereum-optimism/superchain-ops/issues/346) is being considered for closure, suggesting that the goal of improving the devnet spinup runbook with a runnable shell script might be complete or no longer a priority.", "2025-09-04T03:30:39.260Z"]
["ethereum-optimism/op-geth_day_2025-09-03", "ethereum-optimism/op-geth", "day", "2025-09-03", "# ethereum-optimism/op-geth Daily Update (Sep 3, 2025)\n## OVERVIEW \nThe day saw no new code contributions, but significant discussion occurred on several active issues, particularly concerning CI/CD improvements, Cannon/Kona integration, and P2P configuration. Two new issues were opened, reporting problems with large genesis files and missing `eth_getLogs` events.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Node Initialization and Database Issues\nA new issue was opened regarding a `leveldb panic` when initializing `op-geth` with a large 7GB genesis file, indicating potential stability issues with large datasets during node setup ([#668](https://github.com/ethereum-optimism/op-geth/issues/668)).\n\n### RPC Query Inconsistencies\nAnother new issue reported missing events on `eth_getLogs` calls immediately after `newHeads` and occasional high latency, suggesting potential problems with RPC reliability and event indexing ([#667](https://github.com/ethereum-optimism/op-geth/issues/667)).\n\n## ACTIVE ISSUES\n### CI/CD and Developer Experience Improvements\nDiscussions continued on improving the UX and testability of the CircleCI configuration ([#17184](https://github.com/ethereum-optimism/op-geth/issues/17184)). @bitwiseguy gathered more information on desired local CI job execution and the friction caused by manual prerequisite setup. @teddyknox highlighted the need for local execution of proofs tests and suggested a tool to dynamically sort Go tests by duration for more efficient local testing and CI job categorization.\n\n### Cannon and Kona Integration\nDiscussions progressed on supporting Kona and Cannon in OPCM ([#17285](https://github.com/ethereum-optimism/op-geth/issues/17285)) and integrating their standard prestates ([#17283](https://github.com/ethereum-optimism/op-geth/issues/17283)). @ajsutton confirmed the need for OPCM to support deploying the new game type and suggested a format for `standard-prestates.toml` to include `cannon-kona` type prestates.\n\n### P2P Gossip Configuration Bug\nAn active discussion revolved around a bug where `ConfigureGossip` overwrites sane defaults with zero values in `op-node/p2p/gossip` ([#17308](https://github.com/ethereum-optimism/op-geth/issues/17308)). @wood-jp explained that this issue caused panics in tests due to invalid `libp2p` configurations (e.g., `Dhi=0` and `Dscore=4`). @ajsutton questioned the approach of making invalid configs work and suggested a `DefaultP2PConfig` method to return a fully valid configuration with sensible defaults, which could then be modified for tests.\n\n### Sync Tester Enhancements\nThe issue concerning sync tests using the sync-tester ([#16703](https://github.com/ethereum-optimism/op-geth/issues/16703)) was reopened by @pcw109550, stating that \"we did not test each HF transition.\" This indicates a need for more comprehensive testing of hard fork transitions within the sync testing framework.\n\n### Go 1.25 Compatibility for Cannon\nDiscussion on Cannon's compatibility with Go 1.25 ([#17060](https://github.com/ethereum-optimism/op-geth/issues/17060)) saw an update from @pauldowman noting the release of Go 1.25.1. However, @ajsutton pointed out that this release does not appear to include the MIPS fix, which might still be a concern.", "2025-09-04T03:30:39.296Z"]
["ethereum-optimism/optimism_day_2025-09-03", "ethereum-optimism/optimism", "day", "2025-09-03", "# ethereum-optimism/optimism Daily Update (Sep 3, 2025)\n## OVERVIEW \nToday's development focused on enhancing SystemConfig with feature flagging, fixing a comment in op-node, and adding sync-tester with external EL for improved testing. Significant progress was made in closing several long-standing issues related to proofs, Drippie, and Cannon support.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Protocol Enhancements\n- **Feature Flagging in SystemConfig**: Added functionality to the `SystemConfig` for feature flagging, allowing features to be toggled on or off by the ProxyAdmin or its owner. This provides greater control and flexibility for future protocol upgrades ([#17281](https://github.com/ethereum-optimism/optimism/pull/17281)).\n- **op-node Cache Size Comment Fix**: Corrected a comment in `op-node` regarding the `l1.cache-size` to accurately reflect the `defaultCacheSize` as 3/2 of the sequencing window ([#17107](https://github.com/ethereum-optimism/optimism/pull/17107)).\n\n### Testing and CI Improvements\n- **External EL Sync Tester Integration**: Integrated a sync-tester with an external Execution Layer (EL) to improve testing capabilities, specifically provisioning the L2 genesis config to match the external network's configuration ([#17251](https://github.com/ethereum-optimism/optimism/pull/17251)).\n- **CI Job Relocation**: Migrated the `publish-cannon-prestates` CI job from Latitude to CircleCI boxes to address network flakiness and improve resource utilization ([#17296](https://github.com/ethereum-optimism/optimism/pull/17296)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17311](https://github.com/ethereum-optimism/optimism/pull/17311) fix: increase interop activation offset to prevent TestPreNoInbox race condition\n- [#17312](https://github.com/ethereum-optimism/optimism/pull/17312) op-sync-tester: handle all errors for http handler\n- [#17314](https://github.com/ethereum-optimism/optimism/pull/17314) circleci, op-acceptance-tests: nightly ci sync tests with external networks\n- [#17315](https://github.com/ethereum-optimism/optimism/pull/17315) min-base-fee: merge minimal set changes\n\n## CLOSED ISSUES\n\n### Proofs and Drippie Management\n- **Stage 1.4 Shipping Checklist**: Completed the checklist for shipping Stage 1.4, including security audits ([#15827](https://github.com/ethereum-optimism/optimism/issues/15827)).\n- **Interop Proofs Details for Governance**: Finalized details for interop proofs to be used in governance proposals ([#15968](https://github.com/ethereum-optimism/optimism/issues/15968)).\n- **Drippie Integration for Challenger Funds**: Implemented the use of Drippie to manage hot wallet funds for the challenger, improving funding management ([#12876](https://github.com/ethereum-optimism/optimism/issues/12876)).\n- **Drippie Mainnet Deployment**: Successfully deployed Drippie to Mainnet ([#13764](https://github.com/ethereum-optimism/optimism/issues/13764)).\n- **Drippie Dashboards and Alerting**: Configured and integrated Drippie dashboards and alerting for better monitoring ([#14048](https://github.com/ethereum-optimism/optimism/issues/14048)).\n\n### Cannon and VM Runner Enhancements\n- **Full `mips64r2` ISA Support in Cannon**: Added support for the full `mips64r2` Instruction Set Architecture in Cannon ([#13969](https://github.com/ethereum-optimism/optimism/issues/13969)).\n- **Cannon VM Runner Scaling**: Addressed the scaling of the Cannon VM Runner to cover more mainnet blocks ([#16910](https://github.com/ethereum-optimism/optimism/issues/16910)).\n\n### Devnet and Protocol Specifications\n- **Scripted Permissionless Devnet Spinup**: Improved the devnet spinup runbook by providing a runnable shell script for permissionless upgrades ([#346](https://github.com/ethereum-optimism/optimism/issues/346)).\n- **Min-Base-Fee `uint64` Addition**: Added an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` as per protocol specifications ([#650](https://github.com/ethereum-optimism/optimism/issues/650)).\n\n## NEW ISSUES\n\n### Testing and Acceptance Test Expansion\n- **Additional Sync Tester Tests**: Proposed splitting existing sync tester tests and implementing more, including multiple CLs with a single Sync Tester and user transactions within L2 blocks ([#17313](https://github.com/ethereum-optimism/optimism/issues/17313)).\n\n## ACTIVE ISSUES\n\n### Sync Tester and Acceptance Tests\n- **Sync Test using Sync-Tester** ([#16703](https://github.com/ethereum-optimism/optimism/issues/16703)): The issue was reopened as not all Hardfork transitions were tested. Future plans include testing every OP Stack HF transition, multiple CLs with a single Sync Tester, and user transactions within L2 blocks.\n\n### Cannon and Go Version Compatibility\n- **Cannon: Support go1.25** ([#17060](https://github.com/ethereum-optimism/optimism/issues/17060)): Discussion confirms Go 1.25.1 has been released, but it does not appear to include the MIPS fix.\n\n### CircleCI Configuration Improvements\n- **Improve UX and testability of CircleCI config** ([#17184](https://github.com/ethereum-optimism/optimism/issues/17184)): Discussions are ongoing to improve the CircleCI configuration. Key pain points include the difficulty of local testing and the large size of the config. Suggestions include identifying high-value monorepo CI jobs for local execution, addressing prerequisite setup automation, and potentially dynamically sorting Go tests by run duration to optimize CI job allocation.\n\n### Kona + Cannon Integration\n- **Kona + Cannon: OPCM support** ([#17285](https://github.com/ethereum-optimism/optimism/issues/17285)): Verification is needed to determine what changes are required in OPCM to support Kona + Cannon, specifically ensuring OPCM does not assume Cannon as the game type and updating the `OPContractsManager.sol` contract.\n- **Kona + Cannon: standard prestates integration** ([#17283](https://github.com/ethereum-optimism/optimism/issues/17283)): Discussions suggest adding support for Cannon + Kona prestates to `standard-prestates.toml` using a new type field like `cannon-kona`.\n\n### op-node/p2p/gossip Configuration\n- **op-node/p2p/gossip - ConfigureGossip overwrites sane defaults with zero values** ([#17308](https://github.com/ethereum-optimism/optimism/issues/17308)): The issue describes how `ConfigureGossip` can overwrite sane defaults with zero values, leading to panics in tests due to invalid configurations (e.g., `Dhi=0` and `Dscore=4`). A proposed solution involves ensuring that zero values in the configuration do not clobber intended defaults. An alternative suggestion is to implement a `DefaultP2PConfig` method to return a fully valid configuration with sensible defaults, allowing tests to modify only necessary options.", "2025-09-04T03:30:40.702Z"]
["ethereum-optimism/optimism_day_2025-09-04", "ethereum-optimism/optimism", "day", "2025-09-04", "# ethereum-optimism/optimism Daily Update (Sep 4, 2025)\n## OVERVIEW \nThe day focused on enhancing testing infrastructure with significant updates to acceptance tests, unifying them into a single workflow and adding more system-level tests. An issue related to `op-node/p2p/gossip` configuration was actively discussed, and a long-standing issue regarding `op-geth` initialization was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Acceptance Test Infrastructure\nSignificant progress was made in streamlining the acceptance testing framework. All acceptance tests are now being moved into a single workflow, improving efficiency and organization. This involved stopping the execution of acceptance tests as unit tests in other workflows and adding a substantial number of new system-level acceptance tests.\n- [#16755](https://github.com/ethereum-optimism/optimism/pull/16755)\n- [#16817](https://github.com/ethereum-optimism/optimism/pull/16817)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Acceptance Test Workflow Unification\nA key initiative to consolidate all acceptance tests into a single workflow was completed. This resolves the long-standing goal of centralizing acceptance test execution, moving them out of other workflows like 'go tests' in the 'main' workflow.\n- [#16272](https://github.com/ethereum-optimism/optimism/issues/16272)\n\n### `op-geth` Initialization Error Resolution\nAn issue where `op-geth init` would give a \"head block is not reachable\" error was closed. Recent comments indicate that this error might not be critical and setup can proceed, with some users confirming they encountered and bypassed it successfully.\n- [#420](https://github.com/ethereum-optimism/optimism/issues/420)\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### `op-node/p2p/gossip` Configuration Overwrites\nDiscussion continued on [#17308](https://github.com/ethereum-optimism/optimism/issues/17308) regarding `ConfigureGossip` overwriting sane defaults with zero values. The core of the problem lies in `P2PConfig` values like `MeshDHi` defaulting to 0 when unset, which can lead to invalid configurations and panics in `go-libp2p-pubsub`. The latest comments from `wood-jp` and `ajsutton` explore potential solutions. `wood-jp` explained that the issue arose from a dependency update (`go-libp2p-pubsub v0.12.0 => v0.14.2`) exposing a panic due to invalid `Dhi` and `Dscore` values (0 and 4 respectively). `ajsutton` suggested adding a `DefaultP2PConfig` method to return a fully filled, valid configuration with sensible defaults, allowing tests to modify only necessary options. `wood-jp` acknowledged this but expressed a preference for the current PR's approach, noting that `DefaultP2PConfig` might require future developers to be aware of its existence.", "2025-09-04T03:30:41.828Z"]
["ethereum-optimism/op-analytics_week_2025-06-01", "ethereum-optimism/op-analytics", "week", "2025-06-01", "# ethereum-optimism/op-analytics Weekly Report (Jun 1 - 7, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on architectural discussions and issue refinement for core fault proof components, with no new code contributions. The primary focus was on improving the robustness of the `op-supervisor` and its interaction with the `op-challenger`. Key discussions revolved around enhancing the supervisor's reset logic to validate L1 origin and resolving its inability to provide fault proof data for non-genesis interop scenarios. This period reflects a strong emphasis on planning and design before implementation, particularly for features critical to upcoming devnet deployments.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, or other code-level changes merged this week. All development activity was concentrated in the issue discussion and planning stages. No new pull requests were opened.\n\n## \ud83d\udc1b Issues & Triage\nThe week's focus was on defining and resolving issues related to the fault proof system, with no issues being closed.\n\n*   **New & Active Issues:**\n    *   **Supervisor & Challenger Enhancements:** A significant portion of the week's activity was dedicated to the `op-supervisor` and `op-challenger`. A new issue, **[#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315)**, was opened to improve the `op-supervisor`'s reset logic. The proposal suggests that the supervisor should be responsible for verifying the L1 origin of a reset target, simplifying the logic and reducing communication with the `op-node`. Concurrently, discussions continued on **[#16166](https://github.com/ethereum-optimism/op-analytics/issues/16166)**, which addresses the `op-challenger`'s difficulty with non-genesis activation blocks. The consensus is shifting towards a fix within the `op-supervisor` to index its safe DB differently, a solution deemed critical before moving to devnets.\n    *   **Incorrect Nonce Reporting:** A user followed up on issue **[#623](https://github.com/ethereum-optimism/op-analytics/issues/623)**, which reports that `eth_getTransactionCount` returns an incorrect nonce for pending transactions on a Base node, causing transactions to become stuck.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident through active discussions on GitHub issues rather than through code reviews. The detailed back-and-forth on issues like **[#16166](https://github.com/ethereum-optimism/op-analytics/issues/16166)** and **[#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315)** indicates a collaborative effort among core contributors to refine system architecture and resolve complex bugs before writing code. Additionally, the follow-up from a user on issue **[#623](https://github.com/ethereum-optimism/op-analytics/issues/623)** highlights ongoing engagement between the project and its user base.", "2025-09-04T03:30:58.714Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-06-01", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-06-01", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jun 1 - 7, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the robustness and capabilities of the `op-supervisor`. A key new issue was opened to improve the supervisor's reset logic by ensuring L1 origin validity, sparking discussions on the best implementation path. Concurrently, active conversations continued around enabling the `op-supervisor` to provide data for fault proofs in non-genesis interop scenarios. While no code was merged, these deep architectural discussions are paving the way for future protocol security and interoperability enhancements. A persistent user-facing issue with `eth_getTransactionCount` also remains a point of focus.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided daily reports, no pull requests were merged this week. Development activity was focused on discussion and issue triage rather than code implementation.\n\n## \ud83d\udc1b Issues & Triage\nThe week's activity was concentrated on defining new problems and advancing discussions on existing complex issues.\n\n- **Closed Issues:** No issues were closed this week according to the available reports.\n\n- **New & Active Issues:**\n    - **`op-supervisor` Enhancements:** The primary focus was on the `op-supervisor`. A new issue, [#16315](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16315), was created to address a gap where the supervisor's reset logic does not verify if the L1 origin of its target is canonical. Ongoing discussion suggests favoring a simpler approach where the supervisor finds a new valid reset target rather than performing complex walkbacks.\n    \n    - **Fault Proofs & Interoperability:** Discussions continued on issue [#16166](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16166), which deals with enabling the `op-supervisor` to provide data for fault proofs involving non-genesis interop upgrades. The conversation is exploring a solution where the supervisor would index pre-Interop data, a change that could also simplify the architecture by removing the need for `op-node`'s safe DB in managed nodes.\n    \n    - **Pending Transaction Nonce Bug:** A critical user-facing issue, [#623](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/623), remains active. Users continue to report that `eth_getTransactionCount` returns an incorrect nonce for pending transactions, causing them to become stuck in the mempool. The community is actively seeking updates and a resolution for this problem.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was characterized by in-depth technical discussions on core protocol components. The active debates on issues [#16315](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16315) and [#16166](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16166) highlight a collaborative effort to refine the `op-supervisor`'s design and ensure its security. Additionally, the ongoing reports and requests for updates on issue [#623](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/623) demonstrate an active feedback loop between the project's users and the development team.", "2025-09-04T03:31:02.118Z"]
["ethereum-optimism/op-geth_week_2025-06-01", "ethereum-optimism/op-geth", "week", "2025-06-01", "# ethereum-optimism/op-geth Weekly Report (Jun 1 - 7, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the Superchain's configuration and improving the robustness of the `op-supervisor`. Key progress was made by updating the Superchain registry with new rehearsal configurations, which also surfaced a new unmarshaling bug. Important discussions are underway regarding the supervisor's role in fault proofs and its L1 origin handling during resets, highlighting a focus on protocol security and interoperability. Additionally, a fix was merged for acceptance tests that were previously blocked, and a new precompile was proposed.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on configuration management and laying the groundwork for future enhancements.\n\n- **Superchain Configuration Updates:** The Superchain registry was updated to incorporate the latest `rehearsal-0-bn` configurations. During this process, an issue was identified with unmarshaling the `op_contracts_manager_addr` field from the `superchain.toml` file, which is now being tracked ([#625](https://github.com/ethereum-optimism/op-geth/pull/625)).\n\n- **New Precompile Proposal:** A new pull request ([#628](https://github.com/ethereum-optimism/op-geth/pull/628)) was opened to introduce a \"transfer only\" precompile. The proposal is currently pending review.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved resolving test suite failures and opening new discussions on critical supervisor logic.\n\n- **Closed Issues:**\n  - **Acceptance Test Fixes:** Issue [#16187](https://github.com/ethereum-optimism/op-geth/issues/16187) was closed, fixing the `TestUnsafeChainKnownToL2CL` and `TestUnsafeChainUnknownToL2CL` tests. These tests were previously skipped due to a dependency on supervisor multi-node support, and their resolution unblocks further testing in this area.\n\n- **New & Active Issues:**\n  - **Supervisor L1 Origin Handling:** A new critical issue ([#16315](https://github.com/ethereum-optimism/op-geth/issues/16315)) was opened concerning the `op-supervisor`. The supervisor's reset logic currently does not verify the canonical L1 origin of a target block, which could lead to inconsistencies. The proposed solution involves adding a verification step and walking back the safe chain if necessary to find a valid L1 origin.\n  - **Fault Proofs for Non-Genesis Interop:** A significant discussion continued in [#16166](https://github.com/ethereum-optimism/op-geth/issues/16166) about enabling fault proofs for chains with non-genesis interop upgrades. The debate centers on whether the `op-challenger` or the `op-supervisor` should be responsible for aggregating data from multiple rollup nodes, a decision with architectural implications for the fault-proof system.\n  - **Incorrect Nonce Bug:** The issue of `eth_getTransactionCount` returning an incorrect nonce for pending transactions ([#623](https://github.com/ethereum-optimism/op-geth/issues/623)) remains active and is causing transactions to get stuck in the mempool.\n\n## \ud83d\udcac Community & Collaboration\nThe development activity this week showcased active collaboration on complex architectural challenges. The discussion on issue [#16166](https://github.com/ethereum-optimism/op-geth/issues/16166) between contributors `sebastianst` and `ajsutton` exemplifies the detailed technical debate required to refine the fault-proof mechanism. The engagement across various issues from contributors like `mukul3097` and `ntrzr`, along with new contributions like the precompile PR from `Karlb`, points to a healthy and engaged developer community.", "2025-09-04T03:31:02.235Z"]
["ethereum-optimism/optimism_week_2025-06-01", "ethereum-optimism/optimism", "week", "2025-06-01", "# ethereum-optimism/optimism Weekly Report (Jun 1 - 7, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused on enhancing the stability and usability of the OP Stack's deployment and CI infrastructure. Key efforts included fixing a critical bug in the `op-deployer` and optimizing the CI pipeline to speed up dependency installation. Significant attention was also directed towards the `op-supervisor`, with several new issues opened to improve its resilience during resets and reorgs. This groundwork on tooling and supervisor behavior paves the way for more robust Superchain operations and future fault-proof enhancements.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving deployment tooling, CI efficiency, and documentation.\n\n- **Deployment Tooling & CI Optimization:**\n  - A bug in the `op-deployer` was fixed to ensure the L1 contracts release flag is handled correctly during deployments ([#16316](https://github.com/ethereum-optimism/optimism/pull/16316)).\n  - The CI pipeline was improved by caching `solc` compiler versions, which prevents repeated downloads and streamlines the installation of contract dependencies ([#16317](https://github.com/ethereum-optimism/optimism/pull/16317), [#16318](https://github.com/ethereum-optimism/optimism/pull/16318)).\n  - New documentation was added to guide users through custom Superchain deployments using the `op-deployer` ([#16309](https://github.com/ethereum-optimism/optimism/pull/16309)).\n\n- **Code Refinements & Dependencies:**\n  - Several new pull requests were opened for general code hygiene, including the removal of duplicated code in the `IsCrossUnsafe` function ([#16311](https://github.com/ethereum-optimism/optimism/pull/16311)) and the removal of the `GasTokenDeployConfig` from `op-chain-ops` ([#16313](https://github.com/ethereum-optimism/optimism/pull/16313)).\n  - A dependency was updated, bumping `golang.org/x/crypto` to version 0.39.0 ([#16328](https://github.com/ethereum-optimism/optimism/pull/16328)).\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:**\n  - An issue related to deployment set validation was closed, confirming that checks for `EthLockboxProxy` consistency are now implemented ([#16058](https://github.com/ethereum-optimism/optimism/issues/16058)).\n\n- **New & Active Issues:**\n  - **`op-supervisor` Enhancements:** A significant cluster of new issues was opened to improve the `op-supervisor`'s behavior. These focus on its handling of reset targets, L1 origin validity, and behavior during reorgs ([#16314](https://github.com/ethereum-optimism/optimism/issues/16314), [#16315](https://github.com/ethereum-optimism/optimism/issues/16315), [#16321](https://github.com/ethereum-optimism/optimism/issues/16321)).\n  - **Fault Proofs & Interop:** Active discussion on issue [#16166](https://github.com/ethereum-optimism/optimism/issues/16166) centers on enabling the `op-supervisor` to provide data for fault proofs involving non-genesis interop upgrades. The consensus is leaning towards implementing the fix within the `op-supervisor` rather than the `op-challenger` due to better data availability.\n  - **Incorrect Nonce Bug:** A long-standing issue regarding an incorrect nonce returned by `eth_getTransactionCount` for pending transactions on Base ([#623](https://github.com/ethereum-optimism/optimism/issues/623)) remains active, with users continuing to report stuck transactions and requesting updates.\n  - **Migration Scripts:** A new issue was created to track improvements for the OPCM migration script on `rehearsal-net-0` ([#16326](https://github.com/ethereum-optimism/optimism/issues/16326)).\n\n## \ud83d\udcac Community & Collaboration\nThe week's activity indicates a strong, coordinated focus on improving the `op-supervisor` component. The creation of multiple related issues suggests a planned effort to enhance its robustness. The ongoing technical discussion in [#16166](https://github.com/ethereum-optimism/optimism/issues/16166) about the best approach for handling fault proof data highlights collaborative problem-solving among core contributors. Additionally, progress was noted on adapting interop sync tests ([#16187](https://github.com/ethereum-optimism/optimism/issues/16187)), demonstrating continued momentum on test suite maintenance.", "2025-09-04T03:31:04.254Z"]
["ethereum-optimism/superchain-registry_week_2025-06-01", "ethereum-optimism/superchain-registry", "week", "2025-06-01", "# ethereum-optimism/superchain-registry Weekly Report (Jun 1 - 7, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the integrity and automation of the Superchain registry. Key developments included re-enabling EthLockboxProxy consistency validation to ensure data integrity and optimizing CI/CD workflows for more efficient webhook triggers. A new initiative to remove legacy CGT-related code was started, signaling a focus on code hygiene. Meanwhile, significant technical discussions continued around the `op-supervisor`'s role in fault proofs and reset logic, and a user-impacting nonce issue on Base nodes remains an active concern.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving registry validation, CI processes, and code maintenance.\n\n- **Registry Integrity and Automation:**\n  - Consistency validation for EthLockboxProxy was re-enabled by updating the `op-fetcher` and regenerating code, strengthening data integrity checks within the registry ([#1071](https://github.com/ethereum-optimism/superchain-registry/pull/1071)).\n  - The CircleCI configuration was refined to ensure the `notify-when-chain-is-added-to-registry` workflow is triggered exclusively by webhook events, optimizing CI resource usage ([#1073](https://github.com/ethereum-optimism/superchain-registry/pull/1073)).\n\n- **Code Cleanup and Refactoring:**\n  - A pull request was opened to begin removing CGT-related code from the repository, suggesting a move to deprecate or clean up older functionalities ([#1074](https://github.com/ethereum-optimism/superchain-registry/pull/1074)).\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed this week, but discussions on several critical active issues progressed.\n\n- **Closed Issues:**\n  - No issues were closed this week.\n\n- **New & Active Issues:**\n  - **`op-supervisor` Enhancements:** Discussions continued on two key issues related to the `op-supervisor`. One conversation focuses on handling pre-interop super roots for fault proofs ([#16166](https://github.com/ethereum-optimism/superchain-registry/issues/16166)), while another aims to improve the supervisor's reset logic to better validate L1 origins ([#16315](https://github.com/ethereum-optimism/superchain-registry/issues/16315)). These discussions are critical for the security and reliability of the fault proof system.\n  - **Incorrect Nonce Bug:** A user-facing issue where Base nodes return an incorrect nonce for pending transactions ([#623](https://github.com/ethereum-optimism/superchain-registry/issues/623)) remains active. A community member requested an update, highlighting its ongoing impact on users experiencing stuck transactions.\n\n## \ud83d\udcac Community & Collaboration\nThis week saw focused technical discussions among contributors on core protocol components, particularly the `op-supervisor`. The ongoing dialogue in issues #16166 and #16315 indicates deep collaboration on complex topics like fault proof construction and node reset behavior. Additionally, community feedback remains a key driver, as seen in the follow-up on the active nonce bug (#623), which keeps attention on a significant user pain point.", "2025-09-04T03:31:18.153Z"]
["ethereum-optimism/superchain-ops_week_2025-06-01", "ethereum-optimism/superchain-ops", "week", "2025-06-01", "# ethereum-optimism/superchain-ops Weekly Report (Jun 1 - 7, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on enhancing the security and reliability of the Superchain. Significant progress was made in preparing the Mode and Metal Mainnets for permissioned fault proofs, a key step towards greater decentralization. Concurrently, the team addressed critical operational issues, including bug fixes for nonce management on Base Sepolia and improvements to simulation scripts. Important architectural discussions are ongoing, particularly concerning the `op-supervisor`'s role in providing data for fault proofs, which is considered a blocker for future devnet migrations.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment efforts focused on both proactive upgrades and immediate bug fixes to maintain chain stability.\n\n- **Fault Proof System Preparations**\n  Work began on transitioning Mode and Metal Mainnet to a permissioned fault proof system. This foundational effort involved adding the initial files and tasks required for the upgrade, paving the way for enhanced security guarantees across these chains ([#955](https://github.com/ethereum-optimism/superchain-ops/pull/955), [#956](https://github.com/ethereum-optimism/superchain-ops/pull/956)).\n\n- **Nonce Management and Simulation Fixes**\n  Several bug fixes were implemented to improve system reliability. A specific fix was deployed to correct nonce handling on Base Sepolia following a recent transaction ([#1061](https://github.com/ethereum-optimism/superchain-ops/pull/1061)). General updates to Sepolia nonce management were also made ([#1048](https://github.com/ethereum-optimism/superchain-ops/pull/1048)). Additionally, a bug in the `sim-sequence` script was resolved by introducing an environment flag to control override checks, making simulation processes more robust ([#1051](https://github.com/ethereum-optimism/superchain-ops/pull/1051)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved resolving test suite dependencies, identifying new potential risks, and advancing discussions on critical active problems.\n\n- **Closed Issues:**\n  An issue related to `op-acceptance-tests` was closed, removing a dependency on the deprecated supervisor multinode support ([#16187](https://github.com/ethereum-optimism/superchain-ops/issues/16187)). This refines the test suite and aligns it with the current architecture.\n\n- **New & Active Issues:**\n  - A new issue was opened regarding the `op-supervisor`'s reset logic, which currently lacks a check for the canonical nature of the L1 origin ([#16315](https://github.com/ethereum-optimism/superchain-ops/issues/16315)). This highlights a potential risk if the L1 chain changes during a reset.\n  - A critical discussion is ongoing for issue [#16166](https://github.com/ethereum-optimism/superchain-ops/issues/16166), which concerns the `op-supervisor`'s inability to provide data for fault proofs with non-genesis interop upgrades. There is a consensus that this must be fixed before devnet migrations can proceed, with a preference for a solution within the `op-supervisor` itself.\n  - The user-facing issue of `eth_getTransactionCount` returning an incorrect nonce on the Base node ([#623](https://github.com/ethereum-optimism/superchain-ops/issues/623)) remains active, with users reporting stuck transactions and requesting updates.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the focused discussions around complex technical challenges. The active debate on issue [#16166](https://github.com/ethereum-optimism/superchain-ops/issues/16166) highlights a collaborative effort to determine the best architectural path forward for fault proofs, weighing different implementation strategies to resolve a significant blocker. Furthermore, the continued attention on user-reported problems, such as the Base node nonce issue ([#623](https://github.com/ethereum-optimism/superchain-ops/issues/623)), demonstrates the team's engagement with the broader ecosystem and its commitment to addressing operational pain points.", "2025-09-04T03:31:21.806Z"]
["ethereum-optimism/community-hub_week_2025-06-08", "ethereum-optimism/community-hub", "week", "2025-06-08", "# ethereum-optimism/community-hub Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a dual focus on enhancing community-facing resources and improving core system stability. A significant effort was dedicated to overhauling governance documentation, particularly for the Citizen House, to provide greater clarity for participants. Concurrently, major strides were made in tackling CI and test flakiness with the introduction of a new \"Flakiness Report\" generator, a key step toward improving developer experience and platform reliability. While no major features were shipped, the week's work strengthened the project's foundation through crucial documentation updates, bug fixes, and deep investigations into the `op-supervisor` and RPC behavior.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe majority of completed work centered on documentation and content refinement within the community hub.\n\n- **Governance Documentation Overhaul:** A comprehensive update was performed on governance-related content. This included a bug fix for the Citizen House section on the governance site ([#1159]) and extensive content revisions for the Citizen House overview, glossary, eligibility, and FAQs ([#1152], [#1161]). Other key pages, including the general welcome, delegation guide, Token House overview, and grant overview, also received copy updates to improve clarity ([#1156], [#1157], [#1158], [#1160]).\n\n- **Schema and Link Fixes:** To support the documentation efforts, the citizen identity schema was updated with a new `refUID` field ([#1162]). Several minor pull requests were also merged to fix broken links and make small adjustments within the Token House documentation ([#1150], [#1151], [#1153]).\n\n## \ud83d\udc1b Issues & Triage\nThe project saw progress on resolving dependency issues and made significant headway in diagnosing long-standing stability problems.\n\n- **Closed Issues:**\n    - **Dependency Management:** An issue preventing imports from `@eth-optimism/tokenlist` due to a missing `dist` directory was resolved, unblocking developers who rely on the package ([#1146]).\n    - **Documentation Cleanup:** An issue regarding an outdated testnet tutorial for the deprecated L2 Output Oracle was closed, removing obsolete information ([#1614]).\n\n- **New & Active Issues:**\n    - **CI & Test Stability:** A major focus this week was on investigating CI flakiness ([#16271]) and improving acceptance test reliability ([#16378]). The key development was the creation and release of a \"Flakiness Report\" generator, which aims to provide better visibility into test failures, many of which are attributed to infrastructure rather than the tests themselves.\n    - **`op-supervisor` Integrity:** Discussions continued on core `op-supervisor` behavior. This included improving L1 origin validity handling to reduce complexity ([#16315]) and investigating a potential event overflow on large unsafe head gaps ([#16335]), with analysis suggesting the root cause may lie elsewhere in the event system.\n    - **RPC Node Behavior:** The issue where `eth_getTransactionCount` returns an incorrect nonce for pending transactions ([#623]) remains active and received multiple requests for updates, highlighting its impact on users.\n    - **Planning & Future Work:** Discussions progressed on creating a quickstart guide for the Superchain Interop environment ([#1644]) and defining the necessary changes for the Fault Proof creator contract ([#15789]).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted focused collaboration on improving system health and community resources.\n\n- The effort to diagnose and improve CI stability was spearheaded by `scharissis`, whose work on the new \"Flakiness Report\" ([#16271], [#16378]) provides a valuable tool for all contributors.\n- Deep technical discussions on the `op-supervisor` ([#16315], [#16335]) showed close collaboration between core developers like `sebastianst` and `axelKingsley` as they work to ensure the robustness of critical protocol components.\n- Community members `ntrzr` and `mukul3097` kept attention on the user-facing `eth_getTransactionCount` bug ([#623]), demonstrating active engagement in tracking and pushing for resolutions to important issues.", "2025-09-04T03:31:29.876Z"]
["ethereum-optimism/ecosystem_week_2025-06-08", "ethereum-optimism/ecosystem", "week", "2025-06-08", "# ethereum-optimism/ecosystem Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on enhancing cross-chain functionality and planning for major new features. Key progress was made on the interoperability front with the integration of `GasTank` event indexing, improving the tracking of gas provider operations. A significant amount of planning took place, evidenced by a large influx of new issues scoping out the development of the Gas Tank relayer system and the SuperStacks claim process. Concurrently, the team continued its deep dive into improving developer experience and stability, with extensive discussions aimed at diagnosing and mitigating CI and acceptance test flakiness.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on interoperability enhancements and routine package maintenance.\n\n- **Cross-Chain Interoperability & Gas Tank:**\n  To improve the tracking of cross-chain gas operations, new features were added to index `GasTank` events and integrate its ABI. This work establishes new database tables for `gasProviders` and `gasProviderPendingWithdrawals`, providing better visibility into message claims and provider activity ([#833](https://github.com/ethereum-optimism/ecosystem/pull/833), [#834](https://github.com/ethereum-optimism/ecosystem/pull/834)).\n\n- **Ecosystem Package Maintenance:**\n  Several packages received version updates to ensure components remain current. The `supersim` package was updated to `v0.1.0-alpha.50` ([#835](https://github.com/ethereum-optimism/ecosystem/pull/835)). Other dependency updates were also released for `ponder-interop`, `viem`, and `wagmi` ([#852](https://github.com/ethereum-optimism/ecosystem/pull/852), [#853](https://github.com/ethereum-optimism/ecosystem/pull/853), [#855](https://github.com/ethereum-optimism/ecosystem/pull/855), [#856](https://github.com/ethereum-optimism/ecosystem/pull/856)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a significant amount of issue creation, signaling active planning for new features, alongside ongoing discussions on core protocol stability and testing.\n\n- **Closed Issues:**\n  Several key issues were resolved:\n  - **Gas Tank:** The task to index `GasTank` events was completed and closed ([#838](https://github.com/ethereum-optimism/ecosystem/issues/838)).\n  - **Protocol Stability:** An issue causing an `op-supervisor` crash loop due to event overflow was closed, with a new gauge added for future debugging ([#16335](https://github.com/ethereum-optimism/ecosystem/issues/16335)).\n  - **Tooling & Backend:** A build issue with the `@eth-optimism/tokenlist` package was fixed ([#1146](https://github.com/ethereum-optimism/ecosystem/issues/1146)), and a backend implementation for a Superstacks endpoint was completed ([#807](https://github.com/ethereum-optimism/ecosystem/issues/807)).\n\n- **New & Active Issues:**\n  A large volume of new issues were opened, primarily focused on two new initiatives:\n  - **Gas Tank & Relayer System:** A suite of issues was created to build out the Gas Tank system, including contract development ([#836](https://github.com/ethereum-optimism/ecosystem/issues/836]), fund claiming ([#840](https://github.com/ethereum-optimism/ecosystem/issues/840)), and updating the relayer to check for sufficient funds ([#839](https://github.com/ethereum-optimism/ecosystem/issues/839)). This effort also includes enhancing logging ([#841](https://github.com/ethereum-optimism/ecosystem/issues/841), [#842](https://github.com/ethereum-optimism/ecosystem/issues/842), [#843](https://github.com/ethereum-optimism/ecosystem/issues/843)) and alerting ([#844](https://github.com/ethereum-optimism/ecosystem/issues/844), [#845](https://github.com/ethereum-optimism/ecosystem/issues/845)).\n  - **SuperStacks Claim Flow:** Planning for the SuperStacks claim process was detailed in new issues covering backend endpoints ([#849](https://github.com/ethereum-optimism/ecosystem/issues/849]), UI cleanup ([#848](https://github.com/ethereum-optimism/ecosystem/issues/848]), data integration ([#847](https://github.com/ethereum-optimism/ecosystem/issues/847]), and a planned bug bash ([#851](https://github.com/ethereum-optimism/ecosystem/issues/851)).\n\n  Key ongoing discussions include:\n  - **CI & Test Flakiness:** A major focus remains on improving test reliability ([#16271](https://github.com/ethereum-optimism/ecosystem/issues/16271), [#16378](https://github.com/ethereum-optimism/ecosystem/issues/16378)). Analysis suggests most flakiness stems from infrastructure rather than the tests themselves. A new \"Flakiness Report\" generator has been introduced to help better identify sources of instability.\n  - **Fault Proofs:** Detailed planning continues for the Fault Proof creator contract, with a comprehensive checklist of tasks being discussed to support OPCM changes ([#15789](https://github.com/ethereum-optimism/ecosystem/issues/15789)).\n  - **Incorrect Nonce:** An older issue regarding an incorrect nonce from `eth_getTransactionCount` ([#623](https://github.com/ethereum-optimism/ecosystem/issues/623)) continues to see activity from users requesting updates, highlighting its importance to the community.\n\n## \ud83d\udcac Community & Collaboration\nThis week demonstrated strong internal collaboration and planning. The extensive discussions around CI flakiness ([#16271](https://github.com/ethereum-optimism/ecosystem/issues/16271), [#16378](https://github.com/ethereum-optimism/ecosystem/issues/16378)) involved multiple team members sharing detailed analysis and creating new tooling to address the problem collectively. The structured breakdown of tasks for the Fault Proof creator contract ([#15789](https://github.com/ethereum-optimism/ecosystem/issues/15789)) and the coordinated creation of issues for the Gas Tank and SuperStacks features indicate a methodical approach to scoping and distributing upcoming work. Additionally, continued community engagement is evident from the follow-ups on the `eth_getTransactionCount` nonce issue ([#623](https://github.com/ethereum-optimism/ecosystem/issues/623)), underscoring the project's active user base.", "2025-09-04T03:31:34.267Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-06-08", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-06-08", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on maintaining the health and expanding the reach of the Optimism token list. A critical bug affecting the `@eth-optimism/tokenlist` npm package was resolved, restoring proper functionality for developers relying on it. Concurrently, the ecosystem's asset support was broadened with the addition of BTREE and Bridged EURC tokens. Behind the scenes, significant discussion continued on improving CI and test reliability, with the development of a new \"Flakiness Report\" to better diagnose and address sources of instability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on bug fixes and data additions for the project's token list, directly impacting developers and users within the Superchain ecosystem.\n\n### Token List Maintenance and Expansion\nA critical bug was fixed in the `@eth-optimism/tokenlist` npm package, which was missing its `dist` directory in recent versions, causing import errors. This fix ensures the package is usable again for developers ([#1161](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1161)). In addition to this maintenance, the list of supported assets was expanded:\n- **BTREE** token addresses were added for both Optimism and Optimism-Sepolia ([#1143](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1143)).\n- **Bridged EURC** was added to the Lisk network ([#1157](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1157)), enhancing cross-chain asset availability.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week was focused on resolving a critical package failure and continuing the strategic push to improve testing infrastructure.\n\n- **Closed Issues:** A key issue ([#1146](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1146)) was closed following the resolution of a bug where the `@eth-optimism/tokenlist` package was published without its necessary `dist` directory.\n\n- **New & Active Issues:** No new issues were opened this week. However, active discussions continued on improving developer infrastructure:\n    - **CI Flakiness ([#16271](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16271)):** A \"Flakiness Report\" generator was released and iterated upon to provide better visibility into CI failures, now including job names to help pinpoint problematic backends.\n    - **Acceptance Test Reliability ([#16378](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16378)):** The conversation highlighted the need to measure flakiness by package rather than by individual test, as tests within the same package can interfere with one another. The new flakiness report is expected to provide valuable data for this effort.\n\n## \ud83d\udcac Community & Collaboration\nWhile there were no newly opened pull requests to showcase broad community interaction, significant collaborative problem-solving was evident in the ongoing discussions around CI and test stability ([#16271](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16271), [#16378](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16378)). The creation and refinement of a \"Flakiness Report\" generator demonstrates a focused, collaborative effort by team members to improve the project's internal tooling and overall reliability.", "2025-09-04T03:31:36.887Z"]
["ethereum-optimism/docs_week_2025-06-08", "ethereum-optimism/docs", "week", "2025-06-08", "# ethereum-optimism/docs Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a strong focus on improving documentation quality and developer experience. Significant progress was made in fixing long-standing tutorial bugs, particularly the critical fix for the deposit flow tutorial ([#1648](https://github.com/ethereum-optimism/docs/pull/1648)). The team also expanded the documentation by adding a new tutorial on relaying log messages for interoperability ([#1613](https://github.com/ethereum-optimism/docs/pull/1613)) and updating key configurations for node operators. While documentation saw clear improvements, challenging technical issues, such as CI flakiness and an incorrect nonce bug, remain active areas of investigation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on refining existing content, adding new tutorials, and ensuring node operator information is up-to-date.\n\n- **Tutorial & Guide Enhancements:**\n    - A critical bug in the deposit flow tutorial was fixed, resolving issues that prevented users from completing the steps ([#1648](https://github.com/ethereum-optimism/docs/pull/1648)).\n    - A new tutorial was added to the interoperability section, explaining how to relay arbitrary log messages using attestations ([#1613](https://github.com/ethereum-optimism/docs/pull/1613)).\n    - A new pull request for an \"Interop testing tutorial\" was opened and is awaiting review ([#1654](https://github.com/ethereum-optimism/docs/pull/1654)).\n\n- **Node Operator & Configuration Updates:**\n    - Node operator documentation was updated to align `devp2p/disc` defaults with OP EL's discovery topology ([#1565](https://github.com/ethereum-optimism/docs/pull/1565)).\n    - The U16 challenger version was updated across relevant notices and metrics documentation ([#1658](https://github.com/ethereum-optimism/docs/pull/1658)).\n    - The hardware requirements date in the node operator tutorial was updated for accuracy ([#1662](https://github.com/ethereum-optimism/docs/pull/1662)).\n\n- **General Documentation Maintenance:**\n    - Navigation issues within the smart contracts section were corrected ([#1638](https://github.com/ethereum-optimism/docs/pull/1638), [#1659](https://github.com/ethereum-optimism/docs/pull/1659)).\n    - The audits page was updated to point to the monorepo for more current information, removing an outdated table ([#1656](https://github.com/ethereum-optimism/docs/pull/1656)).\n    - The data glossary was expanded with new logic for handling costs in dispute games ([#1655](https://github.com/ethereum-optimism/docs/pull/1655)).\n    - Minor typographical errors were corrected in various notices ([#1652](https://github.com/ethereum-optimism/docs/pull/1652), [#1653](https://github.com/ethereum-optimism/docs/pull/1653)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several user-facing documentation issues, while discussions continued on deeper, more complex technical challenges.\n\n- **Closed Issues:**\n    - A long-standing and critical issue with the \"Deposit flow\" tutorial was closed after a successful fix ([#1226](https://github.com/ethereum-optimism/docs/issues/1226)).\n    - An issue regarding an outdated L2 rollup testnet guide was closed, as the team tracks such updates internally ([#1614](https://github.com/ethereum-optimism/docs/issues/1614)).\n    - A dependency issue concerning a missing `dist` directory in `@eth-optimism/tokenlist` was resolved ([#1146](https://github.com/ethereum-optimism/docs/issues/1146)).\n\n- **New & Active Issues:**\n    - **New Issue:** A new issue was opened to address incorrect Docker image references on the releases page for node operators ([#1657](https://github.com/ethereum-optimism/docs/issues/1657)).\n    - **CI Flakiness:** Investigating CI flakiness remains a high priority ([#16271](https://github.com/ethereum-optimism/docs/issues/16271), [#16378](https://github.com/ethereum-optimism/docs/issues/16378)). Discussions highlighted that most instability stems from infrastructure issues (e.g., CircleCI machines, networking) rather than test logic. A list of the top 10 flakiest acceptance tests was generated to focus efforts.\n    - **Incorrect Nonce Bug:** The issue where `eth_getTransactionCount` returns an incorrect nonce for pending transactions on the Base node ([#623](https://github.com/ethereum-optimism/docs/issues/623)) remains active, with users still awaiting a resolution for transactions getting stuck.\n    - **Protocol Discussions:** Technical discussions are ongoing for several key areas, including improving L1 origin validity in the supervisor ([#16315](https://github.com/ethereum-optimism/docs/issues/16315)), handling event overflow in the `op-supervisor` ([#16335](https://github.com/ethereum-optimism/docs/issues/16335)), and changes to the Fault Proof creator contract ([#15789](https://github.com/ethereum-optimism/docs/issues/15789)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted active collaboration between core contributors and the broader community. User-reported issues, such as the incorrect nonce bug ([#623](https://github.com/ethereum-optimism/docs/issues/623)) and a query on state dumping ([#390](https://github.com/ethereum-optimism/docs/issues/390)), received attention, demonstrating a responsive feedback loop. Internally, there was significant discussion around complex topics like CI flakiness and protocol-level improvements, indicating a coordinated effort to enhance the stack's stability and functionality", "2025-09-04T03:31:40.134Z"]
["ethereum-optimism/op-geth_week_2025-06-08", "ethereum-optimism/op-geth", "week", "2025-06-08", "# ethereum-optimism/op-geth Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity in `op-geth` was centered on maintenance and problem-solving rather than new feature development. A minor but important bug fix was merged to ensure correct gas accounting. The primary focus, however, was on diagnosing and discussing several critical active issues, including an `op-supervisor` event overflow, CI flakiness, and an incorrect nonce bug in `eth_getTransactionCount`. These discussions highlight a concerted effort to improve the stability and reliability of the core infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe week saw one targeted bug fix aimed at improving protocol correctness.\n\n- **Gas Calculation Fix:** A minor adjustment was merged to correctly initialize `gasRemaining` during state transitions. This change ([#627](https://github.com/ethereum-optimism/op-geth/pull/627)) prevents a potential gas accounting error by using an assignment operator instead of an addition operator, aligning `op-geth` with an upstream Geth fix.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was the main focus this week, with progress made on tracking work and deep discussions on several high-priority problems.\n\n- **Closed Issues:**\n  - **Operator Fee Tracking:** Issue [#501](https://github.com/ethereum-optimism/op-geth/issues/501), which tracked the work for operator fees in `op-geth` and was linked to a design document, was closed.\n\n- **New & Active Issues:**\n  - **System Stability:** Significant discussion occurred around issue [#16335](https://github.com/ethereum-optimism/op-geth/issues/16335), where the `op-supervisor` can crash due to an event overflow. Contributors are actively diagnosing the problem, proposing the addition of counters and gauges to identify the specific event type causing the overflow.\n  - **RPC & State Bugs:** Users are seeking updates on long-standing issues. A user requested a status update on [#623](https://github.com/ethereum-optimism/op-geth/issues/623), a bug where `eth_getTransactionCount` returns an incorrect nonce, causing transactions to get stuck. Similarly, a user asked for progress on [#390](https://github.com/ethereum-optimism/op-geth/issues/390), which concerns the need for a comprehensive state dumping function.\n  - **Fault Proofs:** Discussions continued on [#15789](https://github.com/ethereum-optimism/op-geth/issues/15789) regarding changes needed for the fault proof creator contract, with a detailed checklist of required tasks being outlined.\n  - **CI Flakiness:** The investigation into CI flakiness ([#16271](https://github.com/ethereum-optimism/op-geth/issues/16271)) is ongoing, with recent comments suggesting that most flakiness originates from infrastructure issues rather than the tests themselves.\n\n## \ud83d\udcac Community & Collaboration\nThis week's collaboration was evident in the detailed technical discussions within issue threads. Multiple team members, including `nonsense`, `sebastianst`, and `axelKingsley`, were actively engaged in diagnosing the complex `op-supervisor` event overflow issue. The community's reliance on `op-geth` was also visible, with users actively following up on bugs affecting their transaction processing and state management workflows, demonstrating a keen interest in the project's stability and feature set.", "2025-09-04T03:31:50.866Z"]
["ethereum-optimism/infra_week_2025-06-08", "ethereum-optimism/infra", "week", "2025-06-08", "# ethereum-optimism/infra Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a strong focus on enhancing infrastructure stability and reliability. Key components like `proxyd` and `op-conductor-ops` received critical bug fixes and performance improvements to bolster the network's core services. Concurrently, a significant effort was dedicated to improving the developer and operator experience through better test reporting and a concerted push to diagnose and eliminate CI flakiness. The completion of a full L2-to-L1 withdrawal flow test marks a major milestone in end-to-end system validation, while new initiatives like the Gas Tank contract signal ongoing feature development.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on hardening existing services and improving the testing framework.\n\n- **`proxyd` Enhancements:** The proxy service saw significant improvements. A performance optimization was introduced to bypass the concurrency-limiting semaphore when unlimited concurrency is configured ([#405](https://github.com/ethereum-optimism/infra/pull/405)). A critical bug was also fixed where request size limits were checked prematurely; the check now correctly occurs after interop transaction recognition, ensuring proper handling ([#407](https://github.com/ethereum-optimism/infra/pull/407)).\n\n- **Sequencer and Conductor Reliability:** A crucial fix was merged for `op-conductor-ops` to prevent the bootstrap process from exiting before at least one sequencer is active, improving the robustness of sequencer operations ([#404](https://github.com/ethereum-optimism/infra/pull/404)).\n\n- **Test Framework and Reporting:** The `op-acceptor` test suite was improved with a new feature to display an overall pass/fail status in its HTML reports for clearer results ([#408](https://github.com/ethereum-optimism/infra/pull/408)). A persistent test flake in `TestRealtimeLogs` was also resolved to increase the reliability of the test suite ([#409](https://github.com/ethereum-optimism/infra/pull/409)).\n\n## \ud83d\udc1b Issues & Triage\nIssue tracking this week focused on resolving long-standing tests, cleaning up documentation, and initiating new efforts around core contracts and test reliability.\n\n- **Closed Issues:**\n    - **End-to-End Testing:** The issue for implementing a complete L2-to-L1 withdrawal flow test was closed, confirming the successful implementation of the test covering initiation, proof, and finalization ([#327](https://github.com/ethereum-optimism/infra/issues/327)). The acceptance test for Conductor leadership transfer was also completed and closed ([#351](https://github.com/ethereum-optimism/infra/issues/351)).\n    - **Documentation:** An issue regarding outdated documentation for the deprecated `L2OutputOracleProxy` was closed, cleaning up the testnet tutorial ([#1614](https://github.com/ethereum-optimism/infra/issues/1614)).\n\n- **New & Active Issues:**\n    - **CI & Test Flakiness:** A major focus of discussion was on improving test reliability. A new issue was opened specifically to track and mitigate flakiness in acceptance tests ([#16378](https://github.com/ethereum-optimism/infra/issues/16378)), complementing the ongoing investigation into broader CI flakiness, which is believed to stem primarily from infrastructure issues ([#16271](https://github.com/ethereum-optimism/infra/issues/16271)).\n    - **Core Contracts & Services:** A new issue was opened to track the development of the Gas Tank contract, a key component for gas management ([#836](https://github.com/ethereum-optimism/infra/issues/836)).\n    - **Supervisor Stability:** Discussions are active around a critical `op-supervisor` crash-loop caused by event overflow when a managed node falls too far behind ([#16335](https://github.com/ethereum-optimism/infra/issues/16335)). Architectural refinement is also being discussed for supervisor L1 origin handling to simplify reset logic ([#16315](https://github.com/ethereum-optimism/infra/issues/16315)).\n    - **Persistent Bugs:** The issue of `eth_getTransactionCount` returning an incorrect nonce for pending transactions remains active and is awaiting an update, as it causes transactions to get stuck ([#623](https://github.com/ethereum-optimism/infra/issues/623)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the deep technical discussions aimed at improving system architecture and reliability. Multiple team members, including `sebastianst`, `axelKingsley`, and `nonsense`, engaged in detailed analysis of the `op-supervisor`'s event handling and reset logic. The concerted effort to tackle CI flakiness, led by `scharissis`, involves detailed reporting and analysis, indicating a team-wide commitment to improving development infrastructure. Furthermore, planning for the Superchain Interop quickstart guide ([#1644](https://github.com/ethereum-optimism/infra/issues/1644)) showed cross-functional collaboration between `sbvegan`, `@bradleycamacho`, and `@krofax` on content strategy.", "2025-09-04T03:31:53.405Z"]
["ethereum-optimism/op-analytics_week_2025-06-08", "ethereum-optimism/op-analytics", "week", "2025-06-08", "# ethereum-optimism/op-analytics Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's focus was on significantly enhancing the data pipeline's ability to ingest Superchain-native information. Development centered on integrating data directly from the Superchain Registry and on-chain contracts, providing a more accurate and consolidated view of chain configurations. Alongside these new features, a critical bug in the BigQuery function for updating L1 costs was resolved. Concurrently, a major effort continued to investigate and improve CI test flakiness, with the introduction of new reporting tools to aid debugging.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on expanding data sources and ensuring the reliability of existing pipelines.\n\n- **Superchain Data Integration:** A major push was made to enrich the analytics platform with data from across the Superchain. This included pulling the chain address list ([#1641](https://github.com/ethereum-optimism/op-analytics/pull/1641)) and the full chain list ([#1642](https://github.com/ethereum-optimism/op-analytics/pull/1642)) from the Superchain Registry. A new `build_all_chains_metadata()` pipeline was introduced to aggregate metadata ([#1629](https://github.com/ethereum-optimism/op-analytics/pull/1629)), and work was completed to pull system configuration data directly from on-chain contracts ([#1646](https://github.com/ethereum-optimism/op-analytics/pull/1646)).\n\n- **Data Pipeline Bug Fix:** A bug was fixed in the BigQuery series function, which was preventing accurate updates to table fields. This correction ensures the reliability of data updates, particularly for L1 costs ([#1643](https://github.com/ethereum-optimism/op-analytics/pull/1643)).\n\n- **Infrastructure Updates:** The project's data orchestration layer was kept up-to-date with two separate updates to the Dagster version ([#1644](https://github.com/ethereum-optimism/op-analytics/pull/1644), [#1647](https://github.com/ethereum-optimism/op-analytics/pull/1647)), ensuring access to the latest features and stability improvements.\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:** Two issues were resolved this week. One clarified that the `L2OutputOracleProxy` is deprecated, closing an issue related to an outdated tutorial ([#1614](https://github.com/ethereum-optimism/op-analytics/issues/1614)). The other addressed a module import error in `@eth-optimism/tokenlist` that was causing build failures ([#1146](https://github.com/ethereum-optimism/op-analytics/issues/1146)).\n\n- **New & Active Issues:** No new issues were opened, but several active issues saw significant discussion:\n    - **CI Flakiness:** The investigation into CI flakiness ([#16271](https://github.com/ethereum-optimism/op-analytics/issues/16271), [#16378](https://github.com/ethereum-optimism/op-analytics/issues/16378)) was a major focus. Discussions highlighted that most flakiness is due to infrastructure rather than the tests themselves. A key development was the creation and sharing of a \"Flakiness Report\" to better identify problematic tests and jobs.\n    - **`op-supervisor` Stability:** Critical discussions continued around the `op-supervisor`. One thread focused on how it should handle L1 origin validity during resets ([#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315)), while another addressed a crash-loop caused by event overflow when the unsafe head gap is large ([#16335](https://github.com/ethereum-optimism/op-analytics/issues/16335)).\n    - **Incorrect Nonce Bug:** A long-standing issue regarding `eth_getTransactionCount` returning an incorrect nonce for pending transactions ([#623](https://github.com/ethereum-optimism/op-analytics/issues/623)) received renewed attention, with a request for an update on the investigation.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the focused discussions on complex technical challenges. The effort to tackle CI flakiness ([#16271](https://github.com/ethereum-optimism/op-analytics/issues/16271), [#16378](https://github.com/ethereum-optimism/op-analytics/issues/16378)) involved multiple contributors like `scharissis` and `nonsense`, demonstrating a collective commitment to improving developer infrastructure. Similarly, deep technical debates on `op-supervisor` behavior ([#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315), [#16335](https://github.com/ethereum-optimism/op-analytics/issues/16335)) saw active participation from `sebastianst`, `nonsense`, and `axelKingsley`, showcasing collaborative problem-solving on core protocol components. The planning for a Superchain Interop quickstart guide ([#1644](https://github.com/ethereum-optimism/op-analytics/issues/1644)) also highlighted teamwork aimed at enhancing developer experience.", "2025-09-04T03:31:56.896Z"]
["ethereum-optimism/specs_week_2025-06-08", "ethereum-optimism/specs", "week", "2025-06-08", "# ethereum-optimism/specs Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on improving the reliability and clarity of the OP Stack specifications and tooling. While major feature development was quiet, significant progress was made in diagnosing and addressing flakiness in CI and acceptance tests. Key activities included targeted documentation updates to reflect the current state of Fault Proof VMs and interop specifications. Discussions around the `op-supervisor`'s behavior and a new initiative to rename its operational modes signal a strong focus on enhancing system stability and developer experience.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on precise updates to the project's specifications and documentation to ensure accuracy.\n\n*   **Specification and Documentation Refinements**\n    *   A bug was fixed in the interop specifications that incorrectly reset event descriptions, ensuring the `managed-mode.md` file is accurate ([#719](https://github.com/ethereum-optimism/specs/pull/719)).\n    *   The documentation for Fault Proof Virtual Machines was updated to mark \"cannon-rs\" as deprecated and correctly list \"Cannon\" as 64-bit, keeping the fault-proof system specs current ([#720](https://github.com/ethereum-optimism/specs/pull/720)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a concerted effort to tackle system reliability, clarify component naming, and plan for future features, alongside resolving outdated documentation.\n\n*   **Closed Issues:**\n    *   An issue regarding the `L2OutputOracleProxy` was closed, clarifying that the component is deprecated and the related documentation was outdated. This cleanup helps prevent confusion for developers using the specs ([#1614](https://github.com/ethereum-optimism/specs/issues/1614)).\n\n*   **New & Active Issues:**\n    *   **Test Reliability:** A major theme this week was improving test stability. Discussions on CI flakiness ([#16271](https://github.com/ethereum-optimism/specs/issues/16271)) identified infrastructure as a primary cause, and a new issue was opened to formally track efforts to improve acceptance test reliability, aiming for consistent pass rates ([#16378](https://github.com/ethereum-optimism/specs/issues/16378)).\n    *   **Supervisor Stability and Clarity:** Several active discussions focused on the `op-supervisor`. These include a critical investigation into an event overflow bug that can cause crash-loops ([#16335](https://github.com/ethereum-optimism/specs/issues/16335)) and a proposal to simplify L1 origin validity checks ([#16315](https://github.com/ethereum-optimism/specs/issues/16315)). A new ticket was also created to rename supervisor and op-node modes to improve clarity ([#16379](https://github.com/ethereum-optimism/specs/issues/16379)).\n    *   **Future Work & Bug Fixes:** A new issue was opened to track the development of a \"Gas Tank\" contract, with a PR already linked ([#836](https://github.com/ethereum-optimism/specs/issues/836)). An older issue concerning an incorrect nonce from `eth_getTransactionCount` ([#623](https://github.com/ethereum-optimism/specs/issues/623)) also saw renewed activity.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions within active issues. The investigation into `op-supervisor` event overflows ([#16335](https://github.com/ethereum-optimism/specs/issues/16335)) and the push for more reliable acceptance tests ([#16378](https://github.com/ethereum-optimism/specs/issues/16378)) showcased focused, problem-solving dialogue among team members. Furthermore, work on items like the Fault Proof creator contract ([#15789](https://github.com/ethereum-optimism/specs/issues/15789)) and the complete withdrawal flow test ([#327](https://github.com/ethereum-optimism/specs/issues/327)) highlighted cross-repository collaboration, with links to active pull requests in the main `optimism` repository.", "2025-09-04T03:32:05.602Z"]
["ethereum-optimism/superchain-ops_week_2025-06-08", "ethereum-optimism/superchain-ops", "week", "2025-06-08", "# ethereum-optimism/superchain-ops Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on improving system reliability and addressing foundational technical debt. Significant discussions took place around diagnosing and mitigating CI flakiness, with a focus on infrastructure improvements and better reporting for acceptance tests. A dependency issue was resolved, and a new issue was opened to enhance the `AccountAccessParser` by removing hardcoded values. Additionally, a long-standing feature request for state dumping saw renewed interest from the community.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major features were merged, progress was made on code maintenance and refinement.\n\nA new pull request ([#1080](https://github.com/ethereum-optimism/superchain-ops/pull/1080)) was opened to refactor the name of a parent multisig to \"root safe,\" improving clarity within the codebase.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on dependency fixes, planning for future enhancements, and tackling persistent CI instability.\n\n- **Closed Issues:**\n    - **Dependency Management:** Issue [#1146](https://github.com/ethereum-optimism/superchain-ops/issues/1146) was closed, resolving a build problem caused by the absence of a `dist` directory in recent versions of the `@eth-optimism/tokenlist` package.\n\n- **New & Active Issues:**\n    - **CI & Test Reliability:** Discussions were active across two key issues. In [#16271](https://github.com/ethereum-optimism/superchain-ops/issues/16271), investigation continued into CI flakiness, with updates suggesting infrastructure is the primary cause. In a related effort on [#16378](https://github.com/ethereum-optimism/superchain-ops/issues/16378), a new \"Flakiness Report\" was shared to better identify problematic tests, and a discussion emerged about measuring flakiness by package rather than individual tests for more accurate analysis.\n    - **Future Enhancements:** A new issue, [#1064](https://github.com/ethereum-optimism/superchain-ops/issues/1064), was opened to improve `AccountAccessParser`. The goal is to dynamically find slots for normalized hashing, replacing the current hardcoded approach for a more robust long-term solution.\n    - **State Dumping:** A long-standing issue, [#390](https://github.com/ethereum-optimism/superchain-ops/issues/390), received a new comment inquiring about progress on a feature to dump the full state of addresses, signaling continued community interest.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the concerted effort to address CI and testing reliability. Contributors `scharissis`, `nonsense`, `pcw109550`, and `teddyknox` were actively involved in the discussion around issue [#16378], sharing reports and debating the best approach to measure test flakiness. Additionally, community member `@0xWilliamWang` revived discussion on an older issue ([#390]), demonstrating ongoing user engagement with the project's backlog.", "2025-09-04T03:32:08.467Z"]
["ethereum-optimism/docs_week_2025-06-15", "ethereum-optimism/docs", "week", "2025-06-15", "# ethereum-optimism/docs Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for the `ethereum-optimism/docs` repository, with no new pull requests merged or documentation changes implemented. The primary focus was on planning for future infrastructure enhancements. A new initiative was formally tracked to enable flashblocks on the op-sepolia testnet, signaling preparatory work for upcoming protocol features. This effort is currently in the planning phase and is dependent on the successful testing of related components.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the available activity reports for this week, there were no new features, bug fixes, or documentation enhancements merged into the repository. Development work was paused or focused on planning rather than implementation.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week centered on laying the groundwork for a single, significant future task.\n\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:** The main activity was the creation of a new issue to manage the deployment of flashblocks.\n    - **Flashblocks on op-sepolia:** Issue [#16496](https://github.com/ethereum-optimism/docs/issues/16496) was opened to track the process of enabling flashblocks on the op-sepolia testnet. The initial plan involves a non-public deployment in `dry_run` mode for testing. This work is currently blocked by another issue ([#16468](https://github.com/ethereum-optimism/docs/issues/16468)) and is contingent on gaining confidence from a similar enablement in the `eris-0` environment.\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction was minimal this week, with no pull request discussions or reviews taking place. The focus was on internal planning, as evidenced by the creation of the tracking issue for the flashblocks deployment.", "2025-09-04T03:32:12.164Z"]
["ethereum-optimism/supersim_week_2025-06-08", "ethereum-optimism/supersim", "week", "2025-06-08", "# ethereum-optimism/supersim Weekly Report (Jun 8 - 14, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts were centered on investigation and in-depth discussion rather than code implementation. No new features or fixes were merged. Instead, significant progress was made in diagnosing complex, high-priority issues, including a potential crash-loop in the `op-supervisor` and persistent CI flakiness. Discussions also advanced the planning for significant changes to the Fault Proof creator contract, while new community feedback highlighted a need for clearer documentation around local development environments.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged this week. All development activity was focused on investigating and discussing active issues.\n\n## \ud83d\udc1b Issues & Triage\nThe week's activity was concentrated on triaging and advancing discussions on existing and newly created issues.\n\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:**\n    - **Protocol Stability & Bugs:** A critical discussion unfolded in [#16335](https://github.com/ethereum-optimism/supersim/issues/16335) concerning an `op-supervisor` event overflow that can lead to non-recoverable crash-loops. Contributors are actively debugging the root cause, with analysis suggesting that `\"cross-unsafe-update\"` events, rather than `ChainIndexingContinueEvent`s, might be the source of the problem. Meanwhile, the long-standing bug [#623](https://github.com/ethereum-optimism/supersim/issues/623), where `eth_getTransactionCount` returns an incorrect nonce, remains active with users inquiring about progress.\n    - **Fault Proofs & Infrastructure:** Planning for OPCM changes to the Fault Proof creator contract continued in [#15789](https://github.com/ethereum-optimism/supersim/issues/15789), with a detailed task list provided and a related pull request in the main `optimism` repository linked. Separately, investigation into CI flakiness is ongoing in [#16271](https://github.com/ethereum-optimism/supersim/issues/16271), indicating a broader effort to improve infrastructure stability.\n    - **Developer Experience:** A new issue, [#399](https://github.com/ethereum-optimism/supersim/issues/399), was opened to seek clarification on the differences between `supersim` and the `interop kurtosis devnet` for local development, highlighting an opportunity to improve developer onboarding documentation.\n\n## \ud83d\udcac Community & Collaboration\nThis week showcased strong collaborative debugging and planning. The discussion around the `op-supervisor` crash-loop ([#16335](https://github.com/ethereum-optimism/supersim/issues/16335)) involved detailed back-and-forth between core contributors like @axelKingsley, @nonsense, and @sebastianst. Similarly, @stevennevins provided a comprehensive plan for the Fault Proof contract changes in [#15789](https://github.com/ethereum-optimism/supersim/issues/15789). Community engagement was also evident, with user `mukul3097` prompting for an update on an active bug and another user opening an issue to improve clarity on development environments.", "2025-09-04T03:32:13.669Z"]
["ethereum-optimism/Retro-Funding_week_2025-06-15", "ethereum-optimism/Retro-Funding", "week", "2025-06-15", "# ethereum-optimism/Retro-Funding Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development activity was characterized by focused investigation and collaborative problem-solving within existing issues, rather than new feature implementation or code merges. No new pull requests were opened or merged. Key discussions centered on diagnosing critical stability issues, including a goroutine leak in `op-node`'s P2P sync client and an event overflow in `op-supervisor`. Efforts also continued to refine release automation and clarify the roles of different testing environments, laying the groundwork for future development and stability improvements.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features, bug fixes, or other code changes were merged this week. All development activity occurred within issue discussions, focusing on analysis and planning for future work.\n\n## \ud83d\udc1b Issues & Triage\nNo issues were opened or closed this week. The focus remained on diagnosing and discussing several high-priority active issues.\n\n**New & Active Issues:**\n\n*   **`op-node` & `op-supervisor` Stability:**\n    *   **`op-node` Goroutine Leak ([#16332](https://github.com/ethereum-optimism/Retro-Funding/issues/16332)):** A user confirmed they are experiencing the previously reported issue of stuck goroutines in `op-node` v1.13.3, providing a detailed stack trace. This confirms the persistence of a significant stability problem related to the P2P synchronization client.\n    *   **`op-supervisor` Event Overflow ([#16335](https://github.com/ethereum-optimism/Retro-Funding/issues/16335)):** Investigation into event overflow during large unsafe head gaps continued. A plan was formulated to add a gauge for in-flight events ([#16473](https://github.com/ethereum-optimism/optimism/pull/16473)) to pinpoint which event type is causing the backlog, moving the diagnosis forward.\n\n*   **Tooling and Testing Infrastructure:**\n    *   **Release Pipeline Automation ([#16097](https://github.com/ethereum-optimism/Retro-Funding/issues/16097)):** A discussion around improving release changelogs led to a suggestion to use the lighter-weight `git cliff` tool, indicating an ongoing effort to streamline release processes.\n    *   **Testing Environments ([#398](https://github.com/ethereum-optimism/Retro-Funding/issues/398), [#399](https://github.com/ethereum-optimism/Retro-Funding/issues/399)):** Progress was noted in setting up persistent devnets with the addition of L1 Faucet support. A clarifying discussion distinguished `supersim` as a lightweight tool for local multi-chain application testing, in contrast to the more robust Kurtosis devnets used for testing the chains themselves.\n\n*   **Protocol Configuration and Errors:**\n    *   **Genesis Configuration ([#15765](https://github.com/ethereum-optimism/Retro-Funding/issues/15765)):** A key discussion concluded that adding `CrossL2Inbox` validation to the execution client is unnecessary, as the existing `op-deployer` tooling already mitigates the risk of misconfiguration.\n    *   **Super DA Errors ([#725](https://github.com/ethereum-optimism/Retro-Funding/issues/725)):** The issue of adding missing Super DA error codes was brought back to the forefront by tagging relevant team members for attention.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was highly visible within issue threads this week. The investigation into the `op-supervisor` event overflow ([#16335](https://github.com/ethereum-optimism/Retro-Funding/issues/16335)) involved active discussion between several contributors, including `sebastianst`, `axelKingsley`, and `nonsense`, who built upon each other's findings to form a diagnostic plan. Community involvement was also crucial, as seen in the `op-node` stability issue ([#16332](https://github.com/ethereum-optimism/Retro-Funding/issues/16332)), where user `Creamers158` provided a valuable stack trace that confirmed the bug. This highlights a healthy dynamic of both internal team collaboration and external community feedback driving the project's problem-solving efforts.", "2025-09-04T03:32:17.591Z"]
["ethereum-optimism/infra_week_2025-06-15", "ethereum-optimism/infra", "week", "2025-06-15", "# ethereum-optimism/infra Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on infrastructure maintenance and diagnostics. A routine dependency update was initiated for `op-conductor-ops` to ensure components remain current. Significant discussion continued around improving the stability of `op-supervisor`, with a focus on adding better monitoring to diagnose a potential event overflow issue. Additionally, ongoing conversations aimed to clarify the distinct use cases for local development environments, highlighting an effort to improve developer experience and tooling documentation.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development activity involved routine maintenance to keep the infrastructure's dependencies up-to-date.\n\n- **Dependency Maintenance:** A pull request ([#410](https://github.com/ethereum-optimism/infra/pull/410)) was opened to upgrade the `urllib3` dependency from version 2.2.2 to 2.5.0 for `op-conductor-ops`.\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened and no existing issues were closed based on the provided reports. However, there was notable activity on key ongoing issues related to system stability and developer tooling.\n\n- **Closed Issues:** No issues were resolved this week according to the available data.\n\n- **New & Active Issues:**\n    - **`op-supervisor` Stability ([#16335](https://github.com/ethereum-optimism/infra/issues/16335))**: Discussion continued on a critical issue where `op-supervisor` can crash-loop due to an event overflow when the unsafe head gap becomes too large. A proposal was made to add a gauge to monitor all in-flight events, which would help identify the specific event type causing the overflow and allow for proactive alerting.\n    - **Developer Tooling Clarification ([#399](https://github.com/ethereum-optimism/infra/issues/399))**: The conversation about the differences between `supersim` and the `interop kurtosis devnet` continued. Community members are seeking to understand the primary use cases for each local development environment, signaling a need for clearer documentation around developer tooling.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this period was evident through active discussions within GitHub issues. In the `op-supervisor` event overflow issue ([#16335](https://github.com/ethereum-optimism/infra/issues/16335)), contributors are collaboratively diagnosing the problem and proposing concrete monitoring solutions. Similarly, the discussion around local devnet environments ([#399](https://github.com/ethereum-optimism/infra/issues/399)) shows active engagement from the community to better understand and utilize the project's tools.", "2025-09-04T03:32:30.272Z"]
["ethereum-optimism/ecosystem_week_2025-06-15", "ethereum-optimism/ecosystem", "week", "2025-06-15", "# ethereum-optimism/ecosystem Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts were centered on strategic planning and critical issue investigation rather than code implementation. Discussions advanced key initiatives for improving the Superchain ecosystem's stability and developer experience. Significant conversations took place around defining CI pipeline SLAs, automating release processes for OP Stack components, and enhancing interoperability testing with tools like `supersim`. Concurrently, the team actively investigated severe bugs, including a goroutine leak in `op-node` and an event overflow issue in `op-supervisor`, underscoring a strong focus on protocol health and reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features, bug fixes, or code refactoring were merged this week. All progress was made through discussions and planning within GitHub issues, laying the groundwork for future development work.\n\n## \ud83d\udc1b Issues & Triage\nActivity this week was concentrated on discussing and triaging active issues. No issues were closed or newly opened.\n\n### New & Active Issues\n\nDiscussions this week fell into three main categories: tooling automation, Superchain interoperability, and bug investigation.\n\n**Tooling & Automation:**\n*   **CI Pipeline SLAs ([#16437](https://github.com/ethereum-optimism/ecosystem/issues/16437)):** A detailed framework was proposed to establish Service Level Agreements (SLAs) for the CI pipeline. The proposal aims to create clear expectations and accountability by defining metrics for availability (95% job success rate), performance (80% of pipelines under 1 hour), and developer experience.\n*   **Release Automation ([#16097](https://github.com/ethereum-optimism/ecosystem/issues/16097)):** The conversation on automating releases for `op-node`, `batcher`, and other components continued. The focus is on creating a \"one-click solution\" for generating high-quality changelogs, with suggestions to use `git cliff` and integrate the tooling into `op-workbench`, while maintaining a \"monorepo-first perspective.\"\n\n**Superchain Interoperability & Testing:**\n*   **`supersim` Enhancements ([#361](https://github.com/ethereum-optimism/ecosystem/issues/361), [#399](https://github.com/ethereum-optimism/ecosystem/issues/399)):** Discussions clarified the role of `supersim` as a lightweight tool for local multi-chain application development, distinct from heavier Kurtosis devnets. A proposal was made to add a `--dependency-set` flag to make L2 chain dependencies configurable during testing.\n*   **Trivial Interop Mode for `op-node` ([#16519](https://github.com/ethereum-optimism/ecosystem/issues/16519)):** A debate emerged around enabling `op-node` to run in an interop mode without a supervisor. While concerns were raised about potential future upgrade complexities, the change was framed as a temporary measure to reduce operational churn for chain operators with simple dependency sets.\n*   **Acceptance Tests ([#398](https://github.com/ethereum-optimism/ecosystem/issues/398)):** Progress was made on running acceptance tests in persistent devnets with the addition of L1 Faucet support.\n\n**Bug Investigation & Stability:**\n*   **`op-node` Goroutine Leak ([#16332](https://github.com/ethereum-optimism/ecosystem/issues/16332)):** The severity of a bug causing `op-node` sync issues was reinforced when another user confirmed experiencing thousands of goroutines getting stuck, primarily in I/O wait or `yamux` session handlers.\n*   **`op-supervisor` Event Overflow ([#16335](https://github.com/ethereum-optimism/ecosystem/issues/16335)):** Investigation into `op-supervisor` crashes continued. The focus has broadened from a single event type to consider that multiple \"cross-unsafe-update\" events might be stacking up. Work is underway to add counters for each event type to aid future debugging.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted active collaboration among core contributors on foundational issues. Discussions in issues like [#16519](https://github.com/ethereum-optimism/ecosystem/issues/16519) (Trivial Interop Mode) and [#16097](https://github.com/ethereum-optimism/ecosystem/issues/16097) (Release Automation) showcased healthy debate, with team members like `sebastianst`, `inphi`, `geoknee`, and `protolambda` weighing different technical trade-offs. The confirmation of the `op-node` goroutine leak in [#16332](https://github.com/ethereum-optimism/ecosystem/issues/16332) by `Creamers158` demonstrates valuable community feedback in identifying and confirming the impact of critical bugs.", "2025-09-04T03:32:30.427Z"]
["ethereum-optimism/op-analytics_week_2025-06-15", "ethereum-optimism/op-analytics", "week", "2025-06-15", "# ethereum-optimism/op-analytics Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was characterized by focused discussions on core infrastructure stability and future tooling, rather than new feature development. While code contributions were minimal, significant progress was made in diagnosing critical issues, including `op-node` goroutine leaks and `op-supervisor` event handling. Key conversations also centered on improving the release pipeline and refining interoperability testing strategies, highlighting a collective effort to enhance the robustness and maintainability of the OP Stack.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe sole code change this week was a maintenance improvement aimed at enhancing observability.\n\n*   **Logging Enhancements:** A minor but important improvement was made to the logging in `runner.py` by preventing context binding within a generator. This change enhances the clarity and efficiency of log messages, aiding in future debugging efforts ([#1640](https://github.com/ethereum-optimism/op-analytics/pull/1640)).\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week were active across several critical issues, with a focus on stability, error handling, and release automation.\n\n*   **Closed Issues:** No issues were closed this week.\n\n*   **New & Active Issues:**\n    *   **New Error Specification:** A new issue ([#725](https://github.com/ethereum-optimism/op-analytics/issues/725)) was opened to add missing error codes for data availability errors caused by reorgs, aiming to align the specification with the existing Go implementation.\n    *   **Node Stability:** Active investigation continued into stability problems. Another user confirmed experiencing thousands of stuck goroutines in `op-node`, providing a matching stack trace for the leak in `p2p.SyncClient` ([#16332](https://github.com/ethereum-optimism/op-analytics/issues/16332)). Similarly, debugging on an `op-supervisor` event overflow issue ([#16335](https://github.com/ethereum-optimism/op-analytics/issues/16335)) clarified that `\"cross-unsafe-update\"` events are the likely cause, with work underway to add counters for better diagnostics.\n    *   **Release Automation:** The discussion on improving release pipelines ([#16097](https://github.com/ethereum-optimism/op-analytics/issues/16097)) progressed, with a focus on finding a lightweight solution like `git cliff` to achieve a one-click process for generating high-quality, consistent changelogs.\n    *   **Interoperability & Testing:** A discussion on pre-interop state validation ([#15765](https://github.com/ethereum-optimism/op-analytics/issues/15765)) concluded that existing genesis tooling likely mitigates the risk, avoiding added complexity in execution clients. Progress was also reported on acceptance testing, with the addition of L1 Faucet support to help run tests in persistent devnets ([#398](https://github.com/ethereum-optimism/op-analytics/issues/398)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was strong this week, primarily centered around issue triage and technical planning. The discussion around the `op-node` goroutine leak ([#16332](https://github.com/ethereum-optimism/op-analytics/issues/16332)) demonstrated effective community collaboration, with user `Creamers158` providing crucial confirmation and data for a bug reported by others. Similarly, active discussions on issues like the supervisor event overflow ([#16335](https://github.com/ethereum-optimism/op-analytics/issues/16335)) and release automation ([#16097](https://github.com/ethereum-optimism/op-analytics/issues/16097)) involved multiple contributors (including `Sebastianst`, `Nonsense`, and `Geoknee`) working together to diagnose problems and define paths forward.", "2025-09-04T03:32:30.659Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-06-15", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-06-15", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on improving the stability and reliability of core protocol components. While only minor feature work was completed, significant diagnostic discussions took place around critical issues affecting `op-node` and `op-supervisor`, with new instrumentation proposed to better understand event overflows. The community also focused on enhancing the developer experience by clarifying tooling and advancing testing infrastructure. Meanwhile, ecosystem growth continued with the addition of new tokens to the registry.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week saw targeted improvements to the ecosystem's token support.\n\n- **Token Registry Expansion**: The Glyphs token was added to the Base token registry, expanding the range of supported tokens within the ecosystem ([#1159](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1159)).\n\n## \ud83d\udc1b Issues & Triage\nThe majority of this week's activity involved investigating active issues and proposing new work. No issues were closed during this period.\n\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:**\n    - **Protocol Stability Investigation**: A primary focus was on diagnosing stability problems.\n        - In issue [#16332](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16332), a user provided a detailed goroutine dump to help debug an `op-node` sync failure where nodes get stuck.\n        - For the `op-supervisor` crash-loop ([#16335](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16335)), a new PR was proposed to add a gauge for in-flight events, aiming to pinpoint the source of the event overflow.\n    - **Developer Tooling & Experience**: Discussions continued on improving the developer environment.\n        - Progress was made on persistent devnet testing ([#398](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/398)) with the addition of L1 Faucet support.\n        - A discussion in [#399](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/399) helped clarify the distinct use cases for `supersim` (for multichain application testing) versus Kurtosis devnets (for op-stack chain development).\n        - The team is exploring better changelog automation for the release pipeline using tools like `git-cliff` ([#16097](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16097)).\n    - **New Proposals & Features**:\n        - A new issue ([#725](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/725)) was opened to add missing Super DA error codes to the specification, particularly for reorg-related data availability errors.\n        - Newly opened pull requests include adding support for BiLira (TRYB) ([#1165](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1165)), removing an obsolete project file ([#1162](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1162)), and adding new content ([#1166](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1166)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted the community's collaborative approach to problem-solving. The detailed user report in the `op-node` stability issue ([#16332](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16332)) provided crucial data for debugging. Similarly, the active back-and-forth in the `op-supervisor` discussion ([#16335](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16335)) demonstrates a collective effort to diagnose and resolve complex infrastructure challenges. These interactions underscore a healthy feedback loop between users and maintainers focused on strengthening the core protocol.", "2025-09-04T03:32:34.820Z"]
["ethereum-optimism/superchain-registry_week_2025-06-15", "ethereum-optimism/superchain-registry", "week", "2025-06-15", "# ethereum-optimism/superchain-registry Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on registry maintenance and planning for future network enhancements. A key proposal was submitted to remove Celo from the superchain registry's chain list. Concurrently, planning for new features continued with the creation of an issue to track the non-public enablement of flashblocks on the op-sepolia network. This work is currently blocked, pending progress on a related dependency, indicating a focus on sequential and safe feature rollouts.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features, bug fixes, or other code changes were merged during this period. Development activity was focused on proposing changes and planning future work.\n\nA new pull request, [#1078](https://github.com/ethereum-optimism/superchain-registry/pull/1078), was opened to remove the `Celo` chain from the `chainList`. This change is currently under review.\n\n## \ud83d\udc1b Issues & Triage\nThe focus of issue management was on planning for the deployment of new capabilities on test networks.\n\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:** A new issue, [#16496](https://github.com/ethereum-optimism/superchain-registry/issues/16496), was opened to track the process of enabling flashblocks non-publicly on op-sepolia. This task is a follow-up to initial testing on `eris-0` and is currently blocked by issue [#16468](https://github.com/ethereum-optimism/superchain-registry/issues/16468), highlighting a dependency that must be resolved before work can proceed.\n\n## \ud83d\udcac Community & Collaboration\nThe development activity recorded was specific and task-oriented, focusing on a single pull request and a new tracking issue. The creation of the flashblocks issue by yashvardhan-kukreja indicates internal coordination on the roadmap for network feature enablement. The provided data does not show broader community discussions or contributions during this timeframe.", "2025-09-04T03:32:44.952Z"]
["ethereum-optimism/supersim_week_2025-06-15", "ethereum-optimism/supersim", "week", "2025-06-15", "# ethereum-optimism/supersim Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on strategic planning and technical discussions rather than code implementation. No new features or bug fixes were merged. Instead, significant conversations took place regarding the future of the project's release infrastructure and the operational modes of `op-node`. These discussions highlight a focus on improving developer workflows and balancing short-term operator convenience with long-term architectural integrity for the Superchain.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, or code refactors merged during this period. Development work was focused on discussion and planning for future initiatives.\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed this week. The focus remained on resolving key architectural questions in existing active issues.\n\n- **New & Active Issues:**\n  - **Release Pipeline Automation (#16097):** Discussions continued around automating release pipelines and changelog generation. While the goal is a one-click, high-quality solution, there is an active debate on the right approach. Concerns were raised by `protolambda` about introducing `GoReleaser` and adding another build system before consolidating existing fragmented processes, highlighting a potential risk of increasing complexity.\n  - **`op-node` Trivial-Interop Mode (#16519):** A discussion is underway about allowing `op-node` to run in a \"trivial-interop\" mode without a supervisor. `sebastianst` clarified this is intended as a temporary measure to prevent churn for chain operators in the short term. However, `Inphi` raised concerns that this might complicate future migrations to a fully supervisor-driven interop cluster, representing a key architectural trade-off being considered.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was concentrated within issue discussions, where team members debated significant technical strategies. The conversations in issues #16097 and #16519, involving contributors like `geoknee`, `protolambda`, `Inphi`, and `sebastianst`, show a healthy process of weighing different technical trade-offs. The topics ranged from developer experience (release automation) to long-term protocol architecture (interop modes), indicating a thoughtful approach to future development.", "2025-09-04T03:32:48.731Z"]
["ethereum-optimism/specs_week_2025-06-15", "ethereum-optimism/specs", "week", "2025-06-15", "# ethereum-optimism/specs Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was focused on planning, process improvement, and specification refinement rather than code implementation. No new code was contributed, but significant discussions took place around defining Continuous Integration (CI) Service Level Agreements (SLAs) to improve pipeline reliability and performance. Efforts to enhance the project's specifications continued, with new issues opened to align the specs with existing implementations by adding missing error codes for Super DA and updating the `ExecutingDescriptor`. Planning for future feature rollouts, such as enabling flashblocks on op-sepolia, also saw progress.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features, bug fixes, or other code changes were merged this week. All development activity was centered on issue creation and discussion for future work.\n\n## \ud83d\udc1b Issues & Triage\n### Closed Issues\nNo issues were closed this week.\n\n### New & Active Issues\nThe week's focus was on discussion and triage, with several key topics emerging:\n\n*   **Specification Alignment:** Two new issues were opened to ensure the specifications accurately reflect the Go implementations.\n    *   [#725](https://github.com/ethereum-optimism/specs/issues/725) was created to add missing Super DA error codes related to reorgs, aiming for consistent error handling.\n    *   [#731](https://github.com/ethereum-optimism/specs/issues/731) was opened to add a missing `chainId` field to the `ExecutingDescriptor` within the interoperability specifications.\n\n*   **CI/CD and Testing Infrastructure:**\n    *   A significant discussion continued on defining CI SLAs ([#16437](https://github.com/ethereum-optimism/specs/issues/16437)). Developers provided feedback on proposed metrics, expressing concerns about a high failure rate tolerance (5%) and long completion times (1 hour). The prevalence of flaky tests was a major point of concern, with suggestions to improve processes for fixing or preventing them.\n    *   Discussion on making the dependency set configurable in `supersim` ([#361](https://github.com/ethereum-optimism/specs/issues/361)) progressed, with a proposal to add a flag for specifying chains to improve testing flexibility.\n\n*   **Feature Rollout Planning:**\n    *   The issue for enabling flashblocks on op-sepolia ([#16496](https://github.com/ethereum-optimism/specs/issues/16496)) was noted as being blocked. The long-term plan is to deploy it in a `dry_run` mode for thorough testing.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted a strong internal feedback loop, particularly visible in the detailed discussion on CI SLAs ([#16437](https://github.com/ethereum-optimism/specs/issues/16437)). Developers actively engaged in shaping internal processes by providing critical feedback on proposed metrics and test stability. The overall activity points to a period of collaborative planning and specification maintenance, ensuring alignment between documentation and implementation across the project.", "2025-09-04T03:32:50.155Z"]
["ethereum-optimism/superchain-ops_week_2025-06-15", "ethereum-optimism/superchain-ops", "week", "2025-06-15", "# ethereum-optimism/superchain-ops Weekly Report (Jun 15 - 21, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was primarily dedicated to strategic planning and technical discussions, laying the groundwork for future development and network upgrades. While code contributions were minimal, significant progress was made in defining CI/CD improvements, investigating node stability, and planning new features like flashblocks. The week's activity culminated in the first concrete steps toward the U16 mainnet upgrade, with the creation of necessary configuration and documentation files for several chains. This signals a shift from planning to execution for upcoming network tasks.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe sole code contribution this week focused on preparing for a significant future network upgrade.\n\n- **U16 Mainnet Upgrade Preparation:** In preparation for the U16 mainnet tasks, new configuration files and documentation were created via [#1047](https://github.com/ethereum-optimism/superchain-ops/pull/1047). This work includes `.env`, `README.md`, `VALIDATION.md`, and `config.toml` files to manage the enabling and removal of the Deposit Proxy Manager (DPM) and the upgrade of the Optimism Portal Contract Manager (OPCM) for the op-ink, soneium, uni, and base chains.\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed this week. Activity was concentrated on discussions within new and existing issues, highlighting key areas of focus for the project.\n\n- **New & Active Issues:**\n    - **CI/CD & Release Automation:** A major theme was improving operational efficiency. A detailed proposal for CI Pipeline SLAs and an accountability framework was outlined in [#16437](https://github.com/ethereum-optimism/superchain-ops/issues/16437) to establish clear performance targets. Discussions also continued in [#16097](https://github.com/ethereum-optimism/superchain-ops/issues/16097) on creating a one-click solution for generating consistent, high-quality release notes, potentially using `git-cliff`.\n    - **Node Stability & Debugging:** Investigation continued into `op-node` stability, with users reporting stuck goroutines in `p2p.SyncClient` on v1.13.3 ([#16332](https://github.com/ethereum-optimism/superchain-ops/issues/16332)). Separately, `op-supervisor` crashes due to event overflow were discussed in [#16335](https://github.com/ethereum-optimism/superchain-ops/issues/16335), with related PRs mentioned to add metrics for future debugging.\n    - **Feature Planning & Interoperability:** Planning began for the non-public enablement of flashblocks on op-sepolia ([#16496](https://github.com/ethereum-optimism/superchain-ops/issues/16496)). A new discussion emerged around a \"trivial interop mode\" for `op-node` ([#16519](https://github.com/ethereum-optimism/superchain-ops/issues/16519)), raising questions about its impact on future upgrade paths for chains joining an interop cluster.\n    - **Tooling & Specification:** Discussions in [#361](https://github.com/ethereum-optimism/superchain-ops/issues/361) focused on making the dependency set in `supersim` configurable. Additionally, an issue was opened ([#725](https://github.com/ethereum-optimism/superchain-ops/issues/725)) to address missing error codes for data availability reorgs in the Go implementation.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity was characterized by extensive discussion and collaborative planning across a range of strategic and technical issues. There was significant engagement on topics like CI/CD automation ([#16097](https://github.com/ethereum-optimism/superchain-ops/issues/16097), [#16437](https://github.com/ethereum-optimism/superchain-ops/issues/16437)) and node functionality ([#16519](https://github.com/ethereum-optimism/superchain-ops/issues/16519)), indicating a collective effort to define project direction and improve developer experience. The discussions clarified the distinct roles of different tools, such as `supersim` for local development and Kurtosis for chain testing ([#399](https://github.com/ethereum-optimism/superchain-ops/issues/399)), showcasing a focus on aligning the team's understanding of the development ecosystem.", "2025-09-04T03:32:55.643Z"]
["ethereum-optimism/docs_week_2025-06-22", "ethereum-optimism/docs", "week", "2025-06-22", "# ethereum-optimism/docs Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in documentation and tooling maturity. A key achievement was the publication of a detailed guide for setting up sequencer nodes, a critical resource for chain operators. The team also closed a substantial number of issues related to Superchain-ops tooling and CI/CD enhancements, signaling the stabilization and completion of a major effort to improve internal development and deployment workflows. Meanwhile, active discussions continued around performance issues, particularly the high CPU usage in `op-geth` and memory consumption in `op-batcher`, with the community actively providing diagnostic data.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe week's completed work focused almost exclusively on improving documentation for developers and chain operators.\n\n*   **New Sequencer Setup Guide:** A comprehensive guide for setting up sequencer nodes for custom OP Stack chains was added ([#1632]). This guide provides operators with crucial instructions for the post-L1 configuration phase, directly supporting the Superchain ecosystem's growth.\n*   **Documentation Refinements:** Several smaller updates enhanced the quality and accuracy of the documentation. These included fixing formatting in the `op-deployer` docs ([#1667]), adding missing commands to the `supersim` reference ([#1669]), updating the proposer configuration page ([#1668]), and removing outdated devnet information ([#1670]).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a major cleanup of the issue tracker, with numerous tasks related to tooling and CI being closed, while new discussions focused on performance diagnostics and documentation needs.\n\n*   **Closed Issues:** A large volume of issues were closed, primarily centered on maturing the Superchain-ops tooling and CI/CD pipeline. Key resolutions include:\n    *   **CI/CD & Simulation:** Implemented \"stacked\" simulations to resolve nonce coordination challenges ([#342], [#337]), improved CI job performance ([#648]), and enhanced validation checks against `VALIDATIONS.md` ([#679]).\n    *   **Superchain-ops Tooling:** Completed work on the OPCM Migrate Script ([#16326]), refactored the `MultisigTask` architecture for better maintainability ([#636]), and improved the user experience for nonce overrides ([#770]). The team also completed training and created videos for the new tooling ([#514]).\n    *   **Feature Integration:** Issues related to the implementation and testing of flashblocks were closed, marking progress on that feature ([#16468], [#354]).\n    *   **Bug Fixes & Minor Enhancements:** Resolved a broken link ([#283]), closed a feature request for deterministic gas testing ([#408]), and addressed an issue with bridging ERC-20 tokens with Viem ([#1508]).\n\n*   **New & Active Issues:**\n    *   **Performance Diagnostics:** The most active discussions revolved around performance. Users experiencing high CPU usage in `op-geth` ([#613]) collaborated with maintainers by providing `pprof` data, debating whether the cause is a temporary indexing rebuild or a persistent bug. Separately, discussions on `op-batcher` memory spikes ([#16537]) focused on profiling and potential optimizations for the compressor.\n    *   **`op-supervisor` Behavior:** Technical discussions continued on improving the `op-supervisor`'s reset logic and L1 origin validity handling to make it more robust, particularly in reorg scenarios ([#16314], [#16315], [#16321]).\n    *   **New Tutorial Request:** A request was opened for a tutorial on updating a fee vault's recipient and withdrawal network ([#1671]), highlighting a community need for more practical guides.\n\n## \ud83d\udcac Community & Collaboration\nCommunity engagement was notable this week, particularly around improving the developer experience and diagnosing issues.\n\n*   **New Contributor Interest:** Issue [#781], which aims to reduce noisy terminal output from the `signFromChildMultisig` function, attracted offers to contribute from multiple community members (`JoseValperga`, `Mau1401`, `nsancheznez`), demonstrating a healthy interest in contributing to the project.\n*   **Collaborative Debugging:** The ongoing investigation into `op-geth` CPU usage ([#613]) serves as a strong example of collaboration. Users like `cpuchainorg` and `PierrickGT` actively provided detailed reports and diagnostic files, enabling a deeper, more productive technical discussion with maintainers.\n*   **Knowledge Sharing:** The closure of an issue related to creating training calls and Loom videos for new Superchain-ops tooling ([#514]) indicates a strong internal focus on documentation and knowledge transfer to ensure new tools are adopted effectively.", "2025-09-04T03:33:08.456Z"]
["ethereum-optimism/community-hub_week_2025-06-22", "ethereum-optimism/community-hub", "week", "2025-06-22", "# ethereum-optimism/community-hub Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant push to enhance the Superchain-Ops tooling, resulting in major improvements to development workflows and CI efficiency. Key achievements include the implementation of stacked simulations for sequential task execution and optimizations that streamline CI job performance. This effort culminated in the closure of numerous long-standing issues related to automation, developer experience, and validation. Meanwhile, active discussions continued around release pipeline automation and diagnosing abnormal CPU usage in recent `op-geth` versions.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe week's development activity was concentrated on improving the Superchain-Ops framework and developer tooling.\n\n- **Superchain-Ops Workflow Enhancements:** A major effort was made to streamline development and deployment processes. Stacked simulations were implemented to allow for sequential task execution with proper nonce coordination, resolving key issues related to task scheduling and CI efficiency ([#337](https://github.com/ethereum-optimism/community-hub/issues/337), [#342](https://github.com/ethereum-optimism/community-hub/issues/342)). CI job performance for template regression tests was also improved by optimizing chain discovery ([#648](https://github.com/ethereum-optimism/community-hub/issues/648)). To ensure consistency with production, task fetching was updated to use the mainnet task directory ([#547](https://github.com/ethereum-optimism/community-hub/issues/547), [#600](https://github.com/ethereum-optimism/community-hub/issues/600)).\n\n- **Developer Experience and Tooling:** Several improvements were made to enhance the developer experience. The `AccountAccessParser` was updated to output state diffs in a more readable Markdown format ([#777](https://github.com/ethereum-optimism/community-hub/issues/777]), and the `SIMULATE_WITHOUT_LEDGER` functionality was refined for better interactive simulation ([#448](https://github.com/ethereum-optimism/community-hub/issues/448)). To reduce unnecessary submodule updates, a more granular check of `addresses.json` was implemented ([#753](https://github.com/ethereum-optimism/community-hub/issues/753)). Additionally, training sessions and videos were created to onboard stakeholders to the new tooling ([#514](https://github.com/ethereum-optimism/community-hub/issues/514)).\n\n- **Documentation Updates:** A new pull request ([#1166](https://github.com/ethereum-optimism/community-hub/pull/1166)) was opened to update the `citizenship-eligibility-requirements.mdx` file. Paths in existing improvement documentation were also corrected to reflect current file structures ([#548](https://github.com/ethereum-optimism/community-hub/issues/548)).\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:** A significant number of issues were resolved, primarily related to the Superchain-Ops enhancements. Key closures include:\n    - **Automation & Efficiency:** Issues enabling automatic task execution in CI ([#337](https://github.com/ethereum-optimism/community-hub/issues/337]), supporting \"stacked\" proposals ([#342](https://github.com/ethereum-optimism/community-hub/issues/342]), and optimizing CI job performance ([#648](https://github.com/ethereum-optimism/community-hub/issues/648)).\n    - **Tooling & DX:** Issues were closed for updating task paths to mainnet directories ([#547](https://github.com/ethereum-optimism/community-hub/issues/547), [#600](https://github.com/ethereum-optimism/community-hub/issues/600)) and providing training for new tooling ([#514](https://github.com/ethereum-optimism/community-hub/issues/514)).\n    - **Contracts & Validation:** Issues were resolved concerning `MultisigTask` architecture ([#636](https://github.com/ethereum-optimism/community-hub/issues/636)) and updating tests to use modern libraries ([#605](https://github.com/ethereum-optimism/community-hub/issues/605)).\n\n- **New & Active Issues:**\n    - A new issue ([#1165](https://github.com/ethereum-optimism/community-hub/issues/1165)) was opened reporting a broken link in the \"custom-gas-tokens\" documentation, highlighting a need for ongoing maintenance.\n    - **Release Automation ([#16097](https://github.com/ethereum-optimism/community-hub/issues/16097)):** Discussion is ongoing about the best approach for automating release notes, weighing the use of `GoReleaser` against a lighter-weight `git-cliff` solution, with concerns raised about avoiding further bloat in the build system.\n    - **`op-geth` CPU Usage ([#613](https://github.com/ethereum-optimism/community-hub/issues/613)):** An investigation into abnormal CPU usage in `op-geth v1.101511.0` continues. While some contributors reported that usage returned to normal after an index upgrade, others noted the issue persisted, suggesting the root cause is still under review.\n    - **Superchain-Ops Output ([#781](https://github.com/ethereum-optimism/community-hub/issues/781)):** Multiple contributors are collaborating on an issue to reduce noisy terminal output from the `signFromChildMultisig` function, aiming to improve the clarity of signing information.\n\n## \ud83d\udcac Community & Collaboration\nThis week saw strong collaboration, particularly around the Superchain-Ops tooling. The resolution of numerous related issues ([#514](https://github.com/ethereum-optimism/community-hub/issues/514)) included the creation of training materials, indicating a focus on internal knowledge sharing.\n\nActive discussions on key issues demonstrated a healthy and engaged community. For instance, the `op-geth` CPU issue ([#613](https://github.com/ethereum-optimism/community-hub/issues/613)) involved several users sharing performance data and debugging steps. Similarly, the debate on release automation ([#16097](https://github.com/ethereum-optimism/community-hub/issues/16097)) featured a constructive exchange on technical strategy between core contributors. Finally, multiple community members expressed interest and provided suggestions for tackling the noisy terminal output in issue [#781](https://github.com/ethereum-optimism/community-hub/issues/781), showcasing a collaborative approach to improving developer experience.", "2025-09-04T03:33:09.400Z"]
["ethereum-optimism/infra_week_2025-06-22", "ethereum-optimism/infra", "week", "2025-06-22", "# ethereum-optimism/infra Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant focus on improving the robustness and developer experience of the infrastructure. A major effort was dedicated to enhancing Superchain-Ops tooling, resulting in the closure of numerous issues related to task simulation, validation, and CI processes. Concurrently, a critical investigation into `op-batcher` memory consumption was initiated, with early analysis pointing towards the data compressor. While progress was made on `op-acceptor` tooling, persistent stability issues with `op-node` goroutines and `op-geth` CPU usage remain active areas of community-driven debugging.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary completed development this week focused on enhancing the testing framework.\n\n- **`op-acceptor` Testing Enhancements:** The `op-acceptor` was updated to support both `op-devstack` orchestrator modes. This change enables the team to run in-memory tests, streamlining the testing process for acceptance criteria ([#411](https://github.com/ethereum-optimism/infra/pull/411)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a major cleanup of tooling-related issues and the start of a focused investigation into component performance.\n\n- **Closed Issues:**\n    - **Superchain-Ops Tooling Overhaul:** A large number of issues were closed to refine the Superchain-Ops tooling. These improvements streamline CI ([#337](https://github.com/ethereum-optimism/infra/issues/337), [#648](https://github.com/ethereum-optimism/infra/issues/648)), enhance task simulation and validation ([#679](https://github.com/ethereum-optimism/infra/issues/679), [#777](https://github.com/ethereum-optimism/infra/issues/777)), simplify nonce management ([#342](https://github.com/ethereum-optimism/infra/issues/342), [#770](https://github.com/ethereum-optimism/infra/issues/770)), and improve the overall architecture ([#636](https://github.com/ethereum-optimism/infra/issues/636)).\n    - **CI Stability and Flashblocks:** The investigation into CI flakiness was concluded with stability improvements ([#16271](https://github.com/ethereum-optimism/infra/issues/16271]), and the discussion on CI SLAs was closed without immediate implementation ([#16437](https://github.com/ethereum-optimism/infra/issues/16437)). Work on flashblocks was completed, including acceptance tests and enablement on a devnet ([#354](https://github.com/ethereum-optimism/infra/issues/354), [#16468](https://github.com/ethereum-optimism/infra/issues/16468)).\n    - **Documentation and Scripting:** Several documentation issues were resolved, including updates for ERC-20 bridging ([#1508](https://github.com/ethereum-optimism/infra/issues/1508]) and fixes to internal pathing ([#547](https://github.com/ethereum-optimism/infra/issues/547), [#600](https://github.com/ethereum-optimism/infra/issues/600)]). The `OPCM Migrate Script` was also improved ([#16326](https://github.com/ethereum-optimism/infra/issues/16326)).\n\n- **New & Active Issues:**\n    - **`op-batcher` Memory Optimization:** A new high-priority investigation was opened to address the `op-batcher`'s memory consumption, especially during L1 congestion ([#16537](https://github.com/ethereum-optimism/infra/issues/16537)). Initial `pprof` analysis suggests the compressor is a major contributor. A related issue was opened to improve observability with more metrics and CI tests for memory usage ([#16572](https://github.com/ethereum-optimism/infra/issues/16572)).\n    - **`op-node` Stability and Interop:** The issue of `op-node` v1.13.3 getting stuck with thousands of goroutines remains a critical active problem, with users continuing to report sync failures ([#16332](https://github.com/ethereum-optimism/infra/issues/16332)). Separately, discussions continue on creating a `trivial-interop` mode for `op-node` to simplify operations without a supervisor ([#16519](https://github.com/ethereum-optimism/infra/issues/16519)).\n    - **Acceptance Test Migration:** A systematic effort began to port existing acceptance tests to the devstack environment, with new issues created for `TestChainFork`, `TestWithdrawalsRoot`, `TestERC20Bridge`, and others ([#412](https://github.com/ethereum-optimism/infra/issues/412), [#413](https://github.com/ethereum-optimism/infra/issues/413), [#415](https://github.com/ethereum-optimism/infra/issues/415)).\n    - **`op-geth` CPU Usage:** Users are actively debugging abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/infra/issues/613)). While some suspect it's a temporary issue from index rebuilding, others report the problem persists, suggesting a potential goroutine leak.\n\n## \ud83d\udcac Community & Collaboration\n- **Collaborative Debugging:** There is strong collaboration between the community and maintainers on performance issues. Users are actively providing `pprof` profiles and detailed reports for the `op-node` stuck goroutines issue ([#16332](https://github.com/ethereum-optimism/infra/issues/16332)) and the `op-geth` high CPU usage issue ([#613](https://github.com/ethereum-optimism/infra/issues/613)), which is crucial for diagnosing these complex problems.\n- **Contributor Engagement:** An issue to reduce noisy output from a multisig function ([#781](https://github.com/ethereum-optimism/infra/issues/781)) attracted interest from multiple community members, demonstrating healthy engagement on well-defined improvement tasks.\n- **Tooling Clarification:** A discussion in issue [#399](https://github.com/ethereum-optimism/infra/issues/399) helped clarify the distinct use cases for `supersim` (dApp testing) and the `interop kurtosis devnet` (OP Stack chain testing), improving developer understanding of the available toolsets.", "2025-09-04T03:33:31.134Z"]
["ethereum-optimism/op-analytics_week_2025-06-22", "ethereum-optimism/op-analytics", "week", "2025-06-22", "# ethereum-optimism/op-analytics Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant push to enhance Superchain operational tooling, with a large number of long-standing issues related to `Superchain-Ops`, CI/CD, and task management being resolved. This cleanup effort improves developer experience and streamlines operations. While development work focused on minor refinements to analytics notebooks, important new issues were raised concerning `op-supervisor` performance and a broken dependency. Active community collaboration was prominent in diagnosing an `op-geth` CPU usage anomaly and discussing improvements to `op-supervisor` reset logic.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development work involved minor updates to analytics notebooks for tracking activity on other chains.\n\n*   **Analytics Notebook Refinements:** Modifications were made to the `get_all_txs.ipynb` and `pull_l2_activity.ipynb` notebooks ([#1661](https://github.com/ethereum-optimism/op-analytics/pull/1661), [#1662](https://github.com/ethereum-optimism/op-analytics/pull/1662)). These changes likely refine the process of transaction data retrieval and processing for cross-chain analysis.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a major effort in closing out a backlog of issues, particularly around tooling, while new performance and dependency issues were identified.\n\n*   **Closed Issues:** A substantial number of issues were closed, marking significant progress in several areas:\n    *   **Superchain-Ops Tooling:** Numerous enhancements were completed, including support for \"stacked\" proposals ([#342](https://github.com/ethereum-optimism/op-analytics/issues/342)), improved simulation functionality ([#448](https://github.com/ethereum-optimism/op-analytics/issues/448)), refined task architecture ([#636](https://github.com/ethereum-optimism/op-analytics/issues/636)), and the ability to read addresses for chains not in the Superchain Registry ([#923](https://github.com/ethereum-optimism/op-analytics/issues/923)).\n    *   **CI/CD & Testing:** The CI pipeline was improved by speeding up `template_regression_tests` ([#648](https://github.com/ethereum-optimism/op-analytics/issues/648)) and enabling automatic task runs ([#337](https://github.com/ethereum-optimism/op-analytics/issues/337)).\n    *   **Developer Experience & Onboarding:** Work was completed to improve user experience with nonce overrides ([#770](https://github.com/ethereum-optimism/op-analytics/issues/770)), provide state diffs in markdown ([#777](https://github.com/ethereum-optimism/op-analytics/issues/777)), and finalize training for the new Superchain-Ops tooling ([#514](https://github.com/ethereum-optimism/op-analytics/issues/514)).\n\n*   **New & Active Issues:**\n    *   **New Issues:** A bug was reported for a broken `go-bip39` dependency in `op-chain-ops` ([#16612](https://github.com/ethereum-optimism/op-analytics/issues/16612)). An investigation was also opened into event spikes in `op-supervisor`, suggesting potential congestion or deadlocks ([#16603](https://github.com/ethereum-optimism/op-analytics/issues/16603)).\n    *   **`op-geth` CPU Usage:** The discussion around abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/op-analytics/issues/613)) continued. The community is actively collaborating, with users providing `pprof` files for diagnosis. The prevailing theory is that the high usage is a temporary effect of a log indexing rebuild in a recent `go-ethereum` backport.\n    *   **`op-supervisor` Reset Behavior:** There is an ongoing technical discussion about improving the `op-supervisor`'s reset and L1 origin handling ([#16314](https://github.com/ethereum-optimism/op-analytics/issues/16314), [#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315)). The goal is to ensure the supervisor validates L1 origins for all safety levels before sending reset requests to `op-node`, thus avoiding redundant checks.\n\n## \ud83d\udcac Community & Collaboration\nCommunity engagement was strong this week, particularly in issue diagnosis and improvement proposals.\n*   The `op-geth` CPU usage issue ([#613](https://github.com/ethereum-optimism/op-analytics/issues/613)) served as a prime example of collaborative problem-solving, with multiple users sharing diagnostic data and theories to pinpoint the cause.\n*   There is clear community interest in contributing to code quality, as seen in the discussion for issue [#781](https://github.com/ethereum-optimism/op-analytics/issues/781), where several individuals offered to help refactor a function to reduce noisy terminal output.\n*   The closure of the training issue for Superchain-Ops tooling ([#514](https://github.com/ethereum-optimism/op-analytics/issues/514)) indicates successful knowledge sharing and onboarding efforts within the ecosystem.", "2025-09-04T03:33:32.438Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-06-22", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-06-22", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a dual focus on completing major initiatives and launching deep investigations into performance and protocol behavior. A significant push to refine Superchain-Ops tooling culminated in the closure of numerous issues, enhancing CI performance, task management, and user experience. Concurrently, the team made key progress by completing acceptance tests for Flashblocks integration. The latter half of the week shifted towards investigation, with active discussions and analysis centered on `op-batcher` memory consumption, abnormal CPU usage in `op-geth`, and the correctness of `op-supervisor` reset logic.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on finalizing tooling for the Superchain and improving developer environments.\n\n- **Superchain-Ops Tooling Refinements:** A substantial effort to improve the Superchain-Ops framework was completed, resolving a large number of issues. Key enhancements include:\n    - **CI and Testing:** The `template_regression_tests` CI job was made faster ([#648](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/648)), and tests were updated to use the latest `contracts-bedrock` tools ([#605](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/605)).\n    - **Task Management:** The system now supports \"stacked\" proposals with incrementing nonces ([#342](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/342)) and provides a simpler UX for overriding nonces ([#770](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/770)).\n    - **Architecture & UX:** The `MultisigTask` architecture was revisited ([#636](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/636)), and state diffs are now printed in a more readable markdown format ([#777](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/777)).\n\n- **Flashblocks Integration:** Progress was made on network performance and reliability with the completion of tasks to enable flashblocks on `eris-0` and the successful implementation of acceptance tests for flashblock transactions.\n\n- **Developer Experience:** Local development was made easier with an update to Supersim, which now allows for the modification of the `L2toL2CDM` predeploy for testing purposes.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of a major tooling epic, while new investigations into performance and protocol correctness became a primary focus.\n\n- **Closed Issues:**\n    - A significant number of issues related to the **Superchain-Ops tooling** were closed, marking the completion of a major refinement effort across simulation, CI, task management, and documentation ([#448](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/448), [#600](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/600), [#337](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/337), and others).\n    - Tasks for **Flashblocks deployment and acceptance testing** were successfully closed.\n    - A spike to explore **CI Service Level Agreements (SLAs)** ([#16437](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16437)) was closed with the decision not to implement them at this time, favoring a focus on addressing flaky tests directly.\n\n- **New & Active Issues:**\n    - **Performance Investigations:** Several critical performance issues are under active investigation:\n        - **`op-batcher` Memory Consumption:** A spike ([#16537](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16537)) identified the compressor as the primary source of high memory usage, with work now focused on optimization. A related issue ([#16572](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16572)) was opened to improve memory observability using `pprof` in CI.\n        - **`op-geth` CPU Usage:** Multiple users reported abnormal CPU usage in `op-geth` v1.101511.0 ([#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613)). The leading theory is that it's related to a one-time log indexing rebuild, but investigation continues with community-provided data.\n    - **`op-supervisor` Correctness:** A series of related issues ([#16314](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16314), [#16315](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16315), [#16321](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16321)) saw continued discussion around ensuring the validity of L1 origins during reset events. A new issue ([#16603](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16603)) was opened to investigate event spikes, pointing to a potential deadlock.\n    - **Dependency Management:** A new issue ([#16612](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16612)) was opened to address a broken `go-bip39` dependency in `op-chain-ops`.\n\n## \ud83d\udcac Community & Collaboration\n- **Active Issue Triage:** The `op-geth` CPU usage issue ([#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613)) demonstrated strong collaboration, with multiple users confirming the problem and maintainers providing diagnostic instructions to help gather `pprof` data.\n- **New Contributor Interest:** Issue [#781](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/781), aimed at reducing noisy terminal output, attracted interest from new contributors `JoseValperga` and `nsancheznez`, who offered to work on the improvement.\n- **Tooling Clarification:** Ongoing discussions in issue [#399](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/399) helped clarify the distinct use cases for Supersim (dapp testing) versus the interop Kurtosis devnet (chain development), improving knowledge sharing within the community.\n- **Internal Coordination:** The completion of training calls for internal stakeholders ([#514](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/514)) highlights the coordinated rollout of the newly refined Superchain-Ops tooling.", "2025-09-04T03:33:34.263Z"]
["ethereum-optimism/op-geth_week_2025-06-22", "ethereum-optimism/op-geth", "week", "2025-06-22", "# ethereum-optimism/op-geth Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by a significant milestone with the successful enablement and acceptance testing of flashblocks on the eris-0 devnet. Alongside this feature rollout, the team dedicated substantial effort to performance and stability, launching deep investigations into `op-batcher` memory consumption and abnormal CPU usage in `op-geth`. Development also focused on refining core protocol mechanics, with new work initiated to improve L1 data availability cost functions and streamline priority fee calculations. Overall, the week reflects a dual focus on shipping major new features while simultaneously hardening the existing stack.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on enhancing the transaction pool and initiating several key protocol refinements.\n\n-   **Transaction Pool Enhancements:** The transaction pool was improved with the addition of periodic transaction filtering ([#629](https://github.com/ethereum-optimism/op-geth/pull/629)). This enhancement, which led to the closure of a long-standing issue ([#494](https://github.com/ethereum-optimism/op-geth/issues/494)), aims to improve the efficiency and management of transactions within the pool.\n\n-   **New Protocol Refinements Initiated:** Several new pull requests were opened to refine core protocol logic and add new configuration options:\n    -   **L1 Cost and Fee Calculation:** Work began on refining L1 Data Availability (DA) cost functions through a general fix ([#630](https://github.com/ethereum-optimism/op-geth/pull/630)) and a specific update for calldata costs ([#631](https://github.com/ethereum-optimism/op-geth/pull/631)). Another PR aims to remove Optimism-specific priority fee estimate calculations ([#632](https://github.com/ethereum-optimism/op-geth/pull/632)), likely to streamline the process and improve Superchain interoperability.\n    -   **Contract Size Configuration:** A new feature was proposed to introduce a configurable maximum code size ([#634](https://github.com/ethereum-optimism/op-geth/pull/634)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of major integration tasks while new investigations into performance and correctness were kicked off.\n\n-   **Closed Issues:**\n    -   **Flashblocks Integration Complete:** A major effort concluded with the enablement of flashblocks on the eris-0 devnet ([#16468](https://github.com/ethereum-optimism/op-geth/issues/16468)) and the successful completion of transaction acceptance tests ([#354](https://github.com/ethereum-optimism/op-geth/issues/354)).\n    -   **CI, Tooling, and Documentation:** Several housekeeping issues were closed, including one tracking CI flakiness ([#16271](https://github.com/ethereum-optimism/op-geth/issues/16271)), an improvement to allow predeploy modification in Supersim ([#393](https://github.com/ethereum-optimism/op-geth/issues/393)), and a fix for a broken documentation link ([#283](https://github.com/ethereum-optimism/op-geth/issues/283)).\n\n-   **New & Active Issues:**\n    -   **Performance and Stability Investigations:** A significant portion of the week's discussions centered on performance bottlenecks and stability.\n        -   **`op-batcher` Memory:** An investigation into `op-batcher` memory consumption ([#16537](https://github.com/ethereum-optimism/op-geth/issues/16537)) identified the compressor as the primary cause during L1 congestion. A", "2025-09-04T03:33:46.574Z"]
["ethereum-optimism/superchain-registry_week_2025-06-22", "ethereum-optimism/superchain-registry", "week", "2025-06-22", "# ethereum-optimism/superchain-registry Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on network upgrades, performance optimization, and developer tooling. A key milestone was reached with the completion of flashblocks acceptance testing and its subsequent enablement on a test environment. Significant progress was also made in diagnosing a memory consumption issue in the `op-batcher`, with detailed analysis identifying the root cause and proposing concrete optimization strategies. Finally, a hardfork time was officially set for Swell Mainnet, ensuring the chain is prepared for future network upgrades.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on preparing chains for future upgrades and improving the developer environment.\n\n- **Superchain Configuration Updates**\n  - The Holocene hardfork time was configured for Swell Mainnet, a crucial step for scheduling and aligning with future network-wide upgrades ([#1082](https://github.com/ethereum-optimism/superchain-registry/pull/1082)).\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week tackled performance bottlenecks and developer tooling, while several key issues related to feature integration and environment improvements were resolved.\n\n- **Closed Issues:**\n  - **Flashblocks Integration:** A major effort concluded with the closure of issues related to flashblocks. Acceptance tests, including transfer and streaming tests, were completed ([#354](https://github.com/ethereum-optimism/superchain-registry/issues/354)), and flashblocks were enabled on the `eris-0` environment for confidence building ([#16468](https://github.com/ethereum-optimism/superchain-registry/issues/16468)).\n  - **Developer Environment & CI:** Improvements were made to the Supersim development environment, which now supports modifying the `L2toL2CDM` predeploy ([#393](https://github.com/ethereum-optimism/superchain-registry/issues/393)). A discussion on implementing CI SLAs was concluded with the decision not to proceed at this time ([#16437](https://github.com/ethereum-optimism/superchain-registry/issues/16437)). A broken documentation link was also fixed ([#283](https://github.com/ethereum-optimism/superchain-registry/issues/283)).\n\n- **New & Active Issues:**\n  - **`op-batcher` Memory Optimization:** A significant investigation is underway to address memory consumption in the `op-batcher` ([#16537](https://github.com/ethereum-optimism/superchain-registry/issues/16537), [#16572](https://github.com/ethereum-optimism/superchain-registry/issues/16572)). Analysis using `pprof` has identified the compressor within the publishing loop as the primary source of memory usage during backlogs. Proposed solutions include optimizing the shadow compressor and discarding the main compressor more eagerly after channel submission.\n  - **Developer Tooling Discussions:** A discussion clarified the distinct purposes of Supersim (for local dapp/interop testing) and the Interop Kurtosis Devnet (for chain development) ([#399](https://github.com/ethereum-optimism/superchain-registry/issues/399)). A new feature request to enable event logging for user-specified contracts in Supersim was well-received ([#411](https://github.com/ethereum-optimism/superchain-registry/issues/411)).\n  - **Withdrawal Pathways:** An ongoing discussion about testing withdrawal pathways for superchain output roots is seeking clarification on which devnet environment to use ([#821](https://github.com/ethereum-optimism/superchain-registry/issues/821)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the deep technical dive into the `op-batcher` memory issue ([#16537](https://github.com/ethereum-optimism/superchain-registry/issues/16537)), where detailed performance analysis and potential solutions were shared. The community also showed a focus on improving developer experience through clarifying the roles of different testing tools ([#399](https://github.com/ethereum-optimism/superchain-registry/issues/399)) and proposing valuable new features for Supersim ([#411](https://github.com/ethereum-optimism/superchain-registry/issues/411)).", "2025-09-04T03:33:57.238Z"]
["ethereum-optimism/specs_week_2025-06-22", "ethereum-optimism/specs", "week", "2025-06-22", "# ethereum-optimism/specs Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in tooling and testing, alongside deep investigations into component performance and supervisor logic. A major effort culminated in the closure of numerous issues related to Superchain-Ops tooling, dramatically improving task management and developer experience. The team also successfully enabled and validated flashblocks on the `eris-0` environment. Key challenges remain in performance optimization, with active spikes into `op-batcher` memory consumption and `op-geth` CPU usage. Concurrently, detailed discussions are refining the `op-supervisor`'s behavior for the upcoming interop hard fork, focusing on reset logic and L1 origin validity.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile much of the week's focus was on issue discussion and investigation, key refinements were merged to improve interop specifications.\n\n- **Supervisor Specification Refinements:** Work was completed to enhance the clarity and constraints of supervisor behavior. This included adding constraints for `supervisor_syncStatus` to improve interop specifications ([#723](https://github.com/ethereum-optimism/specs/pull/723)) and clarifying the definition of a \"managed node\" within the supervisor documentation to distinguish it from other modes ([#732](https://github.com/ethereum-optimism/specs/pull/732)).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nA significant number of issues were resolved, marking progress in tooling, testing, and feature integration.\n\n- **Superchain-Ops Tooling Overhaul:** A massive effort to improve Superchain-Ops tooling concluded with the closure of over a dozen issues. Key enhancements include automated CI task execution ([#337](https://github.com/ethereum-optimism/specs/issues/337)), support for \"stacked\" proposals ([#342](https://github.com/ethereum-optimism/specs/issues/342)), improved validation against `StandardValidator` contracts ([#838](https://github.com/ethereum-optimism/specs/issues/838)), and numerous UX and efficiency improvements ([#777](https://github.com/ethereum-optimism/specs/issues/777), [#648](https://github.com/ethereum-optimism/specs/issues/648), [#923](https://github.com/ethereum-optimism/specs/issues/923)).\n- **Flashblocks Integration:** Issues related to enabling flashblocks on the `eris-0` environment ([#16468](https://github.com/ethereum-optimism/specs/issues/16468)) and completing acceptance tests for flashblock transactions ([#354](https://github.com/ethereum-optimism/specs/issues/354)) were closed, marking a key milestone.\n- **CI/CD & Testing:** Following a spike, the decision was made not to implement formal CI SLAs for now, concluding the discussion in [#16437](https://github.com/ethereum-optimism/specs/issues/16437). An issue tracking CI flakiness ([#16271](https://github.com/ethereum-optimism/specs/issues/16271)) was also closed, noting that stability has improved and monitoring will continue.\n- **Local Development:** An issue to allow users to modify predeploys in the local development environment was closed, addressing a key need for prototyping ([#393](https://github.com/ethereum-optimism/specs/issues/393)).\n\n### New & Active Issues\nDiscussions this week centered on performance optimization, supervisor behavior, and new architectural considerations.\n\n- **Component Performance Investigation:**\n    - **`op-batcher` Memory:** A spike was opened to investigate `op-batcher` memory consumption during L1 congestion ([#16537](https://github.com/ethereum-optimism/specs/issues/16537)). Detailed `pprof` analysis identified the compressor as the primary source of memory growth, with proposals to optimize its usage. A follow-up issue ([#16572](https://github.com/ethereum-optimism/specs/issues/16572)) was created to add `pprof` integration to CI for ongoing observability.\n    - **`op-geth` CPU Usage:** Investigation continues into abnormal CPU usage in `op-geth` v1.101511.0 ([#613](https://github.com/ethereum-optimism/specs/issues/613)). Multiple users confirmed the issue, sharing performance profiles and suggesting the cause may be related to log indexing rebuilds after upgrades.\n- **`op-supervisor` Interop Logic:**\n    - Discussions continued on refining the supervisor's reset logic ([#16314](https://github.com/ethereum-optimism/specs/issues/16314), [#16321](https://github.com/ethereum-optimism/specs/issues/16321)) and extending L1 origin validity checks to all safety levels ([#16315](https://github.com/ethereum-optimism/specs/issues/16315)).\n    - A new issue was opened to investigate spikes in `local-derived` events, with initial speculation pointing to a potential deadlock ([#16603](https://github.com/ethereum-optimism/specs/issues/16603)).\n- **Future Architecture & Dependencies:**\n    - A placeholder issue ([#734](https://github.com/ethereum-optimism/specs/issues/734)) was created to research embedding `op-node` within `op-supervisor`, signaling a future deprecation of the managed mode RPC API.\n    - A broken dependency in `op-chain-ops` was reported ([#16612](https://github.com/ethereum-optimism/specs/issues/16612)), requiring a versioning fix.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted strong collaborative debugging and decision-making. The investigation into `op-batcher` memory usage ([#16537](https://github.com/ethereum-optimism/specs/issues/16537)) showcased effective technical collaboration, with detailed profiling and analysis shared openly. Similarly, the `op-geth` CPU issue ([#613](https://github.com/ethereum-optimism/specs/issues/613)) saw multiple community members experiencing the same problem and working together to diagnose it by sharing data.\n\nThe discussion around CI SLAs ([#16437](https://github.com/ethereum-optimism/specs/issues/16437)) involved several core contributors (`scharissis`, `pauldowman`, `teddyknox`, `ajsutton`), whose varied perspectives led to a well-reasoned decision to focus on addressing test flakiness directly rather than implementing a formal SLA framework at this time. Finally, issue [#781](https://github.com/ethereum-optimism/specs/issues/781) saw active engagement from community members looking to contribute, indicating a healthy interest in improving the project's tooling.", "2025-09-04T03:33:57.742Z"]
["ethereum-optimism/optimism_week_2025-06-22", "ethereum-optimism/optimism", "week", "2025-06-22", "# ethereum-optimism/optimism Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant push to enhance the robustness and reliability of the OP Stack, with a strong focus on testing infrastructure and core component stability. Development efforts centered on expanding the acceptance testing framework, particularly for interop and flashblocks scenarios, and advancing the `op-supervisor`'s capabilities for handling resets and safety modes. Critical bug fixes were deployed for `op-deployer`, improving the reliability of the Superchain deployment process. Meanwhile, active investigation continues into performance issues like `op-node` goroutine leaks and high CPU usage in `op-geth`, highlighting a dual focus on new feature development and maintaining production stability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on hardening the stack through comprehensive testing, advancing supervisor capabilities, and fixing critical deployment tooling.\n\n- **Testing and Validation Overhaul:** The testing framework saw major enhancements to improve reliability and test coverage. New acceptance tests were added for flashblocks transfers ([#16515](https://github.com/ethereum-optimism/optimism/pull/16515)) and withdrawals with super roots ([#16491](https://github.com/ethereum-optimism/optimism/pull/16491)). The interop testing suite was expanded with an adversarial load test ([#16433](https://github.com/ethereum-optimism/optimism/pull/16433)), a dedicated gate for load tests ([#16564](https://github.com/ethereum-optimism/optimism/pull/16564)), and tests for spamming invalid messages ([#16459](https://github.com/ethereum-optimism/optimism/pull/16459)). A new validation script was introduced to enforce consistent test structure conventions ([#16543](https://github.com/ethereum-optimism/optimism/pull/16543)), with several PRs dedicated to bringing existing tests into compliance ([#16561](https://github.com/ethereum-optimism/optimism/pull/16561), [#16590](https://github.com/ethereum-optimism/optimism/pull/16590), [#16596](https://github.com/ethereum-optimism/optimism/pull/16596)).\n\n- **`op-supervisor` and Interop Advancements:** The `op-supervisor` received significant updates to improve its role in a multi-chain environment. A new API was introduced to support a \"Failsafe\" mode, allowing for administrative control to halt operations ([#16582](https://github.com/ethereum-optimism/optimism/pull/16582)). The supervisor is now able to determine local unsafe targets and initiate node resets ([#16557](https://github.com/ethereum-optimism/optimism/pull/16557)), and can automatically enable Failsafe mode upon detecting an invalid block ([#16593](https://github.com/ethereum-optimism/optimism/pull/16593)). Internal refactoring improved modularity by separating context from event objects ([#16540](https://github.com/ethereum-optimism/optimism/pull/16540)) and renaming supervisor/node modes for clarity ([#16464](https://github.com/ethereum-optimism/optimism/pull/16464)).\n\n- **Deployment and Tooling Reliability:** The `op-deployer` was made more robust with several critical fixes and new tests. Incorrect artifact hashes for `v4.0.0` and `rc.8` were corrected ([#16562](https://github.com/ethereum-optimism/optimism/pull/16562), [#16565](https://github.com/ethereum-optimism/optimism/pull/16565)), and a fix was implemented to ensure deployment idempotency ([#16567](https://github.com/ethereum-optimism/optimism/pull/16567)). New end-to-end bootstrap tests were added to validate the Superchain deployment process against local and tagged artifacts ([#16575](https://github.com/ethereum-optimism/optimism/pull/16575)).\n\n- **Core Service Enhancements:** Various components received targeted improvements. The `cannon` MIPS emulator's `getrandom` syscall logic was updated for better stability ([#16529](https://github.com/ethereum-optimism/optimism/pull/16529)). The `op-faucet` gained a `faucet_balance` RPC ([#16516](https://github.com/ethereum-optimism/optimism/pull/16516)), and `op-service` was enhanced with safe subtraction functions ([#16539](https://github.com/ethereum-optimism/optimism/pull/16539)). In `op-program`, safeguards were added to prevent typos in custom chain configurations ([#16580](https://github.com/ethereum-optimism/optimism/pull/16580)).\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:** Key problems resolved this week include improving CI stability by releasing a test flake report generator ([#16271](https://github.com/ethereum-optimism/optimism/issues/16271)) and deciding against implementing CI SLAs for now ([#16437](https://github.com/ethereum-optimism/optimism/issues/16437)). An investigation into `op-batcher` memory consumption was concluded ([#16537](https://github.com/ethereum-optimism/optimism/issues/16537)), identifying the compressor as a key area for optimization. Several issues related to Superchain operations, task management ([#337](https://github.com/ethereum-optimism/optimism/issues/337), [#342](https://github.com/ethereum-optimism/optimism/issues/342)), and testing enhancements ([#15958](https://github.com/ethereum-optimism/optimism/issues/15958), [#354](https://github.com/ethereum-optimism/optimism/issues/354)) were also closed, marking progress in tooling and test coverage.\n\n- **New & Active Issues:** Several critical new issues were opened, including a request for `op-conductor` alerting on indefinite sequencer halts ([#16558](https://github.com/ethereum-optimism/optimism/issues/16558)) and an investigation into `op-supervisor` event congestion that may point to deadlocks ([#16603](https://github.com/ethereum-optimism/optimism/issues/16603)). A new issue aims to increase observability of `op-batcher` memory usage in CI ([#16572](https://github.com/ethereum-optimism/optimism/issues/16572)).\n  \n  Ongoing discussions on active issues remain a high priority. Users continue to report `op-node` getting stuck with thousands of goroutines ([#16332](https://github.com/ethereum-optimism/optimism/issues/16332)) and abnormal CPU usage with `op-geth` ([#613](https://github.com/ethereum-optimism/optimism/issues/613)), indicating persistent performance challenges in production environments. Strategic discussions also continued around adopting GoReleaser for the release pipeline ([#16097](https://github.com/ethereum-optimism/optimism/issues/16097)) and refining the supervisor's reset logic ([#16314](https://github.com/ethereum-optimism/optimism/issues/16314), [#16315](https://github.com/ethereum-optimism/optimism/issues/16315)).\n\n## \ud83d\udcac Community & Collaboration\nThis week saw active collaboration between team members and the broader community, particularly in diagnosing production issues. The detailed user reports and `pprof` data provided in the `op-geth` CPU usage issue ([#613](https://github.com/ethereum-optimism/optimism/issues/613)) and the `op-node` stuckness issue ([#16332](https://github.com/ethereum-optimism/optimism/issues/16332)) are prime examples of the community's role in maintaining stack health.\n\nInternally, discussions on issues like `op-batcher` memory optimization ([#16537](https://github.com/ethereum-optimism/optimism/issues/16537)) and the future of the release pipeline ([#16097](https://github.com/ethereum-optimism/optimism/issues/16097)) show a healthy process of technical debate and strategic planning. The large volume of interconnected work on the testing framework and `op-supervisor` suggests tight coordination across different areas of the core development team.", "2025-09-04T03:34:00.482Z"]
["ethereum-optimism/superchain-ops_week_2025-06-22", "ethereum-optimism/superchain-ops", "week", "2025-06-22", "# ethereum-optimism/superchain-ops Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a dual focus on enhancing system stability and clearing a significant backlog of tooling and CI/CD improvements. Key efforts were directed at investigating performance issues in core components like `op-batcher` and `op-geth`, with new spikes initiated to address memory consumption and ongoing community collaboration to diagnose high CPU usage. A major code refactoring of `MultisigTask.sol` improved maintainability, while critical configuration updates were made for Sepolia. The team also undertook a substantial cleanup, closing dozens of older issues related to CI automation, testing infrastructure, and developer experience, signaling a concerted push to streamline the development lifecycle.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week spanned configuration updates, bug fixes, significant refactoring, and pipeline optimizations.\n\n- **Superchain Configuration & Validation:**\n  - Sepolia OPCM and Standard Validator addresses were updated to `rc.8` to align with the `op-contracts` v4.0.0 release candidate ([#1095](https://github.com/ethereum-optimism/superchain-ops/pull/1095)).\n  - Validation for Superchain upgrades was enhanced with detailed entries for Op and Ink contracts and improved state diff decoding for Unichain, including contract names and registry links ([#1104](https://github.com/ethereum-optimism/superchain-ops/pull/1104), [#1107](https://github.com/ethereum-optimism/superchain-ops/pull/1107)).\n\n- **Bug Fixes & Tooling:**\n  - A critical bug causing nonce bump issues for Base L1PAO and Base Ops Safe transactions was resolved, ensuring correct transaction execution ([#1102](https://github.com/ethereum-optimism/superchain-ops/pull/1102)).\n  - An error in how `justfiles` handled `signer_args` for `approve` and `execute` commands was fixed, resolving local execution failures ([#1103](https://github.com/ethereum-optimism/superchain-ops/pull/1103)).\n\n- **Code Refactoring & Maintainability:**\n  - A substantial refactoring of `MultisigTask.sol` was completed, removing child state variables to streamline the codebase. This change enhances clarity by passing state directly through functions ([#1085](https://github.com/ethereum-optimism/superchain-ops/pull/1085)).\n\n- **Feature Development & Iteration:**\n  - An initial implementation to add Trezor hardware wallet support was merged ([#1089](https://github.com/ethereum-optimism/superchain-ops/pull/1089)) but was reverted the following day ([#1100](https://github.com/ethereum-optimism/superchain-ops/pull/1100)).\n\n- **CI/CD Pipeline Optimization:**\n  - The CI pipeline was improved by removing now-completed simulations for Mode and Metal ([#1098](https://github.com/ethereum-optimism/superchain-ops/pull/1098)).\n  - Timeouts in CircleCI were increased for long-running jobs to prevent premature failures ([#1099](https://github.com/ethereum-optimism/superchain-ops/pull/1099)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a major effort to resolve outstanding issues while also opening new investigations into performance and stability.\n\n- **Closed Issues:**\n  A large volume of issues were closed, primarily focused on improving the developer workflow and testing infrastructure.\n  - **CI/CD & Automation:** Numerous enhancements were completed, including automatic task execution in CI ([#337](https://github.com/ethereum-optimism/superchain-ops/issues/337)), support for \"stacked\" proposals ([#342](https://github.com/ethereum-optimism/superchain-ops/issues/342)), and CI job performance optimizations ([#648](https://github.com/ethereum-optimism/superchain-ops/issues/648)). The spike to explore CI SLAs was also concluded with a decision not to implement them at this time ([#16437](https://github.com/ethereum-optimism/superchain-ops/issues/16437)).\n  - **Testing & Developer Experience:** Key problems resolved include enabling predeploy modification in Supersim ([#393](https://github.com/ethereum-optimism/superchain-ops/issues/393)), completing Flashblocks acceptance tests ([#354](https://github.com/ethereum-optimism/superchain-ops/issues/354)), and improving nonce override UX ([#770](https://github.com/ethereum-optimism/superchain-ops/issues/770)).\n  - **Documentation:** Issues related to broken links ([#283](https://github.com/ethereum-optimism/superchain-ops/issues/283)) and bridging ERC-20 tokens with Viem ([#1508](https://github.com/ethereum-optimism/superchain-ops/issues/1508)) were addressed.\n\n- **New & Active Issues:**\n  Focus has shifted towards performance bottlenecks and component stability.\n  - **Performance Investigation:** New issues were opened to investigate and optimize `op-batcher` memory consumption during L1 congestion ([#16537](https://github.com/ethereum-optimism/superchain-ops/issues/16537)) and to add better memory observability via `pprof` ([#16572](https://github.com/ethereum-optimism/superchain-ops/issues/16572)). The active discussion on abnormal CPU usage in `op-geth` v1.101511.0 continues, with users providing diagnostic data ([#613](https://github.com/ethereum-optimism/superchain-ops/issues/613)).\n  - **Supervisor Stability:** An investigation was opened into event spikes in `op-supervisor` ([#16603](https://github.com/ethereum-optimism/superchain-ops/issues/16603)). Discussions are also ongoing to improve the supervisor's reset behavior and L1 origin validity checks across different safety levels ([#16314](https://github.com/ethereum-optimism/superchain-ops/issues/16314), [#16315](https://github.com/ethereum-optimism/superchain-ops/issues/16315), [#16321](https://github.com/ethereum-optimism/superchain-ops/issues/16321)).\n  - **Dependencies & UX:** A new issue was flagged for a broken `go-bip39` dependency in `op-chain-ops` ([#16612](https://github.com/ethereum-optimism/superchain-ops/issues/16612)), and a potential UX problem causing nonce errors during multi-step transactions was reported ([#1106](https://github.com/ethereum-optimism/superchain-ops/issues/1106)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted active collaboration between the core team and the wider community of users and operators. The investigation into high `op-geth` CPU usage ([#613](https://github.com/ethereum-optimism/superchain-ops/issues/613)) is a prime example, with multiple users reporting the issue and providing `pprof` profiles to aid in debugging. Internally, the discussion and decision-making process for the CI SLA spike ([#16437](https://github.com/ethereum-optimism/superchain-ops/issues/16437)) demonstrated healthy debate among team members, weighing different perspectives on metrics and developer impact. The significant number of issues closed on a single day (June 26) suggests a coordinated team effort to reduce technical debt and improve the project's overall health.", "2025-09-04T03:34:02.246Z"]
["ethereum-optimism/infra_week_2025-06-29", "ethereum-optimism/infra", "week", "2025-06-29", "# ethereum-optimism/infra Weekly Report (Jun 29 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a very quiet week for the `infra` repository, with no completed work or merged pull requests. Development activity was minimal across all categories, including features, bug fixes, and documentation. The sole recorded event was the opening of a new pull request aimed at enhancing `proxyd` functionality.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no completed pull requests or merged technical developments during this period. Work was initiated on `proxyd` with the opening of PR [#418](https://github.com/ethereum-optimism/infra/pull/418), which proposes adding flashblocks-aware routing.\n\n## \ud83d\udc1b Issues & Triage\nThere was no reported activity related to GitHub issues this week.\n\n*   **Closed Issues:** No issues were closed.\n*   **New & Active Issues:** No new issues were opened.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was focused on a single piece of new work. The opening of pull request [#418](https://github.com/ethereum-optimism/infra/pull/418) was the only notable collaborative event recorded in the daily reports for this timeframe.", "2025-09-04T03:34:10.954Z"]
["ethereum-optimism/design-docs_week_2025-06-29", "ethereum-optimism/design-docs", "week", "2025-06-29", "# ethereum-optimism/design-docs Weekly Report (Jun 29 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on proposing new functionality and maintaining existing tooling. A significant new design document for configurable calldata gas was introduced via pull request [#294](https://github.com/ethereum-optimism/design-docs/pull/294), signaling a focus on enhancing transaction cost management. Additionally, a bug related to the `op-deployer` tool was swiftly reported and resolved, ensuring the stability of deployment processes. Overall, it was a quiet week for completed work, with efforts concentrated on future design and immediate bug fixes.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged or design documents finalized during this period. The primary development activity was the submission of a new design proposal, which is now awaiting review.\n\n## \ud83d\udc1b Issues & Triage\nThe project saw minimal issue activity, indicating a period of stability.\n\n- **Closed Issues:** One issue, [#16618](https://github.com/ethereum-optimism/design-docs/issues/16618), was resolved. The issue concerned an error in `op-deployer v0.4.0-rc.2` and was fixed in a subsequent release candidate, demonstrating a quick resolution for tooling-related bugs.\n- **New & Active Issues:** No new issues were opened, and there were no significant discussions on existing issues.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was focused and efficient. The proposal for a new design document ([#294](https://github.com/ethereum-optimism/design-docs/pull/294)) represents the primary area for upcoming discussion and review. The rapid closure of the `op-deployer` issue suggests effective communication and responsiveness from the maintainers.", "2025-09-04T03:34:12.167Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-06-29", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-06-29", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jun 29 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for the project, characterized by minor maintenance and data updates. The primary activities involved adding a new token, CO, to the repository's dataset and closing an older issue related to the `op-deployer` tool. Overall, the week's progress reflects routine upkeep rather than new feature development or major bug fixes.\n\n## \ud83d\udee0\ufe0f Key Developments\nActivity was light, with one notable update to the project's token data.\n\n### Token Data Management\n- The CO token was added to the repository's data. This update included its corresponding `logo.svg` and an update to `data.json` to incorporate the new asset ([#1169](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1169)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was minimal, focusing on closing a resolved bug report.\n\n- **Closed Issues:**\n  - A bug report for `op-deployer v0.4.0-rc.2` was closed ([#16618](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16618)). The issue, which caused an error when running with `standard-overrides`, was resolved as the fix had already been implemented in a more recent release candidate.\n\n- **New & Active Issues:**\n  - No new issues were opened this week, and there was no significant activity on existing issues.\n\n## \ud83d\udcac Community & Collaboration\nBased on the provided reports, the week saw minimal collaborative activity. The work completed consisted of straightforward, individual tasks with no evidence of extensive discussion or reviews.", "2025-09-04T03:34:14.159Z"]
["ethereum-optimism/supersim_week_2025-06-22", "ethereum-optimism/supersim", "week", "2025-06-22", "# ethereum-optimism/supersim Weekly Report (Jun 22 - 28, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a dual focus on enhancing `supersim`'s testing capabilities and addressing critical performance issues across the OP Stack. Key development work introduced a configurable dependency set for more flexible testing ([#407](https://github.com/ethereum-optimism/supersim/pull/407)). Concurrently, significant effort was dedicated to investigating performance bottlenecks, including high memory consumption in `op-batcher`, abnormal CPU usage in `op-geth`, and stability concerns in `op-supervisor`. A major housekeeping effort also saw the closure of a large volume of issues related to CI/CD, developer tooling, and previously completed features, signaling a push towards stabilizing the development environment and clearing technical debt.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week's completed work focused on improving the flexibility and currency of the simulation environment.\n\n-   **Enhanced Supersim Configuration:** A significant feature was added to `supersim` to allow for a configurable dependency set ([#407](https://github.com/ethereum-optimism/supersim/pull/407)). This change improves testing flexibility by enabling developers to simulate and test against chains that are not part of the standard interop configuration.\n-   **Core Dependency Updates:** The `GasTank` dependency was updated to its latest version to align with changes in `interop-lib` ([#406](https://github.com/ethereum-optimism/supersim/pull/406)). This ensures the simulation environment remains compatible with the latest protocol specifications and features.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved clearing a significant backlog of older tasks while opening new investigations into performance and stability.\n\n-   **Closed Issues:** A substantial number of issues were closed, reflecting a focus on cleanup and finalization.\n    -   **CI/CD & Tooling:** A large batch of issues related to `superchain-ops` and general CI processes were resolved. This included improvements to CI job performance ([#648](https://github.com/ethereum-optimism/supersim/issues/648)), task automation ([#337](https://github.com/ethereum-optimism/supersim/issues/337)), and the conclusion of a spike on CI SLAs ([#16437](https://github.com/ethereum-optimism/supersim/issues/16437)).\n    -   **Feature Completion:** Work on several features was officially closed, including acceptance testing for flashblocks ([#354](https://github.com/ethereum-optimism/supersim/issues/354)), enabling flashblocks on `eris-0` ([#16468](https://github.com/ethereum-optimism/supersim/issues/16468)), and allowing predeploy modifications for testing ([#393](https://github.com/ethereum-optimism/supersim/issues/393)).\n    -   **Testing & Documentation:** Issues for porting an acceptance test ([#412](https://github.com/ethereum-optimism/supersim/issues/412)), fixing documentation links ([#283](https://github.com/ethereum-optimism/supersim/issues/283)), and resolving a request for deterministic gas testing ([#408](https://github.com/ethereum-optimism/supersim/issues/408)) were also closed.\n\n-   **New & Active Issues:** Discussions centered on performance, stability, and new feature requests.\n    -   **Performance Bottlenecks:** Several critical performance issues are under active investigation. These include optimizing `op-batcher` memory consumption, where `pprof` analysis pointed to the compressor as a primary culprit ([#16537](https://github.com/ethereum-optimism/supersim/issues/16537)); diagnosing abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/supersim/issues/613)); and addressing stuck goroutines in `op-node` ([#16332](https://github.com/ethereum-optimism/supersim/issues/16332)).\n    -   **Supervisor Stability:** A new issue was opened to investigate event spikes in `op-supervisor` ([#16603](https://github.com/ethereum-optimism/supersim/issues/16603)), while discussions continued on improving its reset logic and L1 origin verification to handle pre- and post-Interop scenarios correctly ([#16314](https://github.com/ethereum-optimism/supersim/issues/16314], [#16315](https://github.com/ethereum-optimism/supersim/issues/16315)).\n    -   **New Requests & Bugs:** A feature to enable user-specified contract logging in `supersim` was requested to improve debugging ([#411](https://github.com/ethereum-optimism/supersim/issues/411)), and a bug was filed for a broken dependency in `op-chain-ops` ([#16612](https://github.com/ethereum-optimism/supersim/issues/16612)).\n\n## \ud83d\udcac Community & Collaboration\n-   There was strong collaborative debugging on the `op-geth` high CPU usage issue ([#613](https://github.com/ethereum-optimism/supersim/", "2025-09-04T03:34:24.221Z"]
["ethereum-optimism/op-analytics_week_2025-06-29", "ethereum-optimism/op-analytics", "week", "2025-06-29", "# ethereum-optimism/op-analytics Weekly Report (Jun 29 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the reliability and accuracy of the data pipeline. Significant progress was made in resolving critical bugs affecting ETH transfers, including issues with null values and data type inconsistencies. The team also improved the robustness of economic data collection by implementing retry logic for collective balance retrieval and updating the fee split calculation process to use more direct RPC data. Internal tooling received key upgrades, particularly around Dagster automation, to streamline data processing and maintenance.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on data integrity, economic modeling, and internal tooling enhancements.\n\n- **ETH Transfer Data Integrity**\n  - A critical bug was fixed to prevent ETH transfer entries with null `value_64` from being dropped, ensuring more complete data ([#1665](https://github.com/ethereum-optimism/op-analytics/pull/1665)).\n  - Data type inconsistencies for ETH transfer data were corrected to improve accuracy in downstream analytics ([#1670](https://github.com/ethereum-optimism/op-analytics/pull/1670)).\n\n- **Economic Data & Revenue Logic**\n  - The fee split calculation process was updated to include new entities (Uni, Sony) and now sources data directly from RPCs instead of Etherscan APIs for greater reliability ([#1664](https://github.com/ethereum-optimism/op-analytics/pull/1664)).\n  - To prevent data gaps, retry logic was added to the collective balances retrieval process, making it more resilient to transient null issues ([#1663](https://github.com/ethereum-optimism/op-analytics/pull/1663)).\n  - Progress continued on unifying and configuring revenue share transfers for L2 transactions ([#1651](https://github.com/ethereum-optimism/op-analytics/pull/1651)).\n\n- **Internal Tooling & Automation**\n  - A new CLI-runnable function was introduced to automate Dagster version bumps, simplifying dependency management ([#1666](https://github.com/ethereum-optimism/op-analytics/pull/1666)).\n  - The ability to run Dagster backfills was enabled for ETH transfers, improving the team's capacity to reprocess historical data ([#1667](https://github.com/ethereum-optimism/op-analytics/pull/1667)).\n\n- **Notebook & Utility Updates**\n  - Minor modifications were made to various notebooks and utility files, including `google_bq_utils.py` and `l2beat_utils.py` ([#1669](https://github.com/ethereum-optimism/op-analytics/pull/1669)).\n\n## \ud83d\udc1b Issues & Triage\n- **Closed Issues:** No issues were closed during this period.\n- **New & Active Issues:** No new issues were opened, and there were no active issues with significant discussion reported. However, a new pull request ([#1668](https://github.com/ethereum-optimism/op-analytics/pull/1668)) was opened to proactively address failing ERC20 token metadata, indicating ongoing work to resolve known data quality problems.\n\n## \ud83d\udcac Community & Collaboration\nBased on the provided reports, development activity was focused and internally coordinated, with multiple pull requests targeting specific themes like data integrity and tooling. The reports do not contain specific details on cross-contributor discussions or community engagement on pull requests and issues.", "2025-09-04T03:34:31.453Z"]
["ethereum-optimism/optimism_week_2025-06-29", "ethereum-optimism/optimism", "week", "2025-06-29", "# ethereum-optimism/optimism Weekly Report (Jun 29 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week focused on initiating new work and addressing specific issues, with no major features merged. Development activity centered on tooling improvements, with new pull requests opened to enhance the `op-challenger` with state history checks and to improve the development environment by saving dev-net state. A bug report concerning the `op-deployer` was promptly identified as resolved in a newer release, and a community inquiry was raised regarding precompile initialization. Overall activity was light, particularly around the middle of the week.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were completed or merged this week. However, several new workstreams were initiated:\n\n*   **Challenger and DevNet Tooling:**\n    *   A new subcommand, `check-state-history`, was proposed for the `op-challenger` to provide better state inspection capabilities ([#16619](https://github.com/ethereum-optimism/optimism/pull/16619)).\n    *   Work began on improving the developer experience by saving the dev-net state, which includes the deployment of `ParamToken` and other Bedrock tweaks ([#16626](https://github.com/ethereum-optimism/optimism/pull/16626)).\n\n*   **Dependency Management:**\n    *   A routine dependency update for `github.com/docker/docker` was opened by Dependabot ([#16624](https://github.com/ethereum-optimism/optimism/pull/16624)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was focused on specific bug reports and clarifying questions.\n\n*   **Closed Issues:**\n    *   A bug report regarding an error in `op-deployer v0.4.0-rc.2` ([#16618](https://github.com/ethereum-optimism/optimism/issues/16618)) was quickly closed after it was confirmed that the issue had already been resolved in a more recent release candidate.\n\n*   **New & Active Issues:**\n    *   A new issue was opened seeking clarification on the purpose of initializing precompile addresses (0x00-0xff) with a 1 wei balance in the OP Stack ([#16620](https://github.com/ethereum-optimism/optimism/issues/16620)).\n    *   There were no reports of active issues with significant ongoing discussion this week.\n\n## \ud83d\udcac Community & Collaboration\nCommunity interaction was characterized by targeted issue reporting and inquiries. The prompt closure of the `op-deployer` issue demonstrates responsive maintenance. The question regarding precompile initialization highlights community engagement with the core technical details of the protocol. No significant collaborative discussions on pull requests or issues were noted in this period.", "2025-09-04T03:34:33.688Z"]
["ethereum-optimism/specs_week_2025-06-29", "ethereum-optimism/specs", "week", "2025-06-29", "# ethereum-optimism/specs Weekly Report (Jun 29 - 5, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week focused on improving the foundational structure of the project's documentation. The primary activity involved initiating a refactoring of the RPC specifications to improve their organization and accessibility. This effort reflects an ongoing commitment to enhancing the developer experience by making the specifications clearer and easier to navigate. No new features were merged, and issue triage was minimal.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major features or fixes were completed this week, work began on improving the organization of the project's specifications.\n\n*   **RPC Specification Refactoring**\n    An effort was started to improve the structure of RPC-related documentation. A new pull request ([#736](https://github.com/ethereum-optimism/specs/pull/736)) was opened to centralize all RPC specifications into a dedicated `protocol/rpc/` directory. This change aims to make the documentation more organized and accessible for developers.\n\n## \ud83d\udc1b Issues & Triage\nThere was no activity related to issues this week.\n\n*   **Closed Issues:** No issues were closed.\n*   **New & Active Issues:** No new issues were reported, and there were no significant discussions on existing issues.\n\n## \ud83d\udcac Community & Collaboration\nVisible collaboration in the repository was minimal this week. Development activity was concentrated on the single documentation refactoring effort, with no significant public discussions noted on pull requests or issues.", "2025-09-04T03:34:38.353Z"]
["ethereum-optimism/docs_week_2025-07-06", "ethereum-optimism/docs", "week", "2025-07-06", "# ethereum-optimism/docs Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a strong focus on enhancing documentation quality and usability for chain operators. Significant progress was made in creating comprehensive guides for setting up proposers and batchers, alongside a concerted effort to standardize terminology and capitalization across the entire documentation suite. Preparations for the upcoming Upgrade 16 are now reflected in the docs, and a major strategic initiative was proposed to migrate the documentation platform to Mintlify, signaling a future investment in user experience. Concurrently, several technical issues were resolved, streamlining `op-node` functionality and improving test reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving documentation clarity, consistency, and operator support.\n\n- **Chain Operator Enablement:** A major effort was made to improve the experience for those running their own OP Stack chains. This included a new tutorial for setting up a proposer post-configuration ([#1645]), a complete batcher deployment guide covering both source and Docker setups ([#1665]), and the addition of Holocene and Isthmus instructions to the consensus configuration docs ([#1686]).\n\n- **Documentation Consistency and Maintenance:** A series of pull requests were merged to enforce consistency across the documentation. This involved standardizing the casing of terms like \"cross-chain\" ([#1672]), \"Superchain\" ([#1677]), \"L2ToL2\" ([#1678]), \"Blockspace Charters\" ([#1679]), and \"L1 Date Fee\" ([#1680]). Additionally, Grove was added as an RPC Provider ([#1685]), and a broken link was fixed ([#1683]).\n\n- **Upgrade 16 Preparation:** As Upgrade 16 approaches, the documentation was updated to reflect its changes ([#1690]). A new pull request was also opened to add the specific execution date for the upgrade ([#1689]).\n\n- **Future Platform Migration:** A significant new pull request ([#1691]) was opened to migrate the documentation site to Mintlify. This represents a potential major overhaul of the documentation platform aimed at improving its structure and user experience.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on closing out lingering technical items and continuing discussions on complex active issues. No new issues were opened.\n\n- **Closed Issues:**\n    - **Interop and Node Logic:** Two key issues related to interoperability were closed. The proposal to add a pre-Interop logic mode to `op-node` ([#16520]) was de-prioritized. The issue regarding pre-interop state checks in the execution client ([#15765]) was also closed, with the conclusion that the risk is better mitigated through improved genesis generation tooling like `op-deployer`.\n    - **Test Reliability & Maintenance:** An issue concerning the reliability of acceptance tests was closed after significant improvements were made ([#16378]). An older `op-batcher` issue was also closed due to inactivity ([#15355]).\n    - **Runbook Finalization:** The final review for the v3 fault proof incident runbook was completed and the issue was closed ([#16651]).\n\n- **New & Active Issues:**\n    - **Abnormal `op-geth` CPU Usage ([#613]):** This remains a notable active issue, with users continuing to report high CPU usage. A recent comment provided a `pprof` file for analysis, suggesting the performance problem might be related to a lengthy index update.\n    - **Fault Proof Contract Changes ([#15789]):** Discussion continues on necessary OPCM changes for the Fault Proof creator contract. A detailed checklist of remaining tasks indicates this is a significant ongoing effort.\n    - **Precompile Address Initialization ([#16620]):** A discussion was clarified this week, explaining that the 1 wei balance in precompile addresses (0x00-0xff) is expected behavior within the OP Stack to prevent them from being treated as empty accounts.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity highlighted a pattern of focused, internal collaboration on documentation and resolving technical debt. The series of consistency-focused PRs suggests a coordinated cleanup effort.\n\nDiscussions on closed issues, such as the decision to rely on tooling improvements for genesis validation ([#15765]), demonstrate a pragmatic approach to engineering, with maintainers carefully considering the appropriate layer for different system checks. The clarification provided by `tynes` on the precompile address issue ([#16620]) is a good example of maintainers engaging with the community to explain core functionalities of the stack. While there were no major new community-driven features, the work on operator guides and the proposed migration to Mintlify show a strong commitment to improving the developer and operator experience.", "2025-09-04T03:34:45.418Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-07-06", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-07-06", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on expanding the Superchain ecosystem and hardening core protocol components. A key feature was the integration of the Super token into Soneium, directly contributing to the project's goal of a growing, interoperable network. Concurrently, significant effort was dedicated to resolving complex technical issues, with active discussions surrounding `op-geth` performance, fault proof contract implementation, and the fundamental behavior of precompile addresses in the OP Stack. This blend of new development and deep-dive maintenance underscores a focus on both growth and stability.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development this week was focused on ecosystem growth.\n\n- **Superchain Ecosystem Expansion:** A new feature was merged to integrate the Super token into Soneium ([#1171](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1171)). This integration enhances the utility and interoperability of assets within the Superchain.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week saw the resolution of several items related to testing and prioritization, while new and ongoing discussions highlighted a focus on protocol security and performance.\n\n- **Closed Issues:**\n    - **Test Reliability & Prioritization:** An issue concerning the reliability of acceptance tests was closed, marking an improvement in test suite stability ([#16378](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16378)). An `op-batcher` configuration issue was closed due to inactivity ([#15355](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15355)), and a feature to add a pre-Interop logic mode to `op-node` was deprioritized and closed ([#16520](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16520)).\n\n- **New & Active Issues:**\n    - **Fault Proofs:** A new issue was opened to finalize the v3 fault proof incident runbook, moving it from \"draft\" to a production-ready state ([#16651](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16651)). Discussions are also actively progressing on the `Fault Proof creator contract OPCM changes` ([#15789](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15789)), with a detailed checklist of action items under review.\n    - **`op-geth` Performance:** The investigation into abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613)) continues, with contributors providing performance profiles. The leading theory suggests the high usage may be temporary, caused by index rebuilding after a recent update, though concerns about release quality assurance persist.\n    - **Protocol Clarifications:** A discussion on precompile address initialization ([#16620](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16620)) received a key clarification: the 1 wei balance is intentionally set to prevent these addresses from being treated as empty accounts due to \"obscure rules.\"\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions on several key issues. The `op-geth` performance issue ([#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613)) saw multiple community members like `PierrickGT`, `jsvisa`, and `cpuchainorg` contributing diagnostic data and analysis. In the discussion on `TestCrossSafeUpdate` ([#16548](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16548)), contributor `DeVikingMark` proactively created a pull request to address the issue. Furthermore, core team member `tynes` provided a valuable clarification on a fundamental protocol mechanism in issue [#16620](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16620), demonstrating healthy interaction between the core team and the broader community.", "2025-09-04T03:34:52.289Z"]
["ethereum-optimism/infra_week_2025-07-06", "ethereum-optimism/infra", "week", "2025-07-06", "# ethereum-optimism/infra Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on enhancing infrastructure robustness, initiating new development, and clearing out technical backlog. Significant progress was made on `proxyd` with the introduction of improved error handling and conditional rate limiting to increase stability and control. Development officially began on a new `op-spamoor` component, while parallel work continued on refining interop logic. The team also demonstrated a commitment to focus by closing several long-standing or deprioritized issues, including those related to test reliability and `op-node` interop logic, allowing for greater attention on active priorities like fault proofs and `op-geth` performance.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on strengthening existing services and laying the groundwork for new tooling.\n\n- **`proxyd` Robustness and Control**\n  To improve visibility and control over network traffic, `proxyd` was updated with enhanced error handling and new rate-limiting features. A specific \"499\" error code was added to track client-side request cancellations ([#420](https://github.com/ethereum-optimism/infra/pull/420)), and conditional rate limiting was implemented for transaction senders and interop, accompanied by a cleanup of transaction parsing logic ([#421](https://github.com/ethereum-optimism/infra/pull/421)).\n\n- **New Development and Interop Refinements**\n  The initial commit for `op-spamoor` was made, marking the start of a new component ([#422](https://github.com/ethereum-optimism/infra/pull/422)). In parallel, adjustments were made to the core protocol's interop handling by disabling validation toggles and removing awareness of certain error codes ([#423](https://github.com/ethereum-optimism/infra/pull/423)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved resolving older issues and focusing discussion on critical active topics like fault proofs and performance.\n\n- **Closed Issues:**\n  Several issues were closed, reflecting progress in stability and strategic focus.\n    - **Reliability & Stability:** An issue concerning the reliability of acceptance tests was closed after significant improvements were noted ([#16378](https://github.com/ethereum-optimism/infra/issues/16378)). An inactive issue regarding an `op-batcher` RPC was also closed ([#15355](https://github.com/ethereum-optimism/infra/issues/15355)).\n    - **Strategic Deprioritization:** A proposal to add a pre-Interop logic mode to `op-node` was closed after being deprioritized, clarifying the team's focus ([#16520](https://github.com/ethereum-optimism/infra/issues/16520)).\n    - **Rapid Resolution:** An issue related to `flashblocks` acceptance testing was resolved on the same day it was opened ([#16630](https://github.com/ethereum-optimism/infra/issues/16630)).\n\n- **New & Active Issues:**\n  Discussions centered on preparing fault proofs for production and addressing performance bottlenecks.\n    - **New:** A new issue was opened to conduct a final review of the v3 fault proof incident runbook, signaling a move toward production readiness ([#16651](https://github.com/ethereum-optimism/infra/issues/16651)).\n    - **Active Discussions:**\n        - **Fault Proofs:** A detailed checklist was posted in the issue for OPCM changes to the Fault Proof creator contract, outlining the remaining tasks for this complex feature ([#15789](https://github.com/ethereum-optimism/infra/issues/15789)).\n        - **`op-geth` Performance:** A user provided a performance profile for an issue concerning abnormal CPU usage in `op-geth`, attributing the slowdown to an index update that took 24 hours to complete ([#613](https://github.com/ethereum-optimism/infra/issues/613)).\n        - **Protocol Clarification:** Discussion continued around the standard practice of initializing precompile addresses with a 1 wei balance to prevent them from being treated as empty accounts ([#16620](https://github.com/ethereum-optimism/infra/issues/16620)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in both strategic decision-making and user-developer interactions. The discussion and subsequent closure of the `op-node` interop issue ([#16520](https://github.com/ethereum-optimism/infra/issues/16520)) highlighted the team's process for prioritizing work. The detailed planning visible in the Fault Proof creator contract issue ([#15789](https://github.com/ethereum-optimism/infra/issues/15789)) points to close coordination on major initiatives. Additionally, the `op-geth` CPU issue ([#613](https://github.com/ethereum-optimism/infra/issues/613)) showcased effective collaboration with the community, as a user provided valuable diagnostic data to help the team investigate a performance problem.", "2025-09-04T03:35:01.476Z"]
["ethereum-optimism/ecosystem_week_2025-07-06", "ethereum-optimism/ecosystem", "week", "2025-07-06", "# ethereum-optimism/ecosystem Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development was characterized by two major efforts: significant enhancements to the interop relayer infrastructure and the finalization of the Superstacks Mini App. The team made substantial progress on `autorelayer-interop` and `ponder-interop`, implementing more accurate gas provider balance calculations by accounting for pending withdrawals and claims. In parallel, a large number of issues related to the Superstacks Mini App were closed, covering UI, backend logic, and deployment, signaling that the feature is approaching production readiness. The week also saw important maintenance work, including improving test reliability and investigating a performance issue in `op-geth`.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe core technical work focused on improving the accuracy and functionality of the cross-chain relayer system.\n\n- **Interop Relayer Gas Management:** A series of updates were made to `autorelayer-interop` and `ponder-interop` to provide more precise gas balance management for relayers.\n    - To better account for in-flight costs, the system was updated to factor in pending withdrawals when calculating a gas provider's available balance ([#879](https://github.com/ethereum-optimism/ecosystem/pull/879), [#883](https://github.com/ethereum-optimism/ecosystem/pull/883)).\n    - A new API endpoint was added to `ponder-interop` to fetch pending claims, which `autorelayer-interop` now uses to deduct unclaimed relay costs from the gas provider's balance ([#886](https://github.com/ethereum-optimism/ecosystem/pull/886), [#887](https://github.com/ethereum-optimism/ecosystem/pull/887)).\n    - Following a `GasTank` ABI update, the logic was changed to specify the `GasProvider` at the time of relay rather than at the time of claim, ensuring correct relay receipt generation ([#889](https://github.com/ethereum-optimism/ecosystem/pull/889), [#890](https://github.com/ethereum-optimism/ecosystem/pull/890), [#891](https://github.com/ethereum-optimism/ecosystem/pull/891)).\n\n- **Package Versioning and Releases:** As part of routine maintenance, new versions were published for several packages, including `autorelayer-interop`, `ponder-interop`, `supersim` ([#888](https://github.comcom/ethereum-optimism/ecosystem/pull/888), [#892](https://github.com/ethereum-optimism/ecosystem/pull/892)), `sponsored-sender`, `superchain-playground`, `viem`, and `wagmi` ([#895](https://github.com/ethereum-optimism/ecosystem/pull/895), [#897](https://github.com/ethereum-optimism/ecosystem/pull/897), [#898](https://github.com/ethereum-optimism/ecosystem/pull/898)).\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:**\n    - **Superstacks Mini App & Airdrop 6:** A significant number of issues were resolved for the Superstacks Mini App, marking a major push towards completion. This included work on the WorldID scope ([#827](https://github.com/ethereum-optimism/ecosystem/issues/827)), production deployment configuration ([#866](https://github.com/ethereum-optimism/ecosystem/issues/866)), claim flow UI ([#867](https://github.com/ethereum-optimism/ecosystem/issues/867)), backend delegation checks ([#849](https://github.com/ethereum-optimism/ecosystem/issues/849)), and the resolution of bugbash findings ([#872](https://github.com/ethereum-optimism/ecosystem/issues/872)). An issue with the Airdrop 6 event log poller was also fixed ([#850](https://github.com/ethereum-optimism/ecosystem/issues/850)).\n    - **Stability and Prioritization:** An issue regarding acceptance test reliability was closed, indicating stability improvements ([#16378", "2025-09-04T03:35:03.284Z"]
["ethereum-optimism/op-analytics_week_2025-07-06", "ethereum-optimism/op-analytics", "week", "2025-07-06", "# ethereum-optimism/op-analytics Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant enhancements to the project's data analytics infrastructure. Development focused heavily on upgrading the Dagster data pipeline for improved stability and functionality, including enabling easier backfilling of native transfers. The Revshare transfer logic was also substantially overhauled to capture a wider range of transfers across all Superchain networks, improving data accuracy and completeness. Additionally, several key technical discussions regarding Interoperability logic and precompile address states were concluded, providing important clarity for future development.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving the robustness and scope of the analytics data pipelines.\n\n- **Dagster Pipeline Upgrades and Streamlining**\n  A series of updates modernized the Dagster data pipeline. This included multiple version bumps to enhance stability and functionality ([#1672](https://github.com/ethereum-optimism/op-analytics/pull/1672), [#1673](https://github.com/ethereum-optimism/op-analytics/pull/1673), [#1675](https://github.com/ethereum-optimism/op-analytics/pull/1675), [#1676](https://github.com/ethereum-optimism/op-analytics/pull/1676), [#1677](https://github.com/ethereum-optimism/op-analytics/pull/1677)). A new feature was added to allow backfilling of native transfers directly through the Dagster UI ([#1674](https://github.com/ethereum-optimism/op-analytics/pull/1674)). To streamline ingestion, the decommissioned Kroma chain was removed from the process, preventing it from blocking deployments ([#1671](https://github.com/ethereum-optimism/op-analytics/pull/1671)).\n\n- **Revshare Transfer Logic Enhancements**\n  The Revshare analytics system received a major upgrade to improve data accuracy and coverage. The logic was expanded to capture all inbound transfers, not just those from known revshare addresses, which will help identify unmapped addresses ([#1678](https://github.com/ethereum-optimism/op-analytics/pull/1678), [#1679](https://github.com/ethereum-optimism/op-analytics/pull/1679)). Support was also extended to all chains across the Superchain ecosystem ([#1680](https://github.com/ethereum-optimism/op-analytics/pull/1680)), and a critical bug in the data insertion logic was fixed ([#1681](https://github.com/ethereum-optimism/op-analytics/pull/1681)).\n\n- **Chain Metadata Expansion**\n  The project's dataset was expanded with the addition of new CGT (Contracts/Governance/Tokens) data for Celo and Frax chains ([#1683](https://github.com/ethereum-optimism/op-analytics/pull/1683)).\n\n- **Future Refactoring Initiated**\n  A new pull request ([#1684](https://github.com/ethereum-optimism/op-analytics/pull/1684)) was opened to begin refactoring the existing token and CGT structures, signaling upcoming work to improve data modeling.\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week led to the resolution of several issues related to core protocol mechanics and configuration.\n\n- **Closed Issues:**\n  - **Interop Logic and Configuration:** Two key issues related to Interoperability were closed. A proposal to add a pre-Interop logic mode to `op-node` ([#16520](https://github.com/ethereum-optimism/op-analytics/issues/16520)) was closed after being deprioritized. A discussion on validating `CrossL2Inbox` configuration in the L2 genesis state ([#15765](https://github.com/ethereum-optimism/op-analytics/issues/15765)) concluded that the risk is better mitigated by genesis generation tooling (`op-deployer`) rather than adding complexity to execution clients.\n  - **Flashblocks Test Validation:** An issue to update flashblocks gate acceptance tests ([#16630](https://github.com/ethereum-optimism/op-analytics/issues/16630)) was opened and immediately closed.\n\n- **New & Active Issues:**\n  - No new issues were opened this week.\n  - An active discussion on issue [#16620](https://github.com/ethereum-optimism/op-analytics/issues/16620) provided important clarification regarding precompile addresses (0x00-0xff). It was confirmed that their 1 wei balance is expected behavior within the OP Stack, due to rules around how empty accounts are handled, and does not indicate an anomaly.\n\n## \ud83d\udcac Community & Collaboration\nThis week saw focused, collaborative efforts on specific feature sets. The rapid succession of merged pull requests for both the Dagster pipeline and Revshare logic indicates tightly coordinated work by the development team. Core contributors `tynes` and `ajsutton` were instrumental in driving discussions to a conclusion on several technical issues ([#16520](https://github.com/ethereum-optimism/op-analytics/issues/16520), [#16620](https://github.com/ethereum-optimism/op-analytics/issues/16620), [#15765](https://github.com/ethereum-optimism/op-analytics/issues/15765)), providing clarity and direction that unblocks future development.", "2025-09-04T03:35:03.870Z"]
["ethereum-optimism/op-geth_week_2025-07-06", "ethereum-optimism/op-geth", "week", "2025-07-06", "# ethereum-optimism/op-geth Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused on enhancing the transaction pool's robustness and optimizing block construction performance. Key developments include introducing a per-transaction gas limit and ensuring re-injected transactions are properly filtered after reorgs. The team also improved block building efficiency by removing the `checkInterop` function from the critical path. Several issues related to interop configuration and test reliability were closed, reflecting a push to streamline the codebase and improve stability.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week saw targeted improvements in transaction handling, performance, and configuration alignment.\n\n-   **Transaction Pool Enhancements:** Work was done to harden the transaction pool against invalid transactions and improve its validation logic.\n    -   A new `MaxTxGasLimit` feature was introduced, allowing sequencers to enforce a gas limit on a per-transaction basis, which is particularly useful for single-sequencer rollups ([#626](https://github.com/ethereum-optimism/op-geth/pull/626)).\n    -   The pool's logic was refactored to ensure that transactions re-injected into the mempool after a reorg are correctly re-evaluated by ingress filters, fixing a validation loophole ([#642](https://github.com/ethereum-optimism/op-geth/pull/642)).\n\n-   **Performance Optimization:** A significant change was merged to improve performance during block construction.\n    -   To reduce block construction time, the `checkInterop` function was removed from the block building path, addressing concerns about excessive time consumption ([#585](https://github.com/ethereum-optimism/op-geth/pull/585)).\n\n-   **Superchain Alignment:** The project was updated to stay in sync with the broader Superchain ecosystem.\n    -   The Superchain Registry commit was bumped to `6621a0f1`, ensuring `op-geth` is aligned with the latest Superchain configurations ([#640](https://github.com/ethereum-optimism/op-geth/pull/640)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on resolving bugs, clarifying responsibilities for interop configuration, and investigating user-reported performance problems.\n\n-   **Closed Issues:**\n    -   **Interop & Genesis:** An issue regarding interop predeploys in the L2 genesis state was closed, with the conclusion that this validation is better handled by genesis generation tooling rather than the execution client ([#15765](https://github.com/ethereum-optimism/op-geth/issues/15765)). A proposal to add a pre-Interop logic mode to `op-node` was also deprioritized and closed ([#16520](https://github.com/ethereum-optimism/op-geth/issues/16520)).\n    -   **Transaction Filtering:** An issue concerning the lack of filter re-evaluation for re-injected transactions was opened and promptly resolved by PR [#642](https://github.com/ethereum-optimism/op-geth/pull/642) ([#641](https://github.com/ethereum-optimism/op-geth/issues/641)).\n    -   **Reliability & Testing:** An issue regarding acceptance test reliability was closed after noting significant improvements ([#16378](https://github.com/ethereum-optimism/op-geth/issues/16378]). An issue related to flashblocks acceptance testing was also opened and closed on the same day ([#16630](https://github.com/ethereum-optimism/op-geth/issues/16630)).\n    -   **RPC:** An `op-batcher` issue causing RPC errors was closed due to inactivity, with a request to reopen if it recurs ([#15355](https://github.com/ethereum-optimism/op-geth/issues/15355)).\n\n-   **New & Active Issues:**\n    -   **Performance:** An investigation into abnormal CPU usage on `op-geth` v1.101511.0 is ongoing. Maintainers are guiding users on how to capture performance profiles, with initial data suggesting the issue may be related to time-intensive index updates during node startup ([#613](https://github.com/ethereum-optimism/op-geth/issues/613)).\n    -   **Fault Proofs:** Discussion continues on the required OPCM changes for the Fault Proof creator contract, with a detailed task checklist being developed to guide implementation ([#15789](https://github.com/ethereum-optimism/op-geth/issues/15789)).\n    -   **Documentation:** The v3 fault proof incident runbook is undergoing a final review before being marked as official ([#16651](https://github.com/ethereum-optimism/op-geth/issues/16651)).\n\n## \ud83d\udcac Community & Collaboration\n-   The resolution of the interop prestate issue ([#15765](https://github.com/ethereum-optimism/op-geth/issues/15765)) highlights effective cross-project coordination, as the responsibility for validation was shifted from `op-geth` to the more appropriate `op-deployer` tooling.\n-   Active collaboration between maintainers and users is evident in the handling of the CPU usage issue ([#613](https://github.com/ethereum-optimism/op-geth/issues/613)), where the team is working directly with the community to diagnose the problem.\n-   The project demonstrated clear prioritization by formally deprioritizing and closing an issue for `op-node` interop logic ([#16520](https://github.com/ethereum-optimism/op-geth/issues/16520)), allowing the team to focus on more critical tasks.", "2025-09-04T03:35:16.032Z"]
["ethereum-optimism/superchain-registry_week_2025-07-06", "ethereum-optimism/superchain-registry", "week", "2025-07-06", "# ethereum-optimism/superchain-registry Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for code contributions, with development activity centered on issue management and discussion. No new features or pull requests were merged. The primary focus was on resolving existing issues, including an update to the flashblocks acceptance testing configuration. Additionally, a discussion regarding `op-node` logic was concluded, with the decision to deprioritize the proposed changes.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new code contributions, features, or bug fixes merged during this period.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was the main activity this week, with key discussions leading to the resolution and closure of existing items.\n\n- **Closed Issues:**\n    - **Flashblocks Acceptance Testing:** An issue was resolved to update the flashblocks gate, ensuring acceptance tests correctly validate the stream from the new `flashblocks-websocket-proxy` ([#16630](https://github.com/ethereum-optimism/superchain-registry/issues/16630)).\n    - **`op-node` Interop Logic:** An issue exploring a mode for `op-node` to use pre-Interop logic was closed after discussion, with the conclusion that the work would no longer be prioritized ([#16520](https://github.com/ethereum-optimism/superchain-registry/issues/16520)).\n\n- **New & Active Issues:**\n    - No new issues were opened this week.\n    - Discussion on the active `op-node` issue ([#16520](https://github.com/ethereum-optimism/superchain-registry/issues/16520)) involved considering alternative approaches before it was ultimately closed.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was focused within issue discussions. A notable conversation occurred on issue [#16520](https://github.com/ethereum-optimism/superchain-registry/issues/16520), where contributor `tynes` provided input on potential implementation strategies for `op-node` logic before the issue was ultimately deprioritized. The activity reflects a period of planning and prioritization rather than active coding.", "2025-09-04T03:35:17.382Z"]
["ethereum-optimism/optimism_week_2025-07-06", "ethereum-optimism/optimism", "week", "2025-07-06", "# ethereum-optimism/optimism Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a strong focus on enhancing the stability and reliability of the OP Stack. Critical deadlock bugs were resolved in both `op-node` and `op-supervisor`, significantly improving core protocol resilience. The testing infrastructure received a major overhaul, with numerous tests being validated, fixed, and re-enabled to ensure comprehensive coverage and prevent regressions. Key feature work included the successful integration of the Standard Validator into the Optimism Contracts Manager (OPCM), streamlining contract management, and an update to `op-geth` to prepare for the Holocene network activation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on hardening the existing stack through bug fixes, refactoring, and extensive testing improvements.\n\n**Protocol Stability and Reliability**\n- Critical deadlock and race condition fixes were merged to improve system stability. A fix in `op-node` ensures proper mutex unlocking ([#16617]), while `op-supervisor` was updated to remove redundant locks and resolve a deadlock that caused event congestion ([#16642]).\n- The `op-node` was also improved to correctly delete the safe head database when an Execution Layer sync is triggered, enhancing synchronization reliability ([#16644]).\n\n**Testing Infrastructure and Validation**\n- A significant effort was made to improve test quality and coverage. This included re-enabling the `faultproofs` test in CI ([#16398]), reducing flakiness in withdrawal proofs tests ([#16628]), and achieving validation script compliance for tests in the `/L2` ([#16607]), `/universal` ([#16610]), and other legacy folders ([#16613]).\n- New acceptance tests were added to verify safe head database behavior during EL state deletion ([#16627]).\n- The development environment was also improved by fixing the Kurtosis devnet's reverse proxy setup ([#16638]) and correcting the challenger address in `op-e2e` devnet deploys ([#16671]).\n\n**Contracts and OPCM**\n- The Standard Validator was successfully integrated into the Optimism Contracts Manager (OPCM) ([#16237]). This refactor aligns the validator with existing OPCM patterns, improving the modularity and maintainability of the contract deployment system.\n\n**`op-supervisor` and Interop Enhancements**\n- The `op-supervisor` saw several improvements. Its rewinder mechanism was refactored for simplicity ([#16556]), and its RPC interface was updated to map internal errors to standard RPC error codes for better client-side handling ([#16652]).\n- In a move towards API consistency, the `interop_blockRefByNumber` API was removed and consolidated into `interop_L2BlockRefByNumber` across `op-supervisor` and `op-node` ([#16636]).\n\n**Tooling and Developer Experience**\n- A new Gnosis Safe client was added to `op-service`, providing robust transaction sending capabilities with built-in gas estimation and retries ([#16629]).\n- `op-program` received a new script for building canonized prestates, improving the prestate generation process ([#16670]).\n- The Smart Contract Style Guide was updated with new test conventions and validation workflows ([#16614]), and `op-service` gained new `logfmtms` and `jsonms` log formats for better monitoring ([#16645]).\n\n**Node and Geth Updates**\n- `op-geth` was updated to include the latest SCR changes and the swell-mainnet Holocene activation time, keeping it aligned with network upgrades ([#16655]).\n\n## \ud83d\udc1b Issues & Triage\n\n**Closed Issues**\n- Several critical stability issues in `op-supervisor` related to event overflow and potential deadlocks were resolved ([#16335], [#16603]).\n- A series of issues related to a \"trivial-interop\" mode for `op-node` (running without a supervisor) were closed, as this direction is no longer a priority ([#16519], [#16520], [#16521]).\n- The successful integration of the Standard Validator closed out its corresponding OPCM task ([#15799]), and the `op-supervisor` RPC was brought into compliance with the error-code specification ([#15771]).\n- An issue preventing L1 network access in the Kurtosis devnet was also resolved ([#16127]).\n\n**New & Active Issues**\n- A new issue was opened to address the authentication strategy for `op-interop-mon` and `op-supervisor`, particularly for admin APIs like `admin_SetFailsafeEnabled` ([#16672]).\n- A code duplication was identified in the `op-batcher`'s `checkTxpool` function, prompting a cleanup effort ([#16677]).\n- A limitation in the Forge test linter was reported, as it cannot properly process tests for Solidity libraries ([#16662]).\n- Ongoing discussions continue around abnormal CPU usage in `op-geth` ([#613]), with users providing `pprof` data for analysis. Other active threads include addressing RV Audit findings ([#16548]) and finalizing OPCM changes for the Fault Proof creator contract ([#15789]).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted a healthy and responsive development process. The quick identification and acknowledgment of potential code duplication in `op-batcher` ([#16677]) demonstrated a positive feedback loop between contributors. The team also showed clear strategic decision-making by closing several issues related to a deprioritized feature, allowing focus to shift to more pressing stability and testing enhancements. The collaborative debugging on the long-standing `op-geth` CPU usage issue ([#613]) continues, with community members actively providing diagnostic data to help pinpoint the root cause.", "2025-09-04T03:35:17.413Z"]
["ethereum-optimism/specs_week_2025-07-06", "ethereum-optimism/specs", "week", "2025-07-06", "# ethereum-optimism/specs Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's reported activity centered on enhancing the Superchain's interoperability specifications. Key updates were made to improve cross-chain communication and L1 origin tracking for L2 blocks. Additionally, an important clarification was provided regarding the intentional initialization of precompile addresses within the OP Stack, resolving a long-standing point of discussion.\n\n## \ud83d\udee0\ufe0f Key Developments\n### Superchain Interoperability Enhancements\nWork focused on refining the `specs/interop/managed-node.md` specification to improve how supervised chains interact within the Superchain. A new derivation type, `DerivationCurrentL1Update`, was added to support ongoing discussions ([#733](https://github.com/ethereum-optimism/specs/pull/733)). To improve L2 block origin tracking, the `interop_blockRefByNumber` function was extended to `interop_l2BlockRefByNumber`, allowing supervisors to more accurately determine the L1 origin of an L2 block ([#735](https://github.com/ethereum-optimism/specs/pull/735)).\n\n## \ud83d\udc1b Issues & Triage\n- **Closed Issues:** Based on the available reports, no issues were closed this week.\n- **New & Active Issues:** No new issues were opened. Discussion continued in issue [#16620](https://github.com/ethereum-optimism/specs/issues/16620) concerning the initialization of precompile addresses (0x00-0xff). A clarification was added, noting that the 1 wei balance is an intentional design choice to comply with protocol rules regarding empty accounts.\n\n## \ud83d\udcac Community & Collaboration\nThe primary community interaction noted this week was the ongoing technical discussion in issue [#16620](https://github.com/ethereum-optimism/specs/issues/16620), which served to clarify a core aspect of the OP Stack's state initialization for the community.", "2025-09-04T03:35:18.313Z"]
["ethereum-optimism/superchain-ops_week_2025-07-06", "ethereum-optimism/superchain-ops", "week", "2025-07-06", "# ethereum-optimism/superchain-ops Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was dominated by intensive preparations for the upcoming U16 upgrade. Development efforts were sharply focused on ensuring a smooth rollout, with numerous critical bug fixes for U16 configurations on both Sepolia and mainnet. The team successfully generated state diffs for multiple chains, executed preparatory runbooks, and enhanced devnet tooling for rehearsal. Alongside this upgrade work, significant refactoring of Gnosis Safe logic improved codebase modularity, and several long-standing issues related to node functionality and testing were resolved, clearing the path for future development.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on bug fixes, upgrade preparations, and foundational code improvements.\n\n### U16 Upgrade Preparations and Fixes\nA significant push was made to prepare for the U16 upgrade, involving critical fixes and preparatory tasks across multiple chains.\n- **Bug Fixes:** A series of crucial fixes were merged to ensure correct behavior. This included resolving a `config.toml` bug that affected normalized hash generation ([#1114]), adding a guardian nonce override to enable standalone simulation ([#1115]), and addressing configuration issues for DPM/DGM on U16 Sepolia ([#1113]) and mainnet ([#1123], [#1127]).\n- **State Diff Generation:** As part of the upgrade process, state differences were generated for Op & Ink ([#1110]), Soneium ([#1111]), and Unichain ([#1112]).\n- **Task Execution:** Several operational tasks were completed, including the execution of three U16 Sepolia runbooks ([#1117]) and marking the Unichain U16 Sepolia task as executed ([#1125]).\n- **Devnet Enhancements:** To support testing, a new devnet task was introduced for gas parameter rehearsal, which included deploying a Gnosis Safe ([#1116]).\n\n### Core Logic and Tooling Refinements\nImprovements were made to core operational logic and development tooling to enhance maintainability and efficiency.\n- **Gnosis Safe Refactoring:** Transaction encoding logic was refactored from `MultisigTask` into a dedicated `GnosisSafeHashes` library, improving modularity and reusability ([#1092]).\n- **Task Execution:** A change was made to disable nonce checks on nested `just execute` commands, streamlining complex task execution ([#1119]).\n- **Template Management:** A fix was implemented to rename a template by removing its version ([#1120]), and a new PR was opened to enforce adding the `op-contract` version to template names for better clarity ([#1118]).\n\n### Maintenance and Configuration Updates\nMinor but necessary maintenance and configuration changes were also addressed.\n- **Cleanup:** Outdated U16 tasks and their associated configurations were removed to streamline the codebase ([#1109]).\n- **Configuration:** Minor diffs were applied for a Minato upgrade ([#1108]), and a nonce was bumped for a Uniswap-related upgrade ([#1122]).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several key issues, reflecting a shift in priorities and successful mitigation efforts.\n\n- **Closed Issues:**\n    - **Node Functionality:** An issue to add pre-Interop logic to `op-node` was closed as it is no longer a priority ([#16520]). An `op-batcher` issue was closed due to inactivity ([#15355]).\n    - **Configuration & Validation:** An issue regarding CrossL2Inbox configuration validation was closed, with the team determining that improvements in deployer tooling provided sufficient mitigation ([#15765]). The `flashblocks` gate in acceptance tests was confirmed to be working correctly ([#16630]).\n    - **Testing & Documentation:** An issue focused on improving the reliability of acceptance tests was closed ([#16378]), as was a runbook for a v3 final review ([#16651]).\n\n- **New & Active Issues:**\n    - No new issues were opened this week.\n    - **Fault Proofs:** Active discussion continues on the OPCM changes required for the Fault Proof creator contract, with a detailed checklist of remaining tasks outlined ([#15789]).\n    - **Performance:** An investigation into abnormal CPU usage with `op-geth` ([#613]) is ongoing, with recent comments suggesting the issue may be related to a lengthy index update.\n    - **Precompile Addresses:** Discussion on issue [#16620] clarified that initializing precompile addresses with a 1 wei balance is intentional to prevent them from being treated as empty accounts.\n\n## \ud83d\udcac Community & Collaboration\nThe development activity this week demonstrated a highly coordinated and focused effort, particularly around the U16 upgrade. The rapid succession of related pull requests for bug fixes, state diff generation, and task execution points to strong internal alignment and efficient execution by the core team. Technical discussions on active issues, such as the detailed implementation plan for the Fault Proof creator contract ([#15789]) and clarifications on `op-stack` conventions ([#16620]), highlight a collaborative environment focused on resolving complex technical challenges.", "2025-09-04T03:35:30.425Z"]
["ethereum-optimism/design-docs_week_2025-07-13", "ethereum-optimism/design-docs", "week", "2025-07-13", "# ethereum-optimism/design-docs Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by maintenance and issue backlog grooming rather than new development. The primary focus was on closing out long-standing issues related to the stability and operation of core infrastructure, including the sequencer and nodes. This effort helps to clean up the issue tracker and formally resolve problems that have since been addressed or are no longer relevant. A key policy was also clarified: the project's NPM packages, such as `@eth-optimism/contracts-bedrock`, are no longer being updated.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features, bug fixes, or refactoring efforts were merged this week. The development focus was on administrative cleanup, with the closure of issue [#413](https://github.com/ethereum-optimism/design-docs/issues/413) confirming that the `TestChainFork` acceptance test had been successfully ported to `devstack` in a previous pull request.\n\n## \ud83d\udc1b Issues & Triage\nThe week's activity centered entirely on issue management, with a significant number of older issues being closed. No new issues were opened.\n\n- **Closed Issues:** Several key issues were resolved and closed, improving the clarity of the project's current state.\n    - **Sequencer Stability:** Issues concerning sequencer recovery from a sequence window expiration ([#11228](https://github.com/ethereum-optimism/design-docs/issues/11228)) and halting on temporary L1 errors ([#12240](https://github.com/ethereum-optimism/design-docs/issues/12240)) were closed, as they were either resolved by prior work or are no longer considered active problems.\n    - **Node Operation & Dependencies:** An issue regarding the inability to start a new node ([#15411](https://github.com/ethereum-optimism/design-docs/issues/15411)) was closed as resolved. A request to update the `@eth-optimism/contracts-bedrock` NPM package ([#13459](https://github.com/ethereum-optimism/design-docs/issues/13459)) was closed with the clarification that these packages are no longer maintained.\n    - **Testing:** An issue tracking the port of a test to `devstack` ([#413](https://github.com/ethereum-optimism/design-docs/issues/413)) was closed, marking the task as complete.\n\n- **New & Active Issues:** No new issues were opened, indicating a period of stability or a focus on consolidating existing work before identifying new tasks.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity highlights a focused effort by project maintainers to manage the issue backlog. The closure of multiple stale or resolved issues by a single contributor suggests a deliberate cleanup initiative to improve the health and accuracy of the project's issue tracker. There was no significant public discussion or collaboration on new features noted in the reports.", "2025-09-04T03:35:35.286Z"]
["ethereum-optimism/supersim_week_2025-07-06", "ethereum-optimism/supersim", "week", "2025-07-06", "# ethereum-optimism/supersim Weekly Report (Jul 6 - 12, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on maintaining alignment with core Optimism components and resolving key issues related to Interop configuration. The `GasTank` component was updated to its latest version across the supersim environment, ensuring simulations run with the most recent contract logic. A significant long-standing issue regarding Interop prestate validation was closed, with the team deciding to rely on improved genesis tooling for safety rather than implementing client-side checks. This reflects a broader theme of enhancing testing flexibility and ensuring the stability of the simulation environment through pragmatic tooling improvements.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on integrating updates from dependent libraries into the simulation environment.\n\n- **GasTank Integration and Genesis Updates:** The `GasTank` component was updated to its latest commit to ensure it is deployed from the most recent version. This effort, captured in PRs [#413](https://github.com/ethereum-optimism/supersim/pull/413) and [#414](https://github.com/ethereum-optimism/supersim/pull/414), involved updating the `interop-lib` gitsubmodule and modifying several genesis files to reflect the changes, keeping the simulation environment in sync with upstream developments.\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week led to the resolution of several issues, with a focus on Interop logic and testing configuration.\n\n- **Closed Issues:**\n    - **Interop Prestate Configuration:** A long-standing issue ([#15765](https://github.com/ethereum-optimism/supersim/issues/15765)) concerning the validation of `CrossL2Inbox` configuration in the EL prestate was closed. The team concluded that the risk of misconfiguration has been sufficiently mitigated by improvements in the `op-deployer` genesis tooling, which now automatically handles the contract's inclusion. This strategic decision favors tooling-based solutions over adding complexity to the client.\n    - **Enhanced Testing Flexibility:** An issue was closed to provide a configurable dependency set for L2 chains via a CLI flag ([#361](https://github.com/ethereum-optimism/supersim/issues/361)). This enhancement allows for more flexible testing scenarios.\n    - **Flashblocks Awareness:** A brief issue ([#16630](https://github.com/ethereum-optimism/supersim/issues/16630)) was opened and closed, highlighting the need for acceptance tests to validate streaming from `flashblocks-websocket-proxy`.\n\n- **New & Active Issues:**\n    - **`op-node` Interop Logic:** Discussion continued on issue [#16520](https://github.com/ethereum-optimism/supersim/issues/16520) regarding a mode for `op-node` to handle pre-Interop logic. A recent suggestion proposed exploring an approach similar to `op-e2e` or `sysgo`, where services run in the same process.\n    - **Precompile Address State:** An ongoing discussion ([#16620](https://github.com/ethereum-optimism/supersim/issues/16620)) clarified that the 1 wei balance found in precompile addresses (0x00-0xff) is expected behavior due to rules preventing empty accounts, and does not indicate an issue.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the active discussions around key technical issues. The resolution of the Interop prestate configuration issue ([#15765](https://github.com/ethereum-optimism/supersim/issues/15765)) demonstrated a consensus-driven approach, with the team opting for a pragmatic solution based on tooling improvements. Similarly, the ongoing brainstorming on `op-node`'s interop logic ([#16520](https://github.com/ethereum-optimism/supersim/issues/16520)) shows active engagement in finding the most viable technical path forward.", "2025-09-04T03:35:36.136Z"]
["ethereum-optimism/community-hub_week_2025-07-13", "ethereum-optimism/community-hub", "week", "2025-07-13", "# ethereum-optimism/community-hub Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by strategic decision-making and significant housekeeping. Key infrastructure choices were made regarding sequencer components, deprioritizing immediate NVMe deployment and flashblocks on Sunnyside to focus on core stability. The team enhanced the test suite by successfully porting the `TestChainFork` to devstack and made progress on migrating Etherscan links to Blockscout. A major effort was also undertaken to close numerous stale or resolved issues, cleaning up the project backlog. A persistent, flaky test involving invalid transaction inclusion in the txpool remains a key challenge under active investigation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork completed this week focused on improving documentation and user interface clarity.\n\n*   **Documentation & UI Updates**\n    *   New documentation was added to clarify Superstacks allocation, providing better insight into OP Token distribution for the community ([#1167](https://github.com/ethereum-optimism/community-hub/pull/1167)).\n    *   An outdated airdrop banner was removed from the theme configuration, cleaning up the user interface ([#1168](https://github.com/ethereum-optimism/community-hub/pull/1168)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a major push to clean up the issue tracker, resolving long-standing discussions and closing out old problems, while opening new tasks for ecosystem alignment.\n\n*   **Closed Issues:**\n    *   **Sequencer & Infrastructure Strategy:** Several key discussions concluded, shaping the near-term infrastructure roadmap. The team decided to defer NVMe node deployment for op-rbuilders ([#16689](https://github.com/ethereum-optimism/community-hub/issues/16689)), keep flashblocks components in the same namespace as other sequencer components to simplify setup ([#16690](https://github.com/ethereum-optimism/community-hub/issues/16690)), and deprioritize enabling flashblocks on Sunnyside in favor of stabilizing them on OP Labs Sepolia first ([#16688](https://github.com/ethereum-optimism/community-hub/issues/16688)).\n    *   **Test Suite Improvements:** A significant enhancement was made to the acceptance test suite with the successful porting of `TestChainFork` to devstack ([#413](https://github.com/ethereum-optimism/community-hub/issues/413)).\n    *   **Stability & Maintenance:** A large number of older issues were closed, including those related to sequencer halts on temporary errors ([#12240](https://github.com/ethereum-optimism/community-hub/issues/12240)), recovery from sequence window expiration ([#11228](https://github.com/ethereum-optimism/community-hub/issues/11228)), and node startup problems ([#15411](https://github.com/ethereum-optimism/community-hub/issues/15411)). An issue regarding a deprecated NPM package was also closed ([#13459](https://github.com/ethereum-optimism/community-hub/issues/13459)).\n    *   **Code Refinement:** An issue noting duplicate code in `op-batcher` was closed, flagging it for potential future cleanup ([#16677](https://github.com/ethereum-optimism/community-hub/issues/16677)).\n\n*   **New & Active Issues:**\n    *   **Block Explorer Migration:** A new issue was opened to track the migration of all OP Mainnet and OP Sepolia references from Etherscan to Blockscout ([#1169](https://github.com/ethereum-optimism/community-hub/issues/1169)). A related discussion ([#1696](https://github.com/ethereum-optimism/community-hub/issues/1696)) indicates a pull request is already approved and awaiting merge.\n    *   **Flaky Test Investigation:** The most critical active issue remains the flaky inclusion of invalid interop transactions in the txpool ([#635](https://github.com/ethereum-optimism/community-hub/issues/635)). Despite detailed logs and artifacts, investigators are struggling to consistently reproduce how an invalid transaction bypasses the ingress filter, representing a potential blocker for test reliability.\n    *   **Test Porting Progress:** Work to port `TestPectra` to devstack ([#416](https://github.com/ethereum-optimism/community-hub/issues/416)) is nearly complete, with an implementation PR identified.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted focused collaboration among team members to resolve technical challenges and improve project hygiene. The investigation into the flaky txpool test ([#635](https://github.com/ethereum-optimism/community-hub/issues/635)) shows active teamwork between @pcw109550, who provided detailed diagnostics, and @axelKingsley, who is leading the investigation. Similarly, the Blockscout migration effort ([#1696](https://github.com/ethereum-optimism/community-hub/issues/1696)) involved coordination between @krofax, @fainashalts, and @bradleycamacho. The concerted effort to close a large number of stale issues by maintainers like `mslipper` and `geoknee` demonstrates a strong commitment to maintaining a clean and actionable issue tracker.", "2025-09-04T03:35:38.989Z"]
["ethereum-optimism/docs_week_2025-07-13", "ethereum-optimism/docs", "week", "2025-07-13", "# ethereum-optimism/docs Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing documentation quality and advancing the project's testing capabilities. A significant undertaking was the systematic replacement of Etherscan links with Blockscout URLs across the documentation, ensuring consistency for users of OP Mainnet and OP Sepolia. Key documentation was also added for node operators, and several long-standing issues concerning sequencer stability were closed. Concurrently, important discussions progressed on improving test infrastructure, including a new initiative to align the local testnet topology with the production environment for more realistic E2E testing.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on documentation consistency, accuracy, and providing critical information for node operators.\n\n- **Standardization of Explorer Links**\n  A major effort was completed to standardize block explorer links throughout the documentation ([#1693](https://github.com/ethereum-optimism/docs/pull/1693)). This involved replacing all Etherscan references with Blockscout for OP Mainnet and OP Sepolia, improving consistency and user experience across pages related to app development, the Superchain, and the OP Stack.\n\n- **Node Operator and Contract Upgrade Documentation**\n  The documentation was updated to include details on the `p2p.sync.onlyreqtostatic` flag, a new configuration for node operators to restrict syncing to static peers ([#1688](https://github.com/ethereum-optimism/docs/pull/1688)). Additionally, a minor but important fix was made to the `deploy_config.json` in the contract upgrade guide ([#1692](https://github.com/ethereum-optimism/docs/pull/1692)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved closing out a batch of older issues and opening new ones focused on improving test environment parity.\n\n- **Closed Issues:**\n  - **Sequencer Stability & Node Operations:** Several older issues related to sequencer stability, including recovery from sequence window expiration ([#11228](https://github.com/ethereum-optimism/docs/issues/11228)) and halting from temporary errors ([#12240](https://github.com/ethereum-optimism/docs/issues/12240)), were closed as resolved or no longer relevant. An issue regarding a deprecated NPM package ([#13459](https://github.com/ethereum-optimism/docs/issues/13459)) and a resolved node startup problem ([#15411](https://github.com/ethereum-optimism/docs/issues/15411)) were also closed.\n  - **Test Resolution:** An issue causing interop acceptance test failures was resolved ([#16731](https://github.com/ethereum-optimism/docs/issues/16731)), and another related to basic interop test functionality was transferred to the Protocol team for resolution ([#298](https://github.com/ethereum-optimism/docs/issues/298)).\n\n- **New & Active Issues:**\n  - **Test Environment Parity:** A key new issue ([#16746](https://github.com/ethereum-optimism/docs/issues/16746)) was opened to address discrepancies between the local Kurtosis interop devnet and the production environment. The goal is to make the acceptance test topology more realistic by adding `proxyd` and `verifier` nodes and correctly configuring the sequencer, which is currently causing test failures.\n  - **Advanced Test Strategies:** Discussions continued on several fronts to enhance testing. This includes designing session management for the `op-sync-tester` service ([#16452](https://github.com/ethereum-optimism/docs/issues/16452)) and defining a test plan for invalid interop transaction re-injection to ensure network resilience ([#16656](https://github.com/ethereum-optimism/docs/issues/16656)).\n\n## \ud83d\udcac Community & Collaboration\nThis week saw active collaboration on complex technical challenges, particularly around testing and validation. Discussions on issues like the `op-sync-tester` ([#16452](https://github.com/ethereum-optimism/docs/issues/16452)) and interop transaction testing ([#16656](https://github.com/ethereum-optimism/docs/issues/16656)) involved detailed proposals and feedback from contributors like @protolambda and @pcw109550. The acknowledgment of a code duplication issue by @geoknee and the invitation for a community PR ([#16677](https://github.com/ethereum-optimism/docs/issues/16677)) highlights a welcoming environment for contributions. Furthermore, the handoff of an issue to the Protocol team ([#298](https://github.com/ethereum-optimism/docs/issues/298)) demonstrates effective cross-team coordination.", "2025-09-04T03:35:47.785Z"]
["ethereum-optimism/ecosystem_week_2025-07-13", "ethereum-optimism/ecosystem", "week", "2025-07-13", "# ethereum-optimism/ecosystem Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by the rapid incubation of a new \"verbs\" proof-of-concept SDK, which progressed from initial setup to include wallet integration, a user interface, and querying capabilities. Significant strides were also made in enhancing infrastructure robustness, evidenced by the closure of several long-standing issues related to sequencer stability and error recovery. Concurrently, the team advanced support for sponsored messages and engaged in critical discussions around improving interop testing to better mirror production environments, ensuring the continued security and reliability of the OP Stack.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on building out new developer-focused tooling and enhancing core functionalities like sponsored message relaying.\n\n- **\"Verbs\" Project Incubation:** A new proof-of-concept project, \"verbs,\" saw rapid development. The week began with the initial SDK setup ([#901]) and quickly expanded to include comprehensive wallet integration with Privy ([#908]). To support development, a dedicated Vite-based UI was created ([#911]), and the service was enhanced with an endpoint to query all created wallets ([#914]). Towards the end of the week, work began to migrate the entire `verbs` project into its own standalone repository ([#918]).\n\n- **Sponsored Message Support:** The ecosystem's messaging capabilities were enhanced to support sponsored messages. The API was updated to allow fetching these messages via the `/messages/pending` endpoint ([#899]), and the `autorelayer-interop` was upgraded to relay them based on a new configuration setting ([#900]).\n\n- **Bug Fixes and Maintenance:** A critical bug was fixed in the relayer where `BigInt` values were being incorrectly serialized as numbers; they are now correctly handled as strings ([#902]). Routine package versioning was also performed for `ponder-interop` and `autorelayer-interop` ([#903], [#904], [#909]).\n\n## \ud83d\udc1b Issues & Triage\nThe week involved significant issue triage, closing out old infrastructure problems and opening new ones to guide the development of the \"verbs\" project and other tooling improvements.\n\n- **Closed Issues:**\n    - **Infrastructure Stability:** Several long-standing, critical issues concerning sequencer stability were closed, including recovery from sequence window expiration ([#11228]) and sequencer halting on temporary L1 errors ([#12240]), signaling major improvements in infrastructure resilience.\n    - **\"Verbs\" Project Milestones:** Issues related to the initial setup of the `verbs` package ([#905]), wallet integration ([#906]), and the creation of a demo UI ([#910]) were all closed, marking swift progress.\n    - **Test Porting & Cleanup:** Progress was made on acceptance tests, with the closure of issues for porting `TestChainFork` ([#413]) and `TestERC20Bridge` ([#415]). An issue identifying duplicate code in `op-batcher` was also resolved ([#16677]).\n    - **Configuration Decisions:** Discussions concluded on builder deployment strategies, deciding to forgo NVMe nodes for now and keep flashblocks components within the main sequencer namespace ([#16689], [#16690]).\n\n- **New & Active Issues:**\n    - **\"Verbs\" Next Steps:** A clear roadmap for the `verbs` project was laid out through new issues, including implementing a \"lend\" verb ([#915]), setting up hosting for the UI and service ([#916]), and migrating the project to a standalone repository ([#918]).\n    - **Interop Testing Focus:** Discussions on active issues highlighted a focus on improving interop test coverage. Key topics included enhancing the `op-sync-tester` with better session management ([#16452]), designing an E2E test for transaction reinjection during reorgs ([#16656]), and ensuring the test topology for interop devnets accurately reflects production environments ([#16746]).\n    - **Block Explorer Migration:** A new initiative was created to track the migration from Etherscan to Blockscout across the repository ([#917]).\n    - **Ongoing Bug Investigation:** The team continues to investigate an intermittent bug where invalid interop transactions are conditionally included in the `txpool` ([#635]), with detailed reproduction steps provided to aid debugging.\n\n## \ud83d\udcac Community & Collaboration\nThis week showcased strong collaboration on both new initiatives and long-term stability efforts. The rapid development of the \"verbs\" project suggests a focused and efficient effort by the core team.\n\nDiscussions on active issues revealed deep technical engagement. For instance, @protolambda and @pcw109550 held a detailed debate on the optimal design for session management in the `op-sync-tester` ([#16452]). Similarly, @maurelian facilitated a discussion with auditors regarding contract verification redundancy ([#16653]), demonstrating a commitment to security and best practices. The closure of several very old infrastructure issues by `mslipper` indicates a concerted effort to triage the backlog and solidify the stability of the core protocol.", "2025-09-04T03:35:55.330Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-07-13", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-07-13", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on maintenance and planning rather than new feature deployment. The primary focus was on issue backlog management, with several long-standing issues related to sequencer stability and node operations being closed. A significant new initiative was proposed to migrate block explorer references from Etherscan to Blockscout for OP Mainnet and OP Sepolia. While no code was merged, a new pull request was opened to add DGOLD tokens, indicating ongoing token additions.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged during the reporting period. However, work was initiated on a new token addition:\n\n*   **New Token Proposal:** A pull request ([#1174](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1174)) was opened to add DGOLD tokens to the project.\n\n## \ud83d\udc1b Issues & Triage\nIssue management focused on cleaning up the backlog and initiating a key infrastructure migration.\n\n*   **Closed Issues:**\n    *   **Sequencer and Node Stability:** A number of older issues concerning sequencer and node health were closed, including recovery from a sequence window expiration ([#11228](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/11228)), sequencer halting ([#12240](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/12240)), and node startup problems ([#15411](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15411)). These closures suggest the issues are either resolved or no longer considered relevant.\n    *   **Dependency and Test Management:** An issue regarding an outdated NPM package ([#13459](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/13459)) was closed with the clarification that NPM packages are no longer being updated. A test porting task ([#413](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/413)) was also closed, as its implementation was completed in a separate pull request.\n\n*   **New & Active Issues:**\n    *   **Block Explorer Migration:** A new issue ([#1175](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1175)) was opened to track the migration from Etherscan to Blockscout for OP Mainnet and OP Sepolia. Active discussion on a related issue ([#1696](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1696)) points to a pull request in the `docs` repository that is awaiting review, indicating this effort is underway.\n    *   **Test Porting:** An update on issue [#416](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/416) confirmed that the porting of `TestPectra` to devstack has been implemented in a pull request within the main `optimism` repository.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was characterized by cross-repository coordination. The discussions and updates around the Blockscout migration ([#1696](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1696)) and test porting efforts ([#416](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/416)) highlight that this repository is used to track and coordinate work that spans the broader Optimism ecosystem, including the `docs` and `optimism` repositories.", "2025-09-04T03:35:55.692Z"]
["ethereum-optimism/op-analytics_week_2025-07-13", "ethereum-optimism/op-analytics", "week", "2025-07-13", "# ethereum-optimism/op-analytics Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was defined by a major push to expand and fortify the Superchain data analytics pipeline. Key achievements include the integration of a new platform metrics pipeline, the addition of Celo chain support, and the inclusion of Ethereum data via Goldsky. While expanding data sources, the team also focused on quality, implementing fixes for external API changes from L2Beat and Dune and introducing a new manual mapping system for chain metadata. These advancements were temporarily balanced by the need to disable block batch processing for Ethereum and Celo to investigate ingestion issues, highlighting a focus on data integrity over raw speed.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on enhancing the breadth, quality, and reliability of data ingestion for Superchain analytics.\n\n**Data Pipeline Expansion & Integration**\nThe project's data coverage was significantly broadened by integrating new chains and metrics.\n- A new pipeline was established to pull platform metrics into the BigQuery database ([#1616](https://github.com/ethereum-optimism/op-analytics/pull/1616)), and this job was subsequently scheduled for regular execution ([#1693](https://github.com/ethereum-optimism/op-analytics/pull/1693)).\n- Support was added for the Celo chain, including backfilling capabilities ([#1694](https://github.com/ethereum-optimism/op-analytics/pull/1694)).\n- Ethereum was added to the Goldsky data ingestion process, further expanding the scope of Superchain analytics ([#1696](https://github.com/ethereum-optimism/op-analytics/pull/1696)).\n\n**Data Quality and Formatting Fixes**\nSeveral updates were merged to improve data accuracy and consistency.\n- A critical fix was implemented to correct the `provider` field mapping for BigQuery insertions ([#1691](https://github.com/ethereum-optimism/op-analytics/pull/1691)).\n- Adjustments were made to handle API changes from L2Beat and Dune, ensuring continued data accuracy ([#1685](https://github.com/ethereum-optimism/op-analytics/pull/1685), [#1688](https://github.com/ethereum-optimism/op-analytics/pull/1688)).\n- A new configuration-driven manual mapping system was introduced to improve chain metadata transformations ([#1682](https://github.com/ethereum-optimism/op-analytics/pull/1682)).\n- Data writes were aligned with current schemas by converting lists to comma-separated values ([#1686](https://github.com/ethereum-optimism/op-analytics/pull/1686)).\n\n**Pipeline Maintenance and Adjustments**\nTo ensure stability during the expansion, proactive maintenance was performed.\n- Block batch processing was temporarily turned off for Ethereum ([#1699](https://github.com/ethereum-optimism/op-analytics/pull/1699)) and Celo ([#1698](https://github.com/ethereum-optimism/op-analytics/pull/1698)) to address non-standard chain behavior and investigate ingestion processes.\n- Multiple version bumps were made to support Dagster deployments ([#1687](https://github.com/ethereum-optimism/op-analytics/pull/1687), [#1689](https://github.com/ethereum-optimism/op-analytics/pull/1689), [#1690](https://github.com/ethereum-optimism/op", "2025-09-04T03:36:15.631Z"]
["ethereum-optimism/op-geth_week_2025-07-13", "ethereum-optimism/op-geth", "week", "2025-07-13", "# ethereum-optimism/op-geth Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused on enhancing the robustness and observability of the system, particularly around interop transactions. Key progress was made by implementing a failsafe to reject interop transactions during supervisor failures and by improving tracing to expose Optimism-specific fee data. Alongside these targeted improvements, the team undertook a significant housekeeping effort, closing numerous long-standing issues related to sequencer stability, deployment strategies, and dependencies. While progress was steady, a persistent and hard-to-reproduce bug involving the conditional inclusion of invalid interop transactions in the mempool remains a key area of active investigation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving interop transaction handling and providing better debugging tools.\n\n- **Enhanced Interop Transaction Resilience:** To improve system stability, the miner and transaction pool were updated to detect supervisor failsafe states. This change ensures that interop transactions are rejected if the failsafe is active, preventing potential issues from propagating through the system ([#636](https://github.com/ethereum-optimism/op-geth/pull/636)).\n\n- **Improved Tracing for Optimism Fees:** Prestate tracing functionality was enhanced to display the `OptimismBaseFeeRecipient`. This provides developers with more comprehensive debugging information for Optimism-specific transactions and fee mechanisms ([#407](https://github.com/ethereum-optimism/op-geth/pull/407)).\n\n- **Work in Progress:** Several new pull requests were opened, signaling upcoming improvements. These include a proposal to refine fee estimation in the Gas Price Oracle by adding a block size capacity check ([#645](https://github.com/ethereum-optimism/op-geth/pull/645)), along with minor refactoring efforts to improve code quality ([#643](https://github.com/ethereum-optimism/op-geth/pull/643), [#644](https://github.com/ethereum-optimism/op-geth/pull/644)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a significant amount of activity in issue management, with a focus on closing outdated issues and addressing complex, active bugs.\n\n- **Closed Issues:**\n    - **Sequencer Stability & Housekeeping:** A number of historical issues concerning sequencer recovery from window expiration ([#11228](https://github.com/ethereum-optimism/op-geth/issues/11228]) and temporary halts ([#12240](https://github.com/ethereum-optimism/op-geth/issues/12240)) were closed as no longer relevant. An issue regarding an outdated NPM dependency was also closed, as the project no longer updates these packages ([#13459](https://github.com/ethereum-optimism/op-geth/issues/13459)).\n    - **Deployment & Testing:** Discussions on flashblocks builder deployment concluded with a decision to integrate components into the existing sequencer namespace rather than creating new infrastructure ([#16689](https://github.com/ethereum-optimism/op-geth/issues/16689), [#16690](https://github.com/ethereum-optimism/op-geth/issues/16690)). Issues for porting `TestERC20Bridge` ([#415](https://github.com/ethereum-optimism/op-geth/issues/415]) and `TestChainFork` ([#413](https://github.com/ethereum-optimism/op-geth/issues/413]) to devstack were also closed as completed.\n\n- **New & Active Issues:**\n    - **Key Challenge:** A primary focus is the investigation into a flaky CI test where an invalid interop transaction is conditionally included in the mempool ([#635](https://github.com/ethereum-optimism/op-geth/issues/635)). The bug has proven difficult to reproduce, and efforts are ongoing to understand how the invalid transaction bypasses the ingress filter.\n    - **Design & Planning:** Active discussions are underway for the design of a `sync-tester` service for mock EL sync testing ([#16452](https://github.com/ethereum-optimism/op-geth/issues/16452)) and a testing strategy for invalid interop transaction reinjection ([#16656](https://github.com/ethereum-optimism/op-geth/issues/16656)).\n    - **Strategic Deprioritization:** The team has decided to deprioritize enabling flashblocks on Sunnyside sequencers to first ensure stability on OP Labs Sepolia infrastructure ([#16688](https://github.com/ethereum-optimism/op-geth/issues/16688)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in design discussions and issue resolution throughout the week.\n- The design for a new `sync-tester` service saw active debate between contributors @protolambda and @pcw109550, who refined the proposed architecture ([#16452](https://github.com/ethereum-optimism/op-geth/issues/16452)).\n- A discussion around the `VerifyOPCM` script involved feedback from auditors, highlighting collaboration beyond the core team ([#16653](https://github.com/ethereum-optimism/op-geth/issues/16653)).\n- Community engagement was also visible as contributor @JoshdfG expressed interest in taking on the task of adding a spelling linter to the project's CI workflow ([#680](https://github.com/ethereum-optimism/op-geth/issues/680)).", "2025-09-04T03:36:21.962Z"]
["ethereum-optimism/specs_week_2025-07-13", "ethereum-optimism/specs", "week", "2025-07-13", "# ethereum-optimism/specs Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was centered on planning, discussion, and issue triage rather than direct code implementation. Significant progress was made in architecting future testing infrastructure, with active discussions on the design of an `op-sync-tester` service and strategies for E2E testing of interop transaction reorgs. The team also engaged in important housekeeping by closing several long-standing issues related to sequencer stability and node setup. While no new features were merged, these foundational discussions and cleanup efforts pave the way for future development and enhance the overall stability and testability of the protocol.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no major features or bug fixes were merged into the `specs` repository this week, a new pull request was opened to improve code quality.\n\n*   **Tooling and Linting:** A pull request ([#738](https://github.com/ethereum-optimism/specs/pull/738)) was opened to introduce a spelling lint using `codespell`, aiming to improve the quality and consistency of documentation and code comments.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a significant amount of activity in issue management, with a focus on closing stale issues and advancing discussions on critical testing and protocol design topics.\n\n*   **Closed Issues:**\n    *   **Housekeeping & Stability:** Several older issues were closed to clean up the tracker. This included two related to sequencer stability and error recovery ([#11228](https://github.com/ethereum-optimism/specs/issues/11228), [#12240](https://github.com/ethereum-optimism/specs/issues/12240)), one for an outdated NPM package that is no longer maintained ([#13459](https://github.com/ethereum-optimism/specs/issues/13459)), and a node startup issue assumed to be resolved ([#15411](https://github.com/ethereum-optimism/specs/issues/15411)).\n    *   **Resolved Bugs & Test Porting:** An issue concerning nonce errors during transaction approvals was resolved ([#1106](https://github.com/ethereum-optimism/specs/issues/1106]). Progress was also noted on porting `TestERC20Bridge` to devstack, with the closure of its tracking issue ([#415](https://github.com/ethereum-optimism/specs/issues/415)).\n\n*   **New & Active Issues:**\n    No new issues were opened this week, but several active discussions signal key areas of future work:\n    *   **Testing Infrastructure:** There were detailed architectural discussions around the `op-sync-tester` service, focusing on session management strategies ([#16452](https://github.com/ethereum-optimism/specs/issues/16452)). Planning also continued for an E2E test to handle invalid interop transaction reinjection after a block reorg ([#16656](https://github.com/ethereum-optimism/specs/issues/16656)).\n    *   **Interop & Security:** The need for stress testing the interop expiry window was revisited ([#15285](https://github.com/ethereum-optimism/specs/issues/15285)). Additionally, a discussion on deployment verification scripts ([#16653](https://github.com/ethereum-optimism/specs/issues/16653)) highlighted the value of redundancy in ensuring deployment integrity.\n    *   **Ecosystem & Code Health:** Work is underway to migrate from Etherscan to Blockscout across repositories ([#1696](https://github.com/ethereum-optimism/specs/issues/1696]), and progress was reported on porting `TestPectra` to devstack ([#416](https://github.com/ethereum-optimism/specs/issues/416)). A potential code duplication in `op-batcher` was also identified for future refactoring ([#16677](https://github.com/ethereum-optimism/specs/issues/16677)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident through in-depth technical discussions on GitHub issues.\n*   Key contributors like `protolambda`, `pcw109550`, `maurelian`, `pauldowman`, and `mds1` were actively involved in shaping the design of future testing tools and security measures.\n*   The discussion around the `op-sync-tester` ([#16452](https://github.com/ethereum-optimism/specs/issues/16452)) showcased a collaborative design process, with different approaches to session management being proposed and debated.\n*   Community engagement was also visible, with contributor `JoshdfG` taking initiative on a spelling lint issue ([#680](https://github.com/ethereum-optimism/specs/issues/680)), which was quickly followed by a pull request to implement the feature.", "2025-09-04T03:36:24.750Z"]
["ethereum-optimism/superchain-registry_week_2025-07-13", "ethereum-optimism/superchain-registry", "week", "2025-07-13", "# ethereum-optimism/superchain-registry Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on critical protocol updates and infrastructure modernization. A key achievement was the integration of the governance-approved prestate for Upgrade 16, ensuring the registry is aligned with the latest protocol specifications. Concurrently, a significant migration was completed, replacing all Etherscan references with Blockscout to standardize the project's block explorer tooling. The team also made substantial progress in improving operational stability by closing a backlog of issues related to sequencer behavior and acceptance testing.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on preparing for a major protocol upgrade and standardizing core dependencies.\n\n- **Protocol Upgrade Preparation:** The absolute prestate for the upcoming Upgrade 16 was added to the `standard-prestates.toml` file. This crucial update ([#1084](https://github.com/ethereum-optimism/superchain-registry/pull/1084)) ensures the Superchain Registry accurately reflects the latest governance-approved configurations for the network.\n\n- **Block Explorer Migration:** A repository-wide migration was executed to replace all Etherscan dependencies and references with Blockscout ([#1085](https://github.com/ethereum-optimism/superchain-registry/pull/1085)). This effort standardizes the project's tooling for OP Mainnet and OP Sepolia, impacting numerous configuration files and documentation.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a significant cleanup of outstanding issues related to sequencer stability and testing, alongside the identification of new areas for test environment improvement.\n\n- **Closed Issues:**\n    - **Sequencer Stability:** Several critical issues concerning sequencer operations were resolved, including recovery from sequence window expiration ([#11228](https://github.com/ethereum-optimism/superchain-registry/issues/11228)) and halting on temporary errors ([#12240](https://github.com/ethereum-optimism/superchain-registry/issues/12240)), indicating improved operational robustness.\n    - **Acceptance Testing:** Progress was made in stabilizing the test suite with the closure of issues related to porting `TestChainFork` to devstack ([#413](https://github.com/ethereum-optimism/superchain-registry/issues/413)), failures caused by an `op-geth` version bump ([#16731](https://github.com/ethereum-optimism/superchain-registry/issues/16731)), and an interop network test ([#298](https://github.com/ethereum-optimism/superchain-registry/issues/298)).\n    - **Developer Tooling:** An issue regarding an outdated NPM package was closed with a note that the packages are no longer updated ([#13459](https://github.com/ethereum-optimism/superchain-registry/issues/13459)), and an `op-node` startup problem was closed as resolved ([#15411](https://github.com/ethereum-optimism/superchain-registry/issues/15411)).\n\n- **New & Active Issues:**\n    - **Test Environment Alignment:** A new issue ([#16746](https://github.com/ethereum-optimism/superchain-registry/issues/16746)) was opened to address a discrepancy between the local acceptance test topology and the production environment, highlighting an area for future improvement in test accuracy.\n    - **Ongoing Test Porting:** Discussion on issue [#416](https://github.com/ethereum-optimism/superchain-registry/issues/416) confirmed that the port of `TestPectra` to devstack has been implemented, marking continued progress in modernizing the testing framework.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the coordinated effort to migrate from Etherscan to Blockscout, which involved discussion and approvals from multiple team members across issue [#1696](https://github.com/ethereum-optimism/superchain-registry/issues/1696) and the subsequent pull request. Furthermore, the resolution of testing issues pointed to cross-team and cross-repository work, with one issue ([#298](https://github.com/ethereum-optimism/superchain-registry/issues/298)) being handed off to the Protocol team and another ([#16731](https://github.com/ethereum-optimism/superchain-registry/issues/16731)) being addressed by a pull request in the main `optimism` repository.", "2025-09-04T03:36:35.476Z"]
["ethereum-optimism/design-docs_week_2025-07-20", "ethereum-optimism/design-docs", "week", "2025-07-20", "# ethereum-optimism/design-docs Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was centered on the design phase for enhancing the operational stability of the Superchain. All efforts were concentrated on a single, detailed discussion to define a comprehensive monitoring and alerting strategy for flashblocks. This foundational design work aims to improve reliability by establishing clear metrics and service-level agreements (SLAs) for critical components like peer connectivity, block progression, and transaction processing.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged this week, as the focus was on design and planning rather than implementation. The work consisted entirely of discussions to scope out future development.\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed this week, with all activity focused on a single ongoing discussion.\n\n- **New & Active Issues:** The primary focus was the ongoing discussion in **[#16388](https://github.com/ethereum-optimism/design-docs/issues/16388) - Flashblocks Monitoring and Alerting Improvements**. Key specifications were outlined for a new monitoring framework, including:\n    - **Peer Count:** A minimum threshold of 4 peers.\n    - **Block Progression:** Defining SLAs for block progression and divergence.\n    - **Pending Transactions:** Alerting when pending transactions exceed a threshold (approx. 60).\n    - **Flashblocks SLA:** A new SLA-like metric using `reth_op_rbuilder_total_block_built_duration`.\n    - **Component-Specific Monitoring:** Defining metrics for `flashblocks-websocket-proxy`, `flashblocks-RPC Node-Reth`, and `Op-Node-Rbuilder` to ensure end-to-end observability.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was highly focused, centered on the flashblocks monitoring discussion in issue [#16388](https://github.com/ethereum-optimism/design-docs/issues/16388). A dedicated call between team members yashvardhan-kukreja and Jacob was noted, indicating direct and detailed planning. The discussion also linked to an implementation pull request in the `k8s` repository ([#7162](https://github.com/ethereum-optimism/k8s/pull/7162)), highlighting cross-repository coordination where design decisions in this repo are directly informing infrastructure work elsewhere.", "2025-09-04T03:36:36.210Z"]
["ethereum-optimism/superchain-ops_week_2025-07-13", "ethereum-optimism/superchain-ops", "week", "2025-07-13", "# ethereum-optimism/superchain-ops Weekly Report (Jul 13 - 19, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts were heavily focused on enhancing governance procedures and testing infrastructure. Significant progress was made in integrating Security Council Rehearsals into the new `superchain-ops` system, complete with new templates for signer removal and nested upgrades. The team also streamlined CI configurations and resolved several long-standing issues related to sequencer stability and recovery. While key infrastructure decisions were made regarding builder deployments, active discussions continue on improving test environments to better mirror production topology and on resolving a persistent issue with invalid interop transactions in the txpool.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving governance operations, validation, and system performance.\n\n-   **Security Council Rehearsal Integration:** A major effort was made to integrate Security Council Rehearsals into the `superchain-ops` improvements system. This included adding initial rehearsal scripts and documentation ([#1121](https://github.com/ethereum-optimism/superchain-ops/pull/1121)), and later enhancing the process with new templates for GnosisSafe signer removal and nested upgrades ([#1128](https://github.com/ethereum-optimism/superchain-ops/pull/1128), [#1132](https://github.com/ethereum-optimism/superchain-ops/pull/1132)).\n\n-   **CI and Configuration Streamlining:** To support the new rehearsal system, old CI configurations were removed in favor of a unified `just simulate-all-templates` job, simplifying the CI pipeline ([#1130](https://github.com/ethereum-optimism/superchain-ops/pull/1130)).\n\n-   **Multisig and Validation Improvements:** The `MultisigTask` contract was refactored for better code organization and readability ([#1090](https://github.com/ethereum-optimism/superchain-ops/pull/1090), [#1129](https://github.com/ethereum-optimism/superchain-ops/pull/1129)). Several validation files were updated to correct addresses and nonces ([#865](https://github.com/ethereum-optimism/superchain-ops/pull/865)), add missing `approvedHashes` for DPM/DGM operations ([#1135](https://github.com/ethereum-optimism/superchain-ops/pull/1135)), and update READMEs for the U16 upgrade ([#1134](https://github.com/ethereum-optimism/superchain-ops/pull/1134)).\n\n-   **Performance Enhancements:** A minor performance improvement was merged for state diff decoding by optimizing `AccountAccessParser.sol` to avoid redundant function calls ([#1138](https://github.com/ethereum-optimism/superchain-ops/pull/1138)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of numerous legacy issues, particularly around sequencer stability, while new discussions focused on infrastructure migration and test environment parity.\n\n-   **Closed Issues:**\n    -   **Sequencer Stability:** A significant cleanup occurred with the closure of several long-standing issues related to sequencer recovery from window expiration ([#11228](https://github.com/ethereum-optimism/superchain-ops/issues/11228]), halting on temporary errors ([#12240](https://github.com/ethereum-optimism/superchain-ops/issues/12240]), and node startup failures ([#15411](https://github.com/ethereum-optimism/superchain-ops/issues/15411)).\n    -   **Testing:** Issues for porting `TestChainFork` ([#413](https://github.com/ethereum-optimism/superchain-ops/issues/413)) and a general interop acceptance test ([#298](https://github.com/ethereum-optimism/superchain-ops/issues/298)) were closed. An issue for failing acceptance tests after an `op-geth` bump was also resolved by temporarily skipping the problematic tests ([#16731](https://github.com/ethereum-optimism/superchain-ops/issues/16731)).\n    -   **Infrastructure & Code:** Decisions were finalized to skip NVMe node deployment for `op-rbuilders` for now ([#16689](https://github.com/ethereum-optimism/superchain-ops/issues/16689)). An issue regarding code duplication in `op-batcher` was also swiftly identified and closed ([#16677](https://github.com/ethereum-optimism/superchain-ops/issues/16677)).\n\n-   **New & Active Issues:**\n    -   **Block Explorer Migration:** A new initiative was created to migrate from Etherscan to Blockscout for OP Mainnet and OP Sepolia L2 explorers ([#1131](https://github.com/ethereum-optimism/superchain-ops/issues/1131)).\n    -   **Test Topology Alignment:** An important discussion is underway to align the Kurtosis interop devnet with the production topology by adding `proxyd` and verifier nodes, aiming to increase test reliability ([#16746](https://github.com/ethereum-optimism/superchain-ops/issues/16746)).\n    -   **Ongoing Investigations:** Discussions continue on the design of the `op-sync-tester` ([#16452](https://github.com/ethereum-optimism/superchain-ops/issues/16452)) and the challenging task of identifying why invalid interop transactions are sometimes included in the txpool ([#635](https://github.com/ethereum-optimism/superchain-ops/issues/635)). Enabling flashblocks on Sunnyside sequencers remains blocked pending stabilization on other infrastructure ([#16688](https://github.com/ethereum-optimism/superchain-ops/issues/16688)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted healthy collaboration within the contributor community. The `op-batcher` code duplication issue ([#16677](https://github.com/ethereum-optimism/superchain-ops/issues/16677)) was a great example of community-driven improvement, with @chuwt identifying the problem and offering to submit a fix, which was encouraged by maintainer @geoknee.\n\nFurthermore, active technical discussions on issues like the `op-sync-tester` design ([#16452](https://github.com/ethereum-optimism/superchain-ops/issues/16452)) and interop stress testing ([#15285](https://github.com/ethereum-optimism/superchain-ops/issues/15285)) involved multiple contributors, including @protolambda, @pcw109550, @pauldowman, and @mds1, demonstrating a collaborative approach to solving complex engineering challenges.", "2025-09-04T03:36:37.009Z"]
["ethereum-optimism/community-hub_week_2025-07-20", "ethereum-optimism/community-hub", "week", "2025-07-20", "# ethereum-optimism/community-hub Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on maintenance and incremental progress in key components. Documentation was updated to remove deprecated trackers and fix links. Significant headway was made on `flashblocks` deployment, as evidenced by the closure of several related issues. Additionally, a long-standing issue concerning the `op-supervisor` reset target was resolved, with its primary action items completed in a related pull request.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on documentation cleanup and resolving underlying issues in core components.\n\n- **Documentation Maintenance:**\n  Efforts were made to keep the project's documentation current. This included removing a deprecated dashboard tracker ([#1170](https://github.com/ethereum-optimism/community-hub/pull/1170)) and updating a link related to token claiming procedures ([#1171](https://github.com/ethereum-optimism/community-hub/pull/1171)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week saw the resolution of several items related to `flashblocks` and the `op-supervisor`.\n\n- **Closed Issues:**\n    - **`op-supervisor` Improvements:** Issue [#16314](https://github.com/ethereum-optimism/community-hub/issues/16314), which aimed to improve how the supervisor handles reset unsafe targets, was closed on July 25th. The resolution came after its actionable items were addressed in `optimism/pull/16557`, with further changes anticipated in an upcoming refactor.\n    - **`flashblocks` Deployment:** Progress was made on the `flashblocks` front with the closure of two issues. One concerning the configuration of `flashblocks-rpc` ([#16544](https://github.com/ethereum-optimism/community-hub/issues/16544)) was closed in favor of a new, more focused issue. Another related to the enablement of `flashblocks` on `op-sepolia` ([#16496](https://github.com/ethereum-optimism/community-hub/issues/16496)) was also closed, marking a step forward.\n\n- **New & Active Issues:**\n  No new issues were opened based on the provided activity reports for the week.\n\n## \ud83d\udcac Community & Collaboration\nThe provided reports indicate focused, component-specific work. The resolution of issue [#16314](https://github.com/ethereum-optimism/community-hub/issues/16314) through work in a separate `optimism` repository pull request highlights cross-repository coordination to address shared components. No other specific collaborative activities were noted in the reports.", "2025-09-04T03:36:39.229Z"]
["ethereum-optimism/docs_week_2025-07-20", "ethereum-optimism/docs", "week", "2025-07-20", "# ethereum-optimism/docs Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts were highlighted by a major documentation enhancement to integrate Nethermind support, significantly expanding guidance for node operators. Alongside this feature work, the team focused on maintenance and cleanup, resolving several bugs related to image links and display issues. Progress was also made on infrastructure components, with the closure of multiple issues related to flashblocks deployment. The week was characterized by a healthy mix of new feature documentation, routine maintenance, and the resolution of long-standing technical issues.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe week saw one major documentation feature merged, accompanied by several smaller fixes and new work initiated.\n\n- **Nethermind Node Support Documentation**\n  A significant update was merged to incorporate comprehensive documentation for the Nethermind execution client. This involved extensive changes across node operator guides, including architecture, configuration, and management pages, to provide full support for users running Nethermind nodes ([#1615](https://github.com/ethereum-optimism/docs/pull/1615)).\n\n- **Documentation Maintenance and Fixes**\n  Several pull requests were merged to improve the quality and accuracy of the documentation. This included fixing broken image links across multiple pages ([#1694](https://github.com/ethereum-optimism/docs/pull/1694)) and resolving display issues in upgrade notices ([#1699](https://github.com/ethereum-optimism/docs/pull/1699)).\n\n- **New Content and Migrations**\n  Work has begun on improving content management and clarity. A new pull request aims to add timestamps to chain upgrades ([#1697](https://github.com/ethereum-optimism/docs/pull/1697)), while another was opened to handle content migration redirects ([#1700](https://github.com/ethereum-optimism/docs/pull/1700)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on closing out infrastructure-related tasks and older technical discussions, while opening new issues for future audit requirements.\n\n- **Closed Issues:**\n  - **Flashblocks Integration:** Three issues related to the deployment and enablement of flashblocks were closed, marking progress on its integration for op-sepolia ([#16544](https://github.com/ethereum-optimism/docs/issues/16544), [#16496](https://github.com/ethereum-optimism/docs/issues/16496), [#16686](https://github.com/ethereum-optimism/docs/issues/16686)).\n  - **Technical Cleanup:** Two long-standing issues were resolved and closed. One concerned improving the `op-supervisor` reset unsafe target functionality, which was deemed complete given recent changes ([#16314](https://github.com/ethereum-optimism/docs/issues/16314)). The other, related to creating a reusable logging utility, was closed as the desired functionality is already supported in `op-service` ([#15139](https://github.com/ethereum-optimism/docs/issues/15139)).\n  - **Content Migration:** An issue tracking the migration of Etherscan links to Blockscout was closed ([#1696](https://github.com/ethereum-optimism/docs/issues/1696)).\n\n- **New & Active Issues:**\n  - **Audit Preparation:** A new issue was created to track documentation updates required for a 2024 Q4 audit ([#1701](https://github.com/ethereum-optimism/docs/issues/1701)).\n  - **Ongoing Discussions:** An active discussion continues around adding a semgrep rule for function naming conventions, though work appears blocked by a repository configuration ([#15115](https://github.com/ethereum-optimism/docs/issues/15115)). Another discussion on test target setup ([#375](https://github.com/ethereum-optimism/docs/issues/375)) saw updates linking to related work in other repositories.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident through the cross-repository coordination noted in issue [#375](https://github.com/ethereum-optimism/docs/issues/375), which linked to related work in the `optimism` and `infra` repositories. This suggests healthy communication between teams working on different parts of the stack. The closure of older, complex issues like [#16314](https://github.com/ethereum-optimism/docs/issues/16314) and [#15139](https://github.com/ethereum-optimism/docs/issues/15139) after discussion indicates a proactive approach to resolving technical debt and maintaining project health.", "2025-09-04T03:36:46.293Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-07-20", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-07-20", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on expanding the Superchain ecosystem and refining critical operational documentation. A key development was the addition of the QUICK token on the Base chain, broadening asset support within the ecosystem. Concurrently, significant progress was made in finalizing the fault proof incident runbook, with versioning updates to align with specific releases. An important technical discussion around configurable data availability types for interoperability testing was also revisited, ensuring future test coverage remains robust.\n\n## \ud83d\udee0\ufe0f Key Developments\n### Superchain Ecosystem Expansion\n- The range of supported assets on the Superchain was enhanced with the addition of the `$QUICK` token on the Base chain, which included an update to its logo ([#1170](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1170)).\n\n## \ud83d\udc1b Issues & Triage\n### Closed Issues\n- **Fault Proof Runbook Finalized:** A major documentation effort concluded with the closure of the \"Runbook v3 final review\" ([#16651](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16651)). The runbooks were updated to clarify which releases they apply to (v1 for pre-OPCM, v2 for U14 & U15, and v3 for U16+) and are now interlinked for easier navigation.\n\n### New & Active Issues\n- **Data Availability for Interop Testing:** Discussion was renewed on issue [#15406](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15406) after it was reopened following an incorrect automated closure. The issue centers on the need for a batcher that uses blobs for interop fault proof testing. While not considered a blocker for the upcoming RC Beta, it remains an active topic for resolution before older fault proof support is deprecated.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity highlighted the importance of process and oversight, as seen in the manual reopening of an issue ([#15406](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15406)) that was incorrectly closed by automation. This ensures that important technical discussions receive the necessary attention.", "2025-09-04T03:36:56.925Z"]
["ethereum-optimism/infra_week_2025-07-20", "ethereum-optimism/infra", "week", "2025-07-20", "# ethereum-optimism/infra Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the stability and functionality of core infrastructure components. Significant progress was made on the `op-acceptor` testing framework, with the introduction of a new \"gateless\" execution mode and fixes for several long-standing flaky tests, improving CI reliability. The team also advanced the `flashblocks` initiative by completing a key deployment on op-sepolia and refining monitoring strategies. Concurrently, work on the `op-ufm` package improved transaction error handling, and several older technical debt issues were closed, signaling a productive week of both new development and system cleanup.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving the project's testing framework and refining transaction handling logic.\n\n*   **Testing Framework (`op-acceptor`) Enhancements:** A series of updates significantly improved the `op-acceptor` test suite's usability and reliability.\n    *   A new \"gateless\" mode was introduced, allowing the framework to automatically discover and run all tests in a directory, streamlining the execution process ([#428](https://github.com/ethereum-optimism/infra/pull/428)).\n    *   Two separate fixes addressed flaky tests, one resolving a persistent CI failure ([#430](https://github.com/ethereum-optimism/infra/pull/430)) and another correcting improper exit codes for runtime errors ([#431](https://github.com/ethereum-optimism/infra/pull/431)).\n\n*   **Transaction Handling (`op-ufm`) Refinements:** The `op-ufm` package saw iterative improvements to how it manages transaction errors.\n    *   Initially, logging was added to record \"transaction not found\" errors as a preliminary step ([#433](https://github.com/ethereum-optimism/infra/pull/433)).\n    *   This was followed by a functional change to ignore these specific errors, refining the system's behavior ([#437](https://github.com/ethereum-optimism/infra/pull/437)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on resolving long-standing bugs, advancing the `flashblocks` deployment, and clearing out technical debt.\n\n*   **Closed Issues:**\n    *   **Test Reliability:** In line with the development work, two issues related to `op-acceptor` instability were closed: a long-standing flaky test ([#348](https://github.com/ethereum-optimism/infra/issues/348)) and a bug causing incorrect exit codes in CI ([#244](https://github.com/ethereum-optimism/infra/issues/244)).\n    *   **Flashblocks Progress:** The deployment of a `flashblocks-websocket-proxy` on op-sepolia was completed ([#16686](https://github.com/ethereum-optimism/infra/issues/16686)). Strategic issues for enabling flashblocks non-publicly ([#16496](https://github.com/ethereum-optimism/infra/issues/16496)) and configuring a reth-enabled node ([#16544](https://github.com/ethereum-optimism/infra/issues/16544)) were closed in favor of new, more focused tasks.\n    *   **Technical Debt:** Two older issues were resolved: one for improving the supervisor's reset target mechanism ([#16314](https://github.com/ethereum-optimism/infra/issues/16314)) and another for creating a reusable logger utility ([#15139](https://github.com/ethereum-optimism/infra/issues/15139)).\n\n*   **New & Active Issues:**\n    *   **New:** A feature request was opened to allow configurable test skips in `op-acceptor` ([#434](https://github.com/ethereum-optimism/infra/issues/434)), as currently skipped tests are counted as failures.\n    *   **Active:** A detailed discussion is ongoing in [#16388](https://github.com/ethereum-optimism/infra/issues/16388) to define comprehensive monitoring and alerting for the `flashblocks` integration on op-sepolia, outlining specific metrics and SLAs.\n    *   **Blockers:** An attempt to add a `semgrep` rule for function naming conventions ([#15115](https://github.com/ethereum-optimism/infra/issues/15115)) was blocked because GitHub Actions is disabled for the repository, preventing automated assistance.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the focused, iterative improvements made to key components like `op-acceptor` and `op-ufm`. The detailed planning for `flashblocks` monitoring in issue [#16388](https://github.com/ethereum-optimism/infra/issues/16388) highlights deep technical discussion and specification work ahead of implementation. The closure of issue [#16314](https://github.com/ethereum-optimism/infra/issues/16314) after referencing related PRs in the `optimism` repository demonstrates effective cross-repository coordination. Finally, the use of automated tooling like `copilot-swe-agent` on issue [#15115](https://github.com/ethereum-optimism/infra/issues/15115) shows an interest in leveraging modern development aids, even when encountering environmental constraints.", "2025-09-04T03:36:59.145Z"]
["ethereum-optimism/ecosystem_week_2025-07-20", "ethereum-optimism/ecosystem", "week", "2025-07-20", "# ethereum-optimism/ecosystem Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on project refinement and strategic planning rather than new feature development. Significant progress was made in maturing the `verbs` project by preparing it for a standalone deployment, signaling its growing importance. Work also focused on stabilizing Superchain tooling and demos. A key strategic shift was noted in network testing, with the project deprioritizing Kurtosis. Finally, an interaction with an automated agent highlighted an infrastructure blocker, pointing to ongoing efforts to integrate automated tooling into the development workflow.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, or code refactoring merged into the repository during this period. The development focus was on issue management, project planning, and stabilization efforts.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a strong focus on closing out existing issues across several key areas of the ecosystem.\n\n- **Closed Issues:**\n    - **`verbs` Project Maturation:** The `verbs` project moved closer to becoming a standalone tool with the closure of issues for setting up `verbs-ui` hosting ([#916](https://github.com/ethereum-optimism/ecosystem/issues/916)) and migrating the project to its own repository ([#918](https://github.com/ethereum-optimism/ecosystem/issues/918)).\n    - **Superchain Tooling & Demos:** Progress was made in stabilizing Superchain components, marked by the closure of issues related to the Superchain tools RCT Demo ([#864](https://github.com/ethereum-optimism/ecosystem/issues/864)) and the integration of the `interop-alpha` demo app ([#865](https://github.com/ethereum-optimism/ecosystem/issues/865)).\n    - **Testing Strategy Shift:** A strategic decision was made to deprioritize Kurtosis for network testing in favor of Sysgo. This led to the closure of issue [#375](https://github.com/ethereum-optimism/ecosystem/issues/375), which concerned test target setup as an `op-acceptor` concern.\n    - **Infrastructure & Planning:** An infrastructure task to deploy a `flashblocks-websocket-proxy` in op-sepolia ([#16686](https://github.com/ethereum-optimism/ecosystem/issues/16686)) was completed. Additionally, an issue for initial Q4 2024 audit planning ([#1701](https://github.com/ethereum-optimism/ecosystem/issues/1701)) was resolved.\n\n- **New & Active Issues:**\n    - No new issues were opened this week.\n    - A notable active discussion occurred in [#15115](https://github.com/ethereum-optimism/ecosystem/issues/15115), where the `copilot-swe-agent` reported it was blocked from implementing a semgrep rule because GitHub Actions are disabled on the repository. This highlights a potential blocker for automated tooling contributions that needs to be addressed.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in issue management and strategic decision-making. In issue [#375](https://github.com/ethereum-optimism/ecosystem/issues/375), `scharissis` provided important cross-repository context before `teddyknox` made a final decision, demonstrating effective communication and clear ownership. The project is also exploring automated contributions, as seen with the `copilot-swe-agent`'s activity, which provides valuable feedback on the repository's process and infrastructure readiness for such tooling.", "2025-09-04T03:37:02.147Z"]
["ethereum-optimism/op-geth_week_2025-07-20", "ethereum-optimism/op-geth", "week", "2025-07-20", "# ethereum-optimism/op-geth Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused on enhancing Superchain compatibility and performing targeted housekeeping on outstanding issues. A key update was merged to improve stability by skipping the non-standard genesis processing for Celo Mainnet. Concurrently, several issues related to flashblocks enablement and transaction pool cost tracking were closed, clearing the path for more organized future development efforts in these areas.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on refining the node's behavior within the broader Superchain ecosystem.\n\n- **Superchain Configuration Enhancements:** To ensure stability and compatibility, a change was introduced to skip the genesis processing for Celo Mainnet within `op-geth` ([#646](https://github.com/ethereum-optimism/op-geth/pull/646)). This addresses Celo's non-standard genesis block and improves its integration into the Superchain.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved resolving older items and clarifying the path forward for ongoing initiatives. No new issues were opened.\n\n- **Closed Issues:**\n    - **Flashblocks Enablement:** Two issues related to flashblocks were closed to better structure the work. Issue [#16544](https://github.com/ethereum-optimism/op-geth/issues/16544) concerning RPC configuration was superseded by a new issue, while [#16496](https://github.com/ethereum-optimism/op-geth/issues/16496) for Op-Sepolia enablement was closed in favor of a new milestone.\n    - **Transaction Pool:** An issue regarding the periodic update of rollup costs in the transaction pool ([#573](https://github.com/ethereum-optimism/op-geth/issues/573)) was closed, confirming a fix for more accurate cost tracking.\n\n- **New & Active Issues:**\n    - Discussion on the `op-supervisor` reset target ([#16314](https://github.com/ethereum-optimism/op-geth/issues/16314)) concluded that the actionable work is complete for now. The issue is being closed with the understanding that it can be reopened or a new issue created if further work is identified after upcoming refactoring.\n\n## \ud83d\udcac Community & Collaboration\nThe discussion around issue [#16314](https://github.com/ethereum-optimism/op-geth/issues/16314) highlights a pragmatic approach to issue management, with contributors deciding to close the issue while acknowledging that future work might necessitate its reopening. This reflects an efficient and iterative development process.", "2025-09-04T03:37:04.466Z"]
["ethereum-optimism/op-analytics_week_2025-07-20", "ethereum-optimism/op-analytics", "week", "2025-07-20", "# ethereum-optimism/op-analytics Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts were heavily focused on enhancing the reliability and accuracy of the data analytics pipeline. Key activities included immediate fixes to data ingestion, such as temporarily excluding Ethereum from Goldsky to resolve downstream failures, and proactive enhancements like adding a new notebook for DefiLlama backfills. The team also refined core logic by correcting L2 priority fee calculations and updating transaction models. Concurrently, significant progress was made in closing out older issues related to Flashblocks deployment and runbook finalization, clearing the way for future work.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on data pipeline maintenance, bug fixes, and tooling updates.\n\n- **Data Pipeline Integrity and Enhancements:**\n  - To address downstream model failures, Ethereum was temporarily excluded from Goldsky, and schema columns were reordered to ensure data integrity ([#1701](https://github.com/ethereum-optimism/op-analytics/pull/1701), [#1702](https://github.com/ethereum-optimism/op-analytics/pull/1702)).\n  - A new notebook was introduced to support full data backfills from DefiLlama, improving data analysis capabilities ([#1703](https://github.com/ethereum-optimism/op-analytics/pull/1703)). A subsequent bug fix was quickly implemented for this new notebook ([#1705](https://github.com/ethereum-optimism/op-analytics/pull/1705)).\n  - A bug fix was merged to correct discrepancies in L2 priority fee calculations ([#1704](https://github.com/ethereum-optimism/op-analytics/pull/1704)).\n  - Refined transaction models were updated across the codebase ([#1709](https://github.com/ethereum-optimism/op-analytics/pull/1709)).\n\n- **Tooling and Infrastructure:**\n  - The Dagster version was bumped in the project's `Makefile` and Helm chart values, keeping the orchestration tool up to date ([#1708](https://github.com/ethereum-optimism/op-analytics/pull/1708), [#1710](https://github.com/ethereum-optimism/op-analytics/pull/1710)).\n  - Changes were made to CircleCI push configurations affecting metadata utilities and tracking notebooks ([#1707](https://github.com/ethereum-optimism/op-analytics/pull/1707)).\n  - Work began on a new chain metadata aggregator, with the first pull request for data loaders being opened ([#1706](https://github.com/ethereum-optimism/op-analytics/pull/1706)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a productive push to resolve outstanding issues while continuing discussions on key infrastructure needs.\n\n- **Closed Issues:**\n  - **Flashblocks Deployment:** Progress was made on Flashblocks integration, with issues related to enabling it on op-sepolia and configuring nodes being closed in favor of new milestones and tasks ([#16544](https://github.com/ethereum-optimism/op-analytics/issues/16544), [#16496](https://github.com/ethereum-optimism/op-analytics/issues/16496)).\n  - **Runbook Finalization:** The \"Runbook v3 final review\" was completed and the issue closed. The runbooks were renamed to clearly indicate the upgrade versions they cover, improving documentation clarity ([#16651](https://github.com/ethereum-optimism/op-analytics/issues/16651)).\n  - **Node Management:** An issue regarding improvements to `op-supervisor` and `op-node` reset functionality was closed, as most action items were addressed and upcoming refactoring will supersede the remaining points ([#16314](https://github.com/ethereum-optimism/op-analytics/issues/16314)).\n\n- **New & Active Issues:**\n  - No new issues were reported during this period.\n  - The most notable active issue is **\"op-e2e: Configurable DA type for interop SuperSystem\"** ([#15406](https://github.com/ethereum-optimism/op-analytics/issues/15406)). It was briefly closed by automation but immediately reopened, highlighting an ongoing need for a batcher that posts data using blobs for interop testing, a key requirement for future development.\n\n## \ud83d\udcac Community & Collaboration\nThe development activity this week indicates a highly responsive and collaborative environment. The rapid bug fix for the newly introduced DefiLlama notebook ([#1705](https://github.com/ethereum-optimism/op-analytics/pull/1705)) demonstrates a tight feedback loop within the team. Furthermore, active discussions on issues like [#16314](https://github.com/ethereum-optimism/op-analytics/issues/16314) and [#15406](https://github.com/ethereum-optimism/op-analytics/issues/15406) show a commitment to collaborative problem-solving around core infrastructure and testing capabilities. The team also showed vigilance in monitoring project automation, as seen with the quick correction of an incorrectly closed issue.", "2025-09-04T03:37:05.283Z"]
["ethereum-optimism/supersim_week_2025-07-20", "ethereum-optimism/supersim", "week", "2025-07-20", "# ethereum-optimism/supersim Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused on expanding the simulation environment's capabilities by integrating Uniswap V4. This key addition makes UniV4 contracts available within the simulation, enabling more complex and realistic protocol interaction testing. Alongside this feature work, infrastructure was enhanced with the deployment of a `flashblocks-websocket-proxy`. Discussions also continued around improving code quality through automated style enforcement and refining the acceptance testing framework for broader compatibility.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary technical achievement was the integration of Uniswap V4 into the `supersim` environment.\n\n- **UniV4 Integration:** In a significant enhancement to the simulation's scope, UniV4 deployments were added to `supersim`. This work, completed in PR [#397](https://github.com/ethereum-optimism/supersim/pull/397), makes UniV4 available as part of the chain addresses in viem by updating genesis files and contract sources, paving the way for future simulations involving the protocol.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this period involved resolving infrastructure and process-related items, while discussions on active issues point toward future improvements in code quality and testing.\n\n- **Closed Issues:**\n    - **Infrastructure:** A `flashblocks-websocket-proxy` was successfully deployed in the op-sepolia environment to connect with flashblocks-enabled sequencers ([#16686](https://github.com/ethereum-optimism/supersim/issues/16686)).\n    - **Internal Process:** An internal issue related to a Q4 2024 audit was closed, likely for tracking and documentation purposes ([#1701](https://github.com/ethereum-optimism/supersim/issues/1701)).\n\n- **New & Active Issues:**\n    - No new issues were opened.\n    - **Code Style Enforcement:** An ongoing discussion in [#15115](https://github.com/ethereum-optimism/supersim/issues/15115) aims to add a semgrep rule to enforce that private/internal functions begin with an underscore. Progress is currently blocked as the `copilot-swe-agent` reported that GitHub Actions are disabled for the repository.\n    - **Test Framework Improvements:** Issue [#375](https://github.com/ethereum-optimism/supersim/issues/375) continues to explore how to better incorporate test target setup and teardown to improve the compatibility of acceptance tests. Recent comments link to related work in the `optimism` and `infra` repositories, indicating a cross-cutting effort.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident through cross-repository considerations. The discussion on improving acceptance test compatibility ([#375](https://github.com/ethereum-optimism/supersim/issues/375)) included links to related efforts in the main `optimism` and `infra` repositories, highlighting coordination across the broader Optimism ecosystem. Additionally, the use of automated tooling like `copilot-swe-agent` in issue [#15115](https://github.com/ethereum-optimism/supersim/issues/15115) demonstrates an ongoing effort to streamline development workflows.", "2025-09-04T03:37:23.496Z"]
["ethereum-optimism/superchain-registry_week_2025-07-20", "ethereum-optimism/superchain-registry", "week", "2025-07-20", "# ethereum-optimism/superchain-registry Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's focus was on expanding the Superchain and preparing for future protocol upgrades. The most significant development was the re-addition of Celo mainnet to the Superchain Registry, which required special handling for its unique genesis history as a former L1 fork. Concurrently, standard versions for mainnet and Sepolia were updated to include `op-contracts/v4.0.0`, setting the stage for upcoming deployments. The team also performed maintenance by closing several older issues related to `op-supervisor`, logging, and flashblocks enablement, streamlining the project's backlog.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on registry expansion and preparation for contract upgrades.\n\n*   **Superchain Expansion with Celo Mainnet:** Celo mainnet was re-integrated into the Superchain Registry ([#1086](https://github.com/ethereum-optimism/superchain-registry/pull/1086)). This update included specific logic to validate its genesis, accounting for its history as an L1 fork that was converted to an L2, and involved updates to chain configurations, address lists, and genesis integrity checks.\n\n*   **Protocol Upgrade Preparation:** The registry was updated to include `op-contracts/v4.0.0` upgrade entries for both mainnet and Sepolia standard versions ([#1088](https://github.com/ethereum-optimism/superchain-registry/pull/1088)). This ensures the registry is aligned with the latest contract versions for future deployments.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on closing out stale or superseded tasks, with no new issues being opened.\n\n*   **Closed Issues:**\n    *   **Component Improvements:** An issue to improve `op-supervisor` and `op-node` reset targets ([#16314](https://github.com/ethereum-optimism/superchain-registry/issues/16314)) was closed, as recent project changes rendered it obsolete. A related issue for a more reusable logger in `op-service` ([#15139](https://github.com/ethereum-optimism/superchain-registry/issues/15139)) was also closed, with the functionality now covered by existing mechanisms.\n    *   **Flashblocks Enablement:** Two issues tracking flashblocks enablement ([#16544](https://github.com/ethereum-optimism/superchain-registry/issues/16544), [#16496](https://github.com/ethereum-optimism/superchain-registry/issues/16496)) were closed in favor of more structured tracking via a new issue and a project milestone, respectively.\n\n*   **New & Active Issues:**\n    *   No new issues were opened this week. The primary active discussion on issue [#16314](https://github.com/ethereum-optimism/superchain-registry/issues/16314) concluded with its closure, indicating that all actionable items had been addressed by other recent work.\n\n## \ud83d\udcac Community & Collaboration\nThe week's activity highlights a focus on maintenance and proactive issue management. The discussion and subsequent closure of issue [#16314](https://github.com/ethereum-optimism/superchain-registry/issues/16314) demonstrate effective communication in determining that prior work had resolved the issue's core concerns, leading to a cleaner project backlog.", "2025-09-04T03:37:24.830Z"]
["ethereum-optimism/specs_week_2025-07-20", "ethereum-optimism/specs", "week", "2025-07-20", "# ethereum-optimism/specs Weekly Report (Jul 20 - 26, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on advancing the operational readiness of flashblocks and cleaning up long-standing specification issues. Significant progress was made by closing several issues related to flashblocks deployment on op-sepolia, including the websocket-proxy and RPC configuration. Discussions were heavily focused on establishing robust monitoring and alerting for this new infrastructure. Concurrently, the team resolved older issues concerning Interoperability specifications, bringing more clarity to the protocol. While direct code changes to the specification were minor, the week was defined by crucial progress in deployment, planning, and issue triage.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork merged this week focused on improving the quality and correctness of the repository's documentation and configuration.\n\n- **Documentation and Configuration Fixes:** Minor but important maintenance was completed. Internal documentation links within `derivation.md` were corrected to properly reference glossary terms ([#740](https://github.com/ethereum-optimism/specs/pull/740)). Additionally, a syntax error was resolved by removing a trailing comma in the `.markdownlint.json` configuration file ([#737](https://github.com/ethereum-optimism/specs/pull/737)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was a primary activity this week, with a strong focus on closing out tasks related to flashblocks and older specification items.\n\n- **Closed Issues:**\n    - **Flashblocks Deployment:** A series of issues tracking the rollout of flashblocks on op-sepolia were closed, signaling major steps toward completion. This included tasks for enabling flashblocks non-publicly ([#16544](https://github.com/ethereum-optimism/specs/issues/16544)), configuring the `flashblocks-rpc` ([#16496](https://github.com/ethereum-optimism/specs/issues/16496)), and deploying the `flashblocks-websocket-proxy` ([#16686](https://github.com/ethereum-optimism/specs/issues/16686)).\n    - **Specification Cleanup:** Two older issues were resolved to update Interoperability specifications. [#277](https://github.com/ethereum-optimism/specs/issues/277) addressed the event-index wildcard feature, and [#609](https://github.com/ethereum-optimism/specs/issues/609) focused on upgrading block rule specifications.\n    - **Node Improvements:** An issue to improve `op-supervisor` and `op-node` reset targets ([#16314](https://github.com/ethereum-optimism/specs/issues/16314)) was closed, as its actionable items were deemed covered by existing pull requests.\n\n- **New & Active Issues:**\n    - **Flashblocks Monitoring:** The most significant ongoing discussion occurred in [#16388](https://github.com/ethereum-optimism/specs/issues/16388), which details the plan for comprehensive monitoring and alerting for the flashblocks integration on op-sepolia. The discussion outlined specific metrics and thresholds for peer counts, block progression, and performance metrics like `reth_op_rbuilder_total_block_built_duration`, indicating a deep focus on operational stability.\n    - **Tooling and Testing:** An issue to add a semgrep rule for function naming conventions ([#15115](https://github.com/ethereum-optimism/specs/issues/15115)) remains active but is currently blocked by disabled GitHub Actions. Separately, work continues on integrating test target setup and teardown into `op-acceptor` to improve acceptance test compatibility ([#375](https://github.com/ethereum-optimism/specs/issues/375)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was characterized by focused, internal planning and cross-repository coordination. The detailed technical discussion in the flashblocks monitoring issue ([#16388](https://github.com/ethereum-optimism/specs/issues/16388)), which links to work in the `k8s` repository, highlights the team's effort to ensure a smooth and reliable deployment. The proactive closure of issues that were superseded or completed elsewhere demonstrates effective project management and communication within the core team.", "2025-09-04T03:37:28.645Z"]
["ethereum-optimism/community-hub_week_2025-07-27", "ethereum-optimism/community-hub", "week", "2025-07-27", "# ethereum-optimism/community-hub Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis was a quiet week for the `community-hub` repository, with no new features or bug fixes merged. Development activity was minimal, with the primary focus shifting towards discussion and future planning. A notable conversation emerged around a proposal for congestion-based builder transaction reordering, attracting interest from a potential new collaborator. The only code change proposed was a minor pull request for typo corrections.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo major technical developments were completed this week. The sole pull request opened was for minor maintenance:\n\n*   **Documentation Maintenance:** A pull request ([#1172](https://github.com/ethereum-optimism/community-hub/pull/1172)) was opened to correct typos within the repository.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was light this week, with no issues being opened or closed. The focus was on an existing, significant proposal.\n\n*   **Closed Issues:** No issues were resolved or closed this week.\n*   **New & Active Issues:** No new issues were created. However, there was renewed activity on Issue [#306](https://github.com/ethereum-optimism/community-hub/issues/306), which proposes a mechanism for congestion-based builder transaction reordering. The discussion centers on tracking excess data availability (DA) usage and applying an exponential cost penalty, a concept that could potentially be tested outside the core protocol.\n\n## \ud83d\udcac Community & Collaboration\nCommunity engagement was focused on a single, high-impact issue. User `moonfury-ops` expressed interest in collaborating on the design for congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/community-hub/issues/306)), signaling potential community-driven progress on this complex topic. This interaction represented the most significant collaborative activity of the week.", "2025-09-04T03:37:33.400Z"]
["ethereum-optimism/design-docs_week_2025-07-27", "ethereum-optimism/design-docs", "week", "2025-07-27", "# ethereum-optimism/design-docs Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts were heavily concentrated on the design and refinement of the OP Stack's economic mechanisms. Significant progress was made in advancing fee-related proposals, including the introduction of new designs for revenue sharing ([#309](https://github.com/ethereum-optimism/design-docs/pull/309)) and L1 congestion fees ([#312](https://github.com/ethereum-optimism/design-docs/pull/312)). The `min-base-fee` feature moved closer to implementation with ongoing specification discussions, risk analysis planning, and the sharing of early implementation drafts. Additionally, a new design was requested to explore congestion-based transaction reordering, signaling a proactive approach to network performance and fee market stability.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week saw one merged refinement to the protocol's fee structure and several new design proposals for future enhancements.\n\n- **Protocol Fee Formula Refinement**\n  A fix was merged to refine the `operatorFee` calculation by adjusting the operator fee scalar. This update provides a more precise formula for determining operator fees within the protocol ([#299](https://github.com/ethereum-optimism/design-docs/pull/299)).\n\n- **New Fee Mechanism Designs**\n  Two significant design proposals were initiated via new pull requests:\n  - A design for a **revenue sharing** mechanism was proposed ([#309](https://github.com/ethereum-optimism/design-docs/pull/309)).\n  - An initial draft for an **L1 congestion fee** design document was added, aiming to address costs associated with L1 congestion ([#312](https://github.com/ethereum-optimism/design-docs/pull/312)).\n\n- **Custom Gas Token Migration**\n  A new pull request was opened to introduce a design for **custom gas token migration** functionality, expanding the flexibility of gas payments on the network ([#313](https://github.com/ethereum-optimism/design-docs/pull/313)).\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:**\n  - **Documentation:** A long-standing issue regarding unclear L1 contract deployment steps in the L2 Testnet Tutorial ([#1401](https://github.com/ethereum-optimism/design-docs/issues/1401)) was closed after the relevant documentation was updated.\n\n- **New & Active Issues:**\n  - **`min-base-fee` Advancement:** The `min-base-fee` feature saw significant activity. A new issue was opened to conduct a formal Failure Modes Analysis ([#311](https://github.com/ethereum-optimism/design-docs/issues/311)) to assess potential risks. Discussions on the main tracking issue ([#16807](https://github.com/ethereum-optimism/design-docs/issues/16807)) included links to in-flight implementation work in `reth` and `op-alloy`. A key discussion point on the specification issue ([#742](https://github.com/ethereum-optimism/design-docs/issues/742)) led to a request for estimating the state growth impact of the feature.\n  - **Congestion-Based Transaction Reordering:** A new issue ([#306](https://github.com/ethereum-optimism/design-docs/issues/306)) was opened to request a design for reordering builder transactions based on congestion. The proposal suggests tracking excess Data Availability (DA) usage with an exponential penalty, a concept that could be tested off-protocol.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the discussions around new and complex features. The new issue for congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/design-docs/issues/306)) immediately saw a contributor express interest in collaborating on the design. The ongoing work on `min-base-fee` highlights strong cross-repository coordination, with contributors sharing early drafts from `reth` ([https://github.com/paradigmxyz/reth/pull/17704](https://github.com/paradigmxyz/reth/pull/17704)) to gather feedback, demonstrating a collaborative approach to moving design concepts toward implementation.", "2025-09-04T03:37:41.977Z"]
["ethereum-optimism/ecosystem_week_2025-07-27", "ethereum-optimism/ecosystem", "week", "2025-07-27", "# ethereum-optimism/ecosystem Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development was centered on enhancing the developer experience within the Superchain. A significant new feature, an RCT demo page, was added to the Superchain Playground to better demonstrate cross-chain interoperability. This effort required substantial updates to application utilities and configurations. Concurrently, an important discussion progressed around a proposal for congestion-based transaction reordering, signaling a focus on future protocol scalability and network management.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development activity involved a single, comprehensive pull request that introduced a new feature to the Superchain Playground.\n\n- **New RCT Demo for Superchain Playground:** A new demo page was introduced to showcase cross-chain functionality. This feature enhancement involved extensive modifications to the application's routing, providers, and components related to Uniswap actions, token handling, and chain interactions. To support this new page, the `viem` and `utils-app` packages were updated with new ABIs, address sets, and chain configurations, specifically for the `interopAlpha` and `supersim` chains ([#919](https://github.com/ethereum-optimism/ecosystem/pull/919)).\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed this week based on the available data. However, a key strategic discussion continued on an active issue.\n\n- **New & Active Issues:**\n  - Discussion continued on issue [#306](https://github.com/ethereum-optimism/ecosystem/issues/306), which proposes a design document for **congestion-based builder transaction reordering**. The proposal centers on tracking excess Data Availability (DA) usage and applying an exponential cost penalty to manage network congestion. This mechanism could potentially be tested outside the core protocol before consideration for a future L1 implementation.\n\n## \ud83d\udcac Community & Collaboration\nCommunity engagement was evident in the ongoing technical discussions. The proposal for congestion management in issue [#306](https://github.com/ethereum-optimism/ecosystem/issues/306) attracted new interest, with user `moonfury-ops` expressing a desire to collaborate on the topic. This highlights active participation in shaping the future design and scalability of the ecosystem.", "2025-09-04T03:37:43.311Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-07-27", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-07-27", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on expanding the Superchain ecosystem and advancing core protocol specifications. The Superchain token list was updated to include the TOWNS token, enhancing interoperability. Development continued with new pull requests to add the PEPE Community token and introduce support for tBTC on the Sepolia testnet. Meanwhile, significant discussion took place around the \"Min Base Fee\" feature, with progress on implementation drafts and a focus on thoroughly documenting its impact on state growth for the official specification.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on growing the list of assets available within the Superchain.\n\n- **Superchain Token List Expansion**\n  - In support of a more interconnected ecosystem, the TOWNS token was added to the Superchain token list. The update in [#1178](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1178) includes the token's details and contract addresses for both the Ethereum and Base chains.\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week were concentrated on the specification for the \"Min Base Fee\" and the submission of new pull requests for token and feature additions.\n\n- **Closed Issues:** No issues were closed this week.\n- **New & Active Issues:**\n  - No new issues were opened.\n  - **\"Min Base Fee\" Specification:** Discussions continued across issues [#16807](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16807) and [#742](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/742). An early `reth` draft is under review to gather feedback, and work is underway to compute a rough estimate of the state growth implied by the feature. This estimate is intended for the specification's motivation section, highlighting a commitment to thorough documentation.\n  - **New Pull Requests:** Two new feature pull requests were opened, representing upcoming additions:\n    - [#1179](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1179): Proposes adding support or documentation for tBTC on the Sepolia testnet.\n    - [#1180](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1180): Adds the PEPE Community (PEPE) token to the token list.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the ongoing discussions for the \"Min Base Fee\" feature. Updates on issue [#16807](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16807) mentioned related work in the `op-alloy`, `optimism`, and `reth` repositories, indicating active coordination across different parts of the stack. Contributors `wlawt` and `geoknee` were active in driving these technical specification discussions forward.", "2025-09-04T03:37:55.890Z"]
["ethereum-optimism/infra_week_2025-07-27", "ethereum-optimism/infra", "week", "2025-07-27", "# ethereum-optimism/infra Weekly Report (Jul 27 - 2, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the project's core tooling and infrastructure. The `op-acceptor` testing tool received significant upgrades to improve performance, flexibility, and stability through the introduction of parallel execution and configurable test skip behavior. Additionally, Proxyd was updated with more granular timeout controls to better support rollup RPC requirements. In parallel, active discussions and planning continued on significant future economic features, including the \"Min Base Fee\" and congestion-based transaction reordering, with early implementation drafts being shared for review.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving the reliability and performance of development and testing infrastructure.\n\n- **`op-acceptor` Testing Enhancements:** A series of updates significantly improved the `op-acceptor` tool. Parallel test execution is now enabled by default, leveraging system cores to speed up test runs ([#438](https://github.com/ethereum-optimism/infra/pull/438)). A new flag provides flexibility by allowing test skips to be treated as skips rather than failures ([#435](https://github.com/ethereum-optimism/infra/pull/435)). Finally, a flaky test in the `op-acceptor/runner` module was fixed, bolstering the overall stability of the test suite ([#439](https://github.com/ethereum-optimism/infra/pull/439)).\n\n- **Proxyd Configuration Improvements:** Proxyd's configuration was made more granular, allowing backend response timeouts to be specified in milliseconds and on a per-backend basis ([#436](https://github.com/ethereum-optimism/infra/pull/436)). This change provides finer control and helps accommodate the need for faster RPC calls in rollup environments.\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:** Two long-standing issues concerning `op-acceptor` were closed this week, corresponding directly to the completed development work. The requests for parallel test execution ([#184](https://github.com/ethereum-optimism/infra/issues/184)) and configurable test skip behavior ([#434](https://github.com/ethereum-optimism/infra/issues/434)) have now been implemented.\n\n- **New & Active Issues:**\n    - **New:** A new issue was opened to port TestFjord to Devstack ([#440](https://github.com/ethereum-optimism/infra/issues/440)), signaling a move to improve acceptance testing capabilities for sysgo and persistent devnets.\n    - **Active - Min Base Fee:** Significant progress was noted on the `Min Base Fee` feature. An early `reth` draft implementation was shared for review in the main tracking issue ([#16807](https://github.com/ethereum-optimism/infra/issues/16807)), indicating the feature is moving toward implementation. A related discussion on the specification issue ([#742](https://github.com/ethereum-optimism/infra/issues/742)) highlighted the need to estimate the state growth implied by this change for inclusion in the spec's motivation.\n    - **Active - Transaction Reordering:** The issue proposing a design for congestion-based builder transaction reordering ([#306](https://github.com/ethereum-optimism/infra/issues/306)) saw renewed interest, with a community member offering to collaborate on the design.\n\n## \ud83d\udcac Community & Collaboration\nWhile the week's merged pull requests were focused, significant collaboration occurred within the issue tracker, particularly around planning for future protocol features. The discussion around the \"Min Base Fee\" ([#16807](https://github.com/ethereum-optimism/infra/issues/16807), [#742](https://github.com/ethereum-optimism/infra/issues/742)) shows coordination across different workstreams and even external repositories like `reth`. Furthermore, the offer of collaboration on the congestion-based transaction reordering issue ([#306](https://github.com/ethereum-optimism/infra/issues/306)) demonstrates active community engagement in complex design proposals.", "2025-09-04T03:37:56.697Z"]
["ethereum-optimism/Retro-Funding_week_2025-08-03", "ethereum-optimism/Retro-Funding", "week", "2025-08-03", "# ethereum-optimism/Retro-Funding Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on finalizing and correcting data for the M6 results snapshot. Key developments included significant updates to metric calculations, such as adjusting weights for onchain builders and adding PageRank propagation for devtooling project links. A critical bug fix was implemented to correctly handle a project with consolidated deployments that had been inappropriately flagged, ensuring the integrity of the results data. The week also included routine dependency updates, reflecting a period of data refinement and stabilization.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on preparing the M6 results data and addressing related bugs.\n\n-   **M6 Results Snapshot and Metric Adjustments**\n    -   A major update prepared the repository for the M6 results snapshot. This introduced support for PageRank propagation in devtooling project links and adjusted metric variant weights for onchain builders by increasing `growth` and decreasing `retention` ([#71](https://github.com/ethereum-optimism/Retro-Funding/pull/71)).\n\n-   **Data Correction for Flagged Project**\n    -   A bug was fixed where a project with consolidated deployments was incorrectly re-listed, affecting on-chain metrics. The fix involved updates to `eval-algos/S7/utils/queries.py` and several data and output files to ensure accurate project representation ([#73](https://github.com/ethereum-optimism/Retro-Funding/pull/73)).\n\n-   **Dependency Maintenance**\n    -   The project's dependencies were updated to maintain security and stability. `protobuf` was bumped to version 5.29.5 ([#66](https://github.com/ethereum-optimism/Retro-Funding/pull/66)) and `urllib3` was upgraded to version 2.5.0 ([#67](https://github.com/ethereum-optimism/Retro-Funding/pull/67)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was focused on resolving data-related problems and clarifying past decisions.\n\n-   **Closed Issues:**\n    -   **Project Flagging:** An issue regarding the \"World Mini Apps\" project being inappropriately flagged in the Retro-Funding results was resolved ([#72](https://github.com/ethereum-optimism/Retro-Funding/issues/72)). The fix was implemented in PR #73.\n    -   **Dev Tooling Dependencies:** A question about the distinction between direct and transitive dependencies in Dev Tooling was closed, as the matter had been addressed during M5 ([#49](https://github.com/ethereum-optimism/Retro-Funding/issues/49)).\n\n-   **New & Active Issues:**\n    -   No new issues were opened this week.\n    -   There were no active issues with significant discussion (more than 3 comments).\n\n## \ud83d\udcac Community & Collaboration\nThe development activity this week was focused and efficient, with no extensive discussions noted on pull requests or issues. The quick resolution of the inappropriately flagged project issue ([#72](https://github.com/ethereum-optimism/Retro-Funding/issues/72)) suggests effective internal communication and a focus on data integrity. The remainder of the week was quiet, with no new pull requests or issues opened, indicating a period of stabilization following the M6 data preparations.", "2025-09-04T03:38:16.872Z"]
["ethereum-optimism/design-docs_week_2025-08-03", "ethereum-optimism/design-docs", "week", "2025-08-03", "# ethereum-optimism/design-docs Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was focused on maintaining the integrity of the Retro-Funding process. While there were no new technical developments or pull requests, the team demonstrated responsiveness by quickly addressing and resolving a community-reported issue. An on-chain builder's project was inappropriately flagged, and the team promptly investigated and corrected the matter, ensuring the fairness of the public goods funding mechanism.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, or other technical developments merged this week.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was centered on a single, rapidly resolved community concern.\n\n- **Closed Issues:**\n    - **Retro-Funding Project Flagging:** An issue was resolved concerning a project, \"World Mini Apps,\" that was inappropriately flagged within the Retro-Funding process. The team investigated the report and confirmed the resolution, closing the issue on the same day it was opened ([#72](https://github.com/ethereum-optimism/design-docs/issues/72)).\n\n- **New & Active Issues:**\n    - No new or other active issues were reported during this period.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was exemplified by the direct and effective communication between a community builder and the Optimism team. The user \"sexychinese\" reported the flagging issue in [#72](https://github.com/ethereum-optimism/design-docs/issues/72), and team member \"ccerv1\" acknowledged and confirmed its resolution. This interaction highlights the team's commitment to supporting builders and ensuring the operational integrity of its governance and funding processes.", "2025-09-04T03:38:29.694Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-08-03", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-08-03", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development activity focused on expanding the range of assets available for bridging within the Superchain ecosystem. A new pull request was opened to add token support for the bridge between Ethereum and Base. This reflects an ongoing effort to enhance the utility and interoperability of the bridge infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\n### Expanding Bridge Asset Support\nWork this week centered on increasing the number of tokens supported by the official bridge.\n- A new pull request, [#1181](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1181), was opened to add the PepeCommunity (PEPE) token for bridging between Ethereum and Base.\n\n## \ud83d\udc1b Issues & Triage\nThere was no issue activity during the reported period. No new issues were opened, and no existing issues were closed.", "2025-09-04T03:38:30.999Z"]
["ethereum-optimism/infra_week_2025-08-03", "ethereum-optimism/infra", "week", "2025-08-03", "# ethereum-optimism/infra Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development activity was focused on initiating new tooling for the project's infrastructure. The primary development was the introduction of a new pull request to add an open-source GitHub event manager, aimed at streamlining how GitHub events are handled. No major features were completed or issues resolved, indicating a period of early-stage development rather than the finalization of ongoing work.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged or work was completed during this reporting period. The main focus was on proposing new work, as highlighted by the new pull request for a GitHub event manager ([#441](https://github.com/ethereum-optimism/infra/pull/441)).\n\n## \ud83d\udc1b Issues & Triage\nThe issue tracker remained quiet this week. No new issues were opened, and no existing issues were closed. There were no reports of significant discussion or activity on existing issues.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was centered on the proposal of new tooling. The introduction of a pull request for a new GitHub event manager ([#441](https://github.com/ethereum-optimism/infra/pull/441)) represents the sole collaborative event reported during this period. There was no significant discussion activity noted on issues or pull requests.", "2025-09-04T03:38:34.364Z"]
["ethereum-optimism/docs_week_2025-08-03", "ethereum-optimism/docs", "week", "2025-08-03", "# ethereum-optimism/docs Weekly Report (Aug 3 - 9, 2025)\n\n## \ud83d\ude80 Highlights\nThis was an exceptionally quiet week for the `ethereum-optimism/docs` repository, with no new features, bug fixes, or documentation enhancements reported. Development activity appears to have been paused. The only notable event was the creation of a new issue to track documentation updates related to a past Q4 2024 audit.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no key technical developments or merged pull requests during this period.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was the sole activity recorded this week.\n\n- **Closed Issues:** No issues were closed this week.\n- **New & Active Issues:** A single new issue was opened to address documentation requirements stemming from a Q4 2024 audit. This issue ([#1713](https://github.com/ethereum-optimism/docs/issues/1713)) outlines the necessary updates and acceptance criteria for the task. There were no reports of significant discussions on other active issues.\n\n## \ud83d\udcac Community & Collaboration\nThe provided data indicates a lack of collaborative activity this week. There were no new pull requests opened for review and no significant discussions on issues, suggesting a quiet period for contributor engagement.", "2025-09-04T03:38:44.338Z"]
["ethereum-optimism/design-docs_week_2025-08-10", "ethereum-optimism/design-docs", "week", "2025-08-10", "# ethereum-optimism/design-docs Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on maturing the design documentation for the `min-base-fee` feature, with significant effort dedicated to formalizing its threat model and analyzing its state growth impact. The work culminated in the migration of the threat model into the repository and the resolution of related analysis tasks. Alongside this refinement, the team explored several forward-looking protocol enhancements, opening new design proposals for a v2 liveness module, nonceless execution, and a `TimelockGuard`. The reopening of several older issues related to testing infrastructure also indicates a renewed focus on completing outstanding tasks and bolstering test coverage.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on solidifying existing feature designs while proposing new architectural concepts.\n\n-   **Min-Base-Fee Design Finalization:** A major focus was placed on completing the design documentation for the `min-base-fee` feature. A comprehensive threat model was formally added to the repository, migrating it from an external Notion document ([#314](https://github.com/ethereum-optimism/design-docs/pull/314)). Further refinements included adding and then downgrading the assessment of database growth impact ([#319](https://github.com/ethereum-optimism/design-docs/pull/319), [#321](https://github.com/ethereum-optimism/design-docs/pull/321)), and adding an addendum on the use of feature toggles ([#323](https://github.com/ethereum-optimism/design-docs/pull/323)).\n\n-   **New Protocol Feature Proposals:** Several new design documents were proposed, signaling active research and development into future protocol upgrades:\n    -   **Liveness Module v2:** A proposal for a new version of the liveness module was introduced ([#320](https://github.com/ethereum-optimism/design-docs/pull/320)).\n    -   **Nonceless Execution:** A design discussion was initiated around the concept of nonceless execution ([#322](https://github.com/ethereum-optimism/design-docs/pull/322)).\n    -   **TimelockGuard:** A new `TimelockGuard` feature was proposed, suggesting enhancements to time-based security mechanisms ([#324](https://github.com/ethereum-optimism/design-docs/pull/324)).\n    -   **Data Availability Limits:** A proposal was opened concerning data availability footprint block limits for the \"Jovian\" upgrade ([#317](https://github.com/ethereum-optimism/design-docs/pull/317)).\n\n-   **Protocol Design Process Improvements:** To improve documentation consistency, guidance on naming conventions for activation checks within decoupled features was added to the protocol design documents ([#318](https://github.com/ethereum-optimism/design-docs/pull/318)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved closing out analysis tasks for `min-base-fee`, opening new tracking issues for maintenance, and revisiting previously deprioritized work.\n\n-   **Closed Issues:** Key issues related to the `min-base-fee` feature were closed, marking the completion of the failure modes analysis ([#311](https://github.com/ethereum-optimism/design-docs/issues/311)) and the state growth estimation ([#316](https://github.com/ethereum-optimism/design-docs/issues/316)). An older issue for a design document on congestion-based builder transaction reordering was also closed ([#306](https://github.com/ethereum-optimism/design-docs/issues/306)).\n\n-   **New & Active Issues:**\n    -   **New Maintenance Task:** A new issue was created to track the migration of fault proof recovery tasks to a new template framework ([#1162](https://github.com/ethereum-optimism/design-docs/issues/1162)).\n    -   **Reopened Testing Issues:** Several issues related to testing were reopened to address pending `TODOs` in the codebase. This includes adding acceptance tests for `op-challenger` ([#15948](https://github.com/ethereum-optimism/design-docs/issues/15948)), enabling `op-sync-tester` to serve the `eth` namespace ([#16700](https://github.com/ethereum-optimism/design-docs/issues/16700)), and integrating `op-test-sequencer` for reorg tests ([#15265](https://github.com/ethereum-optimism/design-docs/issues/15265)).\n    -   **Ongoing Discussions:** Community members continued to seek solutions for `op-proposer` transaction failures in issue [#13502](https://github.com/ethereum-optimism/design-docs/issues/13502). A discussion on tracing event call graphs ([#16874](https://github.com/ethereum-optimism/design-docs/issues/16874)) revealed a potential strategic shift towards removing the event system entirely, illustrating how design discussions can influence architectural direction.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in both community troubleshooting and internal strategic alignment. The `op-proposer` failure issue ([#13502](https://github.com/ethereum-optimism/design-docs/issues/13502)) continues to serve as a point of engagement for users experiencing similar problems. Internally, the reopening of several issues by team members to address lingering `TODOs` demonstrates a commitment to code quality and completeness. The discussion around event call graph tracing ([#16874](https://github.com/ethereum-optimism/design-docs/issues/16874)) highlighted transparent communication, where a team member explained that a proposed contribution might not be merged due to a larger, pending architectural change, providing valuable context to the contributor.", "2025-09-04T03:39:01.237Z"]
["ethereum-optimism/ecosystem_week_2025-08-10", "ethereum-optimism/ecosystem", "week", "2025-08-10", "# ethereum-optimism/ecosystem Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis was an exceptionally quiet week for the `ethereum-optimism/ecosystem` repository. Based on the available reports, development activity was minimal, with no pull requests merged or new ones opened. The sole recorded event was the creation of a new issue focused on a minor UI enhancement, suggesting a potential pause in active development or a shift in focus to areas not captured in this repository's activity logs.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were completed or merged during this period. The provided reports indicate no new features, bug fixes, or other code changes were integrated into the repository this week.\n\n## \ud83d\udc1b Issues & Triage\nThe management of issues was the only notable activity this week.\n\n- **Closed Issues:** No issues were reported as closed.\n- **New & Active Issues:** A single new issue was opened to address a UI inconsistency. Issue [#922](https://github.com/ethereum-optimism/ecosystem/issues/922) proposes updating the font on the bridge deposit page (`app.optimism.io/bridge/deposit`) to the official Riforma brand font, aiming for better visual consistency. No significant discussions on other active issues were reported.\n\n## \ud83d\udcac Community & Collaboration\nThe provided data shows no significant community collaboration or discussion within the repository this week. The absence of pull request activity, reviews, or active issue comments indicates a period of low public-facing interaction.", "2025-09-04T03:39:11.449Z"]
["ethereum-optimism/superchain-registry_week_2025-08-10", "ethereum-optimism/superchain-registry", "week", "2025-08-10", "# ethereum-optimism/superchain-registry Weekly Report (Aug 10 - 16, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on maintenance, planning, and architectural discussions rather than new feature completion. A key proposal was submitted to update a contract address for Celo, reflecting ongoing chain integration efforts. A new initiative to migrate and clean up legacy tasks was started, signaling a focus on improving internal tooling. Notably, a significant discussion on a potential architectural shift emerged, with the team considering the deprecation of the event system, which could impact future contributions.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged or completed during this period. However, new work was proposed:\n\n- **Chain Configuration:** A pull request ([#1095](https://github.com/ethereum-optimism/superchain-registry/pull/1095)) was opened to update the `AnchorStateRegistryProxy` address for Celo, representing a proposed configuration update for one of the chains in the registry.\n\n## \ud83d\udc1b Issues & Triage\nIssue management focused on task migration and a critical discussion about the project's event system architecture.\n\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:**\n    - **Task Migration:** A new issue ([#1162](https://github.com/ethereum-optimism/superchain-registry/issues/1162)) was created to track the migration of blacklist games tasks to a new template and the removal of old FP recovery tasks.\n    - **Architectural Discussion on Event System:** A significant conversation took place in issue [#16874](https://github.com/ethereum-optimism/superchain-registry/issues/16874). A contributor submitted a PR to add event flow tracing, but the team communicated that they are leaning towards removing the entire event system. This feedback, while likely meaning the PR won't be merged, provides important guidance for future contributors regarding the project's direction.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident through proactive communication and offers of assistance.\n\n- On the new task migration issue ([#1162](https://github.com/ethereum-optimism/superchain-registry/issues/1162)), a community member immediately offered to help with the work or review the eventual pull request.\n- The discussion around the event system in [#16874](https://github.com/ethereum-optimism/superchain-registry/issues/16874) highlighted transparent communication between the core team and contributors, with the team providing clear context about strategic shifts that could affect a contributor's work.", "2025-09-04T03:39:17.734Z"]
["ethereum-optimism/design-docs_week_2025-08-17", "ethereum-optimism/design-docs", "week", "2025-08-17", "# ethereum-optimism/design-docs Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in finalizing major initiatives and enhancing system robustness. Key achievements include the successful rollout of Flashblocks on all Sunnyside sequencers and the completion of interop acceptance testing for the proofs system, marking the end of a substantial effort. The team also concluded a cleanup of the event system by removing obsolete events. Concurrently, a new design for a \"Single-Approval Long-Delay TimelockGuard\" was proposed, indicating a continued focus on security and governance innovation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no new features were merged directly into the `design-docs` repository, activity this week centered on tracking and concluding several critical technical initiatives across the Optimism ecosystem.\n\nThe most significant development was the confirmation that Flashblocks are now fully enabled on all Sunnyside sequencers for Sepolia, as tracked in issue [#16688](https://github.com/ethereum-optimism/design-docs/issues/16688). This milestone enhances the sequencing process and concludes a key infrastructure upgrade.\n\nAdditionally, a new pull request ([#326](https://github.com/ethereum-optimism/design-docs/pull/326)) was opened, introducing a design for a \"Single-Approval Long-Delay TimelockGuard,\" representing new work on the project's governance and security mechanisms.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a strong focus on closing out long-standing issues, reflecting a period of stabilization and refinement.\n\n- **Closed Issues:**\n    - **Proofs System & Testing Finalization:** Work on the proofs system was finalized with the closure of issues [#15946](https://github.com/ethereum-optimism/design-docs/issues/15946) and [#15948](https://github.com/ethereum-optimism/design-docs/issues/15948), which tracked the completion of `op-challenger` acceptance tests for interop chains.\n    - **Event System Cleanup:** Issue [#17001](https://github.com/ethereum-optimism/design-docs/issues/17001) was closed after two events were successfully removed from the event system, streamlining the codebase.\n    - **Testing Framework Refinement:** An issue regarding test target setup ([#375](https://github.com/ethereum-optimism/design-docs/issues/375)) was closed, noting that `sysgo` has superseded Kurtosis for network testing needs.\n    - **Sequencer Feature Rollout:** The successful enablement of Flashblocks on Sunnyside sequencers was confirmed with the closure of [#16688](https://github.com/ethereum-optimism/design-docs/issues/16688).\n\n- **New & Active Issues:**\n    - **Contract Verification:** An important ongoing discussion in [#14813](https://github.com/ethereum-optimism/design-docs/issues/14813) centers on improving contract verification. The latest proposal is to leverage `forge verify-contract` to streamline verification on both Etherscan and Blockscout, reducing the need for custom code.\n    - **RPC Responses:** Discussion continued in [#389](https://github.com/ethereum-optimism/design-docs/issues/389) about missing content types in RPC responses, with a community member asking for guidance on how to contribute a fix.\n    - **Test Logging:** Work is in progress to resolve missing test logs in `op-acceptance-tests` ([#17151](https://github.com/ethereum-optimism/design-docs/issues/17151)) by moving tests to a workflow that properly captures logs.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the tracking and resolution of the event system cleanup ([#17001](https://github.com/ethereum-optimism/design-docs/issues/17001)). Contributor `joshklop` provided consistent updates, linking to pull requests in the main `optimism` repository, which demonstrates effective cross-repository coordination to resolve a design-level issue. Furthermore, community engagement was highlighted in issue [#389](https://github.com/ethereum-optimism/design-docs/issues/389), where user `OBlackmon3` expressed interest in contributing a fix, signaling healthy external developer interest.", "2025-09-04T03:39:36.849Z"]
["ethereum-optimism/op-geth_week_2025-08-17", "ethereum-optimism/op-geth", "week", "2025-08-17", "# ethereum-optimism/op-geth Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on enhancing the stability and maintainability of the `op-geth` client. A critical bug fix was implemented in the engine API to ensure correct execution payload creation. On the operational front, a significant milestone was confirmed with the successful enablement of Flashblocks on all Sunnyside sequencers for Sepolia. While no major new features were introduced, ongoing maintenance and issue triage demonstrated a focus on improving code quality and resolving existing problems.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment work focused on bug fixes and code quality improvements.\n\n- **Engine API Bug Fix:** A key pull request ([#662](https://github.com/ethereum-optimism/op-geth/pull/662)) addressed errors and improved checks within the engine API. This fix corrects issues in `beacon/engine` and `eth/catalyst`, ensuring the reliability of execution payload creation.\n- **Code Readability:** To improve code maintainability, a new pull request ([#661](https://github.com/ethereum-optimism/op-geth/pull/661)) was opened to standardize inconsistent function names found within comments.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved closing out operational and testing issues while making progress on older, active discussions. No new issues were opened.\n\n- **Closed Issues:**\n    - **Flashblocks Enabled:** Issue [#16688](https://github.com/ethereum-optimism/op-geth/issues/16688) was closed, confirming that all Sunnyside sequencers are now running with Flashblocks enabled and connected to the websocket proxy, with failover successfully tested.\n    - **Test Log Visibility:** An issue regarding missing test logs ([#17151](https://github.com/ethereum-optimism/op-geth/issues/17151)) was resolved after the logs were located. This has prompted a related effort to improve the test logging system.\n\n- **New & Active Issues:**\n    - Discussion continued on an issue regarding missing content types in RPC responses ([#389](https://github.com/ethereum-optimism/op-geth/issues/389)), with a community member inquiring about contributing a fix.\n    - An issue concerning outdated audit content ([#1673](https://github.com/ethereum-optimism/op-geth/issues/1673)) received a comment requesting clarification, indicating it is being actively triaged but requires more specific information to proceed.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active management of issues. The discussion on issue [#389](https://github.com/ethereum-optimism/op-geth/issues/389) highlighted community interest in contributing to the project. Additionally, the resolution of the test log issue ([#17151](https://github.com/ethereum-optimism/op-geth/issues/17151)) pointed to a cross-repository effort to improve testing infrastructure, demonstrating coordination within the broader Optimism ecosystem.", "2025-09-04T03:39:55.828Z"]
["ethereum-optimism/superchain-ops_week_2025-08-17", "ethereum-optimism/superchain-ops", "week", "2025-08-17", "# ethereum-optimism/superchain-ops Weekly Report (Aug 17 - 23, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in modernizing the project's operational tooling and bolstering its testing infrastructure. Development focused on migrating tasks to a new templating framework, which included adding several new contract templates. Concurrently, the team made substantial strides in improving code robustness by increasing test coverage, refining the CI/CD pipeline, and closing out a major umbrella issue for proofs interop acceptance testing. This concerted effort reflects a strong push towards stabilization, maintainability, and preparing the superchain-ops system for future upgrades.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on refactoring core operational components and enhancing test frameworks.\n\n- **Expansion of the New Templating Framework:** A key focus was the continued migration to the new superchain-ops templating system. The blacklist game task was successfully migrated ([#1168](https://github.com/ethereum-optimism/superchain-ops/pull/1168)), and new templates were introduced to support `op-contracts/v4.0.0`, including `BlacklistGamesV400` ([#1170](https://github.com/ethereum-optimism/superchain-ops/pull/1170)) and `UpdateRetirementTimestampV400` ([#1171](https://github.com/ethereum-optimism/superchain-ops/pull/1171)). This effort standardizes how operational tasks are defined and executed.\n\n- **CI/CD and Test Coverage Enhancements:** The project's reliability was improved through significant testing and CI work. The CI configuration was streamlined by removing obsolete jobs in preparation for a new system ([#1164](https://github.com/ethereum-optimism/superchain-ops/pull/1164)). A major effort was completed to increase test coverage across key contracts like `SimpleAddressRegistry.sol`, `StackedSimulator.sol`, and `TaskManager.sol`, enhancing the overall robustness of the codebase ([#1166](https://github.com/ethereum-optimism/superchain-ops/pull/1166)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several important issues, with active discussions pointing toward future technical improvements.\n\n- **Closed Issues:** A significant amount of work was finalized, resolving issues across testing, network configuration, and protocol refinement.\n    - **Testing & Validation:** The umbrella issue for proofs interop acceptance testing ([#15946](https://github.com/ethereum-optimism/superchain-ops/issues/15946)) was closed, marking the completion of all sub-tasks, including `op-challenger` acceptance tests ([#15948](https://github.com/ethereum-optimism/superchain-ops/issues/15948)). An issue regarding missing test logs was resolved ([#17151](https://github.com/ethereum-optimism/superchain-ops/issues/17151)), and a decision was made to deprecate Kurtosis in favor of Sysgo for network testing ([#375](https://github.com/ethereum-optimism/superchain-ops/issues/375)).\n    - **Network & Protocol:** Flashblocks were confirmed to be enabled on all Sunnyside sequencers ([#16688](https://github.com/ethereum-optimism/superchain-ops/issues/16688)), and two events were removed from the event system ([#17001](https://github.com/ethereum-optimism/superchain-ops/issues/17001)).\n    - **Template Migration:** The issue tracking the migration of the blacklist games task to the new template framework was closed, confirming the work's completion ([#1162](https://github.com/ethereum-optimism/superchain-ops/issues/1162)).\n\n- **New & Active Issues:** No new issues were opened this week. However, important discussions on future work continued:\n    - **Contract Verification:** Active discussion on [#14813](https://github.com/ethereum-optimism/superchain-ops/issues/14813) centers on improving contract verification by leveraging `forge verify-contract` once Forge binary support is available, aiming to reduce custom code.\n    - **Validation Testing:** A conversation on [#686](https://github.com/ethereum-optimism/superchain-ops/issues/686) is exploring how to enhance validation testing to prevent future bugs, with plans to review previously unplanned tests for potential implementation.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the coordinated effort to close out major testing initiatives and advance the new templating framework. The resolution of the proofs acceptance testing umbrella issue ([#15946](https://github.com/ethereum-optimism/superchain-ops/issues/15946)) and the related event system refinement ([#17001](https://github.com/ethereum-optimism/superchain-ops/issues/17001)), which involved multiple PRs across different repositories, highlights effective cross-project coordination. Furthermore, discussions on active issues like [#686](https://github.com/ethereum-optimism/superchain-ops/issues/686) show team members proactively planning future improvements to testing strategy. The overall activity suggests a strong internal focus on reducing technical debt and building a more robust foundation.", "2025-09-04T03:40:12.350Z"]
["ethereum-optimism/design-docs_week_2025-08-24", "ethereum-optimism/design-docs", "week", "2025-08-24", "# ethereum-optimism/design-docs Weekly Report (Aug 24 - 30, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant strides in core protocol design and a concerted effort to enhance system robustness. A major highlight was the introduction of a new, minimal design for Custom Gas Token (CGT) support, setting a future-proof foundation for this functionality. Alongside this, new proposals for a Reactive Security Council and a fee splitter signal ongoing work to strengthen the economic and security models of the OP Stack. Concurrently, active discussions focused on improving monitoring, alerting, and testing for critical components like Flashblocks, and exploring alternative P2P sync mechanisms to improve scalability and recovery.\n\n## \ud83d\udee0\ufe0f Key Developments\nCompleted work this week focused on advancing protocol capabilities and improving developer tooling documentation.\n\n-   **Custom Gas Token (CGT) Protocol Design:** A new, minimal, and flexible design for Custom Gas Token support was introduced ([#305]). This replaces previous experimental approaches with a more robust architecture intended to support a wider range of gas token functionalities across the OP Stack.\n-   **Deployment Tooling Documentation:** To improve the developer experience, a new design document was added for the `op-deployer`, specifically detailing its use with Forge ([#325]).\n-   **Liquidity Controller Enhancement:** The `LiquidityController` documentation was updated to include a new `deauthorizeMinter` function ([#329]). This provides chain operators with greater flexibility to manage, replace, or deprecate authorized minters.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved finalizing specifications, closing out lower-priority tooling tasks, and advancing discussions on critical infrastructure like Flashblocks and P2P syncing.\n\n-   **Closed Issues:**\n    -   **Specification Finalization:** The `min-base-fee` specification issue ([#742]) was closed, marking its finalization.\n    -   **Tooling & Maintenance:** Several issues were closed after deciding not to proceed with the work, including adding challenger support to `op-up` ([#17005]) and cleaning up `op-up` logging ([#17007]). The tracking issue for an \"Event Call Graph\" in `op-service` ([#16874]) was also closed, as the team is considering removing the event system entirely.\n    -   **Deprioritization:** The issue for \"Consensus influencing event nonces\" ([#13543]) was closed as its implementation is not planned for the near future.\n    -   **Investigation & Postmortems:** The postmortem for a \"Scalar fix\" ([#17012]) was completed, and an issue regarding missing test logs ([#17151]) was closed after the logs were located.\n\n-   **New & Active Issues:**\n    -   **New Proposals:** Several new pull requests were opened, initiating design discussions for a [Reactive Security Council](https://github.com/ethereum-optimism/design-docs/pull/327), a [fee splitter](https://github.com/ethereum-optimism/design-docs/pull/328), and clarifications to the [dispute game creator](https://github.com/ethereum-optimism/design-docs/pull/331) design.\n    -   **Flashblocks Hardening:** A significant portion of active discussion centered on Flashblocks. This includes improving monitoring and alerting ([#16388]), creating alerts for low peer counts ([#16868]) and sequencer status changes ([#16867]), planning load tests ([#16756]), and enabling tests on persistent devnets ([#17248]).\n    -   **P2P Sync Architecture:** A detailed discussion continued on deprecating the req-resp P2P sync ([#14108]). A new proposal was introduced for an alternative unsafe block sync mechanism using Redis for block gossip, which aims to be simpler, faster, and complementary to existing methods.\n    -   **Testing & CI:** The sync test issue ([#16703]) was reopened to expand test coverage to all Hard Fork transitions. Separately, a proposal was made to improve monorepo CI for `op-geth` PRs by adding a periodic job to check for integration issues ([#665]).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed architectural discussions this week. The conversation around deprecating the req-resp P2P sync ([#14108]) highlighted knowledge sharing, with ideas from one team member being extensively detailed by another. Similarly, discussions around Flashblocks monitoring and alerting ([#16388], [#16868]) showed a focused group effort to improve system reliability. The resolution of an `op-proposer` issue ([#13502]) through user confirmation of a configuration fix demonstrates effective feedback loops with the broader community.", "2025-09-04T03:40:35.018Z"]
["ethereum-optimism/Retro-Funding_week_2025-08-31", "ethereum-optimism/Retro-Funding", "week", "2025-08-31", "# ethereum-optimism/Retro-Funding Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on advancing the Retro Public Goods Funding framework and preparing for future protocol upgrades. Significant progress was made by establishing the foundational scaffolding for Season 8 calculations, designed with a season-agnostic approach to streamline future rounds. A key data integrity bug in Season 7's metrics was also resolved. Concurrently, active discussions focused on the integration of Kona and Cannon game types, highlighting the necessary updates across multiple components like `op-dispute-mon` and OPCM to support the new fault-proof system.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on building out the next iteration of the retro funding calculation engine and ensuring the accuracy of past results.\n\n- **Retro Funding Calculation Framework:**\n  - Initial scaffolding for Season 8 (S8) retro funding calculations was introduced, mirroring the Season 7 structure but with unified, season-agnostic tooling. This includes new configurations, data fetching utilities, and core models for allocators and builders, setting the stage for a more generic framework ([#74](https://github.com/ethereum-optimism/Retro-Funding/pull/74)).\n  - A bug was fixed to correct missing Enso monthly summary metrics from the `onchain__results.json` file for Season 7, Month 6, ensuring the accuracy of historical data reporting ([#75](https://github.com/ethereum-optimism/Retro-Funding/pull/75)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved resolving a proposer error and engaging in deep discussions around upcoming protocol features and tooling improvements.\n\n- **Closed Issues:**\n  - An issue regarding a persistent `GameAlreadyExists` error in `op-proposer` was closed. It was clarified that this error is expected when the safe head hasn't advanced, and the resolution involves ensuring the batcher is running correctly ([#17042](https://github.com/ethereum-optimism/Retro-Funding/issues/17042)).\n\n- **New & Active Issues:**\n  - **Kona + Cannon Integration:** A major topic of discussion was the work required to support the new `cannon-kona` game type. This involves updates to `op-dispute-mon` to prevent errors with unsupported game types ([#17286](https://github.com/ethereum-optimism/Retro-Funding/issues/17286)) and changes in OPCM to handle the deployment of the new game type ([#17285](https://github.com/ethereum-optimism/Retro-Funding/issues/17285)).\n  - **Tooling & Test Infrastructure:** Several issues highlighted a focus on improving developer experience and test reliability.\n    - A bug in the P2P gossip configuration was identified where sane defaults were being overwritten with zero values, causing test panics ([#17308](https://github.com/ethereum-optimism/Retro-Funding/issues/17308)).\n    - Discussions continued on enhancing the CircleCI configuration for better local testability and user experience ([#17184](https://github.com/ethereum-optimism/Retro-Funding/issues/17184)).\n    - The sync-tester issue was reopened to ensure all Hardfork transitions are properly tested ([#16703](https://github.com/ethereum-optimism/Retro-Funding/issues/16703)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was prominent in issue discussions, indicating a period of active planning and problem-solving. The integration of Kona and Cannon, for instance, saw detailed exchanges between team members to clarify requirements across different parts of the stack, such as `op-dispute-mon` and `contracts-bedrock`. Similarly, the conversations around improving CI/CD and testing infrastructure show a collective effort to enhance the internal development loop and maintain a high standard of code quality and reliability. While the number of merged pull requests was small, the depth of technical discussion in active issues points to significant foundational work being laid for future development.", "2025-09-04T03:41:21.049Z"]
["ethereum-optimism/design-docs_week_2025-08-31", "ethereum-optimism/design-docs", "week", "2025-08-31", "# ethereum-optimism/design-docs Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on strengthening the protocol and planning for future upgrades. A key design document was merged for a critical fix related to the OPCM Superchain upgrade, enhancing protocol security. Concurrently, significant discussion took place around the upcoming Kona + Cannon upgrade, with teams coordinating on necessary changes to contracts, dispute monitoring, and prestate integration. New proposals were also introduced, including an update to the minimum base fee calculation to account for database growth.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on both immediate protocol fixes and laying the groundwork for future enhancements.\n\n*   **Protocol Security & Superchain Upgrades:** A design document for a critical fix related to the OPCM Superchain upgrade was completed and merged ([#310](https://github.com/ethereum-optimism/design-docs/pull/310)). This work addresses a protocol issue and ensures alignment with the broader Superchain interoperability goals.\n\n*   **New Proposals & Documentation:** Two new pull requests were opened to propose changes and update documentation:\n    *   A proposal was made to update the minimum base fee calculation to better manage database growth ([#333](https://github.com/ethereum-optimism/design-docs/pull/333)).\n    *   A minor update to the repository's README was also proposed ([#332](https://github.com/ethereum-optimism/design-docs/pull/332)).\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed this week, but there was substantial discussion on several active issues, indicating a focus on planning and resolving existing technical challenges.\n\n*   **Closed Issues:** No issues were closed this week.\n\n*   **New & Active Issues:**\n    *   **Kona + Cannon Upgrade Planning:** A significant portion of discussion was dedicated to the upcoming Kona + Cannon upgrade. Key topics included:\n        *   **OPCM Support ([#17285](https://github.com/ethereum-optimism/design-docs/issues/17285)):** Confirmed that `OPContractsManager.sol` will require updates to support deploying the new game type.\n        *   **Dispute Monitor ([#17286](https://github.com/ethereum-optimism/design-docs/issues/17286)):** `op-dispute-mon` will need to be updated to explicitly support and correctly handle the new `cannon-kona` game type.\n        *   **Prestate Integration ([#17283](https://github.com/ethereum-optimism/design-docs/issues/17283)):** Discussion centered on how to integrate the new prestates, with a suggestion to use `type = \"cannon-kona\"` in `standard-prestates.toml`.\n    *   **Developer Experience:** Improving the CI/CD pipeline and local testing is an ongoing effort ([#17184](https://github.com/ethereum-optimism/design-docs/issues/17184)). Conversations explored identifying high-value CI jobs for local execution and automating config validation to reduce friction for developers.\n    *   **Protocol Bugs & Tooling:**\n        *   A bug in the P2P gossip configuration was identified where sane defaults are being overwritten with zero values, causing panics in tests ([#17308](https://github.com/ethereum-optimism/design-docs/issues/17308)).\n        *   The sync tester issue ([#16703](https://github.com/ethereum-optimism/design-docs/issues/16703)) was reopened to ensure all Hardfork transitions are properly tested.\n        *   It was noted that the Go 1.25.1 release does not include the MIPS fix required for Cannon ([#17060](https://github.com/ethereum-optimism/design-docs/issues/17060)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions across multiple active issues. Team members like `ajsutton`, `pauldowman`, and `pcw109550` were actively engaged in planning the implementation details for the Kona + Cannon upgrade, ensuring different components like OPCM and `op-dispute-mon` are aligned. The ongoing dialogue around improving CI/CD configuration ([#17184](https://github.com/ethereum-optimism/design-docs/issues/17184)) and resolving the P2P gossip bug ([#17308](https://github.com/ethereum-optimism/design-docs/issues/17308)) highlights a collaborative effort to enhance the project's tooling and robustness.", "2025-09-04T03:41:31.433Z"]
["ethereum-optimism/docs_week_2025-08-31", "ethereum-optimism/docs", "week", "2025-08-31", "# ethereum-optimism/docs Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThe start of the week focused on documentation maintenance, issue resolution, and planning for future enhancements. Key activities included proposing dependency updates to keep the documentation site current and removing dead links. An important issue regarding `op-proposer` errors was resolved, providing clarity to users on expected behavior. Meanwhile, an active discussion is shaping the requirements for updating `op-dispute-mon` to support new `cannon-kona` game types, a necessary step for advancing the fault-proof system.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this period centered on routine maintenance and site upkeep, with two new pull requests opened to improve the documentation platform.\n\n- **Dependency Management:** A pull request ([#1729](https://github.com/ethereum-optimism/docs/pull/1729)) was opened to upgrade the `next` framework from version 14.2.21 to 14.2.32. This ensures the documentation site stays current with the latest stable version of its underlying framework.\n- **Content Fixes:** A minor but helpful change was proposed in [#1732](https://github.com/ethereum-optimism/docs/pull/1732) to remove a dead link from the documentation, improving user experience.\n\n## \ud83d\udc1b Issues & Triage\nIssue management involved clarifying existing problems, tracking project metrics, and discussing future development needs.\n\n- **Closed Issues:**\n  - **`op-proposer` Error Clarification:** Issue [#17042](https://github.com/ethereum-optimism/docs/issues/17042) was closed after a discussion clarified that `GameAlreadyExists` errors from the `op-proposer` are expected if the safe head has not advanced. This resolution helps users distinguish between normal operation and actual problems with their batcher configuration.\n\n- **New & Active Issues:**\n  - **Monthly Metrics:** Two new issues, [#1730](https://github.com/ethereum-optimism/docs/issues/1730) and [#1731](https://github.com/ethereum-optimism/docs/issues/1731), were created to track the metrics for closed issues and opened pull requests for August 2025, indicating ongoing project health monitoring.\n  - **`op-dispute-mon` Enhancement:** A significant discussion continued in issue [#17286](https://github.com/ethereum-optimism/docs/issues/17286) regarding the need for `op-dispute-mon` to support `cannon-kona` game types. The conversation has helped define the requirement that the monitor must explicitly recognize and handle new game types while returning an error for any that are unsupported, laying the groundwork for a future update.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the issue triage process. The resolution of the `op-proposer` issue ([#17042](https://github.com/ethereum-optimism/docs/issues/17042)) demonstrates a responsive feedback loop where user-reported problems are investigated and clarified for the benefit of the wider community. Furthermore, the active discussion around `op-dispute-mon` support ([#17286](https://github.com/ethereum-optimism/docs/issues/17286)) shows collaborative effort in defining technical requirements for upcoming development work.", "2025-09-04T03:41:35.663Z"]
["ethereum-optimism/ecosystem_week_2025-08-31", "ethereum-optimism/ecosystem", "week", "2025-08-31", "# ethereum-optimism/ecosystem Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on refining the project's structure and modernizing its web presence. A significant repository cleanup was performed by externalizing the `verbs` packages into their own repository. Concurrently, a major new initiative was launched to migrate the Optimism marketing site to a modern Next.js and TypeScript stack, with detailed planning issues opened to guide the effort. This work was complemented by the completion of a branding refresh, with font updates and UI enhancements rolled out across several ecosystem websites.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development this week involved a structural refactoring of the repository to improve focus and maintainability.\n\n- **Repository Restructuring:** The `verbs` service, UI, and SDK packages were removed from the main repository. This work, completed in PR [#946](https://github.com/ethereum-optimism/ecosystem/pull/946), externalizes this specific functionality into a dedicated repository, streamlining the `ecosystem` codebase.\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nWork was completed on several fronts, primarily focused on improving the user-facing aspects of the ecosystem and its security posture.\n- **Branding and UI Consistency:** A series of issues were closed related to a consistent font update across `app.optimism.io`, `docs.optimism.io`, `console.optimism.io`, and `community.optimism.io` ([#922](https://github.com/ethereum-optimism/ecosystem/issues/922), [#923](https://github.com/ethereum-optimism/ecosystem/issues/923), [#924](https://github.com/ethereum-optimism/ecosystem/issues/924), [#933](https://github.com/ethereum-optimism/ecosystem/issues/933)). The implementation of a Storybook and design system for `optimism.io` was also completed, furthering UI consistency ([#931](https://github.com/ethereum-optimism/ecosystem/issues/931)).\n- **Site Enhancements & Security:** A Content Security Policy (CSP) was added to `oplabs.co` to improve security ([#934](https://github.com/ethereum-optimism/ecosystem/issues/934)), and minor updates were made to `localchain.dev` ([#932](https://github.com/ethereum-optimism/ecosystem/issues/932)).\n\n### New & Active Issues\nA significant new project was defined, and important technical discussions on protocol support continued.\n- **Marketing Site React Migration:** A major new workstream was kicked off to migrate the Optimism marketing site to a modern tech stack. A tracking issue ([#937](https://github.com/ethereum-optimism/ecosystem/issues/937)) was created, along with a comprehensive set of sub-tasks for setting up the monorepo ([#938](https://github.com/ethereum-optimism/ecosystem/issues/938]), CI/CD ([#939](https://github.com/ethereum-optimism/ecosystem/issues/939]), Sanity CMS ([#940](https://github.com/ethereum-optimism/ecosystem/issues/940]), Storybook ([#941](https://github.com/ethereum-optimism/ecosystem/issues/941)), and shared UI components ([#942](https://github.com/ethereum-optimism/ecosystem/issues/942), [#943](https://github.com/ethereum-optimism/ecosystem/issues/943)).\n- **Kona + Cannon Support:** Active discussions are ongoing in issues [#17285](https://github.com/ethereum-optimism/ecosystem/issues/17285) and [#17286](https://github.com/ethereum-optimism/ecosystem/issues/17286) regarding the necessary updates for `OPCM` and `op-dispute-mon` to support the new \"Kona + Cannon\" game types. The conversation emphasizes that new game types require explicit support and cannot be ignored, ensuring the robustness of the dispute monitoring system.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in both strategic planning and deep technical discussions. The creation of a detailed and well-structured set of issues ([#937-#944](https://github.com/ethereum-optimism/ecosystem/issues/937)) for the marketing site migration indicates a coordinated planning effort for a major new initiative. On the protocol side, the dialogue between contributors `ajsutton` and `pauldowman` in issues [#17285](https://github.com/ethereum-optimism/ecosystem/issues/17285) and [#17286](https://github.com/ethereum-optimism/ecosystem/issues/17286) highlights the collaborative process of clarifying technical requirements for critical components like the dispute game.", "2025-09-04T03:41:42.164Z"]
["ethereum-optimism/infra_week_2025-08-31", "ethereum-optimism/infra", "week", "2025-08-31", "# ethereum-optimism/infra Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on significant infrastructure refinement and enhancing the developer experience. Key achievements include a major refactoring of the `op-acceptor` test runner for improved modularity and the introduction of `mise` to standardize tool version management across the repository. Progress was also made in stabilizing the devnet testing environment, with several long-standing test porting and setup issues being closed. Ongoing discussions are focused on resolving a critical P2P gossip configuration bug and coordinating the multi-faceted integration of the \"Kona + Cannon\" game type across various system components.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving the project's foundational tooling and test infrastructure rather than adding new user-facing features.\n\n- **Test Runner and Logging Enhancements:** The `op-acceptor` component saw substantial improvements aimed at maintainability and easier debugging. The monolithic test runner was refactored into five distinct, more manageable components ([#448]). Complementing this, test logging was enhanced to produce separate plaintext, raw JSON, and summary log files for each test run, providing more granular diagnostic information ([#453]).\n\n- **Standardized Tool Version Management:** To streamline developer setup and ensure consistent environments, `mise` was introduced for repository-wide tool version management. The initial adoption began with `op-acceptor`, `op-conductor-mon`, and `op-conductor-ops`, setting the stage for a project-wide rollout ([#452]).\n\n## \ud83d\udc1b Issues & Triage\nIssue tracking this week was marked by the resolution of key testing hurdles and active discussions on protocol-level bugs and future upgrades.\n\n- **Closed Issues:**\n    - **Devnet Testing Stabilized:** A significant milestone was reached with the closure of issues related to porting acceptance tests to Devstack ([#440], [#444]) and ensuring all tests pass in persistent devnets ([#398]). This work improves the reliability of the development and testing environment.\n    - **Proposer Error Clarified:** An issue regarding an `op-proposer` error was closed with a clear explanation that the `GameAlreadyExists` error is expected behavior when the safe head has not advanced, helping to reduce user confusion ([#17042]).\n\n- **New & Active Issues:**\n    - **P2P Gossip Configuration Bug:** A critical discussion is ongoing around a bug where `ConfigureGossip` overwrites sane defaults with zero values, leading to panics in `go-libp2p-pubsub` during tests ([#17308]). The debate centers on enforcing valid configurations by default, with a proposed solution to add a `DefaultP2PConfig` method to prevent invalid states.\n    - **\"Kona + Cannon\" Integration:** A major focus of active discussion is the integration of the new Kona + Cannon game type. This involves coordinated efforts across multiple components, including adding support in `op-dispute-mon` ([#17286]), making necessary changes to OPCM for deployment ([#17285]), and defining the format for `standard-prestates.toml` ([#17283]).\n    - **CI/CD & Test Coverage:** Discussions continue on improving the developer experience for CI/CD ([#17184]) and expanding the `op-sync-tester` to cover all Hard Fork transitions, an issue that was reopened to ensure complete test coverage ([#16703]).\n    - **Recurring `op-geth` Error:** Users continue to report an \"head block is not reachable\" error during `op-geth` initialization, indicating a persistent pain point in the user setup experience that may require further investigation ([#420]).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was highly visible this week through in-depth discussions on complex technical issues. The P2P gossip bug ([#17308]) sparked a detailed technical exchange between contributors, who worked together to diagnose the root cause related to dependency updates and propose robust solutions.\n\nSimilarly, the planning for \"Kona + Cannon\" integration shows strong coordination between core developers across multiple issues ([#17286], [#17285]), ensuring that different parts of the infrastructure are prepared for the upcoming changes. The recurring `op-geth` issue ([#420]) also highlights community engagement, with users sharing workarounds and experiences, signaling an area where official documentation or a code fix could provide significant value.", "2025-09-04T03:41:46.079Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-08-31", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-08-31", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on expanding the Superchain ecosystem and laying the groundwork for next-generation fault proofs. The Superchain Token List saw significant growth with the addition of four new tokens, enhancing asset availability on Base and Ethereum. Concurrently, intensive technical discussions took place around the integration of the new `cannon-kona` fault proof game type, with a focus on updating core components like the dispute monitor and contract manager. Key operational issues were also resolved, including a clarification on expected `op-proposer` errors and a strategic decision to streamline chain data management by leveraging the Superchain Registry.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development work this week focused on growing the on-chain ecosystem by expanding the Superchain Token List.\n\n- **Superchain Token List Expansion:** To improve interoperability and support for projects building on the Superchain, several new tokens were added. This included adding ARCv2 ([#1184](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1184)), MITY ([#1185](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1185)), CIOTX ([#1191](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1191)), and FORT ([#1194](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1194)) tokens, with most additions targeting the Base network.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved resolving operational questions, streamlining data processes, and advancing discussions on critical future work related to fault proofs and node stability.\n\n- **Closed Issues:**\n    - **Proposer Error Clarification:** An issue regarding `op-proposer` errors ([#17042](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17042)) was closed. It was clarified that `GameAlreadyExists` errors are expected behavior when the safe head has not advanced, providing valuable operational guidance for node operators.\n    - **Chain Data Management:** To reduce maintenance overhead, the decision was made to use the Superchain Registry to populate the token list's available chains, closing issue [#1122](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1122).\n\n- **New & Active Issues:**\n    - **Kona + Cannon Fault Proof Integration:** A significant portion of discussion focused on the upcoming `cannon-kona` fault proof system. Active issues track the necessary updates for `op-dispute-mon` to support the new game type ([#17286](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17286]), changes required in the Optimism Portal Contract Manager (OPCM) for deployment ([#17285](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17285)), and tooling for managing absolute prestates ([#17283](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17283)).\n    - **Node Stability and Tooling:** A bug is being investigated where P2P gossip configuration overwrites defaults with zero values, causing test panics ([#17308](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17308)). Additionally, compatibility with Go 1.25 for Cannon remains under review ([#17060](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17060)).\n    - **Testing and CI/CD:** An issue to enhance sync tests was reopened to ensure all hardfork transitions are covered ([#16703](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16703)), and discussions are ongoing to improve the developer experience for CircleCI configurations ([#17184](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17184)).\n    - **Ecosystem Growth:** Continuing the week's theme, a new pull request ([#1195](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1195)) was opened to add the FLIXX token for Base.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was prominent in the detailed technical discussions surrounding the Kona + Cannon integration. Contributors `ajsutton` and `pauldowman` were actively involved in clarifying requirements and refining issue scopes for `op-dispute-mon` ([#17286](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17286)) and OPCM ([#17285](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17285)), demonstrating healthy alignment on complex protocol upgrades. The steady stream of token addition PRs also indicates a smooth and effective collaboration process between the Optimism team and the broader ecosystem of projects building on the Superchain.", "2025-09-04T03:41:51.461Z"]
["ethereum-optimism/op-analytics_week_2025-08-31", "ethereum-optimism/op-analytics", "week", "2025-08-31", "# ethereum-optimism/op-analytics Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on expanding the project's analytical capabilities and engaging in deep technical discussions on core infrastructure. New chain analysis output was added for five chains, providing updated gas limit data and new analytical plots. Meanwhile, significant planning and problem-solving took place in active issues, with a focus on the upcoming Kona/Cannon integration, improving CI/CD for a better developer experience, and addressing a critical P2P gossip configuration bug.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary completed work this week involved enhancing the project's data analysis tooling.\n\n- **Expanded Chain Analysis Data:** New analysis output was generated for Ink, Mode, Soneium, Unichain, and Worldchain. This update included refreshed gas limit data, new analytical plots, and an updated README for the `jovian_analysis` notebook, providing more comprehensive insights into these chains ([#1740](https://github.com/ethereum-optimism/op-analytics/pull/1740)).\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed this week. Discussions were concentrated on several key active issues that represent significant future work and current challenges.\n\n- **New & Active Issues:**\n    - **Kona/Cannon Integration:** Planning for the integration of Kona with Cannon continued across multiple issues. Discussions centered on ensuring OPCM can deploy the new game type ([#17285](https://github.com/ethereum-optimism/op-analytics/issues/17285)) and defining how the `cannon-kona` type will be represented in the `standard-prestates.toml` file ([#17283](https://github.com/ethereum-optimism/op-analytics/issues/17283)).\n    - **P2P Networking Bug:** A significant bug was discussed where `ConfigureGossip` can overwrite default settings with zero values, leading to potential panics in `go-libp2p-pubsub` ([#17308](https://github.com/ethereum-optimism/op-analytics/issues/17308)). Proposed solutions include creating a default configuration method to ensure valid parameters.\n    - **Developer Experience & CI/CD:** A conversation around improving the CircleCI configuration is ongoing, with ideas to make high-value jobs like `kurtosis` and `go-tests-short` easier to run locally. The possibility of dynamically sorting Go tests by execution time to optimize test runs was also explored ([#17184](https://github.com/ethereum-optimism/op-analytics/issues/17184)).\n    - **Testing & Compatibility:** The issue for enhancing the sync tester was reopened, with a new focus on testing every OP Stack Hard Fork transition ([#16703](https://github.com/ethereum-optimism/op-analytics/issues/16703)). Separately, a potential compatibility issue with Go 1.25 remains a concern for Cannon, as the latest point release (1.25.1) does not appear to include the required MIPS fix ([#17060](https://github.com/ethereum-optimism/op-analytics/issues/17060)).\n\n## \ud83d\udcac Community & Collaboration\nWhile there were no new pull requests to review, collaboration was evident within the detailed discussions on active issues. The community's focus was on architectural planning and debugging complex problems. The active threads on Kona/Cannon integration, P2P gossip configuration, and CI/CD improvements show a high degree of engagement from core contributors in shaping the future direction and stability of the OP Stack.", "2025-09-04T03:41:52.378Z"]
["ethereum-optimism/op-geth_week_2025-08-31", "ethereum-optimism/op-geth", "week", "2025-08-31", "# ethereum-optimism/op-geth Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's primary achievement was a significant upstream merge, bringing `op-geth` in sync with `go-ethereum v1.16.2`. While code contributions were focused on this integration, substantial effort was dedicated to planning and discussion around key initiatives. Conversations centered on the upcoming Kona and Cannon upgrades, specifically their integration with OPCM and `op-dispute-mon`. Concurrently, the team triaged newly reported issues concerning node stability with large genesis files and RPC query inconsistencies, while also advancing discussions on improving CI/CD infrastructure and P2P configuration defaults.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe week's development work was centered on maintaining alignment with the upstream `go-ethereum` project.\n\n- **Upstream Geth Integration:** The `op-geth` codebase was updated by merging `go-ethereum v1.16.2` ([#663](https://github.com/ethereum-optimism/op-geth/pull/663)). This crucial merge ensures that `op-geth` incorporates the latest changes and improvements from its foundational dependency, affecting numerous components from `cmd/geth` to `accounts/abi`.\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed this week. The focus was on triaging new reports and advancing discussions on complex active issues.\n\n- **New & Active Issues:**\n    - **Node Stability and RPC Reliability:** Two significant issues were opened, pointing to potential reliability concerns. One report detailed a `leveldb panic` when initializing a node with a large genesis file ([#668](https://github.com/ethereum-optimism/op-geth/issues/668)), while another highlighted missing events in `eth_getLogs` calls and high latency ([#667](https://github.com/ethereum-optimism/op-geth/issues/667)).\n    - **Kona + Cannon Integration:** Discussions continued on the necessary changes to support the Kona and Cannon upgrades. This included defining requirements for OPCM to handle the new game type ([#17285](https://github.com/ethereum-optimism/op-geth/issues/17285)), ensuring `op-dispute-mon` can correctly process or reject new game types ([#17286](https://github.com/ethereum-optimism/op-geth/issues/17286)), and defining the format for standard prestates ([#17283](https://github.com/ethereum-optimism/op-geth/issues/17283)).\n    - **CI/CD and Testing Improvements:** An issue regarding sync testing was reopened to ensure more comprehensive coverage of hard fork transitions ([#16703](https://github.com/ethereum-optimism/op-geth/issues/16703)). Separately, a discussion on improving the developer experience for local CI job execution continued, with suggestions for better tooling to manage test prerequisites and sort tests by duration ([#17184](https://github.com/ethereum-optimism/op-geth/issues/17184)).\n    - **Configuration and Compatibility:** A bug in the P2P gossip configuration, where default values are incorrectly overwritten with zero values, was actively discussed ([#17308](https://github.com/ethereum-optimism/op-geth/issues/17308)). The team also continued to monitor Go 1.25 compatibility for Cannon, noting that a required MIPS fix may not be in the latest Go patch release ([#17060](https://github.com/ethereum-optimism/op-geth/issues/17060)).\n\n## \ud83d\udcac Community & Collaboration\nThis period was characterized by intensive discussion and collaborative problem-solving among core contributors. The active issue threads show focused efforts on multiple fronts:\n- **Kona/Cannon Preparation:** Contributors `ajsutton` and `pauldowman` were heavily involved in discussions to scope out the work required for Kona and Cannon support across different parts of the stack.\n- **Infrastructure and Tooling:** A collaborative effort to improve the CI/CD developer experience was evident in the detailed feedback exchanged between `bitwiseguy` and `teddyknox` ([#17184](https://github.com/ethereum-optimism/op-geth/issues/17184)).\n- **Bug Triage:** The P2P configuration bug ([#17308](https://github.com/ethereum-optimism/op-geth/issues/17308)) saw a technical deep-dive between `wood-jp` and `ajsutton` to identify the root cause and debate the best path to a solution, highlighting a rigorous approach to maintaining code quality.", "2025-09-04T03:41:58.480Z"]
["ethereum-optimism/superchain-registry_week_2025-08-31", "ethereum-optimism/superchain-registry", "week", "2025-08-31", "# ethereum-optimism/superchain-registry Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on infrastructure maintenance and planning for future protocol upgrades. A key improvement was made to the CI pipeline to enhance build reliability by removing a problematic integration. Meanwhile, significant discussions continued around the necessary changes to support Kona + Cannon, specifically defining the scope of work required in OPCM and `op-dispute-mon`. A new pull request was also opened to update contract addresses, signaling ongoing registry updates.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving the stability of the development process.\n\n- **CI Pipeline Reliability:** The Codecov integration was removed from the CI pipeline to resolve persistent build failures. This change, implemented in [#1101](https://github.com/ethereum-optimism/superchain-registry/pull/1101), aims to create a more stable and reliable continuous integration environment for contributors.\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed or newly created this week. The focus remained on clarifying the implementation details for active issues and progressing new pull requests.\n\n- **New & Active Issues:**\n    - **Kona + Cannon Support:** Discussions progressed on the requirements for supporting the upcoming Kona + Cannon upgrade.\n        - In [#17285](https://github.com/ethereum-optimism/superchain-registry/issues/17285), the conversation clarified that OPCM will require updates to `OPContractsManager.sol` to handle the deployment of the new game type.\n        - Similarly, for `op-dispute-mon` ([#17286](https://github.com/ethereum-optimism/superchain-registry/issues/17286)), the consensus is that the service must be explicitly updated to support cannon-kona games and return an error for any unsupported game types.\n    - **Work in Progress:** A new pull request ([#1100](https://github.com/ethereum-optimism/superchain-registry/pull/1100)) was opened to update contract addresses for u16 and is currently awaiting review.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active technical discussions surrounding future protocol support. Contributors `ajsutton` and `pauldowman` worked together on issues [#17285](https://github.com/ethereum-optimism/superchain-registry/issues/17285) and [#17286](https://github.com/ethereum-optimism/superchain-registry/issues/17286) to refine the requirements for integrating Kona + Cannon support, demonstrating a proactive approach to planning for significant upcoming changes.", "2025-09-04T03:42:09.733Z"]
["ethereum-optimism/superchain-ops_week_2025-08-31", "ethereum-optimism/superchain-ops", "week", "2025-08-31", "# ethereum-optimism/superchain-ops Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing developer experience and addressing critical bugs. Significant performance gains were achieved in the CI pipeline, with regression tests now running 40% faster. Key fixes were deployed for a Worldchain nonce issue and a Go version incompatibility affecting developer tooling. Meanwhile, active discussions progressed on the integration of Kona + Cannon fault proofs, signaling a major focus on future protocol upgrades. Preparations for network upgrades also began, with new pull requests opened to bring several Sepolia testnets to the U16 release.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on improving system stability, performance, and developer workflow.\n\n**CI & Developer Experience Improvements**\n- **CI Performance:** A series of optimizations were merged to improve CI stability and speed. By reducing concurrent processes to mitigate 502 errors and skipping unnecessary account decoding in tests, a 40% performance improvement was realized in regression tests ([#1177](https://github.com/ethereum-optimism/superchain-ops/pull/1177), [#1178](https://github.com/ethereum-optimism/superchain-ops/pull/1178)).\n- **Go Version Compatibility:** A bug was fixed by updating the Go version used by `mise` to `1.24.6`. This resolves a compatibility issue with `eip712sign` and ensures local development environments function correctly ([#1183](https://github.com/ethereum-optimism/superchain-ops/pull/1183)).\n\n**Critical Bug Fixes**\n- **Worldchain Nonce Correction:** A critical bug affecting L1 ownership transfers for Worldchain was resolved. The fix ensures the correct nonce number is used, restoring proper functionality ([#1176](https://github.com/ethereum-optimism/superchain-ops/pull/1176)).\n\n**Upcoming Network Upgrades**\n- Pull requests were opened to upgrade Zora Sepolia ([#1180](https://github.com/ethereum-optimism/superchain-ops/pull/1180)), Metal Sepolia ([#1181](https://github.com/ethereum-optimism/superchain-ops/pull/1181)), and Mode Sepolia ([#1182](https://github.com/ethereum-optimism/superchain-ops/pull/1182)) from release U13 to U16.\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed this week, but significant progress was made in discussions on active issues, clarifying the path forward for key initiatives.\n\n- **New & Active Issues:**\n    - **Kona + Cannon Integration:** This was a major topic of discussion. Planning is underway to support the new fault proof system across the stack. This includes updating OPCM to deploy the new game type ([#17285](https://github.com/ethereum-optimism/superchain-ops/issues/17285)), ensuring `op-dispute-mon` can monitor Kona games ([#17286](https://github.com/ethereum-optimism/superchain-ops/issues/17286)), and adapting tooling to manage `cannon-kona` prestates ([#17283](https://github.com/ethereum-optimism/superchain-ops/issues/17283)).\n    - **CI/CD and Testing:** Discussions in [#17184](https://github.com/ethereum-optimism/superchain-ops/issues/17184) highlighted challenges with the current CircleCI configuration, particularly the difficulty of running tests locally. In parallel, issue [#16703](https://github.com/ethereum-optimism/superchain-ops/issues/16703) was reopened to expand sync test coverage for all hardfork transitions.\n    - **Configuration Bugs:** A bug in P2P gossip configuration where default values were being improperly overwritten was identified in [#17308](https://github.com/ethereum-optimism/superchain-ops/issues/17308), with a fix proposed to prevent panics in tests.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed planning for the upcoming Kona + Cannon integration. Discussions in issues [#17285](https://github.com/ethereum-optimism/superchain-ops/issues/17285) and [#17286](https://github.com/ethereum-optimism/superchain-ops/issues/17286) show active coordination between core contributors to define the required changes across different parts of the system. The parallel submission of multiple network upgrade PRs ([#1180](https://github.com/ethereum-optimism/superchain-ops/pull/1180), [#1181](https://github.com/ethereum-optimism/superchain-ops/pull/1181), [#1182](https://github.com/ethereum-optimism/superchain-ops/pull/1182)) also suggests a coordinated effort to align Superchain networks on the next release.", "2025-09-04T03:42:11.299Z"]
["ethereum-optimism/optimism_week_2025-08-31", "ethereum-optimism/optimism", "week", "2025-08-31", "# ethereum-optimism/optimism Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant overhaul of the project's testing infrastructure, aimed at improving robustness and developer velocity. Major efforts were made to unify acceptance tests into a single workflow, migrate existing tests to Devstack, and enhance the `op-sync-tester` with external network capabilities. Alongside testing improvements, core protocol components received key updates, including the introduction of feature flagging in `SystemConfig`. The team also closed a remarkable number of long-standing issues related to Drippie, Cannon, and past protocol stages, clearing technical debt and marking the completion of major initiatives.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on bolstering testing frameworks, enhancing core protocol flexibility, and improving the developer workflow.\n\n### Testing Infrastructure Overhaul\nA concerted effort was made to streamline, centralize, and expand test coverage, resulting in a more robust and efficient testing environment.\n- **Acceptance Test Unification:** All acceptance tests were consolidated into a single, dedicated workflow, moving them out of general unit test runs to improve organization and efficiency ([#16755], [#16817]).\n- **Devstack Migration:** Key test suites, including Fjord (Holocene) and critical smoke tests, were successfully ported to the Devstack environment, enhancing end-to-end testing capabilities ([#16920], [#17300]).\n- **`op-sync-tester` Enhancements:** The sync tester was significantly improved by adding read-only Execution Layer access ([#17275]), full support for the `sync` namespace for session management ([#17299]), and integration with external ELs for more realistic testing scenarios ([#17251]).\n\n### Core Component and Protocol Enhancements\nSeveral components of the OP Stack received important updates to increase configurability and prepare for future upgrades.\n- **Feature Flagging:** The `SystemConfig` contract was updated to support feature flagging, allowing for the controlled rollout of new protocol features by the ProxyAdmin ([#17281]).\n- **Fault Proof Configuration:** The `op-challenger` now includes configurable response delays, providing more flexibility for testing fault proof game interactions ([#16988]).\n- **Deployment Flexibility:** The `op-deployer` was improved to allow custom gas limits to be set for chains in intent files, offering more control during deployment ([#17271]).\n- **Dependency Management:** The `op-geth` dependency was updated to `v1.16.2` ([#17228]).\n\n### CI/CD and Developer Experience\nThe development process was streamlined through several key changes.\n- The frozen file check was removed from the CI pipeline to accelerate progress on the `develop` branch ([#17289]).\n- The `publish-cannon-prestates` CI job was migrated to a more reliable environment to address network flakiness ([#17296]).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a major cleanup of the issue tracker, resolving numerous historical items while also identifying new challenges and planning for future work.\n\n### Closed Issues\nA significant number of long-standing issues were closed, marking the completion of several major workstreams:\n- **Project Milestones:** The shipping checklist for Stage 1.4 ([#15827]) was completed.\n- **Drippie Automation:** A series of issues related to the deployment and operationalization of Drippie for managing challenger funds were closed, including mainnet deployment and dashboard integration ([#12876], [#13764], [#14048]).\n- **Cannon VM:** Key issues for the Cannon fault proof VM were resolved, including adding full `mips64r2` ISA support ([#13969]) and scaling the VM runner ([#16910]).\n- **Bug Fixes & Housekeeping:** An `op-proposer` error was resolved ([#17042]), and an old `op-geth` initialization error was closed ([#420]). The effort to unify acceptance tests also closed its primary tracking issue ([#16272]).\n\n### New & Active Issues\nDiscussions this week centered on a critical new bug and preparations for upcoming protocol features.\n- **`op-node` P2P Bug:** A significant bug was reported where `ConfigureGossip` in `op-node` overwrites sane defaults with zero values, leading to panics ([#17308]). This has sparked an active discussion on the best approach for setting default configurations to prevent such issues.\n- **Aggregate Dispute Game Design:** A new issue ([#17305]) was opened to begin the initial design for an aggregate dispute game, signaling the start of research and development for the next generation of fault proofs.\n- **Kona Upgrade Preparation:** Discussions are ongoing to ensure all stack components are prepared for the Kona + Cannon game types. This includes verifying support in `OPContractsManager` ([#17285]), `op-dispute-mon` ([#17286]), and standard prestates ([#17283]).\n- **Test Stability:** New issues were opened to address flakiness in acceptance tests ([#17298]) and ensure action tests are passing for the upcoming Jovian hardfork ([#17302], [#17303]).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted strong, focused collaboration within the development team. The coordinated, multi-PR effort to overhaul the acceptance testing framework demonstrates a shared commitment to improving engineering quality and velocity. Furthermore, the detailed discussion on the `op-node` gossip bug ([#17308]) between team members shows a healthy, in-depth process for diagnosing complex issues and debating the merits of different solutions. The closure of a large volume of historical issues suggests a collective push to finalize past workstreams, clearing the path for the team to focus on future priorities like the Kona upgrade and aggregate dispute games.", "2025-09-04T03:42:16.120Z"]
["ethereum-optimism/design-docs_month_2025-06-01", "ethereum-optimism/design-docs", "month", "2025-06-01", "# ethereum-optimism/design-docs Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nActivity in June concluded with a focus on future enhancements and rapid issue resolution. A significant new design document was proposed for configurable calldata gas, indicating ongoing work to refine the economic model of the protocol. Additionally, the project demonstrated efficient issue triage with the swift closure of a reported bug concerning the `op-deployer` tool.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, no design documents were completed or merged during this period. However, new work was initiated that points to future protocol improvements.\n\nA new pull request ([#294](https://github.com/ethereum-optimism/design-docs/pull/294)) was opened to introduce a design for configurable calldata gas. This proposal is currently awaiting review and represents a key area of active design consideration.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was prompt, with one key problem being resolved.\n\n- **Closed Issues:** A bug related to `op-deployer v0.4.0-rc.2` ([#16618](https://github.com/ethereum-optimism/design-docs/issues/16618)) was reported and closed on the same day. The issue, which caused an error when using `standard-overrides`, was fixed in a subsequent release candidate.\n- **New & Active Issues:** No new issues were opened, and there were no significant discussions on existing active issues during this timeframe.\n\n## \ud83d\udcac Community & Collaboration\nThe available data highlights efficient internal processes, as seen in the quick resolution of the `op-deployer` issue. The introduction of the configurable calldata gas design document suggests ongoing architectural discussions, though the reports do not provide details on broader community engagement or collaborative reviews for this period.", "2025-09-04T03:42:29.798Z"]
["ethereum-optimism/Retro-Funding_month_2025-06-01", "ethereum-optimism/Retro-Funding", "month", "2025-06-01", "# ethereum-optimism/Retro-Funding Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nDevelopment in June focused entirely on investigation, discussion, and planning rather than code implementation. No new features or fixes were merged. Instead, significant effort was directed toward diagnosing critical stability issues within core components like `op-node` and `op-supervisor`. Key discussions centered on resolving stuck goroutines and event overflows, improving release pipeline automation, and clarifying the roles of different developer testing environments. This period laid the essential groundwork for future stability improvements and process refinements across the project.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no pull requests were merged this month, progress was made through active investigation and planning within key issues:\n\n- **`op-supervisor` Stability Investigation:** To address an event overflow issue ([#16335](https://github.com/ethereum-optimism/Retro-Funding/issues/16335)), a diagnostic approach was proposed. A pull request ([#16473](https://github.com/ethereum-optimism/optimism/pull/16473)) was opened to add a gauge for in-flight events, aiming to pinpoint which event type is causing the overflow during large unsafe head gaps. Another related PR ([#16471](https://github.com/ethereum-optimism/optimism/pull/16471)) suggested adding a counter per event type for debugging.\n\n- **Testing Infrastructure Setup:** Progress was made on enabling comprehensive acceptance testing in persistent devnets ([#398](https://github.com/ethereum-optimism/Retro-Funding/issues/398)). A key update was the addition of L1 Faucet support via a related pull request ([#16423](https://github.com/ethereum-optimism/optimism/pull/16423)), an important step for creating a robust testing environment.\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed in June, and no new issues were opened. All activity was concentrated on diagnosing and discussing existing problems.\n\n- **New & Active Issues:**\n    - **Node Stability:** The most critical active discussions revolved around node stability. Issue [#16332](https://github.com/ethereum-optimism/Retro-Funding/issues/16332) highlighted thousands of stuck goroutines in `op-node` v1.13.3, with community members providing detailed stack traces to aid the investigation. Simultaneously, issue [#16335](https://github.com/ethereum-optimism/Retro-Funding/issues/16335) saw extensive discussion to diagnose an `op-supervisor` event overflow, leading to proposals for adding new metrics to identify the root cause.\n    - **Release & Developer Tooling:** Efforts to streamline processes were evident. In [#16097](https://github.com/ethereum-optimism/Retro-Funding/issues/16097), a lighter-weight solution using `git cliff` was suggested for automating changelog generation. In [#399](https://github.com/ethereum-optimism/Retro-Funding/issues/399), contributors worked to clarify the distinction and primary use cases for `supersim` versus Kurtosis devnets for local multi-chain application testing.\n    - **Configuration and Error Handling:** A discussion in [#15765](https://github.com/ethereum-optimism/Retro-Funding/issues/15765) concluded that the `op-deployer` tooling is sufficient for preventing incorrect `CrossL2Inbox` genesis configurations, avoiding the need for additional validation in the execution client. Separately, issue [#725](https://github.com/ethereum-optimism/Retro-Funding/issues/725) was activated to begin the process of adding missing Super DA (Data Availability) error codes.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was characterized by in-depth technical discussions within GitHub issues. Team members (`nonsense`, `sebastianst`, `axelKingsley`, `ajsutton`) and community contributors (`Creamers158`) worked together to diagnose complex problems.\n\nA notable example of community collaboration was in issue [#16332](https://github.com/ethereum-optimism/Retro-Funding/issues/16332), where `Creamers158` confirmed a reported `op-node` bug and provided a detailed stack trace, which is invaluable for debugging. The discussions around `op-supervisor` ([#16335](https://github.com/ethereum-optimism/Retro-Funding/issues/16335)) and developer tooling ([#399](https://github.com/ethereum-optimism/Retro-Funding/issues/399)) also demonstrated a healthy, collaborative environment focused on identifying the best path forward before implementing changes.", "2025-09-04T03:42:41.550Z"]
["ethereum-optimism/community-hub_month_2025-06-01", "ethereum-optimism/community-hub", "month", "2025-06-01", "# ethereum-optimism/community-hub Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of two distinct halves, beginning with focused documentation improvements and culminating in a major push to enhance developer tooling. The most significant achievement was the series of upgrades to the Superchain-Ops workflow, which streamlined task automation, simulation, and CI efficiency, leading to the closure of numerous long-standing developer experience issues. Concurrently, the project invested heavily in clarifying community governance, with comprehensive content overhauls for the Citizen House and Token House. Ongoing efforts to improve system stability were also prominent, with tangible progress made in mitigating CI flakiness and investigating critical component behaviors like the `op-supervisor` and `op-geth`.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis section details the concrete work completed in June, categorized by focus area.\n\n### Superchain-Ops Workflow Enhancements\nA significant effort was dedicated to improving the Superchain-Ops tooling, resulting in a more efficient and developer-friendly workflow.\n- **Stacked Simulations:** Implemented support for \"stacked\" proposals, allowing for the sequential simulation and execution of tasks with incrementing nonces. This addresses key CI efficiency and task scheduling challenges ([#342], [#337]).\n- **CI & Tooling Performance:** CI job performance was improved by optimizing chain discovery and address registry lookups ([#648]). The `SIMULATE_WITHOUT_LEDGER` functionality was refined for better interactive simulations ([#448]), and the `AccountAccessParser` was enhanced to output state diffs in a more readable Markdown format ([#777]).\n- **Mainnet Integration:** Task fetching was updated to use the mainnet task directory, and various paths were corrected to ensure consistency with production environments and monorepo integration tests ([#547], [#600], [#548]).\n\n### Governance and Community Documentation\nClarity and accessibility of governance documentation were a major focus, with extensive updates across the community hub.\n- **Citizen House Overhaul:** The Citizen House documentation received a comprehensive refresh, including updates to the overview, glossary, eligibility requirements, selection process, and FAQs ([#1152], [#1161]). A bug affecting the display of eligible chains and applications on the governance site was also fixed ([#1159]).\n- **General Content Refinements:** Copy was updated across several key pages to improve clarity, including the welcome overview, how-to-delegate guide, Token House overview, and grant overview ([#1156], [#1157], [#1158], [#1160]).\n- **Schema and Link Fixes:** Minor but important updates included adding a `refUID` field to the citizen schema ([#1162]) and fixing various broken links ([#1150], [#1151], [#1153]).\n\n## \ud83d\udc1b Issues & Triage\nThis section summarizes the state of issues in the project, highlighting key resolutions and ongoing discussions.\n\n### Closed Issues\nA large volume of issues were closed in June, primarily centered around a single, coordinated effort to improve developer tooling.\n- **Superchain-Ops & Developer Experience:** The most significant achievement was the closure of a large batch of issues related to the Superchain-Ops framework. This work resolved problems with CI automation ([#337]), stacked proposal support ([#342]), tooling refinements ([#448], [#514]), contract validation ([#636], [#654]), and pathing for mainnet tasks ([#547], [#600]).\n- **CI Stability:** The investigation into CI flakiness ([#16271]) was closed after significant progress was made, including the release of a test flake report generator to monitor stability going forward.\n- **Dependencies & Documentation:** A dependency issue causing import errors in `@eth-optimism/tokenlist` was resolved ([#1146]), and an issue related to an outdated testnet tutorial was closed ([#1614]).\n\n### New & Active Issues\nWhile few new critical issues were opened, several active discussions point to key areas of future work and ongoing challenges.\n- **Release Pipeline Automation ([#16097]):** An important discussion is underway to streamline the release process for `op-node`, `op-batcher`, and other components by using tools like `GoReleaser` and `git-cliff` for automated changelog generation.\n- **`op-geth` CPU Usage ([#613]):** An issue regarding abnormal CPU usage in a recent `op-geth` version remains active. While some maintainers suggest the issue is temporary and related to index rebuilding, community members report persistent high usage, prompting further investigation.\n- **`op-supervisor` Hardening:** Discussions continue on improving the robustness of the `op-supervisor`, specifically around handling L1 origin validity during resets ([#16315]) and diagnosing a potential event overflow on large unsafe head gaps ([#16335]).\n- **Incorrect Nonce Bug ([#623]):** A long-standing issue where `eth_getTransactionCount` returns an incorrect nonce for pending transactions continues to affect users, with community members periodically requesting updates on a fix.\n\n## \ud83d\udcac Community & Collaboration\nJune's activity highlighted strong internal collaboration and active engagement from the wider community.\n- The successful push to improve the Superchain-Ops tooling, culminating in the closure of many issues on June 26, points to a well-coordinated team effort. This was supported by internal knowledge sharing, including the creation of training sessions and Loom videos to onboard stakeholders to the new tools ([#514]).\n- Active technical discussions on issues like CI flakiness ([#16271]), `op-geth` performance ([#613]), and release automation ([#16097]) demonstrate healthy collaboration between core developers (including `scharissis`, `sebastianst`, `protolambda`, and `geoknee`) and engaged community members.\n- There is evidence of community members stepping up to contribute, with multiple users expressing interest in tackling developer experience improvements like reducing noisy terminal output ([#781]).", "2025-09-04T03:42:42.760Z"]
["ethereum-optimism/ethereum-optimism.github.io_month_2025-06-01", "ethereum-optimism/ethereum-optimism.github.io", "month", "2025-06-01", "# ethereum-optimism/ethereum-optimism.github.io Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of stabilization and refinement, with a strong focus on the reliability of core OP Stack components and the enhancement of developer tooling. Significant effort was dedicated to investigating and hardening the `op-supervisor`, addressing its reset logic, event handling, and L1 origin validity. Concurrently, performance issues in the `op-batcher` and `op-geth` were actively diagnosed. The developer experience saw major improvements with a large-scale refinement of the Superchain-Ops tooling and a critical bug fix for the `@eth-optimism/tokenlist` package, which unblocked developers and expanded the ecosystem with new token integrations.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis month's completed work centered on expanding the token ecosystem and delivering a major update to developer operations tooling.\n\n- **Token Ecosystem Expansion & Fixes:** A critical bug in the `@eth-optimism/tokenlist` npm package, which caused a missing `dist` directory and import errors, was resolved ([#1161](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1161)). The ecosystem's asset support was also broadened by adding BTREE token addresses ([#1143](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1143)), Bridged EURC to Lisk ([#1157](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1157)), and the Glyphs token to the Base registry ([#1159](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1159)). A pull request was also opened to add support for BiLira (TRYB) ([#1165](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1165)).\n\n- **Superchain-Ops Tooling Refinement:** A significant push on June 26 resulted in the closure of numerous issues related to the Superchain-Ops tooling, marking a major milestone in its development. Key improvements included enhancing CI job performance ([#648](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/648)), supporting \"stacked\" proposals with incrementing nonces ([#342](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/342)), improving task simulation behavior ([#448](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/448)), and refining the user experience for overriding nonces ([#770](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/770)).\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this month were dominated by efforts to improve the stability and performance of critical infrastructure components.\n\n- **Closed Issues:**\n    - A critical issue preventing the use of the `@eth-optimism/tokenlist` package was resolved ([#1146](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1146)).\n    - A large batch of issues related to the Superchain-Ops tooling was closed, covering CI, testing, task management, and architecture ([#337](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/337), [#636](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/636), [#777](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/777), and others).\n    - Issues related to Flashblocks acceptance testing and deployment were completed, moving the feature forward ([#16496](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16496)).\n    - A bug in `op-deployer v0.4.0-rc.2` was resolved in a subsequent release candidate ([#16618](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16618)).\n\n- **New & Active Issues:**\n    - **`op-supervisor` Stability:** A primary focus of ongoing work is the `op-supervisor`. Active discussions revolve around improving L1 origin validity checks during resets ([#16315](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16315)), enabling data provision for fault proofs in non-genesis interop scenarios ([#16166](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16166)), and investigating event overflows that can lead to crash-loops ([#16335](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16335), [#16603](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16603)).\n    - **Component Performance:** Several high-priority performance issues are under investigation. These include high memory consumption in the `op-batcher` during L1 congestion ([#16537](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16537)), abnormal CPU usage in `op-geth` potentially related to log indexing ([#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613)), and `op-node` getting stuck with thousands of goroutines ([#16332](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16332)).\n    - **Developer Experience & CI/CD:** Discussions continue on automating release pipelines with GoReleaser and `git-cliff` ([#16097](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16097]), improving CI flakiness with better reporting ([#16271](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16271)), and clarifying the distinct use cases for `supersim` and Kurtosis devnets for local development ([#399](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/399)).\n\n## \ud83d\udcac Community & Collaboration\nJune's activities highlighted a deeply collaborative approach to tackling complex technical challenges. Issues concerning the stability of core components like `op-supervisor`, `op-geth`, and `op-node` saw active participation, with multiple contributors providing detailed goroutine dumps, performance profiles, and diagnostic suggestions. The extensive discussion around CI SLAs ([#16437](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16437)) demonstrated a healthy feedback loop between the core team and developers, leading to a consensus to focus on tangible improvements like reducing test flakiness. The coordinated effort to close a large volume of Superchain-Ops issues on a single day suggests a successful team sprint, significantly advancing the project's operational tooling.", "2025-09-04T03:43:02.688Z"]
["ethereum-optimism/op-analytics_month_2025-06-01", "ethereum-optimism/op-analytics", "month", "2025-06-01", "# ethereum-optimism/op-analytics Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of significant progress in both data infrastructure and core protocol stability. The analytics pipeline saw major enhancements, with new integrations to pull data directly from the Superchain Registry and on-chain contracts, improving data accuracy for the ecosystem. Concurrently, deep investigations were conducted into the stability and correctness of the `op-supervisor`, focusing on its behavior during resets and reorgs. A large number of issues related to Superchain-Ops tooling were closed, marking a major milestone in improving developer experience and operational efficiency.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment work this month centered on strengthening the data analytics foundation and improving pipeline reliability.\n\n*   **Superchain Data Integration:** A primary focus was enriching the analytics dataset by integrating directly with Superchain sources. This included pulling the full chain list ([#1642](https://github.com/ethereum-optimism/op-analytics/pull/1642)) and chain address lists ([#1641](https://github.com/ethereum-optimism/op-analytics/pull/1641)) from the Superchain Registry. A new pipeline was also introduced to pull system configuration data directly from on-chain contracts, ensuring data accuracy ([#1646](https://github.com/ethereum-optimism/op-analytics/pull/1646)).\n*   **Pipeline Infrastructure & Reliability:** The data pipeline's robustness was improved through several key updates. A bug in the BigQuery series function, critical for updating L1 cost fields, was fixed ([#1643](https://github.com/ethereum-optimism/op-analytics/pull/1643)). The Dagster dependency was updated twice ([#1644](https://github.com/ethereum-optimism/op-analytics/pull/1644), [#1647](https://github.com/ethereum-optimism/op-analytics/pull/1647)) to leverage the latest features. Logging in `runner.py` was also enhanced for better clarity ([#1640](https://github.com/ethereum-optimism/op-analytics/pull/1640)).\n*   **Metadata Management:** A new `build_all_chains_metadata()` pipeline was introduced to integrate Total Crypto metadata, creating a more structured and extensible approach for managing comprehensive chain metadata ([#1629](https://github.com/ethereum-optimism/op-analytics/pull/1629)).\n*   **Notebook Maintenance:** Minor adjustments were made to notebooks used for tracking transactions on other chains ([#1661](https://github.com/ethereum-optimism/op-analytics/pull/1661), [#1662](https://github.com/ethereum-optimism/op-analytics/pull/1662)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in June was characterized by the resolution of a large backlog of tooling improvements and a deep focus on active investigations into core component stability.\n\n*   **Closed Issues:** A significant cleanup occurred on June 26, with the closure of numerous issues related to **Superchain-Ops tooling**. These resolutions improved CI/CD processes ([#337](https://github.com/ethereum-optimism/op-analytics/issues/337), [#648](https://github.com/ethereum-optimism/op-analytics/issues/648)), task management and architecture ([#600](https://github.com/ethereum-optimism/op-analytics/issues/600), [#636](https://github.com/ethereum-optimism/op-analytics/issues/636)), and developer UX ([#770](https://github.com/ethereum-optimism/op-analytics/issues/770), [#777](https://github.com/ethereum-optimism/op-analytics/issues/777)). Other notable closures included resolving a module import error in `@eth-optimism/tokenlist` ([#1146](https://github.com/ethereum-optimism/op-analytics/issues/1146)) and clarifying the deprecation of `L2OutputOracleProxy` ([#1614](https://github.com/ethereum-optimism/op-analytics/issues/1614)).\n\n*   **New & Active Issues:**\n    *   **`op-supervisor` Stability:** This was the most prominent area of discussion. Active investigations centered on improving the supervisor's handling of L1 origin validity during resets ([#16315](https://github.com/ethereum-optimism/op-analytics/issues/16315)) and its behavior during reorgs ([#16321](https://github.com/ethereum-optimism/op-analytics/issues/16321)). A critical issue involving an event overflow and potential crash-looping during large unsafe head gaps ([#16335](https://github.com/ethereum-optimism/op-analytics/issues/16335)) led to efforts to add better metrics for debugging. A new issue was opened to investigate event spikes that suggest potential congestion ([#16603](https://github.com/ethereum-optimism/op-analytics/issues/16603)).\n    *   **Node Health & Correctness:** Users reported an incorrect nonce being returned by `eth_getTransactionCount` on a Base node, causing stuck transactions ([#623](https://github.com/ethereum-optimism/op-analytics/issues/623)). Another active thread involved diagnosing abnormal CPU usage in `op-geth` v1.101511.0 ([#613](https://github.com/ethereum-optimism/op-analytics/issues/613)), with discussion pointing towards a temporary issue related to a log indexing rebuild.\n    *   **CI Flakiness:** Efforts continued to investigate and improve CI flakiness ([#16271](https://github.com/ethereum-optimism/op-analytics/issues/16271)), with progress reported on a test flake report generator and an overall improvement in test stability.\n    *   **New Dependencies & Errors:** New issues were opened to address a broken `go-bip39` dependency in `op-chain-ops` ([#16612](https://github.com/ethereum-optimism/op-analytics/issues/16612)) and to add missing error codes for data availability errors ([#725](https://github.com/ethereum-optimism/op-analytics/issues/725)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was evident in the deep technical discussions surrounding core component stability and the active engagement from the community on user-facing bugs.\n\n*   **Intensive Debugging Efforts:** Issues like the `op-supervisor` event overflow ([#16335](https://github.com/ethereum-optimism/op-analytics/issues/16335)) showcased strong collaboration between core contributors, who actively debated potential causes and worked towards implementing better diagnostics.\n*   **Community Bug Reporting:** The issues concerning `op-geth` CPU usage ([#613](https://github.com/ethereum-optimism/op-analytics/issues/613)) and the incorrect nonce ([#623](https://github.com/ethereum-optimism/op-analytics/issues/623)) saw active participation from users, who provided `pprof` files, stack traces, and consistent requests for updates, aiding the diagnostic process.\n*   **Contributor Interest:** An issue to refactor terminal output ([#781](https://github.com/ethereum-optimism/op-analytics/issues/781)) attracted interest from multiple community members who expressed a desire to contribute, highlighting a healthy and engaged developer community.", "2025-09-04T03:43:09.546Z"]
["ethereum-optimism/infra_month_2025-06-01", "ethereum-optimism/infra", "month", "2025-06-01", "# ethereum-optimism/infra Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of stabilization and refinement for the Optimism infrastructure. Significant effort was dedicated to improving the reliability of the CI/CD pipeline and acceptance tests, culminating in the closure of a major investigation into test flakiness. Core infrastructure components like `proxyd` and `op-conductor-ops` received critical bug fixes and performance enhancements to bolster stability. A major push was made to mature the Superchain-Ops tooling, with a large batch of issues being closed to streamline task simulation, validation, and developer experience. Concurrently, new investigations were launched into performance bottlenecks, particularly the memory consumption of `op-batcher` under load, signaling a proactive focus on system resilience.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on enhancing the stability and usability of core infrastructure services and testing frameworks.\n\n- **`proxyd` and `op-conductor-ops` Reliability:**\n  - A critical bug was fixed in `op-conductor-ops` to prevent it from exiting prematurely during sequencer bootstrapping, ensuring at least one sequencer is active ([#404](https://github.com/ethereum-optimism/infra/pull/404)).\n  - `proxyd` performance was improved by bypassing its concurrency semaphore when unlimited concurrency is configured ([#405](https://github.com/ethereum-optimism/infra/pull/405)).\n  - A bug in `proxyd` was also fixed where request size limits were checked too early; the check now occurs after interop transaction recognition, preventing incorrect rejections ([#407](https://github.com/ethereum-optimism/infra/pull/407)).\n\n- **`op-acceptor` Testing Framework Enhancements:**\n  - The `op-acceptor` framework was significantly improved with first-class support for `op-devstack` orchestrator modes, enabling in-memory testing ([#411](https://github.com/ethereum-optimism/infra/pull/411)).\n  - To improve usability, HTML reports generated by `op-acceptor` now display an overall pass/fail status ([#408](https://github.com/ethereum-optimism/infra/pull/408)).\n  - A persistent test flake in `TestRealtimeLogs` was addressed to increase the reliability of test results ([#409](https://github.com/ethereum-optimism/infra/pull/409)).\n\n- **Dependency Management:**\n  - Routine dependency updates were made in `op-conductor-ops` to bump `requests` to v2.32.4 ([#403](https://github.com/ethereum-optimism/infra/pull/403)) and `urllib3` to v2.5.0 ([#410](https://github.com/ethereum-optimism/infra/pull/410)).\n\n## \ud83d\udc1b Issues & Triage\nThe project saw a concerted effort to resolve long-standing issues related to testing and tooling, while opening new investigations into performance and observability.\n\n- **Closed Issues:**\n  - **CI/CD and Testing:** A major investigation into CI flakiness was closed after the release of a test flake report generator and significant stability improvements ([#16271](https://github.com/ethereum-optimism/infra/issues/16271)). Discussions on implementing CI SLAs were also concluded for now ([#16437](https://github.com/ethereum-optimism/infra/issues/16437)). Several key tests were completed and closed, including the full L2-to-L1 withdrawal flow test ([#327](https://github.com/ethereum-optimism/infra/issues/327)) and acceptance tests for flashblocks ([#354](https://github.com/ethereum-optimism/infra/issues/354)).\n  - **Superchain-Ops Tooling:** A large-scale cleanup resulted in the closure of over a dozen issues related to the Superchain-Ops tooling. This effort streamlined CI task execution ([#337](https://github.com/ethereum-optimism/infra/issues/337]), improved nonce handling for stacked proposals ([#342](https://github.com/ethereum-optimism/infra/issues/342), [#770](https://github.com/ethereum-optimism/infra/issues/770)), enhanced state diff reporting ([#777](https://github.com/ethereum-optimism/infra/issues/777)), and refactored the overall MultisigTask architecture ([#636](https://github.com/ethereum-optimism/infra/issues/636)).\n  - **Documentation:** Several documentation issues were resolved, including removing outdated information on the deprecated `L2OutputOracleProxy` ([#1614](https://github.com/ethereum-optimism/infra/issues/1614)) and fixing broken links ([#283](https://github.com/ethereum-optimism/infra/issues/283)).\n\n- **New & Active Issues:**\n  - **Performance and Observability:** A key focus for new work is on performance. A spike was initiated to investigate and optimize `op-batcher` memory consumption during L1 congestion ([#16537](https://github.com/ethereum-optimism/infra/issues/16537]), with a corresponding issue to add `pprof` and memory usage tests to CI ([#16572](https://github.com/ethereum-optimism/infra/issues/16572)). An active discussion on an `op-supervisor` crash loop due to event overflow ([#16335](https://github.com/ethereum-optimism/infra/issues/16335)) led to a PR to add metrics for better debugging.\n  - **Core Component Bugs:** Several critical issues remain active, including reports of `op-node` v1.13.3 getting stuck with thousands of goroutines ([#16332](https://github.com/ethereum-optimism/infra/issues/16332)) and an incorrect nonce being returned by `eth_getTransactionCount` for pending transactions ([#623](https://github.com/ethereum-optimism/infra/issues/623)).\n  - **Future Work:** Planning for future improvements is underway. New issues were opened to port a suite of acceptance tests to the `devstack` environment ([#412](https://github.com/ethereum-optimism/infra/issues/412)-[#416](https://github.com/ethereum-optimism/infra/issues/416)). Discussions are also ongoing to standardize release processes with GoReleaser ([#16097](https://github.com/ethereum-optimism/infra/issues/16097)) and to clarify terminology by renaming supervisor and op-node modes ([#16379](https://github.com/ethereum-optimism/infra/issues/16379)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was characterized by deep technical dives from core contributors and engagement from the wider community on usability issues.\n\n- The detailed discussions around `op-supervisor` event overflow ([#16335](https://github.com/ethereum-optimism/infra/issues/16335)) and `op-batcher` memory profiling ([#16537](https://github.com/ethereum-optimism/infra/issues/16537)) highlight strong, collaborative problem-solving among team members.\n- The issue clarifying the distinct use cases for `supersim` and `interop kurtosis devnet` ([#399](https://github.com/ethereum-optimism/infra/issues/399)) demonstrates a healthy feedback loop between the core team and developers building on the stack.\n- An issue to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/infra/issues/781)) attracted interest from multiple community members, indicating a welcoming environment for new contributors to pick up \"good first issues.\"\n- The coordinated closure of numerous Superchain-Ops issues on June 26th suggests a focused team sprint aimed at reducing technical debt and improving the developer experience for chain operators.", "2025-09-04T03:43:12.578Z"]
["ethereum-optimism/op-geth_month_2025-06-01", "ethereum-optimism/op-geth", "month", "2025-06-01", "# ethereum-optimism/op-geth Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of significant progress in enhancing the stability and performance of the OP Stack. Key achievements include the successful enablement and testing of flashblocks on the eris-0 devnet, a major step towards broader integration. Development also focused heavily on improving the transaction pool, with the introduction of periodic filtering to enhance efficiency. However, the month also highlighted ongoing challenges, with active investigations into `op-supervisor` stability during resets, `op-batcher` memory consumption, and a persistent `op-geth` CPU usage bug. These efforts reflect a dual focus on shipping new capabilities while hardening the core infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on transaction management, cost functions, and core client stability.\n\n-   **Transaction Pool Enhancements:** A significant feature was added to the transaction pool to enable periodic transaction filtering ([#629](https://github.com/ethereum-optimism/op-geth/pull/629)). This improvement aims to increase the efficiency of transaction management and led to the closure of a long-standing issue related to interval validity checks ([#494](https://github.com/ethereum-optimism/op-geth/issues/494)).\n\n-   **Cost Function & Fee Calculation Refinements:** Several pull requests were opened to refine cost calculations. This includes fixes for the L1 Data Availability (DA) cost function ([#630](https://github.com/ethereum-optimism/op-geth/pull/630)) and updates to calldata costs ([#631](https://github.com/ethereum-optimism/op-geth/pull/631)). Additionally, work began to remove Optimism-specific priority fee estimate calculations ([#632](https://github.com/ethereum-optimism/op-geth/pull/632)), aiming to streamline the fee model.\n\n-   **Core Client Fixes & Features:** A minor but important bug fix was merged to correct gas calculation initialization, aligning `op-geth` with upstream Geth ([#627](https://github.com/ethereum-optimism/op-geth/pull/627)). A new pull request was also opened to introduce a configurable maximum code size feature ([#634](https://github.com/ethereum-optimism/op-geth/pull/634)).\n\n-   **Superchain Configuration:** The Superchain registry was updated to import the latest `rehearsal-0-bn` configurations, though this process uncovered a minor unmarshaling issue ([#625](https://github.com/ethereum-optimism/op-geth/pull/625)).\n\n## \ud83d\udc1b Issues & Triage\nThe project saw the resolution of several key issues while new, critical investigations were launched into performance and stability.\n\n-   **Closed Issues:**\n    -   **Flashblocks Integration:** A major milestone was reached with the closure of issues related to enabling flashblocks on the eris-0 devnet ([#16468](https://github.com/ethereum-optimism/op-geth/issues/16468)) and completing the associated transaction acceptance tests ([#354](https://github.com/ethereum-optimism/op-geth/issues/354)).\n    -   **CI/CD & Testing:** Significant effort was invested in improving the development pipeline. An investigation into CI flakiness was closed ([#16271](https://github.com/ethereum-optimism/op-geth/issues/16271)), and an interop sync test that relied on supervisor multi-node support was fixed ([#16187](https://github.com/ethereum-optimism/op-geth/issues/16187)).\n    -   **Developer Experience:** Several issues aimed at improving the developer experience were resolved, including enabling predeploy modification in Supersim ([#393](https://github.com/ethereum-optimism/op-geth/issues/393)) and fixing broken documentation links ([#283](https://github.com/ethereum-optimism/op-geth/issues/283), [#1508](https://github.com/ethereum-optimism/op-geth/issues/1508)).\n\n-   **New & Active Issues:**\n    -   **`op-supervisor` Stability:** A primary focus of ongoing work is the `op-supervisor`. Active discussions revolve around improving L1 origin validity handling during resets ([#16315](https://github.com/ethereum-optimism/op-geth/issues/16315)), fixing fault proof data provisioning for non-genesis interop upgrades ([#16166](https://github.com/ethereum-optimism/op-geth/issues/16166)), and diagnosing an event overflow that causes crash-loops ([#16335](https://github.com/ethereum-optimism/op-geth/issues/16335)).\n    -   **Performance Investigations:** Several critical performance issues are under active investigation. These include optimizing `op-batcher` memory consumption, where the compressor was identified as a primary culprit ([#16537](https://github.com/ethereum-optimism/op-geth/issues/16537), [#16572](https://github.com/ethereum-optimism/op-geth/issues/16572)), and diagnosing abnormal CPU usage in `op-geth` v1.101511.0 ([#613](https://github.com/ethereum-optimism/op-geth/issues/613)).\n    -   **Transaction Pool Bugs:** Despite recent improvements, new challenges have emerged. A bug causing `eth_getTransactionCount` to return an incorrect nonce for pending transactions remains active ([#623](https://github.com/ethereum-optimism/op-geth/issues/623)). A new, potentially flaky issue was opened where the `txpool` conditionally includes invalid interop transactions ([#635](https://github.com/ethereum-optimism/op-geth/issues/635)), which is being actively investigated.\n\n## \ud83d\udcac Community & Collaboration\nJune's activity highlighted strong, data-driven collaboration among core contributors. The investigation into `op-batcher` memory consumption ([#16537](https://github.com/ethereum-optimism/op-geth/issues/16537)) is a prime example, with `geoknee` providing detailed `pprof` analysis that spurred targeted optimization suggestions from `sebastianst`.\n\nDeep technical discussions on complex `op-supervisor` issues ([#16166](https://github.com/ethereum-optimism/op-geth/issues/16166), [#16315](https://github.com/ethereum-optimism/op-geth/issues/16315)) showcased collaborative problem-solving between team members to ensure protocol correctness. Similarly, the effort to debug a flaky `txpool` issue ([#635](https://github.com/ethereum-optimism/op-geth/issues/635)) demonstrated effective teamwork, with `pcw109550` providing detailed CI artifacts to help `axelKingsley` in the difficult task of reproducing an intermittent bug. These interactions reflect a healthy and engaged developer community focused on hardening the stack.", "2025-09-04T03:43:17.470Z"]
["ethereum-optimism/superchain-registry_month_2025-06-01", "ethereum-optimism/superchain-registry", "month", "2025-06-01", "# ethereum-optimism/superchain-registry Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of targeted enhancements and foundational work, with a strong focus on Superchain configuration, tooling refinement, and performance analysis. Key progress was made in preparing for the Flashblocks feature, with initial testing environments enabled and acceptance tests completed. The registry saw routine maintenance with updates for Swell Mainnet and code cleanup, while critical discussions emerged around `op-batcher` memory optimization and `op-supervisor` logic for fault proofs. These efforts reflect a dual focus on expanding Superchain capabilities while ensuring the core infrastructure remains robust and efficient.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment work this month centered on maintaining the integrity of the Superchain registry and improving CI/CD processes.\n\n*   **Superchain Configuration and Maintenance:** The registry was actively managed to reflect the evolving ecosystem. A significant update set the Holocene hardfork time for Swell Mainnet ([#1082]), ensuring a smooth future upgrade. In a move toward data integrity, EthLockboxProxy consistency validation was re-enabled after an update to `op-fetcher` ([#1071]). Housekeeping efforts included opening pull requests to remove Celo from the chain list ([#1078]) and to clean up deprecated CGT-related code ([#1074]).\n\n*   **CI/CD Workflow Improvements:** The continuous integration pipeline was optimized by modifying the CircleCI configuration. The `notify-when-chain-is-added-to-registry` workflow was adjusted to trigger exclusively on webhook events, preventing unnecessary runs and conserving resources ([#1073]).\n\n## \ud83d\udc1b Issues & Triage\nIssue tracking this month highlighted significant progress on Flashblocks integration, while opening up important new discussions on performance and core protocol logic.\n\n*   **Closed Issues:**\n    *   **Flashblocks Integration:** Major headway was made on Flashblocks, with the closure of issues related to enabling it on the `eris-0` environment ([#16468]) and completing acceptance tests for transfers and streaming ([#354]). This unblocks further deployment and testing.\n    *   **Tooling & Documentation:** The Supersim development environment was improved to allow modification of the `L2toL2CDM` predeploy ([#393]). A discussion on implementing CI SLAs was concluded with a decision not to proceed for now ([#16437]), and a broken documentation link was fixed ([#283]).\n\n*   **New & Active Issues:**\n    *   **Performance Optimization:** A critical discussion began around `op-batcher` memory consumption ([#16537], [#16572]). Analysis identified the compressor as the primary source of memory usage during backlogs, with proposals to optimize the shadow compressor and discard the main compressor more eagerly after channel submission.\n    *   **Flashblocks on OP Sepolia:** A new issue was created to track the non-public enablement of Flashblocks on `op-sepolia` ([#16496]), which is the next step after building confidence from the `eris-0` deployment.\n    *   **Core Protocol Discussions:** Important conversations continued on core components. This includes strategies for the `op-supervisor` to handle fault proofs for pre-interop states ([#16166]) and improving its reset logic to validate L1 origins more effectively ([#16315]).\n    *   **Persistent Bugs:** A user-facing issue regarding `eth_getTransactionCount` returning an incorrect nonce for pending transactions ([#623]) remains active, with community members seeking updates.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions on active issues. The deep dive into `op-batcher` memory consumption ([#16537]) and `op-supervisor` fault proof logic ([#16166]) showcased active problem-solving among core developers. The community's role was visible through bug reports, such as the ongoing nonce issue ([#623]), and feature requests, like the well-received idea to enable event logging for user-specified contracts in Supersim ([#411]). Furthermore, knowledge sharing was apparent in discussions clarifying the distinct use cases for Supersim versus the Interop Kurtosis Devnet ([#399]), helping to align developers on the right tools for their work.", "2025-09-04T03:43:32.255Z"]
["ethereum-optimism/superchain-ops_month_2025-06-01", "ethereum-optimism/superchain-ops", "month", "2025-06-01", "# ethereum-optimism/superchain-ops Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of focused execution on Superchain infrastructure, balancing preparations for future upgrades with critical stability improvements. Significant progress was made in preparing Mode and Metal Mainnets for permissioned fault proofs and readying U16 mainnet tasks. The team also dedicated substantial effort to enhancing the CI/CD pipeline, addressing flakiness, and improving developer tooling, which culminated in the closure of a large volume of related issues. Concurrently, performance bottlenecks in core components like `op-batcher`, `op-node`, and `op-geth` were actively investigated, highlighting a strong commitment to the operational health and reliability of the Superchain.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on upgrades, bug fixes, and significant refactoring to improve system maintainability and developer experience.\n\n-   **Superchain Upgrade Preparations:**\n    -   Groundwork was laid to transition Mode and Metal Mainnet to permissioned fault proofs, with initial files and tasks created to facilitate the upgrade ([#955], [#956]).\n    -   Preparations for U16 mainnet tasks were advanced, including new configurations for enabling/removing the DPM and upgrading the OPCM for chains like op-ink, soneium, uni, and base ([#1047]).\n    -   Sepolia's OPCM and Standard Validator addresses were updated to `rc.8` to align with the latest `op-contracts` release candidate ([#1095]).\n    -   Validation entries for Op, Ink, and Unichain upgrades were enhanced with more detailed contract and storage information ([#1104], [#1107]).\n\n-   **Critical Bug Fixes & Nonce Management:**\n    -   Several nonce-related issues were resolved, including fixes for Base Sepolia ([#1061]) and a nonce bump issue affecting Base L1PAO and Ops Safe transactions ([#1102]).\n    -   A bug in the `sim-sequence` script was fixed by adding an environment flag to control override checks, improving simulation reliability ([#1051]).\n    -   Local execution errors were resolved by correcting how `approve` and `execute` commands in `justfiles` handle `signer_args` ([#1103]).\n\n-   **CI/CD and Tooling Enhancements:**\n    -   The CI pipeline was optimized by removing completed simulations for Mode and Metal ([#1098]) and increasing the timeout for long-running jobs in CircleCI ([#1099]).\n    -   Wallet support was briefly expanded to include Trezor ([#1089]) but was later reverted ([#1100]).\n\n-   **Code Refactoring and Maintainability:**\n    -   A significant refactoring of `MultisigTask.sol` removed child state variables, streamlining the contract by passing state directly through functions to improve clarity and maintainability ([#1085]).\n    -   A parent multisig was refactored to be named \"root safe\" for better clarity ([#1080]).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw a major effort to resolve outstanding issues, particularly around tooling and CI, alongside the emergence of new performance-related investigations.\n\n-   **Closed Issues:**\n    A large number of issues were closed, reflecting a concerted push to finalize tooling improvements and clean up the backlog. Key themes include:\n    -   **CI/CD & Automation:** Numerous issues were resolved to improve CI performance, automate task execution ([#337]), support \"stacked\" proposals ([#342]), and enhance validation checks ([#679]). The spike to explore CI SLAs was also concluded, with a decision not to implement them at this time ([#16437]).\n    -   **Testing & Tooling:** Flashblocks acceptance tests were completed ([#354]), and the ability to modify predeploys in Supersim was added ([#393]).\n    -   **Developer Experience:** Issues related to documentation ([#1508]), user experience for nonce overrides ([#770]), and scripting path corrections ([#548], [#600]) were addressed.\n\n-   **New & Active Issues:**\n    Discussions this month centered on performance, stability, and future development paths.\n    -   **Performance & Stability:** New investigations were opened into `op-batcher` memory consumption during L1 congestion ([#16537], [#16572]). Active discussions continued around abnormal CPU usage in `op-geth` v1.101511.0 ([#613]), stuck goroutines in `op-node` ([#16332]), and event handling and reset behavior in `op-supervisor` ([#16335], [#16315]).\n    -   **Future Work & Design:** Planning began for enabling flashblocks on op-sepolia ([#16496]). A notable discussion emerged around enabling a \"trivial interop mode\" for `op-node` to simplify operations for single-chain operators ([#16519]).\n    -   **Tooling & Automation:** A long-running discussion on automating release pipelines and changelog generation using tools like GoReleaser and `git-cliff` continued, with a focus on creating a one-click solution ([#16097]).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was strong this month, particularly around improving internal processes and addressing user-reported stability issues.\n\n-   The discussions around CI flakiness and potential SLAs ([#16271], [#16437]) were highly collaborative, with detailed proposals and feedback from multiple team members, indicating a collective focus on improving developer productivity.\n-   User-reported issues, such as the high CPU usage in `op-geth` ([#613]) and stuck goroutines in `op-node` ([#16332]), saw active engagement from the community and prompt diagnostic support from maintainers.\n-   The distinction between `supersim` and Kurtosis devnets was clarified in issue discussions ([#399]), helping developers choose the right tool for their needs. The large-scale closure of issues on June 26th suggests a coordinated team effort to reduce technical debt and finalize a cycle of tooling enhancements.", "2025-09-04T03:43:33.343Z"]
["ethereum-optimism/specs_month_2025-06-01", "ethereum-optimism/specs", "month", "2025-06-01", "# ethereum-optimism/specs Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was characterized by a dual focus on advancing Superchain interoperability specifications and significantly improving developer tooling and CI/CD processes. Key progress was made in refining `op-supervisor` behavior, particularly around reset logic and L1 origin validity. A major effort culminated in the closure of numerous issues related to Superchain-Ops tooling, streamlining task management and deployment. Concurrently, the team tackled system stability by investigating `op-batcher` memory consumption, `op-geth` CPU performance, and CI test flakiness, leading to the release of a test flake report generator.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis month's merged changes focused on hardening and clarifying core specifications for interoperability and fault proofs.\n\n*   **Interop and Supervisor Specification Refinements:** To improve the clarity and robustness of the Superchain's interoperability layer, several documentation updates were merged. The `op-supervisor` documentation was enhanced to clarify the concept of a \"managed node\" (#732), and new constraints were added for the `supervisor_syncStatus` RPC method to ensure implementation consistency (#723). Additionally, a bug was fixed that was causing event descriptions to be reset in the `managed-mode.md` specification file (#719).\n\n*   **Fault Proof Documentation:** To keep specifications aligned with implementation, the documentation for Fault Proof Virtual Machines was updated. \"Cannon\" is now correctly listed as 64-bit, and \"cannon-rs\" has been marked as deprecated (#720).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw the resolution of major initiatives around tooling and testing, while new investigations were launched into component performance and supervisor stability.\n\n*   **Closed Issues:**\n    *   **Superchain-Ops Tooling Overhaul:** A massive effort to enhance the Superchain-Ops tooling concluded, with dozens of issues closed. This project delivered automated CI task execution (#337), improved support for stacked proposals (#342), better developer experience through mainnet examples (#651) and markdown-formatted state diffs (#777), and enhanced validation checks against `StandardValidator` contracts (#838).\n    *   **CI/CD and Testing Stability:** A major focus on reliability led to the closure of investigations into CI flakiness (#16271) and a spike on CI SLAs (#16437). While formal SLAs were not adopted, the effort resulted in a new test flake report generator and a commitment to continuous monitoring.\n    *   **Flashblocks Integration:** Significant progress was marked by the closure of issues for enabling flashblocks on the `eris-0` environment (#16468) and completing the corresponding acceptance tests (#354).\n    *   **Developer Environment & Documentation:** Several quality-of-life improvements were completed, including enabling the modification of predeploys in local environments (#393) and closing documentation issues related to ERC-20 bridging (#1508) and the deprecated `L2OutputOracleProxy` (#1614).\n\n*   **New & Active Issues:**\n    *   **`op-supervisor` Stability:** A primary area of active investigation involves the `op-supervisor`. Discussions are ongoing to improve L1 origin validity checks during resets (#16315), handle event overflows during large sync gaps (#16335), and debug event spikes that may indicate deadlocks (#16603). This work is critical for the robustness of the Superchain's managed node infrastructure.\n    *   **Component Performance Optimization:** New issues were opened to investigate and optimize performance bottlenecks. This includes a spike to reduce `op-batcher` memory consumption during L1 congestion (#16537), which has already yielded detailed profiling analysis, and an ongoing community-driven effort to debug abnormal CPU usage in `op-geth` (#613).\n    *   **Future Work & Specification Gaps:** New issues have laid the groundwork for future development, including research into embedding `op-node` within `op-supervisor` to deprecate the managed mode RPC API (#734), adding missing Super DA error codes to the spec (#725), and creating a Gas Tank contract (#836).\n\n## \ud83d\udcac Community & Collaboration\nJune saw deep technical collaboration on critical performance issues. The investigation into `op-batcher` memory consumption (#16537) was a prime example, with detailed `pprof` analysis and optimization suggestions shared between developers. The discussion around CI SLAs (#16437) showcased healthy internal debate, with multiple team members contributing diverse perspectives to shape the team's approach to CI reliability. Community members also actively participated in debugging, as seen in the `op-geth` abnormal CPU usage issue (#613), where users shared performance profiles and troubleshooting steps. Finally, the large-scale closure of Superchain-Ops tooling issues suggests the successful completion of a major, coordinated project involving multiple contributors.", "2025-09-04T03:43:34.082Z"]
["ethereum-optimism/supersim_month_2025-06-01", "ethereum-optimism/supersim", "month", "2025-06-01", "# ethereum-optimism/supersim Monthly Report (June 2025)\n\n## \ud83d\ude80 Highlights\nJune was a month of focused stabilization, optimization, and tooling refinement for the Superchain ecosystem. Development efforts centered on diagnosing and hardening core components, with significant discussions and investigations into `op-supervisor` event handling, `op-batcher` memory consumption, and `op-geth` CPU performance. While major feature releases were not the focus, `supersim` itself was enhanced to improve testing flexibility. A substantial number of issues related to CI/CD, developer tooling, and testing were resolved, reflecting a strong push to improve the overall developer experience and pipeline reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nConcrete development work this month focused on enhancing the simulation environment's flexibility and ensuring its components are up-to-date.\n\n*   **Enhanced Configuration and Dependency Management:** To improve testing flexibility, `supersim` was updated to support configurable dependency sets ([#407](https://github.com/ethereum-optimism/supersim/pull/407)). This allows developers to simulate and test against chains outside the standard interop set. Additionally, the core `GasTank` component was updated to its latest version to align with `interop-lib` changes, ensuring the simulation environment remains current with protocol specifications ([#406](https://github.com/ethereum-optimism/supersim/pull/406), [#412](https://github.com/ethereum-optimism/supersim/pull/412)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was highly active, with a significant number of closures focused on infrastructure and tooling, alongside deep investigations into performance and stability of core services.\n\n### Closed Issues\nA major cleanup of the issue tracker occurred, resolving numerous tasks related to infrastructure, testing, and developer experience.\n*   **CI/CD & Tooling:** A large batch of issues was closed, marking significant progress in pipeline stability and automation. This included an investigation into CI flakiness ([#16271](https://github.com/ethereum-optimism/supersim/issues/16271)), the conclusion of a spike on CI SLAs ([#16437](https://github.com/ethereum-optimism/supersim/issues/16437)), and numerous improvements to `superchain-ops` tooling for task automation, simulation, and validation ([#337](https://github.com/ethereum-optimism/supersim/issues/337), [#648](https://github.com/ethereum-optimism/supersim/issues/648), [#514](https://github.com/ethereum-optimism/supersim/issues/514)).\n*   **Feature & Testing Completion:** Several long-standing feature and testing initiatives were finalized. Key closures include the completion of acceptance testing for flashblocks transactions ([#354](https://github.com/ethereum-optimism/supersim/issues/354)), enabling flashblocks on the `eris-0` devnet ([#16468](https://github.com/ethereum-optimism/supersim/issues/16468)), and resolving the need to modify predeploys for testing ([#393](https://github.com/ethereum-optimism/supersim/issues/393)).\n*   **Documentation:** Issues related to documentation were addressed, including fixing a broken link ([#283](https://github.com/ethereum-optimism/supersim/issues/283)) and updating guides for bridging ERC-20 tokens ([#1508](https://github.com/ethereum-optimism/supersim/issues/1508)).\n\n### New & Active Issues\nDiscussions on active issues reveal a strong focus on the performance, stability, and interoperability of the OP Stack.\n*   **`op-supervisor` Stability:** A primary focus was on the `op-supervisor`. Discussions continued on a critical issue where event overflow could cause non-recoverable crash-loops ([#16335](https://github.com/ethereum-optimism/supersim/issues/16335)). A new investigation was opened into spikes of `local-derived` and `local-unsafe-received` events ([#16603](https://github.com/ethereum-optimism/supersim/issues/16603)). Relatedly, the team debated the need for an `op-node` \"trivial-interop\" mode that could operate without a supervisor to ease the transition for chain operators ([#16519](https://github.com/ethereum-optimism/supersim/issues/16519)).\n*   **Performance Optimization:** Performance bottlenecks were a key concern. A spike to optimize `op-batcher` memory consumption ([#16537](https://github.com/ethereum-optimism/supersim/issues/16537)) used `pprof` to identify the compressor as the main culprit, leading to proposals for shared compressors. Separately, an issue regarding abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/supersim/issues/613)) gained significant traction, with multiple users providing diagnostic data to pinpoint the cause.\n*   **Ecosystem & Protocol Enhancements:** New issues were opened to expand Supersim's capabilities, including a request to add Uniswap V4 deployment ([#409](https://github.com/ethereum-optimism/supersim/issues/409)) and a feature for user-specified contract logging to improve debuggability ([#411](https://github.com/ethereum-optimism/supersim/issues/411)). A bug was also filed for a broken dependency in `op-chain-ops` ([#16612](https://github.com/ethereum-optimism/supersim/issues/16612)).\n\n## \ud83d\udcac Community & Collaboration\nJune showcased strong collaborative dynamics, both within the core team and with the broader community.\n*   **Collaborative Debugging:** Complex issues saw deep collaboration. The `op-supervisor` event overflow issue ([#16335](https://github.com/ethereum-optimism/supersim/issues/16335)) involved detailed back-and-forth between developers @axelKingsley, @nonsense, and @sebastianst. Similarly, the `op-batcher` memory investigation ([#16537](https://github.com/ethereum-optimism/supersim/issues/16537)) saw @geoknee and @sebastianst working together on analysis and solutions.\n*   **Community Engagement:** The investigation into high `op-geth` CPU usage ([#613](https://github.com/ethereum-optimism/supersim/issues/613)) was a prime example of community-driven problem-solving, with users like @rrrengineer, @Creamers158, and @PierrickGT providing valuable `pprof` data and logs. Furthermore, an issue to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/supersim/issues/781)) attracted interest from several potential new contributors, including @JoseValperga, @nsancheznez, @Mau1401, and @TheOnma.\n*   **Technical Discourse:** Healthy debate on technical direction was evident in the discussion around automating the release pipeline ([#16097](https://github.com/ethereum-optimism/supersim/issues/16097)), where `protolambda` cautioned against adding new build systems without consolidation, while `geoknee` advocated for a user-friendly, one-click solution. This highlights a thoughtful approach to balancing developer convenience with long-term maintainability.", "2025-09-04T03:43:47.368Z"]
["ethereum-optimism/community-hub_month_2025-07-01", "ethereum-optimism/community-hub", "month", "2025-07-01", "# ethereum-optimism/community-hub Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of focused refinement and strategic decision-making for the Community Hub and related Optimism infrastructure. Development centered on improving documentation, enhancing the test suite, and making key architectural choices for sequencer operations. A significant effort was made to triage the issue backlog, closing numerous long-standing issues related to sequencer stability and `flashblocks` deployment to better focus engineering efforts. This period of consolidation also saw the initiation of a key ecosystem migration from Etherscan to Blockscout and continued investigation into complex, intermittent bugs within the transaction pool.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork completed this month primarily involved documentation enhancements and minor user-facing updates, reflecting a focus on clarity and maintenance.\n\n- **Documentation and UI/UX Improvements:** Several updates were made to improve the clarity and accuracy of project resources. This included adding new documentation for Superstacks allocation to clarify OP Token distribution ([#1167](https://github.com/ethereum-optimism/community-hub/pull/1167)), removing an outdated airdrop banner ([#1168](https://github.com/ethereum-optimism/community-hub/pull/1168)), and cleaning up deprecated trackers and broken links ([#1170](https://github.com/ethereum-optimism/community-hub/pull/1170), [#1171](https://github.com/ethereum-optimism/community-hub/pull/1171)). A pull request was also opened to correct various typos ([#1172](https://github.com/ethereum-optimism/community-hub/pull/1172)).\n\n## \ud83d\udc1b Issues & Triage\nThe majority of activity in July revolved around issue management, with a strong emphasis on closing stale issues and clarifying priorities for future work.\n\n- **Closed Issues:** A significant cleanup of the issue backlog provided clarity on project direction.\n    - **Sequencer Infrastructure & Stability:** Strategic decisions were made to streamline sequencer infrastructure. Discussions concluded on skipping NVMe node deployment for now ([#16689](https://github.com/ethereum-optimism/community-hub/issues/16689)) and keeping `flashblocks` components in the same namespace as other sequencer components to simplify efforts ([#16690](https://github.com/ethereum-optimism/community-hub/issues/16690)). Several older issues concerning sequencer halting ([#12240](https://github.com/ethereum-optimism/community-hub/issues/12240)) and recovery from sequence window expiration ([#11228](https://github.com/ethereum-optimism/community-hub/issues/11228)) were also closed.\n    - **Flashblocks Prioritization:** The team deprioritized enabling `flashblocks` on Sunnyside sequencers to focus on stabilizing the feature on OP Labs Sepolia infrastructure first ([#16688](https://github.com/ethereum-optimism/community-hub/issues/16688)). Other related configuration issues were also closed in favor of new, more focused tasks ([#16544](https://github.com/ethereum-optimism/community-hub/issues/16544), [#16496](https://github.com/ethereum-optimism/community-hub/issues/16496)).\n    - **Test Suite & Code Health:** The effort to port the `TestChainFork` to devstack was successfully completed, improving the acceptance test suite ([#413](https://github.com/ethereum-optimism/community-hub/issues/413)). An issue regarding deprecated NPM packages was also resolved, confirming they are no longer being updated ([#13459](https://github.com/ethereum-optimism/community-hub/issues/13459)).\n\n- **New & Active Issues:**\n    - **Block Explorer Migration:** A new initiative was started to migrate all Etherscan links to Blockscout for OP Mainnet and OP Sepolia ([#1169](https://github.com/ethereum-optimism/community-hub/issues/1169), [#1696](https://github.com/ethereum-optimism/community-hub/issues/1696]), with a pull request already in review.\n    - **Ongoing Investigations:** A challenging, flaky bug where invalid interop transactions are sometimes included in the txpool remains under active investigation ([#635](https://github.com/ethereum-optimism/community-hub/issues/635)). Despite detailed logs, the issue has been difficult to reproduce consistently.\n    - **Future Design:** A forward-looking discussion on designing a congestion-based builder transaction reordering mechanism ([#306](https://github.com/ethereum-optimism/community-hub/issues/306)) received renewed interest, signaling potential future work in this area.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was evident in both active debugging and strategic planning. The investigation into the flaky txpool issue ([#635](https://github.com/ethereum-optimism/community-hub/issues/635)) saw detailed back-and-forth between contributors @pcw109550 and @axelKingsley. The Blockscout migration effort ([#1696](https://github.com/ethereum-optimism/community-hub/issues/1696)) also showed active collaboration between multiple team members. Furthermore, the design discussion for transaction reordering ([#306](https://github.com/ethereum-optimism/community-hub/issues/306)) attracted a new community member, `moonfury-ops`, expressing interest in contributing to the design. The significant triage activity, led by maintainers, demonstrates a healthy process of backlog grooming and priority alignment within the project.", "2025-09-04T03:43:52.633Z"]
["ethereum-optimism/design-docs_month_2025-07-01", "ethereum-optimism/design-docs", "month", "2025-07-01", "# ethereum-optimism/design-docs Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly's efforts in the design-docs repository centered on enhancing the economic and operational robustness of the Optimism protocol. Significant new design work was initiated around core fee mechanisms, including proposals for revenue sharing and handling L1 congestion fees. These initiatives were complemented by active discussions on implementing a `min-base-fee`, analyzing its failure modes, and exploring congestion-based transaction reordering. On the operational front, detailed planning for improved flashblocks monitoring and alerting took place, while housekeeping efforts closed out numerous long-standing issues related to sequencer stability and node operation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no new features were completed or merged this month, significant progress was made in proposing and drafting new designs for core protocol mechanics.\n\n- **Proposals for New Economic Mechanisms:** The primary focus of new work was on evolving the network's fee and revenue models.\n    - A design proposal for **revenue sharing** was introduced in PR [#309](https://github.com/ethereum-optimism/design-docs/pull/309).\n    - An initial draft for an **L1 congestion fee** design document was opened in PR [#312](https://github.com/ethereum-optimism/design-docs/pull/312), aiming to address costs associated with L1 data availability.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month involved clearing out old tickets and opening new ones to track critical design and analysis work for upcoming protocol enhancements.\n\n- **Closed Issues:** A significant number of older issues were closed, resolving past concerns and cleaning up the backlog.\n    - **System Stability and Maintenance:** Several issues related to sequencer stability and recovery were closed as resolved or no longer relevant, including sequencer halting on temporary errors ([#12240](https://github.com/ethereum-optimism/design-docs/issues/12240)) and recovery from sequence window expiration ([#11228](https://github.com/ethereum-optimism/design-docs/issues/11228)). An issue regarding node startup ([#15411](https://github.com/ethereum-optimism/design-docs/issues/15411)) and a request to update a deprecated NPM package ([#13459](https://github.com/ethereum-optimism/design-docs/issues/13459)) were also closed.\n    - **Documentation and Testing:** A documentation clarification for the L2 testnet tutorial ([#1401](https://github.com/ethereum-optimism/design-docs/issues/1401)) and a test porting task ([#413](https://github.com/ethereum-optimism/design-docs/issues/413)) were resolved.\n\n- **New & Active Issues:** Discussions and new issues centered on future fee structures and operational stability.\n    - **Designing for Congestion and Fees:** This was the most active area of discussion. A new issue ([#306](https://github.com/ethereum-optimism/design-docs/issues/306)) was opened to design **congestion-based builder transaction reordering**. The tracking issue for the **\"Min Base Fee\"** ([#16807](https://github.com/ethereum-optimism/design-docs/issues/16807)) saw continued discussion, linking to in-flight implementation work in other repositories. A corresponding issue ([#311](https://github.com/ethereum-optimism/design-docs/issues/311)) was created to conduct a formal Failure Modes Analysis for the `min-base-fee` feature.\n    - **Improving Operational Monitoring:** A detailed discussion on **flashblocks monitoring and alerting** ([#16388](https://github.com/ethereum-optimism/design-docs/issues/16388)) outlined specific metrics and thresholds for peer count, block progression, and pending transactions to ensure system health.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident across several key initiatives this month, both within the repository and across the broader Optimism ecosystem.\n\n- Discussions on flashblocks monitoring ([#16388](https://github.com/ethereum-optimism/design-docs/issues/16388)) were informed by a call between contributors `yashvardhan-kukreja` and `Jacob`.\n- A new proposal for congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/design-docs/issues/306)) saw contributor `moonfury-ops` express interest in collaborating on the design with `sebastianst`.\n- The `min-base-fee` tracking issue highlighted significant cross-repository coordination, with links to active pull requests in the `reth`, `op-alloy`, and `optimism` repositories, demonstrating a concerted effort to implement the feature across the stack.\n- Maintainer `mslipper` was active in triaging and closing a batch of older issues, contributing to the overall health of the project's issue tracker.", "2025-09-04T03:44:01.478Z"]
["ethereum-optimism/ecosystem_month_2025-07-01", "ethereum-optimism/ecosystem", "month", "2025-07-01", "# ethereum-optimism/ecosystem Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of significant progress in enhancing cross-chain functionality and developer tooling within the Optimism ecosystem. Development was heavily focused on the interop stack, with major updates to `autorelayer-interop` and `ponder-interop` to improve gas provider balance calculations and support sponsored messages. A key highlight was the rapid initiation and development of the \"Verbs\" project, a new SDK and service for integrating money verbs, which progressed from a proof-of-concept to having its own UI and wallet integration. Concurrently, work on the Superstacks Mini App and Superchain Playground culminated in closed issues and a new RCT demo page, while a concerted effort was made to improve infrastructure stability and test reliability by resolving numerous outstanding issues.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on building out the tooling for a more robust and feature-rich Superchain.\n\n- **Interop Relayer & API Enhancements:** A series of updates were made to the `autorelayer-interop` and `ponder-interop` applications to create a more accurate and reliable message relaying system.\n    - **Improved Gas Accounting:** To provide a more accurate view of a gas provider's available balance, the system was updated to account for pending withdrawals ([#879](https://github.com/ethereum-optimism/ecosystem/pull/879), [#883](https://github.com/ethereum-optimism/ecosystem/pull/883)) and pending, unclaimed relays ([#886](https://github.com/ethereum-optimism/ecosystem/pull/886), [#887](https://github.com/ethereum-optimism/ecosystem/pull/887)).\n    - **Sponsored Message Support:** The API was extended to filter for sponsored messages, and the autorelayer was updated to relay them, enabling new use cases for sponsored transactions ([#899](https://github.com/ethereum-optimism/ecosystem/pull/899), [#900](https://github.com/ethereum-optimism/ecosystem/pull/900)).\n    - **Bug Fixes & Alignments:** A critical bug was fixed where `BigInt` values were incorrectly serialized as numbers in the Ponder API ([#902](https://github.com/ethereum-optimism/ecosystem/pull/902)). The relayer was also updated to align with a new `GasTank` ABI, ensuring the `GasProvider` is specified at the time of relay ([#889](https://github.com/ethereum-optimism/ecosystem/pull/889), [#890](https://github.com/ethereum-optimism/ecosystem/pull/890), [#891](https://github.com/ethereum-optimism/ecosystem/pull/891)).\n\n- **\"Verbs\" Project Initiation:** A new \"Verbs\" project was rapidly developed to simplify money verb integrations on the OP Stack.\n    - **Foundation and Wallet Integration:** The project was bootstrapped with an initial SDK proof-of-concept ([#901](https://github.com/ethereum-optimism/ecosystem/pull/901)) and quickly expanded to include comprehensive wallet integration using Privy as the first adapter ([#908](https://github.com/ethereum-optimism/ecosystem/pull/908)).\n    - **UI and API Features:** A `verbs-ui` application was created to provide a visual interface for the service ([#911](https://github.com/ethereum-optimism/ecosystem/pull/911]), and an endpoint was added to query all created wallets ([#914](https://github.com/ethereum-optimism/ecosystem/pull/914)).\n    - **Repository Migration:** Work began to move the `verbs` project into its own standalone repository to decouple it from the main ecosystem monorepo ([#918](https://github.com/ethereum-optimism/ecosystem/pull/918)).\n\n- **Superchain Playground Enhancements:** To improve developer experience and demonstrate cross-chain capabilities, a new RCT demo page was added to the Superchain Playground. This feature required extensive updates to the application's components, routing, and supporting utility packages, including new ABIs and chain configurations ([#919](https://github.com/ethereum-optimism/ecosystem/pull/919)).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw a strong focus on resolving existing issues, improving test reliability, and scoping future work.\n\n- **Closed Issues:** A significant number of issues were closed, reflecting progress across several key areas:\n    - **Superstacks Mini App:** A cluster of issues related to the Superstacks Mini App were resolved, marking the completion of its UI implementation ([#867](https://github.com/ethereum-optimism/ecosystem/issues/867]), production deployment configuration ([#866](https://github.com/ethereum-optimism/ecosystem/issues/866)), and backend modifications ([#849](https://github.com/ethereum-optimism/ecosystem/issues/849)).\n    - **Infrastructure Stability & Housekeeping:** Several long-standing issues concerning sequencer stability, such as halting on temporary errors ([#12240](https://github.com/ethereum-optimism/ecosystem/issues/12240)) and recovery from sequence window expiration ([#11228](https://github.comcom/ethereum-optimism/ecosystem/issues/11228)), were closed. Redundant code in `op-batcher` was also addressed ([#16677](https://github.com/ethereum-optimism/ecosystem/issues/16677)).\n    - **Acceptance Tests:** Progress was made in improving the test suite, with the closure of tasks related to porting `TestChainFork` ([#413](https://github.com/ethereum-optimism/ecosystem/issues/413)) and `TestERC20Bridge` ([#415](https://github.com/ethereum-optimism/ecosystem/issues/415)) to devstack, and resolving interop test failures ([#298](https://github.com/ethereum-optimism/ecosystem/issues/298), [#16731](https://github.com/ethereum-optimism/ecosystem/issues/16731)).\n    - **\"Verbs\" Project:** Foundational issues for the new \"Verbs\" project, including package setup ([#905](https://github.com/ethereum-optimism/ecosystem/issues/905]), wallet integration ([#906](https://github.com/ethereum-optimism/ecosystem/issues/906]), and repository migration ([#918](https://github.com/ethereum-optimism/ecosystem/issues/918)), were successfully closed.\n\n- **New & Active Issues:** Discussions this month highlighted key areas for future development and investigation.\n    - **Future Work:** New issues were opened to track the migration from Etherscan to Blockscout ([#917](https://github.com/ethereum-optimism/ecosystem/issues/917)) and to expand the \"Verbs\" project with a \"lend\" verb ([#915](https://github.com/ethereum-optimism/ecosystem/issues/915)).\n    - **Ongoing Investigations:** Active discussions continued on several critical topics, including diagnosing abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/ecosystem/issues/613)), reproducing an intermittent bug where invalid interop transactions are included in the txpool ([#635](https://github.com/ethereum-optimism/ecosystem/issues/635)), and designing an E2E test for transaction reinjection during reorgs ([#16656](https://github.com/ethereum-optimism/ecosystem/issues/16656)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions on active issues. The investigation into the invalid interop transaction bug ([#635](https://github.com/ethereum-optimism/ecosystem/issues/635)) saw `pcw109550` providing detailed reproduction steps and artifacts, with `axelKingsley` conducting extensive testing in response. Similarly, the design of the `op-sync-tester` ([#16452](https://github.com/ethereum-optimism/ecosystem/issues/16452)) involved a productive debate between `protolambda` and `pcw109550` on the best approach for session management. The rapid progress on the \"Verbs\" project suggests a highly focused and efficient effort, while the systematic closure of older issues by maintainers demonstrates a strong commitment to repository health and prioritization.", "2025-09-04T03:44:07.383Z"]
["ethereum-optimism/ethereum-optimism.github.io_month_2025-07-01", "ethereum-optimism/ethereum-optimism.github.io", "month", "2025-07-01", "# ethereum-optimism/ethereum-optimism.github.io Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of significant ecosystem growth and protocol refinement. The Superchain token list was expanded with the addition of several new assets, including CO, Super, QUICK, and TOWNS, reflecting a strong focus on interoperability. Concurrently, the team made substantial progress on documentation and stability by finalizing the v3 fault proof incident runbook and closing a backlog of older issues related to sequencer and node stability. Key technical discussions continued around fault proof contracts, op-geth performance, and data availability, signaling a deep focus on the security and efficiency of the OP Stack.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development focus this month was on expanding the list of supported tokens within the Superchain ecosystem, enhancing its utility and interoperability.\n\n*   **Superchain Token Expansion:** The project integrated several new tokens, broadening the asset support across the ecosystem.\n    *   The CO token was added with its corresponding logo and data ([#1169](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1169)).\n    *   The Super token was integrated into Soneium ([#1171](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1171)).\n    *   The QUICK token was added on the Base chain ([#1170](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1170)).\n    *   The TOWNS token was added for both the Base and Ethereum chains ([#1178](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1178)).\n    *   Work also began on adding DGOLD ([#1174](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1174)) and tBTC on Sepolia ([#1179](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1179)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in July focused on finalizing critical documentation, cleaning up the backlog of old stability issues, and initiating discussions on future infrastructure and protocol enhancements.\n\n*   **Closed Issues:**\n    *   **Documentation & Runbooks:** The v3 fault proof incident runbook review was completed, and the document was finalized. The runbooks were renamed to clarify which releases they apply to, improving operational readiness ([#16651](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16651)).\n    *   **Stability & Maintenance:** A number of long-standing issues were closed, including those related to sequencer halting ([#12240](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/12240)), node startup failures ([#15411](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15411)), and acceptance test reliability ([#16378](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16378)).\n    *   **Backlog Cleanup:** An issue for an outdated NPM package was closed as packages are no longer updated via that method ([#13459](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/13459)), and a mode for pre-Interop logic was deprioritized and closed ([#16520](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16520)).\n\n*   **New & Active Issues:**\n    *   **Block Explorer Migration:** A new initiative was started to migrate all Etherscan references for OP Mainnet and OP Sepolia to Blockscout, with an issue opened to track the find-and-replace effort ([#1175](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1175), [#1696](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1696)).\n    *   **Fault Proofs:** A detailed discussion on the `Fault Proof creator contract OPCM changes` ([#15789](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15789)) is ongoing, with a comprehensive checklist of tasks being actively addressed.\n    *   **op-geth Performance:** The issue of abnormal CPU usage in `op-geth` ([#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613)) continues to be a point of discussion, with users providing performance profiles and speculating that index rebuilding after updates may be the cause.\n    *   **Protocol Mechanics:** Discussions around core protocol details continued, including a clarification on why precompile addresses are initialized with a 1 wei balance ([#16620](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16620)) and ongoing work to track the \"Min Base Fee\" ([#16807](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16807)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions on active issues. The `op-geth` CPU usage issue ([#613](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/613)) saw multiple community members providing diagnostic files and sharing their experiences to help pinpoint the root cause. Similarly, the discussion around the `Fault Proof creator contract` ([#15789](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15789)) highlighted a structured approach to a complex feature, with contributor stevennevins outlining a clear checklist of action items. This collaborative spirit demonstrates an engaged community working together to improve the stability and functionality of the OP Stack.", "2025-09-04T03:44:10.720Z"]
["ethereum-optimism/Retro-Funding_month_2025-08-01", "ethereum-optimism/Retro-Funding", "month", "2025-08-01", "# ethereum-optimism/Retro-Funding Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust's development was centered on finalizing the M6 results snapshot for the current RetroPGF season. This involved significant adjustments to metric calculations, including the introduction of PageRank propagation for devtooling links and re-weighting metrics for onchain builders. The team also addressed data integrity by fixing a bug that incorrectly flagged a project with consolidated deployments. Overall, the focus was on refining the data and algorithms to ensure a fair and accurate outcome for the funding round.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on preparing and correcting the M6 results data, alongside routine dependency maintenance.\n\n*   **M6 Results Snapshot and Metric Refinements**\n    *   A major update was merged to prepare the M6 results snapshot. This introduced support for PageRank propagation in devtooling project links, enhancing how project influence is measured. Additionally, metric variant weights for onchain builders were adjusted, increasing the importance of `growth` while decreasing `retention` to better reflect current priorities ([#71](https://github.com/ethereum-optimism/Retro-Funding/pull/71)).\n\n*   **Data Correction and Bug Fixes**\n    *   A bug was resolved where a project with consolidated deployments was incorrectly re-listed, affecting its on-chain metrics. The fix involved updates to query logic and associated data files to ensure the project was correctly represented in the results ([#73](https://github.com/ethereum-optimism/Retro-Funding/pull/73)).\n\n*   **Dependency Maintenance**\n    *   To maintain project health and security, key dependencies were updated. The `protobuf` library was bumped to version 5.29.5 ([#66](https://github.com/ethereum-optimism/Retro-Funding/pull/66)), and `urllib3` was updated to version 2.5.0 ([#67](https://github.com/ethereum-optimism/Retro-Funding/pull/67)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was focused on resolving data-related problems and clarifying past decisions. No new major concerns were raised during this period.\n\n*   **Closed Issues:**\n    *   **Incorrect Project Flagging:** An issue was raised and resolved concerning the \"World Mini Apps\" project being inappropriately flagged in the results. This was addressed by the bug fix in PR #73 ([#72](https://github.com/ethereum-optimism/Retro-Funding/issues/72)).\n    *   **Dev Tooling Dependencies:** A question regarding the distinction between direct and transitive dependencies in Dev Tooling was formally closed, as the matter had been addressed during the M5 evaluation ([#49](https://github.com/ethereum-optimism/Retro-Funding/issues/49)).\n\n*   **New & Active Issues:**\n    *   No new issues were opened in the observed timeframe, and no existing issues saw significant discussion.\n\n## \ud83d\udcac Community & Collaboration\nThe development activity observed this month suggests a focused, internal effort to finalize the M6 results. Issues were reported and resolved quickly by the core team, as seen with the rapid resolution of the incorrectly flagged project ([#72](https://github.com/ethereum-optimism/Retro-Funding/issues/72)). The provided reports do not indicate broader community discussions or contributions during this period, highlighting a phase of concentrated, heads-down work on data integrity and algorithm refinement.", "2025-09-04T03:44:55.415Z"]
["ethereum-optimism/superchain-registry_month_2025-07-01", "ethereum-optimism/superchain-registry", "month", "2025-07-01", "# ethereum-optimism/superchain-registry Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of significant maintenance and strategic updates for the Superchain Registry. Key efforts focused on expanding the registry with the re-addition of Celo mainnet and preparing for future protocol upgrades by adding the prestate for Upgrade 16 and new `op-contracts` versions. A major infrastructure shift was completed with the migration from Etherscan to Blockscout across the repository. Concurrently, the team resolved numerous long-standing issues related to sequencer stability, acceptance testing, and node supervision, enhancing the overall robustness of the Superchain's foundation.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment work this month centered on keeping the registry up-to-date with the evolving Superchain ecosystem and improving its underlying tooling.\n\n- **Superchain Registry Enhancements:** The registry saw several critical updates to reflect the latest protocol configurations and chain additions.\n    - The absolute prestate for Upgrade 16 was added, ensuring the registry is prepared for the upcoming network upgrade ([#1084](https://github.com/ethereum-optimism/superchain-registry/pull/1084)).\n    - Celo mainnet was re-integrated into the registry, with special handling for its unique genesis history as a former L1 fork ([#1086](https://github.com/ethereum-optimism/superchain-registry/pull/1086)).\n    - Standard version entries for `op-contracts/v4.0.0` were added for both mainnet and Sepolia, aligning the registry with the latest contract deployments ([#1088](https://github.com/ethereum-optimism/superchain-registry/pull/1088)).\n    - A minor bug fix corrected a comment error in standard configuration files ([#1089](https://github.com/ethereum-optimism/superchain-registry/pull/1089)).\n\n- **Infrastructure Migration to Blockscout:** In a significant repository-wide effort, all dependencies and references to Etherscan were migrated to Blockscout. This change impacts configuration files, documentation, and operational scripts, standardizing the project's block explorer tooling ([#1085](https://github.com/ethereum-optimism/superchain-registry/pull/1085)).\n\n- **New Chain Proposal:** Towards the end of the month, a pull request was opened to add the \"Silent Data mainnet chain\" to the registry, signaling continued growth of the Superchain ecosystem ([#1091](https://github.com/ethereum-optimism/superchain-registry/pull/1091)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in July focused on resolving stability problems, improving test infrastructure, and discussing future protocol enhancements.\n\n- **Closed Issues:** A significant number of issues were closed, indicating progress in hardening the system and cleaning up the backlog.\n    - **Sequencer & Node Stability:** Several critical issues concerning sequencer stability, including recovery from window expiration ([#11228](https://github.com/ethereum-optimism/superchain-registry/issues/11228)) and halting on temporary errors ([#12240](https://github.com/ethereum-optimism/superchain-registry/issues/12240)), were resolved. An issue for improving `op-supervisor` and `op-node` reset targets was also closed as recent changes made it obsolete ([#16314](https://github.com/ethereum-optimism/superchain-registry/issues/16314)).\n    - **Acceptance Testing:** Progress was made in testing, with the closure of an issue to update the flashblocks acceptance test gate ([#16630](https://github.com/ethereum-optimism/superchain-registry/issues/16630)) and another related to test failures from an `op-geth` version bump ([#16731](https://github.com/ethereum-optimism/superchain-registry/issues/16731)).\n    - **Flashblocks:** Issues related to enabling flashblocks on op-sepolia and with reth were closed in favor of creating a milestone or new, more focused issues ([#16496](https://github.com/ethereum-optimism/superchain-registry/issues/16496), [#16544](https://github.com/ethereum-optimism/superchain-registry/issues/16544)).\n\n- **New & Active Issues:** Discussions this month highlighted areas for future work and improvement.\n    - A new issue was opened to address discrepancies between the acceptance test topology and production environments, aiming to improve test fidelity ([#16746](https://github.com/ethereum-optimism/superchain-registry/issues/16746)).\n    - Active discussions continued on tracking the \"Min Base Fee\" ([#16807](https://github.com/ethereum-optimism/superchain-registry/issues/16807)) and designing a system for congestion-based builder transaction reordering ([#306](https://github.com/ethereum-optimism/superchain-registry/issues/306)), pointing to ongoing research into future protocol improvements.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active issue discussions throughout the month. Team members were actively engaged in resolving technical challenges and planning future work, as seen in the detailed discussions around `op-node` logic, supervisor improvements, and the Blockscout migration. The month also saw a positive sign of external collaboration, with a community member expressing interest in contributing to the design document for congestion-based transaction reordering ([#306](https://github.com/ethereum-optimism/superchain-registry/issues/306)). The submission of a new chain to the registry ([#1091](https://github.com/ethereum-optimism/superchain-registry/pull/1091)) further demonstrates the project's role as a central hub for the growing Superchain community.", "2025-09-04T03:44:59.920Z"]
["ethereum-optimism/supersim_month_2025-07-01", "ethereum-optimism/supersim", "month", "2025-07-01", "# ethereum-optimism/supersim Monthly Report (July 2025)\n\n## \ud83d\ude80 Highlights\nJuly was a month of significant enhancements to the supersim environment, focusing on integrating core ecosystem components and improving testing flexibility. Key achievements include the integration of UniV4 deployments and updates to the latest `GasTank` version, expanding the simulation's capabilities for complex protocol interactions. The team also resolved a long-standing issue regarding interop prestate configuration by improving genesis tooling, demonstrating a pragmatic approach to protocol safety. These developments collectively advance supersim's role as a robust testing and simulation platform for the Superchain.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on integrating essential components and updating dependencies within the simulation environment.\n\n- **UniV4 Integration:** In a major feature addition, UniV4 deployments were added to supersim, making UniV4 contracts available as part of the chain addresses. This enhancement, completed in PR [#397](https://github.com/ethereum-optimism/supersim/pull/397), enriches the simulation environment for testing future protocol interactions involving this key DeFi primitive.\n\n- **GasTank Component Update:** The `GasTank` component was updated to its latest version across two pull requests ([#413](https://github.com/ethereum-optimism/supersim/pull/413), [#414](https://github.com/ethereum-optimism/supersim/pull/414)). This involved updating the `interop-lib` gitsubmodule and modifying several genesis files to ensure the most recent `GasTank` commit is deployed, keeping the simulation environment current with protocol dependencies.\n\n## \ud83d\udc1b Issues & Triage\nIssue management in July focused on resolving configuration challenges, improving testing infrastructure, and discussing future interop logic.\n\n- **Closed Issues:**\n    - **Interop Prestate Configuration:** A significant issue regarding the validation of `CrossL2Inbox` configuration in the EL prestate ([#15765](https://github.com/ethereum-optimism/supersim/issues/15765)) was closed. The team concluded that improvements to the `op-deployer` genesis generation tool sufficiently mitigate the risk, making a client-side check unnecessary.\n    - **Testing Flexibility:** An enhancement to allow for a configurable dependency set for L2 chains via a CLI flag was completed ([#361](https://github.com/ethereum-optimism/supersim/issues/361)), providing more flexible testing scenarios.\n    - **Infrastructure Deployment:** A `flashblocks-websocket-proxy` was successfully deployed in op-sepolia to support flashblocks-enabled sequencers ([#16686](https://github.com/ethereum-optimism/supersim/issues/16686)).\n\n- **New & Active Issues:**\n    - **Op-node Interop Logic:** Discussions are ongoing for adding a mode to `op-node` to handle pre-Interop logic ([#16520](https://github.com/ethereum-optimism/supersim/issues/16520)). A recent suggestion explores running all services in a single process, similar to `op-e2e`.\n    - **Code Style Enforcement:** An effort to add a semgrep rule for function naming conventions ([#15115](https://github.com/ethereum-optimism/supersim/issues/15115)) is currently blocked due to GitHub Actions being disabled on the repository.\n    - **Test Target Integration:** Work continues on improving acceptance test compatibility across different networks, with discussion on [#375](https://github.com/ethereum-optimism/supersim/issues/375) linking to related work in the `optimism` and `infra` repositories.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month highlighted a focus on pragmatic, cross-repository solutions. The decision to close the interop prestate validation issue ([#15765](https://github.com/ethereum-optimism/supersim/issues/15765)) in favor of a tooling-based fix shows a mature approach to problem-solving driven by key contributors like `ajsutton`. Furthermore, the discussion around improving acceptance test setup ([#375](https://github.com/ethereum-optimism/supersim/issues/375)) points to active coordination between the `supersim`, `optimism`, and `infra` projects, ensuring that testing infrastructure evolves cohesively across the ecosystem.", "2025-09-04T03:45:04.009Z"]
["ethereum-optimism/design-docs_month_2025-08-01", "ethereum-optimism/design-docs", "month", "2025-08-01", "# ethereum-optimism/design-docs Monthly Report (August 2025)\n\n## \ud83d\ude80 Highlights\nAugust was a month of significant progress in maturing core protocol features and introducing new design proposals for future capabilities. The specification for the `min-base-fee` feature reached a major milestone with the completion of its threat model, state growth analysis, and final documentation, leading to the closure of several long-standing issues. Alongside this, the team introduced forward-looking designs for Custom Gas Tokens, a Reactive Security Council, and nonceless execution. Efforts also continued to bolster the Superchain's operational robustness through enhancements in testing, deployment tooling, and monitoring for features like Flashblocks.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on solidifying existing protocol mechanics while laying the groundwork for new architectural enhancements.\n\n### Protocol Fee and State Management\nSignificant effort was dedicated to refining the `min-base-fee` feature and other fee-related mechanisms.\n- **Operator Fee Formula:** The `operatorFee` calculation was refined with a scalar fix to improve its precision ([#299](https://github.com/ethereum-optimism/design-docs/pull/299)).\n- **MinBaseFee Security & Documentation:** A comprehensive threat model for MinBaseFee was formally documented ([#314](https://github.com/ethereum-optimism/design-docs/pull/314)), and its documentation was updated to include refined database growth estimates ([#319](https://github.com/ethereum-optimism/design-docs/pull/319), [#321](https://github.com/ethereum-optimism/design-docs/pull/321)).\n\n### New Protocol Design Proposals\nSeveral new design documents were introduced, outlining potential new features for the OP Stack.\n- **Custom Gas Tokens (CGT):** A new, minimal, and flexible design for CGT support was introduced, replacing previous experimental approaches ([#305](https://github.com/ethereum-optimism/design-docs/pull/305)). A related PR for migrating custom gas tokens was also opened ([#313](https://github.com/ethereum-optimism/design-docs/pull/313)).\n- **Security and Governance:** Proposals were introduced for a `TimelockGuard` ([#324](https://github.com/ethereum-optimism/design-docs/pull/324)), a Single-Approval Long-Delay TimelockGuard ([#326](https://github.com/ethereum-optimism/design-docs/pull/326)), a Reactive Security Council ([#327](https://github.com/ethereum-optimism/design-docs/pull/327)), and a fee splitter ([#328](https://github.com/ethereum-optimism/design-docs/pull/328)).\n- **Protocol Enhancements:** Designs were proposed for a new liveness module ([#320](https://github.com/ethereum-optimism/design-docs/pull/320)), nonceless execution ([#322](https://github.com/ethereum-optimism/design-docs/pull/322)), and a data availability footprint block limit ([#317](https://github.com/ethereum-optimism/design-docs/pull/317)).\n\n### Documentation and Tooling Improvements\nDocumentation was a key focus, aimed at improving clarity for developers and operators.\n- **Deployment Tooling:** A design document was added for `op-deployer` detailing the use of Forge ([#325](https://github.com/ethereum-optimism/design-docs/pull/325)).\n- **Protocol Design Guidance:** New guidance was added for naming activation checks in decoupled features ([#318](https://github.com/ethereum-optimism/design-docs/pull/318)), and the design for dispute game creators was clarified ([#331](https://github.com/ethereum-optimism/design-docs/pull/331)).\n- **Liquidity Controller:** The `LiquidityController` documentation was updated to include the new `deauthorizeMinter` function ([#329](https://github.com/ethereum-optimism/design-docs/pull/329)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month reflected a push to finalize in-flight features and improve the stability of the developer toolchain.\n\n- **Closed Issues:**\n    - **`min-base-fee` Finalization:** A cluster of issues related to the `min-base-fee` feature were closed, including the failure modes analysis ([#311](https://github.com/ethereum-optimism/design-docs/issues/311)), state growth estimation ([#316](https://github.com/ethereum-optimism/design-docs/issues/316)), and the main specification tracking issue ([#742](https://github.com/ethereum-optimism/design-docs/issues/742)), signaling the feature's maturity.\n    - **Testing and Tooling:** Several issues were resolved, confirming the completion of `op-challenger` acceptance tests ([#15948](https://github.com/ethereum-optimism/design-docs/issues/15948)), the successful implementation of flashblocks on Sunnyside sequencers ([#16688](https://github.com/ethereum-optimism/design-docs/issues/16688)), and the cleanup of the event system ([#17001](https://github.com/ethereum-optimism/design-docs/issues/17001), [#16874](https://github.com/ethereum-optimism/design-docs/issues/16874)).\n    - **Governance:** An issue regarding an inappropriately flagged project in Retro-Funding was investigated and resolved ([#72](https://github.com/ethereum-optimism/design-docs/issues/72)).\n\n- **New & Active Issues:**\n    - **P2P Sync Deprecation:** A significant discussion emerged around deprecating the req-resp p2p sync ([#14108](https://github.com/ethereum-optimism/design-docs/issues/14108)), with a detailed alternative proposal for a simpler, faster unsafe block sync mechanism using a centralized driver and Redis.\n    - **Flashblocks Operations:** Multiple active issues focus on the operational readiness of Flashblocks, including load testing ([#16756](https://github.com/ethereum-optimism/design-docs/issues/16756)), monitoring and alerting ([#16388](https://github.com/ethereum-optimism/design-docs/issues/16388), [#16867](https://github.com/ethereum-optimism/design-docs/issues/16867)), and peer health ([#16868](https://github.com/ethereum-optimism/design-docs/issues/16868)).\n    - **Tooling Stability:** The `op-proposer` transaction failure issue ([#13502](https://github.com/ethereum-optimism/design-docs/issues/13502)) saw a potential resolution shared by a community member, highlighting the importance of correct game type configuration.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions on complex architectural changes. The conversation around deprecating the req-resp p2p sync ([#14108](https://github.com/ethereum-optimism/design-docs/issues/14108)) showcased deep collaboration, with team members relaying and building upon detailed proposals from others. Similarly, the resolution of the `op-proposer` failure issue ([#13502](https://github.com/ethereum-optimism/design-docs/issues/13502)) demonstrated effective community-driven troubleshooting. The iterative refinement of the `min-base-fee` specifications involved multiple contributors across several issues and pull requests, reflecting a coordinated effort to solidify a core protocol feature.", "2025-09-04T03:45:17.781Z"]
["ethereum-optimism/Retro-Funding_month_2025-09-01", "ethereum-optimism/Retro-Funding", "month", "2025-09-01", "# ethereum-optimism/Retro-Funding Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember's efforts focused on preparing for the future of Retroactive Public Goods Funding while simultaneously advancing the core protocol's fault-proof system. Foundational scaffolding was established for the upcoming Season 8 (S8) calculations, with an emphasis on creating a generic, season-agnostic framework to streamline future rounds. Concurrently, significant discussion and planning took place around integrating the new `cannon-kona` fault-proof game type, a critical step for enhancing the security and decentralization of the OP Stack. These parallel efforts highlight a dual focus on both the application layer of public goods funding and the deep infrastructure that secures the network.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on building the next generation of the Retro Funding framework and ensuring the accuracy of existing data.\n\n- **Season 8 Calculation Scaffolding:** Initial work was completed to prepare for the next round of Retro Funding. This involved creating the foundational structure for S8 calculations by replicating and generalizing the Season 7 setup. The new, season-agnostic framework includes updated configurations, data fetching utilities, and core models for allocators and builders, designed to support both S7 and S8 data within a unified toolset ([#74](https://github.com/ethereum-optimism/Retro-Funding/pull/74)).\n\n- **Bug Fixes & Data Integrity:** A critical bug was addressed where monthly summary metrics for Enso were missing from the S7/M6 results file. This fix ensures the accuracy and completeness of the on-chain results data ([#75](https://github.com/ethereum-optimism/Retro-Funding/pull/75)).\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this month revolved around significant upcoming technical upgrades, developer experience improvements, and protocol-level bug resolution.\n\n- **Closed Issues:** An issue regarding a persistent `GameAlreadyExists` error in `op-proposer` was resolved ([#17042](https://github.com/ethereum-optimism/Retro-Funding/issues/17042)). The investigation concluded that this is expected behavior when the safe head has not advanced, and the resolution involves ensuring the batcher is running correctly.\n\n- **New & Active Issues:**\n    - **Kona + Cannon Integration:** A major topic of discussion was the work required to support the new `cannon-kona` game type across the stack. This includes updating `op-dispute-mon` to explicitly recognize and handle the new game type ([#17286](https://github.com/ethereum-optimism/Retro-Funding/issues/17286)) and modifying OPCM contracts to enable deployment of this new game type ([#17285](https://github.com/ethereum-optimism/Retro-Funding/issues/17285)). This represents significant future work for the fault-proof system.\n    - **CI/CD & Testing Improvements:** Conversations are ongoing to enhance the developer experience by improving the CircleCI configuration, with ideas to enable easier local execution of high-value tests ([#17184](https://github.com/ethereum-optimism/Retro-Funding/issues/17184)). Additionally, the sync-tester's scope was identified for expansion to cover all Hardfork transitions and multi-client syncing to improve test robustness ([#16703](https://github.com/ethereum-optimism/Retro-Funding/issues/16703)).\n    - **P2P Configuration Bug:** A bug was identified where the `ConfigureGossip` function overwrites default P2P settings with zero values, causing panics in certain tests. The active discussion is exploring the best way to establish valid default configurations ([#17308](https://github.com/ethereum-optimism/Retro-Funding/issues/17308)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was highly visible in the detailed technical discussions on active issues. Team members like `ajsutton` and `pauldowman` were instrumental in clarifying requirements and driving progress on the complex integration of Kona and Cannon fault proofs. The active dialogue around improving CI/CD and testing infrastructure also points to a healthy internal focus on developer productivity and code quality. These discussions, spanning multiple components of the OP Stack, demonstrate strong cross-team coordination on key technical priorities.", "2025-09-04T03:46:19.047Z"]
["ethereum-optimism/docs_month_2025-09-01", "ethereum-optimism/docs", "month", "2025-09-01", "# ethereum-optimism/docs Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember began with a focus on documentation maintenance, issue resolution, and planning for future technical enhancements. While no new features were merged, key progress was made in clarifying protocol behavior for developers, specifically regarding `op-proposer` errors. An important ongoing discussion centers on extending `op-dispute-mon` to support new game types, a critical step for the Superchain ecosystem. The month's activity also included routine project management tasks, such as initiating the creation of the previous month's metrics reports.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, development work was centered on maintaining the existing documentation.\n\n*   **Documentation Maintenance:** A pull request ([#1732](https://github.com/ethereum-optimism/docs/pull/1732)) was opened to remove a dead link, reflecting ongoing efforts to ensure the accuracy and usability of the documentation.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month involved resolving existing problems, tracking project metrics, and discussing future requirements.\n\n*   **Closed Issues:**\n    *   **`op-proposer` Error Clarification:** Issue [#17042](https://github.com/ethereum-optimism/docs/issues/17042) was closed after a discussion clarified that `GameAlreadyExists` errors are expected behavior for the `op-proposer` when the safe head has not advanced. This resolution provides valuable context for node operators, explaining that the solution involves ensuring the batcher is running correctly.\n\n*   **New & Active Issues:**\n    *   **Monthly Metrics:** Two administrative issues ([#1730](https://github.com/ethereum-optimism/docs/issues/1730), [#1731](https://github.com/ethereum-optimism/docs/issues/1731)) were opened to track the generation of metrics reports for August 2025.\n    *   **Dispute Monitor Enhancement:** A significant discussion continues in issue [#17286](https://github.com/ethereum-optimism/docs/issues/17286) regarding the need for `op-dispute-mon` to support `cannon-kona` game types. The conversation highlights the technical challenge of ensuring the monitor can correctly handle new game types without creating arbitrary ones, which is essential for fault-proof system interoperability.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active issue discussions. The conversation around `op-dispute-mon` support ([#17286](https://github.com/ethereum-optimism/docs/issues/17286)) shows contributors working together to define technical requirements for a necessary protocol update. Furthermore, the resolution of the `op-proposer` error issue ([#17042](https://github.com/ethereum-optimism/docs/issues/17042)) through community discussion demonstrates effective knowledge sharing among project participants.", "2025-09-04T03:46:21.625Z"]
["ethereum-optimism/design-docs_month_2025-09-01", "ethereum-optimism/design-docs", "month", "2025-09-01", "# ethereum-optimism/design-docs Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember was a period of foundational design and planning for significant protocol upgrades. A key achievement was the finalization of a design document for a critical fix in the OPCM Superchain upgrade, bolstering protocol security and interoperability. Extensive design discussions centered on the integration of the new Kona + Cannon fault-proof system, with detailed planning for necessary changes across contracts and monitoring tools. Additionally, new work began on refining the minimum base fee calculation, and ongoing efforts continued to improve developer experience and testing frameworks.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on formalizing protocol designs and initiating new improvements.\n\n- **Superchain Upgrade Design:** A critical design document for the OPCM Superchain upgrade fix was completed and merged ([#310](https://github.com/ethereum-optimism/design-docs/pull/310)). This document addresses a key protocol issue, ensuring alignment with the future vision of the Superchain.\n- **Fee Calculation Enhancements:** A new proposal was opened to update the minimum base fee calculation to account for database growth ([#333](https://github.com/ethereum-optimism/design-docs/pull/333)), signaling a focus on the long-term economic sustainability of the protocol.\n- **Documentation:** A minor update to the repository's README was initiated ([#332](https://github.com/ethereum-optimism/design-docs/pull/332)).\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed this month, but active discussions highlighted several key areas of focus for upcoming development.\n\n- **New & Active Issues:**\n    - **Kona + Cannon Integration:** This was the most significant area of discussion. Multiple issues tracked the work required to support the new fault-proof system. Discussions confirmed that `OPContractsManager.sol` will need updates to deploy the new game type ([#17285](https://github.com/ethereum-optimism/design-docs/issues/17285)), `op-dispute-mon` must be updated to recognize and support the new game type ([#17286](https://github.com/ethereum-optimism/design-docs/issues/17286)), and a new `type = \"cannon-kona\"` will be needed for prestates integration ([#17283](https://github.com/ethereum-optimism/design-docs/issues/17283)).\n    - **Protocol Stability & Bugs:** A bug was identified where `ConfigureGossip` in `op-node` overwrites sane defaults with zero values, causing panics in tests ([#17308](https://github.com/ethereum-optimism/design-docs/issues/17308)). Discussions are underway to determine the best approach for providing valid default configurations.\n    - **Developer Experience & Testing:** A discussion on improving the CircleCI configuration aims to enhance the developer experience by making high-value CI jobs easier to run locally ([#17184](https://github.com/ethereum-optimism/design-docs/issues/17184)). In parallel, an issue for enhancing the sync tester was reopened to ensure all Hardfork transitions are properly tested ([#16703](https://github.com/ethereum-optimism/design-docs/issues/16703)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions across several critical issues. Team members like `ajsutton` and `pauldowman` were actively engaged in defining the requirements for the Kona + Cannon upgrade, ensuring a coordinated approach. The active debate in issues like the P2P gossip bug ([#17308](https://github.com/ethereum-optimism/design-docs/issues/17308)) and CI improvements ([#17184](https://github.com/ethereum-optimism/design-docs/issues/17184)) demonstrates a healthy, collaborative process for weighing different technical solutions to improve the protocol and developer tooling.", "2025-09-04T03:46:22.707Z"]
["ethereum-optimism/ecosystem_month_2025-09-01", "ethereum-optimism/ecosystem", "month", "2025-09-01", "# ethereum-optimism/ecosystem Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember's development was characterized by a significant strategic initiative to modernize the Optimism marketing site, with numerous issues opened to track the migration to a new tech stack featuring Next.js and Sanity. This effort was complemented by repository streamlining, as the `verbs` packages were moved to a dedicated repository. Concurrently, discussions continued around ensuring core components like `op-dispute-mon` are prepared for the upcoming Kona + Cannon upgrade, and several UI/UX consistency tasks were completed across the ecosystem's web properties.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on restructuring the repository to improve focus and maintainability.\n\n- **Repository Restructuring:** The `verbs` service, UI, and SDK packages were removed from the main ecosystem repository. This change streamlines the project by externalizing these specific functionalities into their own dedicated repository, simplifying the core codebase ([#946](https://github.com/ethereum-optimism/ecosystem/pull/946)).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nSeveral issues were resolved, primarily focused on enhancing user experience, brand consistency, and security across various web properties.\n- **Branding and UI Consistency:** A series of updates were completed to standardize the font across `app.optimism.io`, `docs.optimism.io`, `console.optimism.io`, and `community.optimism.io`, ensuring a consistent brand identity ([#922](https://github.com/ethereum-optimism/ecosystem/issues/922), [#923](https://github.com/ethereum-optimism/ecosystem/issues/923), [#924](https://github.com/ethereum-optimism/ecosystem/issues/924), [#933](https://github.com/ethereum-optimism/ecosystem/issues/933)). The implementation of a Storybook and design system for `optimism.io` was also finalized ([#931](https://github.com/ethereum-optimism/ecosystem/issues/931)).\n- **Security and Site Enhancements:** A Content Security Policy (CSP) was added to `oplabs.co` to improve its security posture ([#934](https://github.com/ethereum-optimism/ecosystem/issues/934)).\n\n### New & Active Issues\nA major new initiative was kicked off, and important discussions continued regarding protocol upgrades.\n- **Marketing Site Modernization:** A significant effort began to migrate the Optimism marketing site to a modern stack using Next.js 15 and TypeScript. A master tracking issue ([#937](https://github.com/ethereum-optimism/ecosystem/issues/937)) was created, along with sub-tasks for key milestones:\n    - Setting up a monorepo with shared configurations ([#938](https://github.com/ethereum-optimism/ecosystem/issues/938)).\n    - Bootstrapping the Next.js app with Netlify CI/CD ([#939](https://github.com/ethereum-optimism/ecosystem/issues/939)).\n    - Initializing a Sanity studio for content management ([#940](https://github.com/ethereum-optimism/ecosystem/issues/940)).\n    - Creating a shared UI package and implementing core components like navigation and footers ([#942](https://github.com/ethereum-optimism/ecosystem/issues/942), [#943](https://github.com/ethereum-optimism/ecosystem/issues/943)).\n- **Kona + Cannon Upgrade Support:** Active discussions are ongoing to ensure core components are ready for the Kona + Cannon upgrade. Key issues include verifying that `OPCM` can support the new game type ([#17285](https://github.com/ethereum-optimism/ecosystem/issues/17285)) and updating `op-dispute-mon` to explicitly support and monitor cannon-kona games, as it must return an error for unsupported types ([#17286](https://github.com/ethereum-optimism/ecosystem/issues/17286)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active technical discussions surrounding future protocol upgrades. Team members `ajsutton` and `pauldowman` engaged in detailed conversations on issues related to Kona + Cannon support. Their dialogue highlights a focus on ensuring that critical monitoring and contract management tools are robust and explicitly prepared for new game types, reflecting a proactive and detail-oriented approach to system upgrades.", "2025-09-04T03:46:26.570Z"]
["ethereum-optimism/ethereum-optimism.github.io_month_2025-09-01", "ethereum-optimism/ethereum-optimism.github.io", "month", "2025-09-01", "# ethereum-optimism/ethereum-optimism.github.io Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember's efforts focused on both expanding the Superchain ecosystem and advancing core protocol capabilities. The Superchain Token List grew significantly with the addition of several new tokens, enhancing interoperability for users. Concurrently, significant technical discussions progressed on integrating the next-generation `Kona + Cannon` fault-proof system, a critical step for the protocol's security and decentralization. Key operational issues were also addressed, including a clarification of `op-proposer` errors and a strategic move to streamline chain data management by leveraging the Superchain Registry.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development work this month centered on enriching the Superchain ecosystem by expanding its token support.\n\n- **Superchain Token List Expansion:** The official token list was updated to support a variety of new assets across the ecosystem. This included adding ARCv2 ([#1184](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1184)), MITY ([#1185](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1185)), CIOTX ([#1191](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1191)), FORT ([#1194](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1194)), and opening a request for the FLIXX token ([#1195](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1195)). These additions provide official bridge support and enhance the utility of the Base network and the broader Superchain.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month involved resolving operational queries and driving forward discussions on major technical initiatives.\n\n- **Closed Issues:**\n    - **Proposer Error Resolution:** An issue regarding `op-proposer` `GameAlreadyExists` errors was closed ([#17042](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17042)). It was clarified that this error is expected behavior when the safe head has not advanced. The resolution advises ensuring the batcher is running correctly.\n    - **Superchain Registry Integration:** To streamline data management, an issue was closed that paves the way for using the Superchain Registry to populate the chains available for token lists, rather than maintaining a local list ([#1122](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1122)).\n\n- **New & Active Issues:**\n    - **Kona + Cannon Integration:** A significant portion of discussion focused on the work required to support the new `cannon-kona` fault-proof game type. This multi-faceted effort involves updating `op-dispute-mon` to recognize the new game type ([#17286](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17286)), modifying OPCM to handle its deployment ([#17285](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17285)), and adapting tooling for absolute prestates ([#17283](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17283)).\n    - **P2P Configuration Bug:** An important bug is being addressed where `ConfigureGossip` overwrites default settings with zero values, causing panics in tests ([#17308](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17308)).\n    - **CI/CD and Testing Enhancements:** Discussions are ongoing to improve the developer experience around CircleCI configuration ([#17184](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17184)) and to enhance sync tests to cover all Hardfork transitions ([#16703](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16703)), which was reopened to ensure complete test coverage.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was highly visible in the detailed technical discussions on active issues. Contributors `ajsutton` and `pauldowman` were frequently engaged in clarifying the requirements for the Kona + Cannon integration, demonstrating close coordination on foundational protocol upgrades. The active dialogue around improving CI/CD and addressing the P2P gossip bug also highlights a strong internal focus on system stability and developer productivity. The steady stream of pull requests to add new tokens to the Superchain list suggests healthy engagement with projects building within the ecosystem.", "2025-09-04T03:46:30.216Z"]
["ethereum-optimism/infra_month_2025-09-01", "ethereum-optimism/infra", "month", "2025-09-01", "# ethereum-optimism/infra Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember was a month of foundational refinement and preparation for future protocol upgrades. Significant progress was made in improving the test infrastructure, particularly with a major refactoring of the `op-acceptor` test runner for better modularity and logging. The project also standardized its tool version management by introducing `mise`. Meanwhile, active discussions centered on integrating the upcoming Kona + Cannon fault-proof system, addressing a critical P2P gossip configuration bug, and enhancing the overall developer experience through CI/CD improvements.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on enhancing the project's testing and development tooling.\n\n-   **`op-acceptor` Test Runner Refactoring:** The monolithic `op-acceptor` test runner was significantly refactored into five distinct components, breaking down the large `runner.go` file to improve maintainability and separation of concerns ([#448](https://github.com/ethereum-optimism/infra/pull/448)).\n-   **Enhanced Test Logging:** Complementing the refactor, logging in `op-acceptor` was improved by splitting test outputs into separate plaintext, raw JSON, and summary log files, with the HTML report updated to link to these new formats ([#453](https://github.com/ethereum-optimism/infra/pull/453)).\n-   **Standardized Tool Version Management:** `mise` was introduced to standardize tool version management across the repository, starting with `op-acceptor`, `op-conductor-mon`, and `op-conductor-ops`. This change aims to streamline the developer setup process project-wide ([#452](https://github.com/ethereum-optimism/infra/pull/452)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management focused on resolving testing infrastructure blockers and clarifying component behavior, while new discussions laid the groundwork for supporting future protocol features.\n\n-   **Closed Issues:**\n    -   **Testing Infrastructure:** Several key testing issues were closed, marking significant progress in test reliability. This includes porting `TestFjord`, `TestSmokeTestFailure`, and `TestInteropSystemNoop` to Devstack ([#440](https://github.com/ethereum-optimism/infra/issues/440), [#444](https://github.com/ethereum-optimism/infra/issues/444)) and completing the effort to get all tests running in persistent devnets ([#398](https://github.com/ethereum-optimism/infra/issues/398)).\n    -   **`op-proposer` Behavior:** An issue regarding an `op-proposer` error was closed with a clarification that the `GameAlreadyExists` error is expected behavior when the safe head has not advanced, guiding users to check their batcher configuration ([#17042](https://github.com/ethereum-optimism/infra/issues/17042)).\n\n-   **New & Active Issues:**\n    -   **Kona + Cannon Integration:** A major topic of discussion was the upcoming support for Kona + Cannon fault proofs. Active issues cover the necessary changes in `op-dispute-mon` ([#17286](https://github.com/ethereum-optimism/infra/issues/17286)), OPCM ([#17285](https://github.com/ethereum-optimism/infra/issues/17285)), and standard prestates management ([#17283](https://github.com/ethereum-optimism/infra/issues/17283)).\n    -   **P2P Gossip Configuration Bug:** A critical bug where `ConfigureGossip` overwrites sane defaults with zero values, causing panics in `go-libp2p-pubsub`, is under active discussion ([#17308](https://github.com/ethereum-optimism/infra/issues/17308)). A proposed solution is to introduce a `DefaultP2PConfig` method to ensure valid configurations are used.\n    -   **Developer Experience:** Discussions are ongoing to improve the testability of the CircleCI configuration, including making high-value CI jobs easier to run locally ([#17184](https://github.com/ethereum-optimism/infra/issues/17184)).\n    -   **`op-geth` Initialization Error:** A recurring issue where `op-geth` fails to sync past block 0 during initialization continues to affect users, with no definitive resolution yet identified ([#420](https://github.com/ethereum-optimism/infra/issues/420)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was evident in the detailed technical discussions on active issues. The P2P gossip bug ([#17308](https://github.com/ethereum-optimism/infra/issues/17308)) and the planning for Kona + Cannon support ([#17285](https://github.com/ethereum-optimism/infra/issues/17285), [#17286](https://github.com/ethereum-optimism/infra/issues/17286)) saw significant engagement from core contributors, who debated implementation details and potential solutions. The `op-geth` initialization issue ([#420](https://github.com/ethereum-optimism/infra/issues/420)) highlighted community interaction, with users sharing workarounds and confirming the persistence of the problem. These discussions reflect a healthy, engaged community focused on both immediate stability and long-term strategic goals.", "2025-09-04T03:46:38.908Z"]
["ethereum-optimism/op-analytics_month_2025-09-01", "ethereum-optimism/op-analytics", "month", "2025-09-01", "# ethereum-optimism/op-analytics Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember's efforts focused on expanding Superchain analytics and advancing key technical discussions for future protocol enhancements. The primary completed work involved adding new chain analysis outputs, including gas limit data and analytical plots for several ecosystem chains. Meanwhile, significant planning and problem-solving continued around the integration of the Kona/Cannon fault-proof system, improvements to CI/CD and testing infrastructure, and resolving a P2P gossip configuration bug.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis month saw a direct enhancement to the project's analytical capabilities, providing deeper insights into the health and configuration of various chains in the Superchain ecosystem.\n\n- **Chain Analysis Expansion:** New chain analysis output was merged, providing updated gas limit data for Ink, Mode, Soneium, Unichain, and Worldchain. This update also included new analytical plots and an updated README for the `jovian_analysis` notebook, improving the tooling for chain monitoring ([#1740](https://github.com/ethereum-optimism/op-analytics/pull/1740)).\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed based on the provided reports. However, active discussions on existing issues highlight key areas of focus for the project's evolution.\n\n- **New & Active Issues:**\n    - **Kona/Cannon Integration:** Discussions continued on integrating the next-generation fault-proof system. Conversations centered on enabling OPCM to deploy the new game type ([#17285](https://github.com/ethereum-optimism/op-analytics/issues/17285)) and defining how the `cannon-kona` type will be represented in standard prestates ([#17283](https://github.com/ethereum-optimism/op-analytics/issues/17283)).\n    - **P2P Networking Bug:** A significant bug in the `op-node/p2p/gossip` module was discussed, where `ConfigureGossip` can overwrite valid defaults with zero values, leading to panics ([#17308](https://github.com/ethereum-optimism/op-analytics/issues/17308)). Potential solutions include creating a default configuration method to ensure node stability.\n    - **Developer Experience & Testing:** Efforts to improve the developer workflow are ongoing. Discussions on the CircleCI configuration aim to improve local testability and automate validation ([#17184](https://github.com/ethereum-optimism/op-analytics/issues/17184)). Concurrently, the sync tester enhancement issue was revisited to ensure comprehensive testing across all OP Stack hard fork transitions ([#16703](https://github.com/ethereum-optimism/op-analytics/issues/16703)).\n    - **Go Compatibility:** The team is monitoring Go 1.25.1 for a MIPS fix that is relevant to Cannon's compatibility, though the fix does not appear to be included in the latest point release ([#17060](https://github.com/ethereum-optimism/op-analytics/issues/17060)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was characterized by in-depth technical discussions on active issues. The conversations around Kona/Cannon integration, P2P configuration, and CI/CD improvements show a high degree of engagement from core contributors in planning and refining critical aspects of the OP Stack. These discussions are crucial for laying the groundwork for future development and ensuring the long-term stability and decentralization of the protocol.", "2025-09-04T03:46:41.679Z"]
["ethereum-optimism/op-geth_month_2025-09-01", "ethereum-optimism/op-geth", "month", "2025-09-01", "# ethereum-optimism/op-geth Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember began with a significant integration effort, bringing `op-geth` up to date by merging the latest upstream `go-ethereum v1.16.2`. Following this merge, development focus shifted to extensive planning and discussion around the upcoming Kona and Cannon upgrades, with detailed conversations on necessary changes to OPCM, `op-dispute-mon`, and prestate configurations. Concurrently, the team triaged new reports of node instability and RPC inconsistencies, while also advancing discussions on improving CI/CD infrastructure and test coverage. The period was characterized by foundational integration work followed by strategic planning for future feature support and system reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary code contribution this month was a major upstream synchronization to maintain alignment with the core Ethereum client.\n\n- **Upstream Geth Integration:** The `op-geth` codebase was updated by merging `go-ethereum v1.16.2` ([#663](https://github.com/ethereum-optimism/op-geth/pull/663)). This crucial update incorporates numerous changes from the upstream Geth repository, ensuring `op-geth` benefits from the latest developments, bug fixes, and features in components like `cmd/geth`, `accounts/abi`, and `cmd/devp2p`.\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed in this period, but several critical new issues were opened and existing discussions progressed, highlighting key areas of focus for the coming weeks.\n\n- **Closed Issues:** No issues were closed in the first part of September.\n\n- **New & Active Issues:**\n    - **Kona & Cannon Upgrade Preparation:** A significant portion of discussion centered on preparing for the Kona and Cannon upgrades. Active issues detailed the necessary changes for OPCM to support the new game type ([#17285](https://github.com/ethereum-optimism/op-geth/issues/17285)), updates required for `op-dispute-mon` to correctly handle the new game types ([#17286](https://github.com/ethereum-optimism/op-geth/issues/17286)), and the definition of a `standard-prestates.toml` format to include `cannon-kona` prestates ([#17283](https://github.com/ethereum-optimism/op-geth/issues/17283)).\n    - **Node Stability and RPC Bugs:** Two important new issues were reported. One detailed a `leveldb panic` when initializing a node with a large genesis file, pointing to potential stability problems ([#668](https://github.com/ethereum-optimism/op-geth/issues/668)). The other reported missing events in `eth_getLogs` calls and high latency, suggesting issues with RPC reliability and event indexing ([#667](https://github.com/ethereum-optimism/op-geth/issues/667)).\n    - **CI/CD and Testing Enhancements:** Discussions continued on improving the developer experience for local CI job execution ([#17184](https://github.com/ethereum-optimism/op-geth/issues/17184)). Additionally, the issue for sync testing was reopened to ensure more comprehensive testing across hard fork transitions ([#16703](https://github.com/ethereum-optimism/op-geth/issues/16703)).\n    - **Configuration and Compatibility:** A bug in the P2P gossip configuration that overwrites defaults with zero values, causing test panics, was actively debated ([#17308](https://github.com/ethereum-optimism/op-geth/issues/17308)). Concerns also remained regarding Cannon's compatibility with Go 1.25, as the required MIPS fix was not included in the latest Go patch release ([#17060](https://github.com/ethereum-optimism/op-geth/issues/17060)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident through in-depth technical discussions across numerous issues. Contributors like `ajsutton`, `pauldowman`, `wood-jp`, `bitwiseguy`, `teddyknox`, and `pcw109550` were actively engaged in problem-solving and planning. The detailed debate in issue [#17308](https://github.com/ethereum-optimism/op-geth/issues/17308) regarding the best approach to fix an invalid P2P configuration highlights the team's focus on robust, long-term solutions over simple patches. The reopening of issue [#16703](https://github.com/ethereum-optimism/op-geth/issues/16703) to improve test coverage further demonstrates a collective commitment to quality and thoroughness.", "2025-09-04T03:46:48.879Z"]
["ethereum-optimism/superchain-registry_month_2025-09-01", "ethereum-optimism/superchain-registry", "month", "2025-09-01", "# ethereum-optimism/superchain-registry Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nWork in September focused on foundational maintenance and planning for significant future updates. The CI pipeline was streamlined to improve reliability by removing a problematic integration. Discussions progressed on the necessary changes to support Kona + Cannon, specifically within OPCM and `op-dispute-mon`, laying the groundwork for future integration. Additionally, a pull request was opened to update contract addresses.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment activity centered on improving the stability of the development process and preparing for contract updates.\n\n- **CI Pipeline Reliability:** The Codecov integration was removed from the CI pipeline to resolve build failures and enhance overall stability ([#1101](https://github.com/ethereum-optimism/superchain-registry/pull/1101)).\n- **Contract Address Updates:** A pull request was opened to update contract addresses for u16, which is now awaiting review ([#1100](https://github.com/ethereum-optimism/superchain-registry/pull/1100)).\n\n## \ud83d\udc1b Issues & Triage\nNo issues were opened or closed during this period. The primary focus was on advancing discussions around existing high-priority issues.\n\n- **New & Active Issues:** Discussions centered on the upcoming integration of Kona + Cannon.\n    - In [#17285](https://github.com/ethereum-optimism/superchain-registry/issues/17285), contributors clarified that OPCM will require modifications to `OPContractsManager.sol` to support deploying the new game type.\n    - Similarly, in [#17286](https://github.com/ethereum-optimism/superchain-registry/issues/17286), the scope was refined to ensure `op-dispute-mon` is updated to explicitly support cannon-kona games and return errors for any unsupported game types.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active technical discussions surrounding future development. Contributors `ajsutton` and `pauldowman` engaged in detailed planning on the Kona + Cannon support issues, clarifying technical requirements and defining the path forward for implementation in both OPCM and `op-dispute-mon`.", "2025-09-04T03:46:54.029Z"]
["ethereum-optimism/optimism_month_2025-09-01", "ethereum-optimism/optimism", "month", "2025-09-01", "# ethereum-optimism/optimism Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember was a month of significant consolidation and preparation for future protocol upgrades. Development efforts were heavily concentrated on overhauling the testing infrastructure, with a major push to migrate acceptance tests to Devstack, unify them into a single workflow, and enhance the `op-sync-tester`. This focus on robustness was complemented by the closure of numerous long-standing issues related to Drippie, Cannon, and proof systems, clearing the path for new initiatives. Concurrently, foundational work for the next generation of fault proofs began, with active development to support Kona + Cannon game types and initial design discussions for an aggregate dispute game.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on enhancing testability, improving configuration, and laying the groundwork for future protocol features.\n\n- **Testing and CI/CD Overhaul:** A major effort was undertaken to improve the project's testing framework and CI/CD pipelines.\n    - Acceptance tests were systematically ported to Devstack, including Fjord (Holocene) tests and critical smoke tests ([#16920](https://github.com/ethereum-optimism/optimism/pull/16920), [#17300](https://github.com/ethereum-optimism/optimism/pull/17300)).\n    - All acceptance tests were consolidated into a single, unified workflow to improve efficiency and organization ([#16755](https://github.com/ethereum-optimism/optimism/pull/16755), [#16817](https://github.com/ethereum-optimism/optimism/pull/16817)).\n    - The `op-sync-tester` was enhanced with support for the sync namespace ([#17299](https://github.com/ethereum-optimism/optimism/pull/17299)) and integrated with an external Execution Layer to improve testing against various network configurations ([#17251](https://github.com/ethereum-optimism/optimism/pull/17251)).\n    - The `publish-cannon-prestates` CI job was migrated to CircleCI to improve reliability ([#17296](https://github.com/ethereum-optimism/optimism/pull/17296)).\n\n- **Protocol and Configuration Improvements:** Several changes were made to improve the flexibility and control of the OP Stack.\n    - The `SystemConfig` contract was updated to support feature flagging, enabling features to be toggled by the ProxyAdmin ([#17281](https://github.com/ethereum-optimism/optimism/pull/17281)).\n    - The `op-deployer` was enhanced with a configurable `GasLimit` field, allowing for custom gas limits in chain intent files ([#17271](https://github.com/ethereum-optimism/optimism/pull/17271)).\n    - The `op-challenger` received configurable delay parameters for game responses, allowing for more flexible fault proof testing ([#16988](https://github.com/ethereum-optimism/optimism/pull/16988)).\n    - The `op-geth` dependency was updated to `v1.16.2` ([#17228](https://github.com/ethereum-optimism/optimism/pull/17228)).\n\n- **Development Workflow Streamlining:** To accelerate development, the frozen file check was removed from the CI/CD pipeline, allowing the `develop` branch to progress more rapidly ([#17289](https://github.com/ethereum-optimism/optimism/pull/17289)).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw the resolution of a significant backlog of major initiatives, while new issues focused on bug fixes and the design of next-generation features.\n\n- **Closed Issues:** A notable number of long-standing and high-impact issues were closed, marking the completion of major project milestones.\n    - **Proof Systems & Governance:** The shipping checklist for Stage 1.4 was completed, and details for interop proofs for governance were finalized ([#15827](https://github.com/ethereum-optimism/optimism/issues/15827), [#15968](https://github.com/ethereum-optimism/optimism/issues/15968)).\n    - **Drippie Integration:** Several issues related to the deployment and integration of Drippie for managing challenger hot wallet funds were closed, including mainnet deployment and the setup of dashboards and alerting ([#12876](https://github.com/ethereum-optimism/optimism/issues/12876), [#13764](https://github.com/ethereum-optimism/optimism/issues/13764), [#14048](https://github.com/ethereum-optimism/optimism/issues/14048)).\n    - **Cannon Enhancements:** Key issues for adding full `mips64r2` ISA support and scaling the Cannon VM runner were resolved ([#13969](https://github.com/ethereum-optimism/optimism/issues/13969), [#16910](https://github.com/ethereum-optimism/optimism/issues/16910)).\n    - **Testing & Deployment:** The initiative to unify acceptance tests into a single workflow was completed ([#16272](https://github.com/ethereum-optimism/optimism/issues/16272)).\n\n- **New & Active Issues:** Discussions centered on bug fixes, compatibility for new fault proof systems, and future protocol design.\n    - **`op-node` Gossip Bug:** A critical bug was identified where `ConfigureGossip` overwrites sane defaults with zero values, causing panics. Active discussion is underway to determine the best fix, weighing a direct patch against a more robust `DefaultP2PConfig` method ([#17308](https://github.com/ethereum-optimism/optimism/issues/17308)).\n    - **Kona + Cannon Support:** A key area of active development is ensuring stack-wide compatibility for the new Kona + Cannon game types. This involves work on `op-dispute-mon` ([#17286](https://github.com/ethereum-optimism/optimism/issues/17286)), `OPContractsManager` ([#17285](https://github.com/ethereum-optimism/optimism/issues/17285)), and standard prestates ([#17283](https://github.com/ethereum-optimism/optimism/issues/17283)).\n    - **Future Dispute Game Design:** A new issue was opened to begin the design phase for an \"aggregate dispute game,\" signaling the start of research into multi-proof fault proof systems ([#17305](https://github.com/ethereum-optimism/optimism/issues/17305)).\n\n## \ud83d\udcac Community & Collaboration\nThe development activity this month reflects a highly collaborative environment focused on improving system stability and developer experience. The detailed technical discussion on the `op-node/p2p/gossip` bug ([#17308](https://github.com/ethereum-optimism/optimism/issues/17308)) showcases a healthy process of debate and solution design among core contributors. The concerted effort to unify acceptance tests and improve CI configuration ([#17184](https://github.com/ethereum-optimism/optimism/issues/17184)) indicates a strong team focus on reducing friction in the development lifecycle. Finally, the closure of numerous high-impact, long-running issues suggests a successful, coordinated push to finalize major initiatives and clear the way for the next phase of protocol development.", "2025-09-04T03:46:57.211Z"]
["ethereum-optimism/superchain-ops_month_2025-09-01", "ethereum-optimism/superchain-ops", "month", "2025-09-01", "# ethereum-optimism/superchain-ops Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember's efforts focused on enhancing system stability and developer experience while preparing for significant network and protocol upgrades. Key achievements include a substantial 40% performance boost in CI regression tests and the resolution of critical bugs affecting Worldchain and Go version compatibility. Concurrently, significant planning and discussion took place around the integration of Kona + Cannon fault proofs and upgrades for several Superchain networks, signaling a dual focus on immediate operational health and future architectural evolution.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on performance, maintenance, and laying the groundwork for future features.\n\n- **CI & Developer Experience Improvements:**\n  - Continuous Integration performance was significantly improved by reducing concurrent processes and optimizing test scripts, resulting in a 40% speed increase for regression tests ([#1177](https://github.com/ethereum-optimism/superchain-ops/pull/1177), [#1178](https://github.com/ethereum-optimism/superchain-ops/pull/1178)).\n  - A compatibility bug was fixed by updating the Go version used by `mise`, ensuring tools like `eip712sign` function correctly ([#1183](https://github.com/ethereum-optimism/superchain-ops/pull/1183)).\n  - A new pull request was opened to fix CI alerts related to forge tests ([#1184](https://github.com/ethereum-optimism/superchain-ops/pull/1184)).\n\n- **Superchain Network Maintenance & Upgrades:**\n  - A critical bug was fixed for Worldchain, ensuring the correct nonce is used during L1 ownership transfers ([#1176](https://github.com/ethereum-optimism/superchain-ops/pull/1176)).\n  - Preparations for network-wide enhancements began with pull requests to upgrade Zora Sepolia ([#1180](https://github.com/ethereum-optimism/superchain-ops/pull/1180)), Metal Sepolia ([#1181](https://github.com/ethereum-optimism/superchain-ops/pull/1181)), and Mode Sepolia ([#1182](https://github.com/ethereum-optimism/superchain-ops/pull/1182)) from version U13 to U16.\n\n- **Protocol Enhancements:**\n  - A new feature was proposed to allow enabling and disabling LivenessModule2 templates, providing more flexibility in network configuration ([#1179](https://github.comcom/ethereum-optimism/superchain-ops/pull/1179)).\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed during this period, but several active issues saw significant discussion, highlighting key areas of future work.\n\n- **Closed Issues:**\n  - No issues were closed in this timeframe.\n\n- **New & Active Issues:**\n  - **Kona + Cannon Integration:** A major focus of discussion was the upcoming support for Kona + Cannon fault proofs. Active issues ([#17285](https://github.com/ethereum-optimism/superchain-ops/issues/17285), [#17286](https://github.com/ethereum-optimism/superchain-ops/issues/17286), [#17283](https://github.com/ethereum-optimism/superchain-ops/issues/17283)) detail the necessary changes to `OPContractsManager.sol`, the `op-dispute-mon` service, and the management of absolute prestates. This represents a significant body of work for protocol decentralization.\n  - **Developer Experience:** A discussion in [#17184](https://github.com/ethereum-optimism/superchain-ops/issues/17184) centered on improving the CircleCI configuration, with contributors highlighting the difficulty of local testing and suggesting potential solutions like dynamic test sorting to optimize CI job duration.\n  - **Bugs & Enhancements:**\n    - A bug in P2P gossip configuration that causes panics due to zero values overwriting defaults is being addressed ([#17308](https://github.com/ethereum-optimism/superchain-ops/issues/17308)).\n    - The Sync Test suite was reopened ([#16703](https://github.com/ethereum-optimism/superchain-ops/issues/16703)) to ensure all OP Stack Hardfork transitions are properly tested.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical planning for future protocol upgrades. Discussions around Kona + Cannon support ([#17285](https://github.com/ethereum-optimism/superchain-ops/issues/17285), [#17286](https://github.com/ethereum-optimism/superchain-ops/issues/17286)) showed active engagement from core contributors like `ajsutton` and `pauldowman` in defining implementation requirements. Furthermore, the active dialogue on improving CI/CD workflows ([#17184](https://github.com/ethereum-optimism/superchain-ops/issues/17184)) and the submission of a PR alongside a bug report ([#17308](https://github.com/ethereum-optimism/superchain-ops/issues/17308)) demonstrate a healthy and proactive contributor community focused on both long-term architecture and immediate developer quality of life.", "2025-09-04T03:47:00.262Z"]
["ethereum-optimism/op-geth_day_2025-09-04", "ethereum-optimism/op-geth", "day", "2025-09-04", "# ethereum-optimism/op-geth Daily Update (Sep 4, 2025)\n## OVERVIEW \nToday's development focused on updating the Superchain registry and CI configurations, alongside significant progress in addressing flashblocks-related issues and discussions around p2p gossip configuration.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Registry Update\nThe Superchain registry commit reference was updated, ensuring `op-geth` points to the latest version of the Superchain configurations [#669](https://github.com/ethereum-optimism/op-geth/pull/669).\n\n### CI Tooling Enhancement\nThe `forkdiff` version in the CI pipeline was updated to v0.1.1, which includes file name and patch filtering for improved analysis [#670](https://github.com/ethereum-optimism/op-geth/pull/670).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Flashblocks Deployment and Configuration\nA new issue was opened to track the enablement of flashblocks on the `op-opn-geth-f-sequencer-1` mainnet sequencer, outlining associated PRs and remaining deployment tasks [#17317](https://github.com/ethereum-optimism/op-geth/issues/17317).\n\n### Sync Tester Network Exposure\nAn issue was created to expose more networks inside the CI box for the `op-sync-tester`, aiming to facilitate testing L2CL syncing with real chain data [#454](https://github.com/ethereum-optimism/op-geth/issues/454).\n\n## ACTIVE ISSUES\n\n### `op-node/p2p/gossip` Configuration Overwrites [#17308](https://github.com/ethereum-optimism/op-geth/issues/17308)\nDiscussion continued regarding the `ConfigureGossip` function overwriting sane default values with zero values. `wood-jp` explained that this issue arose from a dependency update causing tests to panic due to invalid `Dhi` and `Dscore` values. `ajsutton` suggested adding a `DefaultP2PConfig` method to return a fully filled, valid configuration with sensible defaults to prevent future issues with invalid configurations.\n\n### Flashblocks Deployment on Mainnet Sequencer [#16759](https://github.com/ethereum-optimism/op-geth/issues/16759)\n`yashvardhan-kukreja` provided an update on the progressive deployment of flashblocks on a mainnet sequencer. Associated PRs were linked, and remaining tasks include deploying `rollup-boost` in disabled mode, observing stability, and then enabling its execution mode.\n\n### Flashblocks Deployment on Sunnyside Sequencers [#16761](https://github.com/ethereum-optimism/op-geth/issues/16761)\n`yashvardhan-kukreja` updated that both Sunnyside sequencers have `op-rbuilder` deployed and synced. Next steps involve deploying `rollup-boost` in disabled mode, deploying a backup sequencer without flashblocks, and enabling `execution_mode` based on flashblocks-enablement health.\n\n### Flashblocks Websocket Proxy Deployment [#16763](https://github.com/ethereum-optimism/op-geth/issues/16763)\n`yashvardhan-kukreja` noted that this issue is currently blocked on the availability of websocket connections for conductors, but an associated PR is in progress to address it.\n\n### Flashblocks RPC Node Deployment [#16764](https://github.com/ethereum-optimism/op-geth/issues/16764)\n`yashvardhan-kukreja` indicated a need to confirm the necessity of deploying a flashblocks-rpc node.\n\n### Flashblocks Spec Finalization [#17162](https://github.com/ethereum-optimism/op-geth/issues/17162)\n`yashvardhan-kukreja` provided associated PRs for the Flashblocks spec, indicating ongoing work to finalize it.\n\n### `op-geth` Init \"head block is not reachable\" Error [#420](https://github.com/ethereum-optimism/op-geth/issues/420)\n`cliff0412` reported encountering the same \"head block is not reachable\" error during `op-geth` initialization, indicating this remains an active concern for users setting up local testnets.\n\n### Flashblocks Interop Acceptance Test [#16632](https://github.com/ethereum-optimism/op-geth/issues/16632)\n`yashvardhan-kukreja` commented that this issue has been archived due to `op-node-v2` work revising interop, suggesting a shift in focus for interop testing.", "2025-10-13T20:46:54.641Z"]
["ethereum-optimism/superchain-ops_day_2025-09-04", "ethereum-optimism/superchain-ops", "day", "2025-09-04", "# ethereum-optimism/superchain-ops Daily Update (Sep 4, 2025)\n## OVERVIEW \nToday's development focused on enhancing CI reliability by fixing Slack alerts for failed Forge tests and removing unused RPC URLs. Discussions continued on several Flashblocks-related issues and a bug in `op-node/p2p/gossip` configuration.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### CI/CD Enhancements\n- Fixed CI alerts for failed Forge tests to ensure immediate notification of broken tests on `main` ([#1184](https://github.com/ethereum-optimism/superchain-ops/pull/1184)).\n- Removed unused RPC URLs from the CI configuration to streamline processes ([#1184](https://github.com/ethereum-optimism/superchain-ops/pull/1184)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Flashblocks Deployment and Configuration\n- **Flashblocks on Mainnet and Sunnyside:** Discussions continued regarding the deployment and evaluation of Flashblocks on mainnet sequencers ([#16759](https://github.com/ethereum-optimism/superchain-ops/issues/16759)) and Sunnyside sequencers ([#16761](https://github.com/ethereum-optimism/superchain-ops/issues/16761)). For mainnet, the focus is on deploying `rollup-boost` in disabled mode, observing stability, and then enabling execution. For Sunnyside, `op-rbuilder` is deployed and synced, with next steps involving `rollup-boost` deployment and execution mode enablement.\n- **Flashblocks Infrastructure:** Progress on deploying `flashblocks-websocket-proxy` ([#16763](https://github.com/ethereum-optimism/superchain-ops/issues/16763)) is blocked by the availability of websocket connections for conductors, though a PR is in progress. The need for `flashblocks-rpc` node deployment ([#16764](https://github.com/ethereum-optimism/superchain-ops/issues/16764)) is being re-evaluated.\n- **Flashblocks Spec Finalization:** Associated PRs for closing out the Flashblocks specification are being tracked ([#17162](https://github.com/ethereum-optimism/superchain-ops/issues/17162)).\n- **Flashblocks on `op-opn-geth-f-sequencer-1` Mainnet:** Work is underway to enable Flashblocks on this specific mainnet sequencer, involving `rollup-boost` deployment and subsequent execution mode enablement after stability observation ([#17317](https://github.com/ethereum-optimism/superchain-ops/issues/17317)).\n\n### `op-node/p2p/gossip` Configuration Bug\n- A bug where `ConfigureGossip` overwrites sane defaults with zero values was discussed ([#17308](https://github.com/ethereum-optimism/superchain-ops/issues/17308)). The issue arises from `libp2p/go-libp2p-pubsub` panicking when `Dhi=0` and `Dscore=4`, which occurs because `MeshDHi` is unset in tests, defaulting to 0 and clobbering the intended default of 12. A potential solution of adding a `DefaultP2PConfig` method for valid defaults was suggested.\n\n### `op-geth` Initialization Error\n- Users continue to report \"head block is not reachable\" errors during `op-geth` initialization ([#420](https://github.com/ethereum-optimism/superchain-ops/issues/420)). While some users suggest continuing with setup as the error might not be critical, others report `geth` remaining at Block 0 and issues with parent block nil errors.\n\n### Sync-Tester Network Exposure\n- Discussions are ongoing to expose more networks inside the CI box for `op-sync-tester` ([#454](https://github.com/ethereum-optimism/superchain-ops/issues/454)). L2 ELs for mainnet and Sepolia are currently exposed, with the remaining task being the exposure of an L1 beacon API in CI. A draft PR to make the synctest more dynamic with environment variables has been shared.", "2025-10-13T20:46:55.107Z"]
["ethereum-optimism/op-analytics_day_2025-09-04", "ethereum-optimism/op-analytics", "day", "2025-09-04", "# ethereum-optimism/op-analytics Daily Update (Sep 4, 2025)\n## OVERVIEW \nThe day saw updates to HTML output for ink and soneium in adhoc analysis notebooks. A new issue was opened to modify data quality checks for Jovian, while several flashblocks-related issues were actively discussed and progressed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Adhoc Analysis Notebook Updates\nThe HTML output for ink and soneium in the jovian_analysis adhoc notebooks was refreshed, along with associated image files. ([#1741](https://github.com/ethereum-optimism/op-analytics/pull/1741))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Jovian Data Quality Check Modification\nA new issue was created to modify the ingestion data quality check for Jovian, specifically to ensure that block gas used equals the sum of transaction gas used for all transactions in a block, and for Jovian, to sum `max(tx gas used, da footprint)`. ([#1742](https://github.com/ethereum-optimism/op-analytics/issues/1742))\n\n## ACTIVE ISSUES\n\n### Flashblocks Deployment and Configuration\nDiscussions continued on several flashblocks-related issues. For [#16759](https://github.com/ethereum-optimism/op-analytics/issues/16759) (enable flashblocks on prod-mainnet-op-opn-geth-f-sequencer-0), updates included associated PRs for k8s and remaining tasks such as deploying rollup-boost with disabled mode and then enabling its execution mode. Similarly, for [#16761](https://github.com/ethereum-optimism/op-analytics/issues/16761) (enable flashblocks on sunnyside sequencers), the latest updates confirmed both sunnyside sequencers have op-rbuilder deployed and synced, with next steps involving rollup-boost deployment and enabling execution mode. The issue [#16763](https://github.com/ethereum-optimism/op-analytics/issues/16763) (deploy flashblocks-websocket-proxy) is currently blocked on the availability of websocket connection of conductors, but a PR is in progress. For [#16764](https://github.com/ethereum-optimism/op-analytics/issues/16764) (deploy flashblocks-rpc node), there's a need to confirm its necessity. The issue [#17162](https://github.com/ethereum-optimism/op-analytics/issues/17162) (Close out Flashblocks spec) noted associated PRs for the specs. Finally, [#17317](https://github.com/ethereum-optimism/op-analytics/issues/17317) (enable flashblocks on op-opn-geth-f-sequencer-1 mainnet) outlined associated PRs and remaining work to deploy and enable rollup-boost.\n\n### op-node/p2p/gossip Configuration Bug\nDiscussion on [#17308](https://github.com/ethereum-optimism/op-analytics/issues/17308) (ConfigureGossip overwrites sane defaults with zero values) revolved around a bug where `ConfigureGossip` was overwriting sane defaults with zero values, leading to panics in `go-libp2p-pubsub` tests. The conversation explored whether to make invalid configs work or to introduce a `DefaultP2PConfig` method for valid defaults.\n\n### op-geth Initialization Error\nIssue [#420](https://github.com/ethereum-optimism/op-analytics/issues/420) (op-geth init gives \"head block is not reachable\" error) saw a new comment from `cliff0412` indicating they also encountered the error. Previous comments suggested continuing with setup as the error might not be critical, or that re-running the init command could resolve it.\n\n### Sync-Tester Network Exposure\nOn [#454](https://github.com/ethereum-optimism/op-analytics/issues/454) ([sync-tester] Expose More Networks inside CI Box), `jelias2` provided an update on exposing L2 ELs in CI for mainnet and sepolia on various networks (unichain, ink, base). The remaining task is to expose an L1 beacon API in CI. `jelias2` also mentioned modifying the synctest to be more dynamic with environment variables and provided a draft PR for review.", "2025-10-13T20:46:55.599Z"]
["ethereum-optimism/design-docs_day_2025-09-04", "ethereum-optimism/design-docs", "day", "2025-09-04", "# ethereum-optimism/design-docs Daily Update (Sep 4, 2025)\n## OVERVIEW \nThe day saw an update to the minimum base fee calculation in the FMA specification. Several Flashblocks-related issues received updates, and a new issue was opened regarding exposing more networks in the CI box for sync-tester.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### FMA Specification Updates\n*   The calculation for the minimum base fee in the FMA specification was updated to reflect a change in design from 1 byte to 8 bytes for DB growth. ([#333](https://github.com/ethereum-optimism/design-docs/pull/333))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Sync-Tester Network Exposure\n*   A new issue was opened to expose more networks inside the CI box for the `op-sync-tester`, aiming to enable testing L2CL syncing with real chain data. ([#454](https://github.com/ethereum-optimism/design-docs/issues/454))\n\n## ACTIVE ISSUES\n\n### Flashblocks Deployment and Configuration\nDiscussions continued on several Flashblocks-related issues. For [#16759](https://github.com/ethereum-optimism/design-docs/issues/16759) (enable flashblocks on prod-mainnet-op-opn-geth-f-sequencer-0), updates included associated PRs for `k8s` and outlined remaining tasks such as deploying `rollup-boost` in disabled mode and then enabling its execution mode based on stability observations. Similarly, for [#16761](https://github.com/ethereum-optimism/design-docs/issues/16761) (enable flashblocks on sunnyside sequencers), the latest updates confirmed that both Sunnyside sequencers have `op-rbuilder` deployed and synced, with next steps involving deploying `rollup-boost` and a backup sequencer. Issue [#16763](https://github.com/ethereum-optimism/design-docs/issues/16763) (deploy flashblocks-websocket-proxy) is currently blocked on the availability of websocket connections for conductors, though a PR is in progress to address this. For [#16764](https://github.com/ethereum-optimism/design-docs/issues/16764) (deploy flashblocks-rpc node), there's a need to confirm its necessity. A new issue, [#17317](https://github.com/ethereum-optimism/design-docs/issues/17317) (enable flashblocks on op-opn-geth-f-sequencer-1 mainnet), was opened with associated PRs and a plan to deploy `rollup-boost` and enable its execution mode.\n\n### Flashblocks Specification Finalization\nRegarding [#17162](https://github.com/ethereum-optimism/design-docs/issues/17162) ([FMA Action] Close out Flashblocks spec), associated PRs for the `specs` repository were noted, indicating ongoing work to finalize the Flashblocks specification.\n\n### `op-node/p2p/gossip` Configuration Bug\nIssue [#17308](https://github.com/ethereum-optimism/design-docs/issues/17308) (op-node/p2p/gossip - ConfigureGossip overwrites sane defaults with zero values) saw active discussion. The reporter clarified that the bug arises when updating `go-libp2p-pubsub` and that tests panic because `MeshDHi` defaults to 0, which is then clobbered by the `ConfigureGossip` function, leading to an invalid configuration. A maintainer questioned the approach of making invalid configs work and suggested adding a `DefaultP2PConfig` method to return a fully filled, valid configuration with sensible defaults.\n\n### `op-geth` Initialization Error\nIssue [#420](https://github.com/ethereum-optimism/design-docs/issues/420) (op-geth init gives \"head block is not reachable\" error) received new comments from users experiencing the same error during `op-geth` initialization. One user suggested that the error might not be critical and to continue with the setup, while another noted that repeating the `geth init` step sometimes resolved it.\n\n### Sync-Tester Network Exposure\nOn the newly opened issue [#454](https://github.com/ethereum-optimism/design-docs/issues/454) ([sync-tester] Expose More Networks inside CI Box), there was a discussion about which L2 ELs are currently exposed in CI (mainnet and sepolia for unichain, ink, and base) and the remaining task of exposing an L1 beacon API in CI. A draft PR was mentioned that modifies the synctest to be more dynamic and take environment variables.", "2025-10-13T20:46:55.747Z"]
["ethereum-optimism/superchain-registry_day_2025-09-04", "ethereum-optimism/superchain-registry", "day", "2025-09-04", "# ethereum-optimism/superchain-registry Daily Update (Sep 4, 2025)\n## OVERVIEW \nThe day saw a critical fix implemented to ensure CI job failures are correctly reported when `check_chainlist` fails. Discussions continued on several Flashblocks-related issues, with updates on deployment progress and remaining tasks. An important discussion also took place regarding P2P configuration defaults.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### CI/CD Reliability Improvements\nA fix was implemented to ensure that the `check_chainlist` command correctly exits with an error code when it fails, preventing CI jobs from passing incorrectly. This enhances the reliability of automated checks within the repository. ([#1102](https://github.com/ethereum-optimism/superchain-registry/pull/1102))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Sync Tester Network Exposure\nA new issue was opened to expose more networks within the CI box for the `op-sync-tester`. This aims to facilitate testing of L2CL syncing with real chain data without writing to the L2 EL. ([#454](https://github.com/ethereum-optimism/superchain-registry/issues/454))\n\n### Flashblocks Deployment on Mainnet\nA new issue was created to track the enablement of Flashblocks on the `op-opn-geth-f-sequencer-1` mainnet sequencer. This is part of the progressive deployment strategy for Flashblocks on mainnet. ([#17317](https://github.com/ethereum-optimism/superchain-registry/issues/17317))\n\n## ACTIVE ISSUES\n\n### Flashblocks Deployment Progress\nDiscussions on several Flashblocks deployment issues continued. For [#16759](https://github.com/ethereum-optimism/superchain-registry/issues/16759) (enable flashblocks on prod-mainnet-op-opn-geth-f-sequencer-0), yashvardhan-kukreja provided an update on associated PRs and outlined remaining tasks, including deploying `rollup-boost` in disabled mode and then enabling its execution mode. Similarly, for [#16761](https://github.com/ethereum-optimism/superchain-registry/issues/16761) (enable flashblocks on sunnyside sequencers), yashvardhan-kukreja confirmed that both sunnyside sequencers have `op-rbuilder` deployed and synced, detailing the next steps for `rollup-boost` deployment and execution mode enablement. For [#16763](https://github.com/ethereum-optimism/superchain-registry/issues/16763) (deploy flashblocks-websocket-proxy), yashvardhan-kukreja noted that the issue is blocked on the availability of websocket connection of conductors but provided a PR that will close the issue. For [#16764](https://github.com/ethereum-optimism/superchain-registry/issues/16764) (deploy flashblocks-rpc node), yashvardhan-kukreja indicated a need to confirm its necessity. Lastly, for [#17162](https://github.com/ethereum-optimism/superchain-registry/issues/17162) ([FMA Action] Close out Flashblocks spec), yashvardhan-kukreja listed associated PRs related to the Flashblocks specification.\n\n### P2P Gossip Configuration Defaults\nDiscussion continued on [#17308](https://github.com/ethereum-optimism/superchain-registry/issues/17308) (op-node/p2p/gossip - ConfigureGossip overwrites sane defaults with zero values). wood-jp clarified that a configuration with zero values for certain parameters is invalid and explained how this led to panics in tests after a dependency update. ajsutton suggested adding a `DefaultP2PConfig` method to provide fully filled, valid configurations with sensible defaults, which would prevent issues when new options are added. wood-jp acknowledged this as a potential solution but noted their current PR addresses the immediate problem.\n\n### `op-geth` Initialization Error\nComments were added to [#420](https://github.com/ethereum-optimism/superchain-registry/issues/420) (op-geth init gives \"head block is not reachable\" error). cliff0412 reported experiencing the same error. This issue, originally from October 2024, continues to see user reports.\n\n### Sync Tester Network Exposure\nOn [#454](https://github.com/ethereum-optimism/superchain-registry/issues/454) ([sync-tester] Expose More Networks inside CI Box), jelias2 provided an update on exposing L2 ELs in CI for mainnet and sepolia across various networks (unichain, ink, base). They also mentioned that exposing an L1 beacon API in CI is the remaining task and will be addressed soon. jelias2 also shared a draft PR to make the synctest more dynamic using environment variables. pcw109550 noted that the L1 Beacon API can be shared for all L2s using ETH Mainnet L1s. nonsense thanked for the updates and confirmed that the L1 ETH Mainnet beacon API in CI is the only missing piece, with tests already running daily.", "2025-10-13T20:46:55.798Z"]
["ethereum-optimism/Retro-Funding_day_2025-09-05", "ethereum-optimism/Retro-Funding", "day", "2025-09-05", "# ethereum-optimism/Retro-Funding Daily Update (Sep 5, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out several long-standing issues related to the `min-base-fee` implementation and the `op-nat` Kurtosis integration. Discussions also continued on handling large genesis files and making chain configurations fully explicit.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Minimum Base Fee Implementation\nThree issues related to the `min-base-fee` feature were closed, indicating progress in its integration. These include adding `minBaseFee` to the block header's `extraData` field ([#649](https://github.com/ethereum-optimism/Retro-Funding/issues/649)), adding an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` ([#650](https://github.com/ethereum-optimism/Retro-Funding/issues/650)), and updating `eip1559.CalcBaseFee` to enforce the minimum if the feature is active ([#651](https://github.com/ethereum-optimism/Retro-Funding/issues/651)). All closures referenced the same `op-geth` pull request.\n\n### Local Development Environment Prioritization\nThe issue concerning running `op-nat` in Kurtosis ([#158](https://github.com/ethereum-optimism/Retro-Funding/issues/158)) was closed, citing a shift towards prioritizing other local development environments.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Handling Large Genesis Files\nDiscussion continued on the issue of `op-geth` initialization with large genesis files leading to a LevelDB panic ([#668](https://github.com/ethereum-optimism/Retro-Funding/issues/668)). The latest comment from @protolambda suggests modifying `op-geth` for a one-time import of state by not storing the `alloc` data as a flat JSON blob and instead importing the state directly into the DB. It also recommends including the `stateHash` attribute of the genesis block into the chain-`config` part of `genesis.json` to enable fresh nodes to snap-sync state from bootstrap nodes.\n\n### Explicit Chain Configurations\nThe issue regarding making chain configurations fully explicit ([#763](https://github.com/ethereum-optimism/Retro-Funding/issues/763)) received a new comment from @alfonso-op, questioning whether chain configs are already self-descriptive and if the issue can be closed.", "2025-10-13T20:46:58.189Z"]
["ethereum-optimism/op-analytics_day_2025-09-05", "ethereum-optimism/op-analytics", "day", "2025-09-05", "# ethereum-optimism/op-analytics Daily Update (Sep 5, 2025)\n## OVERVIEW \nThe day saw a dependency bump for Dagster, alongside the closure of several issues related to `min-base-fee` implementation and an issue concerning `op-nat` in Kurtosis. Discussions also continued on a large genesis file issue and the explicit configuration of Superchain chain configs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Dagster Dependency Update\nA dependency bump for Dagster was implemented, affecting the `Makefile` and `helm/dagster/values.yaml` files. This update ensures the project utilizes the latest Dagster version. ([#1743](https://github.com/ethereum-optimism/op-analytics/pull/1743))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Implementation Issues Resolved\nSeveral issues related to the `min-base-fee` feature were closed, indicating progress in its implementation. These include adding `minBaseFee` to the block header's `extraData` field ([#649](https://github.com/ethereum-optimism/op-analytics/issues/649)), adding an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` ([#650](https://github.com/ethereum-optimism/op-analytics/issues/650)), and updating `eip1559.CalcBaseFee` to enforce the minimum if the feature is active ([#651](https://github.com/ethereum-optimism/op-analytics/issues/651)). All were closed via a related `op-geth` pull request.\n\n### Op-Nat Kurtosis Integration Deprioritized\nThe issue concerning running `op-nat` in Kurtosis was closed, with the rationale that other local devnet environments are now being prioritized. ([#158](https://github.com/ethereum-optimism/op-analytics/issues/158))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Large Genesis File and LevelDB Panic\nDiscussion continued on an issue where initializing `op-geth` with a large genesis file leads to a LevelDB panic ([#668](https://github.com/ethereum-optimism/op-analytics/issues/668)). The latest comment suggests that the Genesis-State-Spec is optional and does not need to be stored in `geth`. It recommends modifying `op-geth` for a one-time state import by not storing the alloc data as a flat JSON blob and including the `stateHash` attribute of the genesis block into the chain-`config` part of `genesis.json`. This approach allows fresh nodes to start with an empty DB but a valid genesis-block header, enabling snap-sync from other bootstrap nodes, similar to how op-mainnet operates.\n\n### Superchain Chain Configs Explicit\nAn ongoing issue regarding making Superchain chain configurations fully explicit is under discussion ([#763](https://github.com/ethereum-optimism/op-analytics/issues/763)). The latest comment questions whether chain configs are already self-descriptive and if the issue can be closed.", "2025-10-13T20:46:58.896Z"]
["ethereum-optimism/docs_day_2025-09-05", "ethereum-optimism/docs", "day", "2025-09-05", "# ethereum-optimism/docs Daily Update (Sep 5, 2025)\n## OVERVIEW \nToday's activity focused on closing several issues related to `min-base-fee` implementation and addressing a large genesis file panic in `op-geth`. Discussions also continued on making Superchain configurations fully explicit.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## CLOSED ISSUES\n\n### `min-base-fee` Implementation Issues Closed\nSeveral issues related to the `min-base-fee` feature were closed, indicating progress in its integration. These include adding `minBaseFee` to the block header's `extraData` field [#649](https://github.com/ethereum-optimism/docs/issues/649), adding an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` [#650](https://github.com/ethereum-optimism/docs/issues/650), and updating `eip1559.CalcBaseFee` to enforce the minimum when the feature is active [#651](https://github.com/ethereum-optimism/docs/issues/651). All closures were linked to the `op-geth` pull request [#666](https://github.com/ethereum-optimism/op-geth/pull/666).\n\n### `op-nat` Kurtosis Integration Deprioritized\nThe issue concerning running `op-nat` in Kurtosis [#158](https://github.com/ethereum-optimism/docs/issues/158) was closed, with the rationale that other local devnet environments are now being prioritized.\n\n## ACTIVE ISSUES\n\n### Large Genesis File Panic in `op-geth`\nDiscussion continued on an issue where `op-geth` panics when initialized with a large genesis file [#668](https://github.com/ethereum-optimism/docs/issues/668). The latest comment from @protolambda suggests modifying `op-geth` for a one-time state import by not storing the alloc data as a flat JSON blob and including the `stateHash` attribute in the chain-`config` part of `genesis.json`. This approach aligns with how `op-mainnet` handles large genesis states, enabling fresh nodes to snap-sync from bootstrap nodes.\n\n### Superchain Configuration Explicitness\nAn ongoing discussion revolves around making Superchain chain configurations fully explicit [#763](https://github.com/ethereum-optimism/docs/issues/763). The latest comment from @alfonso-op questions whether chain configs are already self-descriptive and if the issue can be closed.", "2025-10-13T20:46:59.044Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-05", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-05", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 5, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out issues related to the `min-base-fee` feature and addressing a long-standing request for `op-nat` integration in Kurtosis. Discussions also continued on making Superchain configurations fully explicit and handling large genesis files.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n### Min-Base-Fee Feature Implementation\nSeveral issues related to the `min-base-fee` feature were closed, indicating progress in its implementation. This includes adding `minBaseFee` to the block header's `extraData` field ([#649](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/649)), adding an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` ([#650](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/650)), and updating `eip1559.CalcBaseFee` to enforce the minimum if the feature is active ([#651](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/651)). All these closures were linked to the `op-geth` pull request [#666](https://github.com/ethereum-optimism/op-geth/pull/666).\n\n### `op-nat` Integration in Kurtosis\nThe issue concerning running `op-nat` in Kurtosis was closed ([#158](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/158)). The decision to close was based on a shift in prioritization towards other local development environments.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\n### Superchain Configuration Explicit Definition\nDiscussion continued on making Superchain chain configurations fully explicit ([#763](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/763)). The latest comment from @alfonso-op questioned whether chain configs are already self-descriptive, suggesting the possibility of closing the issue if that is the case.\n\n### `op-geth` Initialization with Large Genesis Files\nThe issue regarding `op-geth` initialization with large genesis files and a LevelDB panic ([#668](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/668)) received a detailed response from @protolambda. The key points of the discussion include:\n- The \"alloc\" part of `genesis.json` (Genesis-State-Spec) is optional and not strictly necessary to store in `geth`.\n- It's recommended to modify `op-geth` for one-time state import by not storing the alloc data as a flat JSON blob and still importing the state into the DB.\n- The `stateHash` attribute of the genesis block should be included in the chain-`config` part of `genesis.json` to allow fresh nodes to snap-sync state from bootstrap nodes.\n- This approach mirrors how `op-mainnet` operates, avoiding embedding large genesis states directly into the `op-geth` binary.\n- @cliff0412 acknowledged the reply, confirming they will not save the `genesis.json`.", "2025-10-13T20:46:59.659Z"]
["ethereum-optimism/community-hub_day_2025-09-04", "ethereum-optimism/community-hub", "day", "2025-09-04", "# ethereum-optimism/community-hub Daily Update (Sep 4, 2025)\n## OVERVIEW \nThe day saw significant activity in flashblocks deployment and configuration across various sequencers and networks, alongside discussions on p2p gossip configuration and sync-tester network exposure.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n**Project Management**\nA new project issue was opened and immediately closed, indicating a quick resolution or administrative task related to project definition and labeling [#1184](https://github.com/ethereum-optimism/community-hub/issues/1184).\n\n## NEW ISSUES\n\n**Flashblocks Deployment**\nA new issue was opened to track the enablement of flashblocks on the `op-opn-geth-f-sequencer-1` mainnet sequencer, with associated PRs and remaining work outlined [#17317](https://github.com/ethereum-optimism/community-hub/issues/17317).\n\n## ACTIVE ISSUES\n\n**Flashblocks Deployment and Configuration**\nDiscussions continued on several flashblocks-related issues. For [#16759](https://github.com/ethereum-optimism/community-hub/issues/16759), updates were provided on associated PRs and remaining tasks, including deploying rollup-boost in disabled mode and then enabling its execution mode. Similarly, for [#16761](https://github.com/ethereum-optimism/community-hub/issues/16761), the latest updates confirmed that both sunnyside sequencers have `op-rbuilder` deployed and synced, with next steps involving rollup-boost deployment and execution mode enablement. The deployment of `flashblocks-websocket-proxy` [#16763](https://github.com/ethereum-optimism/community-hub/issues/16763) is currently blocked on the availability of websocket connection of conductors, but a PR is in progress. The need for `flashblocks-rpc` node deployment [#16764](https://github.com/ethereum-optimism/community-hub/issues/16764) is being reconfirmed. Finally, for [#17162](https://github.com/ethereum-optimism/community-hub/issues/17162), associated PRs for closing out the Flashblocks spec were noted.\n\n**P2P Gossip Configuration Bug**\nIssue [#17308](https://github.com/ethereum-optimism/community-hub/issues/17308) discusses a bug where `ConfigureGossip` overwrites sane defaults with zero values. The latest comments delve into the implications of invalid configuration values (e.g., `Dhi=0` and `Dscore=4` causing panics in `go-libp2p-pubsub`) and potential solutions, including adding a `DefaultP2PConfig` method to return a fully filled, valid `P2PConfig` with sensible defaults.\n\n**Sync-Tester Network Exposure**\nIn [#454](https://github.com/ethereum-optimism/community-hub/issues/454), the discussion revolves around exposing more networks inside the CI box for `op-sync-tester`. Updates confirm that L2 ELs for mainnet and sepolia are exposed for several networks (unichain, ink, base). The remaining task is to expose an L1 beacon API in CI. A draft PR was shared to make the synctest more dynamic with environment variables.\n\n**Geth Initialization Error**\nIssue [#420](https://github.com/ethereum-optimism/community-hub/issues/420) continues to receive comments regarding the \"head block is not reachable\" error during `op-geth` initialization. A new comment confirms that this error is still being encountered.", "2025-10-13T20:46:59.792Z"]
["ethereum-optimism/op-geth_day_2025-09-05", "ethereum-optimism/op-geth", "day", "2025-09-05", "# ethereum-optimism/op-geth Daily Update (Sep 5, 2025)\n## OVERVIEW \nThe day's development focused on introducing a minimum base fee feature, enhancing the EIP-1559 mechanism within Optimism's `op-geth`. This involved significant changes across core components, alongside addressing forward compatibility for gas parameter extraction. Several issues related to the `min-base-fee` feature were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Minimum Base Fee Implementation\nA new feature introducing a minimum base fee has been integrated, building upon previous work. This enhancement modifies how base fees are calculated and enforced within the Optimism EIP-1559 implementation, impacting block parameters, API, and miner payload building. ([#666](https://github.com/ethereum-optimism/op-geth/pull/666))\n\n### Forward-Compatible Gas Parameter Extraction\nWork was completed to ensure the forward compatibility of Isthmus gas parameter extraction, specifically within the `core/types/rollup_cost.go` file. ([#671](https://github.com/ethereum-optimism/op-geth/pull/671))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Minimum Base Fee Feature Integration\nThree issues related to the `min-base-fee` feature have been closed, indicating successful integration and resolution. These include adding `minBaseFee` to the block header's `extraData` field ([#649](https://github.com/ethereum-optimism/op-geth/issues/649)), incorporating an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` ([#650](https://github.com/ethereum-optimism/op-geth/issues/650)), and updating `eip1559.CalcBaseFee` to enforce the minimum when the feature is active ([#651](https://github.com/ethereum-optimism/op-geth/issues/651)). All closures are directly linked to the implementation of pull request [#666](https://github.com/ethereum-optimism/op-geth/pull/666).\n\n### NAT Testing Environment Shift\nThe issue concerning running `op-nat` in Kurtosis has been closed ([#158](https://github.com/ethereum-optimism/op-geth/issues/158)). This decision reflects a shift in priority towards other local development environments.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Large Genesis File Initialization Challenges\nDiscussion continues on an issue regarding `op-geth` initialization with a large 7GB genesis file, leading to a LevelDB panic ([#668](https://github.com/ethereum-optimism/op-geth/issues/668)). The latest comment from @protolambda suggests that the Genesis-State-Spec (the \"alloc\" part of `genesis.json`) is optional and not typically stored in `geth`. The recommendation is to modify `op-geth` for a one-time state import by not storing the alloc data as a flat JSON blob and instead importing the state into the DB. It's also advised to include the `stateHash` attribute of the genesis block into the chain-`config` part of `genesis.json` to enable fresh nodes to snap-sync state from bootstrap nodes. This approach aligns with how `op-mainnet` operates, avoiding excessively large `op-geth` binaries or Docker images.\n\n### Superchain Configuration Explicitness\nAn ongoing discussion revolves around making chain configurations fully explicit within the `superchain` package ([#763](https://github.com/ethereum-optimism/op-geth/issues/763)). The latest comment from @alfonso-op questions whether chain configurations are already self-descriptive and if the issue can be closed, indicating a potential resolution or clarification needed on the current state of configuration completeness.", "2025-10-13T20:47:02.808Z"]
["ethereum-optimism/specs_day_2025-09-05", "ethereum-optimism/specs", "day", "2025-09-05", "# ethereum-optimism/specs Daily Update (Sep 5, 2025)\n## OVERVIEW \nThe day saw a key update to the Jovian protocol specifications, explicitly clarifying `PayloadAttributes.MinBaseFee` requirements. Several long-standing issues related to `min-base-fee` and `op-nat` integration were closed, indicating progress in protocol refinement and development environment focus.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Jovian Protocol Specification Refinement\nA critical update was made to the Jovian protocol specifications to explicitly require `PayloadAttributes.MinBaseFee` to be `NULL` prior to the Jovian upgrade. This clarifies a specific protocol behavior, addressing a newly identified need for explicitness in the specifications. ([#756](https://github.com/ethereum-optimism/specs/pull/756))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Specification Clarification\nAn issue requesting explicit clarification on the `PayloadAttributes.MinBaseFee` requirement pre-Jovian was opened and closed on the same day, indicating a swift resolution and update to the protocol specifications. ([#755](https://github.com/ethereum-optimism/specs/issues/755))\n\n### Min-Base-Fee Feature Integration\nSeveral issues related to the `min-base-fee` feature were closed, including adding `minBaseFee` to the block header's `extraData` field ([#649](https://github.com/ethereum-optimism/specs/issues/649)), adding an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` ([#650](https://github.com/ethereum-optimism/specs/issues/650)), and updating `eip1559.CalcBaseFee` to enforce the minimum if the feature is active ([#651](https://github.com/ethereum-optimism/specs/issues/651)). These closures indicate progress in integrating and specifying the `min-base-fee` functionality.\n\n### `op-nat` Kurtosis Integration Deprioritized\nThe issue concerning running `op-nat` in Kurtosis for network acceptance tests was closed, with the rationale that other local development environments are now being prioritized. ([#158](https://github.com/ethereum-optimism/specs/issues/158))\n\n## NEW ISSUES\n\n### Jovian Protocol Specification Explicitness\nA new issue was opened to explicitly state the requirement for `PayloadAttributes.MinBaseFee` to be `nil` pre-Jovian, highlighting a need for clearer protocol specifications. ([#755](https://github.com/ethereum-optimism/specs/issues/755))\n\n## ACTIVE ISSUES\n\n### `op-geth` Init with Large Genesis File\nDiscussion on [#668](https://github.com/ethereum-optimism/specs/issues/668) regarding `op-geth` initialization with a large 7GB genesis file continued. @protolambda provided a detailed explanation, suggesting that the Genesis-State-Spec (the \"alloc\" part of `genesis.json`) is optional and doesn't need to be stored in `geth`. The recommendation was to modify `op-geth` for one-time state import by not storing the alloc data as a flat JSON blob and to include the `stateHash` attribute of the genesis block into the chain-`config` part of `genesis.json`. This approach aligns with how `op-mainnet` handles large genesis states, enabling fresh nodes to snap-sync from bootstrap nodes. The issue was later closed, with @cliff0412 acknowledging the advice.\n\n### Superchain Configuration Explicitness\nOn [#763](https://github.com/ethereum-optimism/specs/issues/763), @alfonso-op inquired whether chain configurations are now fully self-descriptive, questioning if the issue could be closed. This indicates an ongoing effort to ensure `ChainConfig` .toml files contain a complete set of config values, moving away from inherited or populated values within the `superchain` package.", "2025-10-13T20:47:03.365Z"]
["ethereum-optimism/superchain-ops_day_2025-09-05", "ethereum-optimism/superchain-ops", "day", "2025-09-05", "# ethereum-optimism/superchain-ops Daily Update (Sep 5, 2025)\n## OVERVIEW \nToday's development focused on addressing a flaky test in the regression suite by manually passing gas to prevent out-of-gas errors. Several issues related to `min-base-fee` implementation and `op-nat` integration were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Test Stability Improvements\nA fix was implemented to address a flaky regression test that occasionally failed due to out-of-gas errors. Gas is now manually passed to this specific test to ensure its stability and reliability [#1186](https://github.com/ethereum-optimism/superchain-ops/pull/1186).\n\n## NEWLY OPENED PULL REQUESTS\nNone\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Feature Implementation\nSeveral issues related to the `min-base-fee` feature were closed, indicating progress in its implementation. This includes adding `minBaseFee` to the block header's `extraData` field [#649](https://github.com/ethereum-optimism/superchain-ops/issues/649), adding an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` [#650](https://github.com/ethereum-optimism/superchain-ops/issues/650), and updating `eip1559.CalcBaseFee` to enforce the minimum if the feature is active [#651](https://github.com/ethereum-optimism/superchain-ops/issues/651). All these issues were closed via the same `op-geth` pull request.\n\n### `op-nat` Integration Deprioritized\nThe issue concerning running `op-nat` in Kurtosis [#158](https://github.com/ethereum-optimism/superchain-ops/issues/158) was closed. This decision was made due to a shift in priority towards other local development environment initiatives.\n\n## NEW ISSUES\nNone\n\n## ACTIVE ISSUES\n\n### Large Genesis File Handling in `op-geth`\nDiscussion on issue [#668](https://github.com/ethereum-optimism/superchain-ops/issues/668) regarding `op-geth` initialization with a large 7GB genesis file and a LevelDB panic continued. The latest comment from @protolambda suggests that the Genesis-State-Spec (the \"alloc\" part of `genesis.json`) is optional and doesn't need to be stored in `geth`. It's recommended to modify `op-geth` for a one-time state import by not storing the alloc data as a flat JSON blob and instead importing the state into the DB. Additionally, including the `stateHash` attribute of the genesis block in the chain-`config` part of `genesis.json` would allow new nodes to start with an empty DB and snap-sync state from other bootstrap nodes. This approach aligns with how `op-mainnet` operates, avoiding excessively large `op-geth` binaries.\n\n### Superchain Configuration Explicitness\nIssue [#763](https://github.com/ethereum-optimism/superchain-ops/issues/763) discusses making chain configurations fully explicit. The latest comment from @alfonso-op questions whether chain configs are already self-descriptive and if the issue can be closed, indicating a potential resolution or re-evaluation of the problem.", "2025-10-13T20:47:03.703Z"]
["ethereum-optimism/ecosystem_day_2025-09-05", "ethereum-optimism/ecosystem", "day", "2025-09-05", "# ethereum-optimism/ecosystem Daily Update (Sep 5, 2025)\n## OVERVIEW \nThe day saw significant progress in addressing `min-base-fee` related issues and resolving a long-standing `op-nat` integration request. Discussions also continued on handling large genesis files and clarifying chain configurations.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `min-base-fee` Implementation Completed\nSeveral issues related to the `min-base-fee` feature were closed today, indicating progress in its implementation. This includes adding `minBaseFee` to the block header's `extraData` field ([#649](https://github.com/ethereum-optimism/ecosystem/issues/649)), incorporating an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` ([#650](https://github.com/ethereum-optimism/ecosystem/issues/650)), and updating `eip1559.CalcBaseFee` to enforce the minimum if the feature is active ([#651](https://github.com/ethereum-optimism/ecosystem/issues/651)). All these closures reference the same `op-geth` pull request, suggesting a consolidated effort.\n\n### `op-nat` Kurtosis Integration Deprioritized\nThe issue concerning running `op-nat` in Kurtosis ([#158](https://github.com/ethereum-optimism/ecosystem/issues/158)) was closed. The decision was made to deprioritize this request due to a shift towards prioritizing other local development environment initiatives.\n\n### Wallet Naming Convention Updated\nA new issue regarding the renaming of \"embedded wallets\" to \"hosted wallets\" ([#964](https://github.com/ethereum-optimism/ecosystem/issues/964)) was opened and closed on the same day, indicating a quick resolution to this naming convention update.\n\n## NEW ISSUES\n\n### Wallet Naming Convention\nA new issue was opened to rename \"embedded wallets\" to \"hosted wallets\" ([#964](https://github.com/ethereum-optimism/ecosystem/issues/964)). This issue was also closed on the same day.\n\n## ACTIVE ISSUES\n\n### Large Genesis File Initialization in `op-geth`\nDiscussion continued on the issue of `op-geth` initialization with a large genesis file leading to a LevelDB panic ([#668](https://github.com/ethereum-optimism/ecosystem/issues/668)). The latest comment from @protolambda suggests that the Genesis-State-Spec (the \"alloc\" part of `genesis.json`) is optional and doesn't need to be stored in `geth`. The recommendation is to modify `op-geth` for a one-time state import by not storing the alloc data as a flat JSON blob and to include the `stateHash` attribute of the genesis block into the chain-`config` part of `genesis.json`. This approach allows fresh nodes to start with an empty DB and snap-sync state from other bootstrap nodes, similar to how `op-mainnet` operates.\n\n### Superchain Configuration Explicitness\nThe issue regarding making superchain configurations fully explicit ([#763](https://github.com/ethereum-optimism/ecosystem/issues/763)) remains active. The latest comment from @alfonso-op questions whether chain configs are already self-descriptive and if the issue can be closed, indicating a need for clarification on the current state of configuration explicitness.", "2025-10-13T20:47:03.923Z"]
["ethereum-optimism/superchain-ops_day_2025-09-06", "ethereum-optimism/superchain-ops", "day", "2025-09-06", "# ethereum-optimism/superchain-ops Daily Update (Sep 6, 2025)\n## OVERVIEW \nThere were no new developments, bug fixes, or other activities in the superchain-ops repository today.\n## KEY TECHNICAL DEVELOPMENTS\nNo significant technical developments occurred today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-10-13T20:47:05.015Z"]
["ethereum-optimism/specs_day_2025-09-06", "ethereum-optimism/specs", "day", "2025-09-06", "# ethereum-optimism/specs Daily Update (Sep 6, 2025)\n## OVERVIEW \nThe day saw several new pull requests opened, primarily focusing on updates to configuration files and contract addresses within the specifications.\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nFour new pull requests were opened today:\n*   [#757](https://github.com/ethereum-optimism/specs/pull/757) \"Add this in urgent basisAdd this\" was opened.\n*   [#758](https://github.com/ethereum-optimism/specs/pull/758) \"Update L1 Block Info contract address in exec-engine.md\" was opened.\n*   [#759](https://github.com/ethereum-optimism/specs/pull/759) \"Update eth2_config.yamlapproved\" was opened.\n*   [#760](https://github.com/ethereum-optimism/specs/pull/760) \"Update eth2_config.yamlapproved\" was opened.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this period.", "2025-10-13T20:47:05.443Z"]
["ethereum-optimism/optimism_day_2025-09-06", "ethereum-optimism/optimism", "day", "2025-09-06", "# ethereum-optimism/optimism Daily Update (Sep 6, 2025)\n## OVERVIEW \nToday's development focused on a critical bug fix within the fault proof system, specifically addressing broken Jovian precompile FP tests. Additionally, two new pull requests were opened, proposing improvements to the `sync_tester` and `supervisor` components.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Fault Proof System Stability\n- A bug affecting Jovian precompile fault proof tests was fixed, ensuring the reliability of the fault proof system. ([#17349](https://github.com/ethereum-optimism/optimism/pull/17349))\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request was opened to add a comment about the `SyncTester` component. ([#17350](https://github.com/ethereum-optimism/optimism/pull/17350))\n- Another pull request was opened to optimize client rotation within the `supervisor` for single-client scenarios, aiming to improve performance. ([#17351](https://github.com/ethereum-optimism/optimism/pull/17351))\n\n## CLOSED ISSUES\n\n### Permission Requests\n- Two issues related to permission requests were opened and subsequently closed on the same day. ([#17352](https://github.com/ethereum-optimism/optimism/issues/17352), [#17353](https://github.com/ethereum-optimism/optimism/issues/17353))\n\n## NEW ISSUES\n\n### Permission Requests\n- Two new issues were created today, both pertaining to requests for write/maintain permissions on the `ethereum-optimism/design-docs` repository. ([#17352](https://github.com/ethereum-optimism/optimism/issues/17352), [#17353](https://github.com/ethereum-optimism/optimism/issues/17353))\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:47:06.044Z"]
["ethereum-optimism/infra_day_2025-09-05", "ethereum-optimism/infra", "day", "2025-09-05", "# ethereum-optimism/infra Daily Update (Sep 5, 2025)\n## OVERVIEW \nThe day saw significant activity in closing out several issues related to `minBaseFee` implementation and addressing a large genesis file initialization problem. Discussions also continued on making chain configurations fully explicit.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `minBaseFee` Implementation Completed\nSeveral issues related to the `minBaseFee` feature have been closed, indicating the completion of its implementation. This includes adding `minBaseFee` to the block header's `extraData` field [#649](https://github.com/ethereum-optimism/infra/issues/649), adding an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` [#650](https://github.com/ethereum-optimism/infra/issues/650), and updating `eip1559.CalcBaseFee` to enforce the minimum if the feature is active [#651](https://github.com/ethereum-optimism/infra/issues/651). These changes were implemented via https://github.com/ethereum-optimism/op-geth/pull/666.\n\n### `op-nat` Kurtosis Integration Deprioritized\nThe issue of running `op-nat` in Kurtosis [#158](https://github.com/ethereum-optimism/infra/issues/158) has been closed. The decision was made to close this request due to a shift in prioritizing other local devnet environments.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Large Genesis File Initialization and LevelDB Panic [#668](https://github.com/ethereum-optimism/infra/issues/668)\nDiscussion continued regarding an `op-geth` initialization issue with a large 7GB genesis file leading to a LevelDB panic. The latest comment from @protolambda suggests that the Genesis-State-Spec (the \"alloc\" part of `genesis.json`) is optional and doesn't need to be stored in `geth`. It's recommended to modify `op-geth` for a one-time import of state by not storing the alloc data as a flat JSON blob and still importing the state into the DB. Additionally, including the `stateHash` attribute of the genesis block into the chain-`config` part of `genesis.json` is advised to allow fresh nodes to start with an empty DB and valid genesis-block header, enabling snap-sync from bootstrap nodes. This approach mirrors how `op-mainnet` operates to avoid excessively large `op-geth` binaries or Docker images.\n\n### Superchain: Make Chain Configs Fully Explicit [#763](https://github.com/ethereum-optimism/infra/issues/763)\nA question was raised by @alfonso-op regarding the status of making chain configurations self-descriptive. The issue aims to ensure that `ChainConfig` .toml files contain the complete set of config values, rather than relying on inheritance logic within the `superchain` package. @alfonso-op inquired if this task has already been completed, suggesting the possibility of closing the issue.", "2025-10-13T20:47:06.563Z"]
["ethereum-optimism/Retro-Funding_day_2025-09-07", "ethereum-optimism/Retro-Funding", "day", "2025-09-07", "# ethereum-optimism/Retro-Funding Daily Update (Sep 7, 2025)\n## OVERVIEW \nToday, a new utility for downloading logos was added, enhancing the `eval-algos/core` area.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Utility Enhancements\nA new feature was introduced to add a logo download utility, improving the functionality within the `eval-algos/core` directory. ([#76](https://github.com/ethereum-optimism/Retro-Funding/pull/76))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Builder Addresses Documentation\nIssue [#762](https://github.com/ethereum-optimism/Retro-Funding/issues/762) documents builder addresses that have received mainnet ETH funding. The latest comment from `ajit2903` at 2025-09-07T17:27:16Z simply states \"Add\", indicating a potential addition or confirmation related to the documented addresses.", "2025-10-13T20:47:06.729Z"]
["ethereum-optimism/optimism_day_2025-09-05", "ethereum-optimism/optimism", "day", "2025-09-05", "# ethereum-optimism/optimism Daily Update (Sep 5, 2025)\n## OVERVIEW \nToday's development focused heavily on enhancing the Optimism contracts, particularly with the integration of FaultDisputeGameV2 and significant advancements in feature flagging within the OPContractsManager and SystemConfig. Sync testing capabilities were also expanded to support multiple networks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Contract Functionality and Dispute Game Integration\n*   Integrated `FaultDisputeGameV2` into the `DisputeGameFactory`, marking a significant step in dispute resolution mechanisms ([#17119](https://github.com/ethereum-optimism/optimism/pull/17119)).\n*   Updated `SystemConfig.paused()` to reference the `OptimismPortal` for identifying `ETHLockbox` functionality ([#17322](https://github.com/ethereum-optimism/optimism/pull/17322), [#17344](https://github.com/ethereum-optimism/optimism/pull/17344)).\n\n### Advanced Feature Flagging for Contracts\n*   Introduced comprehensive feature flagging capabilities within the `OPContractsManager` (OPCM), allowing selective utilization of functionality via a 32-byte bitmap ([#17268](https://github.com/ethereum-optimism/optimism/pull/17268), [#17341](https://github.com/ethereum-optimism/optimism/pull/17341)).\n*   Added feature flagging to `SystemConfig`, enabling the ProxyAdmin or owner to toggle features identified by 32-byte strings ([#17327](https://github.com/ethereum-optimism/optimism/pull/17327)).\n*   Updated `VerifyOPCM` to check for non-empty development bitmaps on mainnet, ensuring proper feature flag validation ([#17324](https://github.com/ethereum-optimism/optimism/pull/17324), [#17345](https://github.com/ethereum-optimism/optimism/pull/17345)).\n\n### Improved Sync Testing and Infrastructure\n*   Refactored `op-node` sync tests to support multiple networks in CI, enhancing testing robustness ([#17334](https://github.com/ethereum-optimism/optimism/pull/17334)).\n*   Improved session handling in `op-sync-tester` with fine-grained mutexes and a session manager for better abstraction ([#17316](https://github.com/ethereum-optimism/optimism/pull/17316)).\n*   Removed unused code in `op-sync-tester/backend.FromConfig` for cleaner codebase ([#17321](https://github.com/ethereum-optimism/optimism/pull/17321)).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#17335](https://github.com/ethereum-optimism/optimism/pull/17335) \"Fix/opgt/gas\" aims to address gas-related issues.\n*   [#17343](https://github.com/ethereum-optimism/optimism/pull/17343) \"feat: try adding op-mainnet sync test\" proposes adding a sync test for the op-mainnet.\n*   [#17346](https://github.com/ethereum-optimism/optimism/pull/17346) \"refactor(test): improve ProtocolVersions test coverage and organization\" focuses on enhancing test coverage and organization for ProtocolVersions.\n*   [#17347](https://github.com/ethereum-optimism/optimism/pull/17347) \"refactor(test): improve L2StandardBridge test coverage and quality\" seeks to improve test coverage and quality for L2StandardBridge.\n\n## CLOSED ISSUES\n\n### Minimum Base Fee Implementation\n*   The implementation of `minBaseFee` in the block header's `extraData` field has been completed ([#649](https://github.com/ethereum-optimism/optimism/issues/649)).\n*   The addition of an extra `uint64` for `minBaseFee` in `PayloadAttributesV3` has been addressed ([#650](https://github.com/ethereum-optimism/optimism/issues/650)).\n*   The update to `eip1559.CalcBaseFee` to enforce the minimum base fee when the feature is active is now complete ([#651](https://github.com/ethereum-optimism/optimism/issues/651)).\n\n### Sync Tester Improvements\n*   The `op-sync-tester` has received better session handling, resolving issues with duplicated session validation logic across RPCs ([#17047](https://github.com/ethereum-optimism/optimism/issues/17047)).\n\n### Devnet and Configuration Enhancements\n*   The request to run `op-nat` in Kurtosis has been closed due to a shift in prioritizing other local devnet environments ([#158](https://github.com/ethereum-optimism/optimism/issues/158)).\n*   The issue regarding making chain configs fully explicit has been closed, indicating that chain configurations are now self-descriptive ([#763](https://github.com/ethereum-optimism/optimism/issues/763)).\n\n## NEW ISSUES\n\n### Engine API and State Management\n*   An issue has been opened to update engine API checks for `op-program`, noting that they lag behind recent `op-geth` updates and require hardening ([#17336](https://github.com/ethereum-optimism/optimism/issues/17336)).\n*   A new issue highlights the need to validate extradata pre-Holocene in `engine_consolidate`, following a revert of previous changes ([#17337](https://github.com/ethereum-optimism/optimism/issues/17337)).\n\n### Minimum Base Fee Configuration\n*   A task has been created to load the minimum base fee value from `SystemConfig` contract events ([#17340](https://github.com/ethereum-optimism/optimism/issues/17340)).\n\n### Jovian Fork Testing\n*   An issue has been opened to run precompile Fault Proof tests on the Jovian fork ([#17348](https://github.com/ethereum-optimism/optimism/issues/17348)).\n\n## ACTIVE ISSUES\n\n### op-geth init with large genesis file, level db panic ([#668](https://github.com/ethereum-optimism/optimism/issues/668))\nThe discussion revolves around initializing `op-geth` with a large 7GB genesis file and a resulting LevelDB panic. The primary challenge is the size of the genesis state and how to handle it efficiently without embedding the full state into the `op-geth` binary. `protolambda` suggests modifying `op-geth` for a one-time import of state by not storing the alloc data as a flat JSON blob and instead importing the state directly into the DB. It's also recommended to include the `stateHash` attribute of the genesis block into the chain-`config` part of `genesis.json` to enable fresh nodes to snap-sync state from other bootstrap nodes. This strategy aligns with how `op-mainnet` handles large genesis states. `cliff0412` acknowledged the advice, confirming they will not save the `genesis.json`.", "2025-10-13T20:47:07.324Z"]
["ethereum-optimism/op-geth_day_2025-09-07", "ethereum-optimism/op-geth", "day", "2025-09-07", "# ethereum-optimism/op-geth Daily Update (Sep 7, 2025)\n## OVERVIEW \nThe day saw no new code contributions, bug fixes, or documentation enhancements. The primary activity involved the creation of a new issue to document funded builder addresses.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were created.\n\n## ACTIVE ISSUES\n### Builder Funding Documentation\nThe issue [#762](https://github.com/ethereum-optimism/op-geth/issues/762) was opened to document builder addresses that have received mainnet ETH funding. The initial entry details a \"Titan builder\" address `0x06EE840642a33367ee59fCA237F270d5119d1356` which received 64 ETH on mainnet block 23311566. A comment from ajit2903 at 2025-09-07T17:27:16Z simply states \"Add\", indicating an intention to add more entries or confirm the current one.", "2025-10-13T20:47:07.457Z"]
["ethereum-optimism/optimism_day_2025-09-07", "ethereum-optimism/optimism", "day", "2025-09-07", "# ethereum-optimism/optimism Daily Update (Sep 7, 2025)\n## OVERVIEW \nToday's development focused on a new pull request to tighten directory permissions for file-backed KV stores, enhancing security. An active issue regarding funded builder addresses also saw a new comment.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#17354](https://github.com/ethereum-optimism/optimism/pull/17354), was opened to tighten directory permissions for file-backed KV stores. This PR aims to improve security by restricting access to sensitive data.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n### Builder Address Funding\nThe active issue [#762](https://github.com/ethereum-optimism/optimism/issues/762), which tracks funded builder addresses for the OP Stack, received a new comment from ajit2903. The comment simply states \"Add\", indicating a potential update or addition to the list of funded builders. The issue details a Titan builder who received 64 ETH funding on mainnet.", "2025-10-13T20:47:07.855Z"]
["ethereum-optimism/specs_day_2025-09-07", "ethereum-optimism/specs", "day", "2025-09-07", "# ethereum-optimism/specs Daily Update (Sep 7, 2025)\n## OVERVIEW \nToday's development focused on a new pull request for \"Safer Safes - Safe Extensions v2\" and the creation of an issue to document funded builder addresses.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#761](https://github.com/ethereum-optimism/specs/pull/761), titled \"Safer Safes - Safe Extensions v2\" was opened.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n### Builder Address Funding Documentation\nA new issue, [#762](https://github.com/ethereum-optimism/specs/issues/762), was opened to document builder addresses that have received mainnet ETH funding for use in the OP Stack, testing, or builder onboarding. The issue includes an entry for \"Titan builder\" who received 64 ETH.\n\n## ACTIVE ISSUES", "2025-10-13T20:47:08.082Z"]
["ethereum-optimism/Retro-Funding_day_2025-09-08", "ethereum-optimism/Retro-Funding", "day", "2025-09-08", "# ethereum-optimism/Retro-Funding Daily Update (Sep 8, 2025)\n## OVERVIEW \nToday's development focused on integrating new data and weights for M7, alongside discussions on improving Kurtosis's local `op-geth` build capabilities and refining `op-batcher` metrics.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### RetroPGF Data Integration\n*   Added M7 data and weights, impacting various evaluation algorithms and results files for both devtooling and onchain metrics. ([#77](https://github.com/ethereum-optimism/Retro-Funding/pull/77))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### op-batcher Throttling Metric Improvement\n*   The issue regarding improving the `op-batcher`'s throttling intensity metric was closed, with a solution implemented in Grafana to only plot values greater than 0, making active controllers more visible. ([#17149](https://github.com/ethereum-optimism/Retro-Funding/issues/17149))\n\n### op-geth Genesis File Handling\n*   The issue concerning `op-geth` initialization with large genesis files and a LevelDB panic was closed. The resolution involved not storing the large `genesis.json` as a flat blob and instead importing the state into the DB, similar to how `op-mainnet` handles it. ([#668](https://github.com/ethereum-optimism/Retro-Funding/issues/668))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Kurtosis Local op-geth Build Capability\n*   Discussion continued on enabling Kurtosis to use a local `op-geth` build. A suggestion was made to leverage the templating system to automatically override the image, resolving to a Docker image URL constructed from the `go.mod` githash, or to allow cloning the source code temporarily and building a local Docker image. ([#16975](https://github.com/ethereum-optimism/Retro-Funding/issues/16975))", "2025-10-13T20:47:09.351Z"]
["ethereum-optimism/design-docs_day_2025-09-08", "ethereum-optimism/design-docs", "day", "2025-09-08", "# ethereum-optimism/design-docs Daily Update (Sep 8, 2025)\n## OVERVIEW \nToday, a new feature was added to enhance security with FMA for u16a. Additionally, two issues related to op-batcher throttling and op-geth initialization with large genesis files were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Security Enhancements\nA new feature was introduced to add FMA (Fused Multiply-Add) for u16a, improving security within the system. ([#334](https://github.com/ethereum-optimism/design-docs/pull/334))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### op-batcher Throttling Improvement\nThe issue regarding improving the throttling intensity metric for op-batcher was closed. The proposed solution involves only setting the metric for the active controller, making it easier to visualize in Grafana. ([#17149](https://github.com/ethereum-optimism/design-docs/issues/17149))\n\n### op-geth Genesis File Initialization\nThe issue concerning op-geth initialization with large genesis files and a LevelDB panic was closed. The discussion highlighted that the Genesis-State-Spec is optional and does not need to be stored in geth, suggesting a modification to op-geth for one-time state import and including the `stateHash` in the chain-`config` for fresh nodes. ([#668](https://github.com/ethereum-optimism/design-docs/issues/668))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Kurtosis: Ability to use local op-geth build\nDiscussion on [#16975](https://github.com/ethereum-optimism/design-docs/issues/16975) suggests leveraging the templating system to automatically override the op-geth build. This could involve resolving `image: {{ $remote_images.op-geth-go-mod }}` to a Docker image URL constructed from the githash in `go.mod`, or allowing the source code to be cloned temporarily and a local Docker image built.", "2025-10-13T20:47:10.196Z"]
["ethereum-optimism/infra_day_2025-09-08", "ethereum-optimism/infra", "day", "2025-09-08", "# ethereum-optimism/infra Daily Update (Sep 8, 2025)\n## OVERVIEW \nThe day saw the closure of two significant issues related to op-batcher metrics and op-geth genesis file handling. Additionally, two new issues were opened concerning improved logging and progress indicators for `op-acceptor`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, tests, or other work were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### op-batcher Throttling Metric Improvement\nThe issue concerning the `op-batcher`'s throttling intensity metric was closed today [#17149](https://github.com/ethereum-optimism/infra/issues/17149). The resolution involved updating the Grafana dashboard to only plot values greater than 0, making it easier to visualize active controllers.\n\n### op-geth Large Genesis File Handling\nThe issue regarding `op-geth` initialization with large genesis files and leveldb panics was closed [#668](https://github.com/ethereum-optimism/infra/issues/668). The discussion provided a strategy to handle large genesis files by not storing the alloc data as a flat JSON blob and instead including the `stateHash` attribute in the genesis block's chain-config.\n\n## NEW ISSUES\n\n### op-acceptor Logging Enhancements\nTwo new issues were opened to improve the logging and progress indicators within `op-acceptor`. These include a general improvement to logging to better show test state [#455](https://github.com/ethereum-optimism/infra/issues/455) and a specific enhancement to the progress indicator to improve user experience during test runs [#456](https://github.com/ethereum-optimism/infra/issues/456).\n\n## ACTIVE ISSUES\n\n### Kurtosis: Ability to use local op-geth build\nDiscussion continued on the ability to use a local `op-geth` build with Kurtosis [#16975](https://github.com/ethereum-optimism/infra/issues/16975). The latest suggestion proposes leveraging the templating system to automatically override the `op-geth` image. This could involve resolving to a Docker image constructed from the githash in `go.mod` or allowing the source code to be cloned and a local Docker image built.", "2025-10-13T20:47:10.661Z"]
["ethereum-optimism/op-geth_day_2025-09-08", "ethereum-optimism/op-geth", "day", "2025-09-08", "# ethereum-optimism/op-geth Daily Update (Sep 8, 2025)\n## OVERVIEW \nToday's development focused on refining the `sync-superchain.sh` script for improved robustness and addressing issues related to large genesis files and metric reporting.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Sync Script Enhancement\nA modification was made to the `sync-superchain.sh` script to prevent errors when a non-standard genesis file, intended for deletion, does not exist. This change improves the script's resilience and facilitates testing of Kona prestates. ([#673](https://github.com/ethereum-optimism/op-geth/pull/673))\n\n## NEWLY OPENED PULL REQUESTS\n- [#674](https://github.com/ethereum-optimism/op-geth/pull/674) `core: Log DA usage estimates`: This new pull request aims to add logging for Data Availability (DA) usage estimates within the core functionality.\n\n## CLOSED ISSUES\n\n### Resolution of Large Genesis File Initialization Panic\nAn issue where `op-geth init` would panic with a large 7GB genesis file has been closed. The discussion highlighted that the `genesis.json`'s \"alloc\" part (Genesis-State-Spec) is optional and not typically stored in `geth` for production chains like op-mainnet. The recommended solution involves not storing the alloc data as a flat JSON blob and including the `stateHash` attribute in the chain-`config` of `genesis.json` to enable snap-syncing from other bootstrap nodes. ([#668](https://github.com/ethereum-optimism/op-geth/issues/668))\n\n### Improved Throttling Intensity Metric for op-batcher\nThe issue concerning the `op-batcher`'s throttling intensity metric has been closed. The problem was that the metric was always set for all controllers, with inactive ones showing 0. A solution was implemented in Grafana to only plot values greater than 0, making it easier to visualize active controllers and their intensity. ([#17149](https://github.com/ethereum-optimism/op-geth/issues/17149))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Kurtosis: Ability to use local op-geth build ([#16975](https://github.com/ethereum-optimism/op-geth/issues/16975))\nThe discussion revolves around enabling Kurtosis to use a local `op-geth` build instead of relying on the pinned version from `optimism-package`. A suggestion was made to leverage the templating system for automatic overriding. This could involve using an image reference like `{{ $remote_images.op-geth-go-mod }}` which resolves to a Docker image URL constructed from the `go.mod` githash, assuming Docker images are built for every commit. Alternatively, the source code could be cloned temporarily using the `go.mod` githash, and a local Docker image built from it.", "2025-10-13T20:47:12.152Z"]
["ethereum-optimism/specs_day_2025-09-08", "ethereum-optimism/specs", "day", "2025-09-08", "# ethereum-optimism/specs Daily Update (Sep 8, 2025)\n## OVERVIEW \nToday's development focused on refining the specification of the `SystemConfig.ConfigUpdate` event to improve clarity and remove redundancy. Additionally, several issues were closed, including improvements to op-batcher metrics and a resolution for op-geth initialization with large genesis files.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Specification Refinement\n*   Removed repetition and improved naming conventions in the `SystemConfig.ConfigUpdate` event specification within the Holocene and Jovian protocols. This change enhances clarity and maintainability of the protocol documentation. ([#763](https://github.com/ethereum-optimism/specs/pull/763))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### op-batcher Metric Improvement\n*   The `op-batcher` throttling intensity metric was improved by suggesting a Grafana-based solution to only plot values greater than 0, making it easier to visualize active controllers. ([#17149](https://github.com/ethereum-optimism/specs/issues/17149))\n\n### op-geth Genesis File Initialization\n*   A panic issue related to `op-geth` initialization with large genesis files was resolved. The solution involves modifying `op-geth` to not store the `alloc` data as a flat JSON blob and instead rely on the `stateHash` attribute for genesis block loading and snap-syncing. ([#668](https://github.com/ethereum-optimism/specs/issues/668))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Kurtosis: Local op-geth Build Capability\nDiscussion on [#16975](https://github.com/ethereum-optimism/specs/issues/16975) revolves around enabling Kurtosis to use local `op-geth` builds. The latest suggestion proposes leveraging the templating system to automatically override image sources, either by constructing a Docker image URL from the `go.mod` githash or by cloning the source code and building a local Docker image.", "2025-10-13T20:47:12.399Z"]
["ethereum-optimism/superchain-ops_day_2025-09-08", "ethereum-optimism/superchain-ops", "day", "2025-09-08", "# ethereum-optimism/superchain-ops Daily Update (Sep 8, 2025)\n## OVERVIEW \nToday's activity focused on addressing an `op-geth` initialization panic with large genesis files and refining `op-batcher` metrics. Discussions also continued on enabling local `op-geth` builds within Kurtosis.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Resolving `op-geth` Genesis File Initialization Panic\nAn issue concerning an `op-geth` panic when initializing with a large 7GB genesis file was closed today [#668](https://github.com/ethereum-optimism/superchain-ops/issues/668). The resolution involved a strategy to avoid storing the large genesis state as a flat JSON blob and instead leverage the `stateHash` attribute for snap-syncing, similar to how op-mainnet operates.\n\n### Improving `op-batcher` Throttling Metrics\nAn issue related to improving the `op-batcher`'s throttling intensity metric was closed [#17149](https://github.com/ethereum-optimism/superchain-ops/issues/17149). The proposed solution involves a Grafana-side adjustment to only plot values greater than zero, making it easier to visualize active controllers.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Kurtosis: Ability to Use Local `op-geth` Build\nDiscussion continued on enabling Kurtosis to use local `op-geth` builds [#16975](https://github.com/ethereum-optimism/superchain-ops/issues/16975). The latest suggestion proposes leveraging the templating system to automatically resolve `op-geth` Docker images based on the `go.mod` githash, either by pulling pre-built images or by cloning source code and building locally.", "2025-10-13T20:47:13.158Z"]
["ethereum-optimism/optimism_day_2025-09-08", "ethereum-optimism/optimism", "day", "2025-09-08", "# ethereum-optimism/optimism Daily Update (Sep 8, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes for Superchain configuration upgrades, enhancements to the `op-challenger` for Kona support, and significant refactoring in `op-e2e` for improved testing. New features included README updates and the introduction of `PermissionedDisputeGameV2`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Configuration & Contract Upgrades\nSignificant work was done to address and fix a bug related to `superchainConfig` upgrades, ensuring proper version comparison and supporting multiple configurations. This involved separating upgrade logic and introducing a new `SemverComp` library for robust version handling. Additionally, a new `PermissionedDisputeGameV2` was introduced to support migrating chain-specific configurations.\n- [#16838](https://github.com/ethereum-optimism/optimism/pull/16838)\n- [#17368](https://github.com/ethereum-optimism/optimism/pull/17368)\n- [#17290](https://github.com/ethereum-optimism/optimism/pull/17290)\n\n### `op-challenger` and Kona Support Enhancements\nThe `op-challenger` received updates to fix metric label names for `asterisc-kona` deployments and gained support for `cannon-kona` trace functionality. This includes adding `CANNON_KONA` and `SUPER_ASTERISC_KONA` game types to contracts to maintain synchronization with the Go implementation.\n- [#17367](https://github.com/ethereum-optimism/optimism/pull/17367)\n- [#17356](https://github.com/ethereum-optimism/optimism/pull/17356)\n- [#17358](https://github.com/ethereum-optimism/optimism/pull/17358)\n\n### Developer Tooling and Documentation Improvements\nThe `README.md` was updated to reflect the current directory structure, including newly added directories. The `op-e2e` testing framework was refactored to use the `ActivateForkAtOffset` utility, simplifying future fork activation tests. Documentation for `op-e2e/system` also received a deprecation notice.\n- [#17359](https://github.com/ethereum-optimism/optimism/pull/17359)\n- [#17362](https://github.com/ethereum-optimism/optimism/pull/17362)\n- [#17369](https://github.com/ethereum-optimism/optimism/pull/17369)\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#17373](https://github.com/ethereum-optimism/optimism/pull/17373), was opened by Dependabot to bump the `golang.org/x/sync` dependency from version 0.14.0 to 0.17.0.\n\n## CLOSED ISSUES\n\n### Throttling Metric Improvement\nThe issue [#17149](https://github.com/ethereum-optimism/optimism/issues/17149) regarding improving the `op-batcher`'s throttling intensity metric was closed. The proposed solution involves only setting the metric value for the active controller, making it easier to visualize in Grafana.\n\n### Large Genesis File Initialization\nIssue [#668](https://github.com/ethereum-optimism/optimism/issues/668), concerning `op-geth` init with large genesis files and a LevelDB panic, was closed. The discussion highlighted that the large genesis state spec is optional and can be omitted during initialization, with the state hash included in the chain config for snap-syncing.\n\n## NEW ISSUES\n\n### `op-deployer` Deployment on Alt L1\nA new issue, [#17365](https://github.com/ethereum-optimism/optimism/issues/17365), was opened regarding the `op-deployer` not deploying `OPChain` on alternative L1s (non-standard chains). This suggests a potential limitation or bug in the deployment process for non-mainnet environments.\n\n## ACTIVE ISSUES\n\n### Kurtosis: Local `op-geth` Build\nIssue [#16975](https://github.com/ethereum-optimism/optimism/issues/16975) discusses the desire for Kurtosis to use local `op-geth` builds. The latest comment suggests leveraging the templating system to automatically override the `op-geth` image. This could involve resolving to a Docker image URL constructed from the `go.mod` githash or building a local Docker image from cloned source code. The goal is to enable developers to test with their local `op-geth` changes more easily.", "2025-10-13T20:47:13.617Z"]
["ethereum-optimism/ecosystem_day_2025-09-08", "ethereum-optimism/ecosystem", "day", "2025-09-08", "# ethereum-optimism/ecosystem Daily Update (Sep 8, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out several issues related to documentation, CMS architecture, and react migration for optimism.io, alongside discussions on Kurtosis local op-geth builds and op-batcher throttling metrics.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Documentation and Website Architecture\nSeveral issues related to the Optimism documentation and website architecture were closed. This includes the closure of the \"Relayer design doc\" [#750](https://github.com/ethereum-optimism/ecosystem/issues/750), \"Implement Docs Homepage redesign\" [#925](https://github.com/ethereum-optimism/ecosystem/issues/925), \"Spike optimism.io CMS architecture\" [#930](https://github.com/ethereum-optimism/ecosystem/issues/930), and \"Spike optimism.io react migration\" [#929](https://github.com/ethereum-optimism/ecosystem/issues/929).\n\n### op-batcher Throttling Metric Improvement\nThe issue concerning the improvement of the op-batcher throttling intensity metric was closed [#17149](https://github.com/ethereum-optimism/ecosystem/issues/17149). The discussion concluded with a solution to handle the metric visualization in Grafana by only plotting values greater than 0.\n\n### op-geth Genesis File Handling\nThe issue regarding `op-geth` initialization with a large genesis file and a LevelDB panic was closed [#668](https://github.com/ethereum-optimism/ecosystem/issues/668). The resolution involved a strategy to avoid saving the large `genesis.json` directly and instead leverage the `stateHash` attribute for snap-syncing.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Kurtosis: Ability to use local op-geth build\nDiscussion on [#16975](https://github.com/ethereum-optimism/ecosystem/issues/16975) focused on enabling Kurtosis to use local `op-geth` builds. The latest comment suggests leveraging the templating system to automatically override image sources, potentially by constructing Docker image URLs from `go.mod` githashes or by building local Docker images from cloned source code.", "2025-10-13T20:47:13.831Z"]
["ethereum-optimism/infra_day_2025-09-09", "ethereum-optimism/infra", "day", "2025-09-09", "# ethereum-optimism/infra Daily Update (Sep 9, 2025)\n## OVERVIEW \nThe day saw significant progress in infrastructure enhancements, particularly around flashblocks integration and sync-tester capabilities. Several issues related to sequencer configuration and testing environments were closed, indicating a push towards more robust and observable systems.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Sync-Tester Enhancements and Network Exposure\nSeveral issues related to the `op-sync-tester` were closed, indicating progress in setting up and utilizing this tool for L2CL syncing. This includes exposing more networks within the CI environment to facilitate testing with real chain data [#454](https://github.com/ethereum-optimism/infra/issues/454) and adding sync acceptance tests using the sync tester [#16703](https://github.com/ethereum-optimism/infra/issues/16703).\n### Mainnet Sequencer Configuration\nWork was completed on configuring mainnet sequencers, specifically creating a new sequencer with flashblocks [#17318](https://github.com/ethereum-optimism/infra/issues/17318) and removing an older sequencer as a voter [#17319](https://github.com/ethereum-optimism/infra/issues/17319). This aims to ensure an odd number of voters in the Raft conductor set and optimize for flashblocks integration.\n### Acceptance Test Progress\nAn issue tracking the progress of getting all acceptance tests running and passing in persistent devnets was closed [#398](https://github.com/ethereum-optimism/infra/issues/398). While closed, some follow-up tickets were created for specific failing tests.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Flashblocks Monitoring and Alerting Improvements\nDiscussions on [#16388](https://github.com/ethereum-optimism/infra/issues/16388) indicate significant progress in setting up monitoring and alerting for flashblocks. A monitoring dashboard has been completed, and remaining alerting PRs have been raised. This work is crucial for observability and paging when flashblocks are enabled, especially for op-sepolia.\n### Nightly CI for Sync Tester\nThe issue [#17253](https://github.com/ethereum-optimism/infra/issues/17253) discusses adding nightly CI jobs to test `op-node` (or other CLs) using the sync tester. A recent comment notes that enabling mainnet sync testing is currently blocked by another issue, indicating ongoing work to fully implement this.", "2025-10-13T20:47:16.199Z"]
["ethereum-optimism/design-docs_day_2025-09-09", "ethereum-optimism/design-docs", "day", "2025-09-09", "# ethereum-optimism/design-docs Daily Update (Sep 9, 2025)\n## OVERVIEW \nThe day saw significant progress in security module design with new proposals for liveness and timelock guards. Several issues related to flashblocks integration and sync-tester development were closed, indicating advancements in monitoring, alerting, and testing infrastructure.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Safe Module Enhancements\nNew design documents were introduced for enhancing the security and operational robustness of safes. This includes a proposal for an updated LivenessModule to be installed across various managed safes and a new TimelockGuard proposal for controlled access.\n- [#320](https://github.com/ethereum-optimism/design-docs/pull/320)\n- [#324](https://github.com/ethereum-optimism/design-docs/pull/324)\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#335](https://github.com/ethereum-optimism/design-docs/pull/335), was opened to add a design document for the Kurtosis to Sysgo migration.\n\n## CLOSED ISSUES\n\n### Flashblocks Integration and Sequencer Management\nSeveral issues related to flashblocks integration and sequencer management in mainnet were closed. This includes the creation of a new sequencer to ensure an odd number of voters in the Raft conductor set and the removal of a non-flashblocks oriented sequencer from the voter set.\n- [#17318](https://github.com/ethereum-optimism/design-docs/issues/17318)\n- [#17319](https://github.com/ethereum-optimism/design-docs/issues/17319)\n\n### Sync-Tester Development and CI Integration\nProgress was made on the `op-sync-tester`, with the completion of the first milestone for the sync-tester and the exposure of more networks within the CI box to facilitate testing with real chain data.\n- [#16703](https://github.com/ethereum-optimism/design-docs/issues/16703)\n- [#454](https://github.com/ethereum-optimism/design-docs/issues/454)\n\n## NEW ISSUES\n\n### Data Availability Footprint Analysis\nA new issue, [#336](https://github.com/ethereum-optimism/design-docs/issues/336), was opened to conduct threat modeling and failure modes analysis for the DA Footprint Limit.\n\n## ACTIVE ISSUES\n\n### Flashblocks Monitoring and Alerting Improvements\nDiscussions on [#16388](https://github.com/ethereum-optimism/design-docs/issues/16388) indicate that the monitoring dashboard for flashblocks has been completed, and remaining alerting PRs have been raised. Previous discussions outlined detailed requirements for monitoring peer count, block progression, pending transactions, and flashblocks-specific metrics.\n\n### Sync-Tester Nightly CI Job\nIssue [#17253](https://github.com/ethereum-optimism/design-docs/issues/17253) is tracking the addition of nightly CI jobs to test `op-node` (or other CLs) using the sync tester. The latest comment notes that enabling mainnet sync testing is currently blocked by another infrastructure issue.\n\n### Acceptance Tests in Persistent Devnets\nOn [#398](https://github.com/ethereum-optimism/design-docs/issues/398), the latest comment highlights that some acceptance tests are still failing on Eris, with new tickets created to follow up on `TestERC20Bridge` and `TestOperatorFeeDevstack`. Previous updates included adding L1 Faucet support.", "2025-10-13T20:47:16.296Z"]
["ethereum-optimism/superchain-ops_day_2025-09-09", "ethereum-optimism/superchain-ops", "day", "2025-09-09", "# ethereum-optimism/superchain-ops Daily Update (Sep 9, 2025)\n## OVERVIEW \nToday's focus was on Superchain configuration updates and significant progress in closing several key issues related to flashblocks integration, sync testing, and CI infrastructure improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### OP-Contracts v4.1.0 OPCM Templates\nAn update to OP-Contracts v4.1.0 OPCM templates was implemented, including an U16A OPCM upgrade and enhancements to SuperchainConfig templates and example tasks. This work involved modifications to core improvement files and test configurations. ([#1185](https://github.com/ethereum-optimism/superchain-ops/pull/1185))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Sequencer Management\nTwo issues related to flashblocks sequencer management in mainnet were closed. This included the creation of a new sequencer to ensure an odd number of voters in the Raft conductor set and the removal of `prod-mainnet-sequencer-0` as a voter, positioning it as a backup. ([#17318](https://github.com/ethereum-optimism/superchain-ops/issues/17318), [#17319](https://github.com/ethereum-optimism/superchain-ops/issues/17319))\n\n### Sync Tester Milestones and CI Enhancements\nSignificant progress was made on the sync tester, with the first milestone for sync acceptance tests being completed. Additionally, an issue concerning the exposure of more networks within the CI box for the sync-tester was closed, enabling the sync tester to use real chain data. ([#16703](https://github.com/ethereum-optimism/superchain-ops/issues/16703), [#454](https://github.com/ethereum-optimism/superchain-ops/issues/454))\n\n### Acceptance Tests in Persistent Devnets\nAn issue tracking the progress of getting all acceptance tests running and passing in persistent devnets was closed. While significant progress was made, some remaining failures on Eris will be addressed in new follow-up tickets. ([#398](https://github.com/ethereum-optimism/superchain-ops/issues/398))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Monitoring and Alerting Improvements for Flashblocks ([#16388](https://github.com/ethereum-optimism/superchain-ops/issues/16388))\nThe monitoring dashboard for flashblocks has been completed, and remaining alerting PRs have been raised. This indicates significant progress towards establishing robust observability and paging for flashblocks.\n\n### Nightly CI Job for Syncing with Latest op-node ([#17253](https://github.com/ethereum-optimism/superchain-ops/issues/17253))\nThe mainnet sync testing is currently blocked by an infrastructure issue, which needs to be resolved before the nightly CI job can be fully enabled.", "2025-10-13T20:47:17.239Z"]
["ethereum-optimism/design-docs_day_2025-09-10", "ethereum-optimism/design-docs", "day", "2025-09-10", "# ethereum-optimism/design-docs Daily Update (Sep 10, 2025)\n\n## OVERVIEW\nToday's development focused on clarifying the dispute game creators design document and closing several Kurtosis-related issues.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Dispute Game Documentation Refinement\n* The `dispute-game-creators` design document was reorganized to enhance clarity and better explain its purpose ([#331](https://github.com/ethereum-optimism/design-docs/pull/331)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Kurtosis Devnet Enhancements and Deprioritization\n* Several issues related to the Kurtosis devnet were closed, with the rationale that they are either largely completed or no longer a priority. This includes issues concerning genesis checks ([#15753](https://github.com/ethereum-optimism/design-docs/issues/15753)), idempotency and performance improvements ([#14390](https://github.com/ethereum-optimism/design-docs/issues/14390)), L1 chain config extraction ([#15050](https://github.com/ethereum-optimism/design-docs/issues/15050)), proxyd tests ([#15558](https://github.com/ethereum-optimism/design-docs/issues/15558)), and a rotatory welcome message feature ([#15511](https://github.com/ethereum-optimism/design-docs/issues/15511)).\n* An issue investigating selective service selection in Kurtosis devnet was closed as it will not be implemented ([#15537](https://github.com/ethereum-optimism/design-docs/issues/15537)).\n* Kurtosis support for `op-validator` was closed as it will not be implemented ([#16712](https://github.com/ethereum-optimism/design-docs/issues/16712)).\n\n### Infrastructure Threat Modeling\n* An issue regarding infra threat modeling related to flashblocks delivery was closed after a discussion concluded that while improvements are needed for reliability and security, there is no novel risk beyond what is already accepted for other images. The best short-term mitigation is to hardcode image digests in Kubernetes deployment manifests ([#17144](https://github.com/ethereum-optimism/design-docs/issues/17144)).\n\n### Dispute Game Implementation\n* An issue to use v2 dispute game implementations in `OPCM.addGameType` was closed as a duplicate of another issue ([#17259](https://github.com/ethereum-optimism/design-docs/issues/17259)).\n\n## NEW ISSUES\n\n### Op-Program Optimization\n* A new issue was opened to add a hint for fast block header oracle lookup in `op-program` to provide key information before looking up a block hash by number ([#17416](https://github.com/ethereum-optimism/design-docs/issues/17416)).\n\n## ACTIVE ISSUES\n\n### Kurtosis Reverse Proxy Websockets Support\nDiscussion on [#17194](https://github.com/ethereum-optimism/design-docs/issues/17194) indicates that the feature to implement Websockets support in the Kurtosis Reverse Proxy will not be implemented. However, the issue remains open as there is a pending TODO in the code that references it, and it needs to be removed before the issue can be fully closed.", "2025-10-13T20:47:19.724Z"]
["ethereum-optimism/optimism_day_2025-09-09", "ethereum-optimism/optimism", "day", "2025-09-09", "# ethereum-optimism/optimism Daily Update (Sep 9, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes across the op-program, op-devstack, and contracts-bedrock, alongside significant enhancements to acceptance tests with real-world data from OP Sepolia. Documentation for contract style guidelines was also improved.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Bug Fixes and Environment Updates\nSeveral critical bug fixes were implemented, including resolving a version loop issue in `op-program` to correctly handle tags with spaces ([#17360](https://github.com/ethereum-optimism/optimism/pull/17360)). The `op-devstack` environment for Kona was updated to reflect changes in log level and format ([#17370](https://github.com/ethereum-optimism/optimism/pull/17370)). Additionally, the StandardValidator version was bumped on the `develop` branch to incorporate new changes ([#17378](https://github.com/ethereum-optimism/optimism/pull/17378)).\n\n### Enhanced Acceptance Testing for Persistent Devnets\nSignificant improvements were made to `op-acceptance-tests` to ensure tests wait for fund balances in persistent devnets, addressing potential issues where balances might not be immediately present ([#17397](https://github.com/ethereum-optimism/optimism/pull/17397)). New upgrade tests for `op-node` were also added, utilizing `op-sync-tester` and real-world data from OP Sepolia to validate hardforks and syncing capabilities ([#17363](https://github.com/ethereum-optimism/optimism/pull/17363)).\n\n### Contracts and Tooling Improvements\nThe Standard Validator's versioning mechanism was improved to retrieve implementation versions directly from the contracts, reducing bytecode size ([#17377](https://github.com/ethereum-optimism/optimism/pull/17377)). Support for `common.Hash` was added to `op-service/cliutil` ([#17391](https://github.com/ethereum-optimism/optimism/pull/17391)), and `op-up` now encodes version information directly into its binary ([#17405](https://github.com/ethereum-optimism/optimism/pull/17405)).\n\n### Documentation and Style Guide Updates\nThe documentation for `contracts-bedrock` was enhanced with new guidelines and style examples for interface inheritance, including spacers, immutables, events, and named variables ([#17339](https://github.com/ethereum-optimism/optimism/pull/17339)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17381](https://github.com/ethereum-optimism/optimism/pull/17381) fix: logger usage and CLI action type mismatch\n- [#17382](https://github.com/ethereum-optimism/optimism/pull/17382) op-node: improve logging in ChannelInReader\n- [#17383](https://github.com/ethereum-optimism/optimism/pull/17383) op-node: calculate gas dynamically for Isthmus L1 Block deployment\n- [#17389](https://github.com/ethereum-optimism/optimism/pull/17389) op-node: improve tests for deposit log version and batcher key update\n- [#17398](https://github.com/ethereum-optimism/optimism/pull/17398) feat: move cannon and dispute to L1 folder\n- [#17401](https://github.com/ethereum-optimism/optimism/pull/17401) TimelockGuard add basic configuration functionality\n- [#17402](https://github.com/ethereum-optimism/optimism/pull/17402) Compose TimelockGuard and LivenessModule2 into a single contract\n\n## CLOSED ISSUES\n\n### Sync Tester Milestones Achieved\nThe issue tracking the addition of sync acceptance tests using the sync tester ([#16703](https://github.com/ethereum-optimism/optimism/issues/16703)) has been closed, marking the completion of the first milestone for the sync-tester. This involved testing each HF transition and validating multiple CLs syncing together.\n\n### Sequencer Configuration Updates\nSeveral issues related to sequencer configuration in mainnet were closed. This includes the creation of a new sequencer with flashblocks ([#17318](https://github.com/ethereum-optimism/optimism/issues/17318)) and the removal of `prod-mainnet-sequencer-0` as a voter ([#17319](https://github.com/ethereum-optimism/optimism/issues/17319)), both completed via associated PRs in the `k8s` repository.\n\n### DA Footprint Limit Productionization\nThe issue concerning the productionization of the DA Footprint Limit hackathon work ([#16999](https://github.com/ethereum-optimism/optimism/issues/16999)) has been closed.\n\n### Acceptance Test Failures on Eris Devnet\nA specific issue regarding `TestL1ToL2Deposit` failing on the Eris devnet ([#17384](https://github.com/ethereum-optimism/optimism/issues/17384)) was identified and subsequently closed on the same day.\n\n## NEW ISSUES\n\n### Acceptance Test Failures on Eris Devnet\nMultiple acceptance tests are failing on the Eris devnet, including `TestERC20Bridge` ([#17385](https://github.com/ethereum-optimism/optimism/issues/17385)), `TestFees` ([#17386](https://github.com/ethereum-optimism/optimism/issues/17386)), and `TestOperatorFeeDevstack` ([#17387](https://github.com/ethereum-optimism/optimism/issues/17387)). These failures are being investigated.\n\n### DA Footprint Limit Enhancements\nNew issues have been opened to ratify the design for the DA footprint block limit ([#17394](https://github.com/ethereum-optimism/optimism/issues/17394)) and to add unit tests for the DA Footprint Limit in `op-geth` ([#17395](https://github.com/ethereum-optimism/optimism/issues/17395)). The unit tests aim to verify `gasUsed` changes based on `da_footprint_gas_scalar`.\n\n### OP Stack Component Versioning and Sync Testing\nA new issue highlights the difficulty in easily obtaining the latest version numbers for OP Stack components ([#17396](https://github.com/ethereum-optimism/optimism/issues/17396)). Additionally, support for EL Sync Testing in `op-sync-tester` has been proposed ([#17388](https://github.com/ethereum-optimism/optimism/issues/17388)) to ensure correct functioning as the project moves away from req-resp p2p sync.\n\n## ACTIVE ISSUES\n\n### Flashblocks Monitoring and Alerting Improvements ([#16388](https://github.com/ethereum-optimism/optimism/issues/16388))\nProgress has been made on flashblocks monitoring and alerting. A monitoring dashboard has been completed, and related alerting PRs have been raised. Discussions include defining key metrics like peer count, block progression SLAs, pending transaction thresholds, and flashblocks-specific metrics such as `reth_op_rbuilder_total_block_built_duration`. The absence of certain metrics should also trigger alerts.\n\n### Exposing More Networks in CI Box for Sync Tester ([#454](https://github.com/ethereum-optimism/optimism/issues/454))\nThe discussion revolves around exposing L2 ELs and L1 beacon APIs in CI for various networks (mainnet, sepolia, base, unichain, ink) to facilitate `op-sync-tester`'s ability to test with real chain data. Mainnet L2 RPCs are available, and the L1 beacon API for ETH Mainnet is being addressed. The issue is largely considered done, with some refactoring planned for daily tests.\n\n### Acceptance Tests in Persistent Devnets ([#398](https://github.com/ethereum-optimism/optimism/issues/398))\nWhile significant progress has been made in running acceptance tests in persistent devnets, some tests are still failing on Eris. New tickets have been created to follow up on specific failing tests like `TestERC20Bridge` and `TestOperatorFeeDevstack`. L1 Faucet support was previously added to aid in this effort.", "2025-10-13T20:47:22.218Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-10", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-10", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 10, 2025)\n## OVERVIEW \nThe day saw significant activity in issue management, with several Kurtosis-related issues being closed due to a shift in development priorities. A new issue was opened to enhance the `op-program` with a fast block header oracle lookup hint.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Kurtosis Devnet Deprioritization\nSeveral issues related to the Kurtosis devnet were closed as \"won't implement\" due to a change in development priorities. These include adding genesis checks to `optimism-package` ([#15753](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15753)), extracting/mapping L1 chain config ([#15050](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15050)), adding a rotatory welcome message ([#15511](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15511)), investigating selective service selection ([#15537](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15537)), and adding Kurtosis support to `op-validator` ([#16712](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16712)). The umbrella issue for Kurtosis idempotency and performance ([#14390](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/14390)) was also closed, as it was largely completed and Kurtosis is no longer a priority.\n\n### Infrastructure Threat Modeling\nAn issue concerning infrastructure threat modeling related to flashblocks delivery ([#17144](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17144)) was closed. The discussion concluded that while the process for building and delivering flashblocks container images needs improvement for reliability and security, it doesn't introduce novel risks beyond what's already accepted for other images. The best short-term mitigation is to hardcode image digests in Kubernetes deployment manifests.\n\n### Dispute Game Implementation\nAn issue to use v2 dispute game implementations in `OPCM.addGameType` ([#17259](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17259)) was closed as a duplicate of another issue.\n\n## NEW ISSUES\n\n### Op-Program Enhancements\nA new issue was opened to add a hint for fast block header oracle lookup in `op-program` ([#17416](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17416)). This aims to provide key information before looking up a block hash by number.\n\n## ACTIVE ISSUES\n\n### Kurtosis Reverse Proxy Websockets Support ([#17194](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17194))\nThe issue, initially closed as \"won't implement,\" was reopened due to an existing TODO in the code referencing it. The latest comment indicates that if the feature is no longer planned, the TODO should be removed.", "2025-10-13T20:47:22.304Z"]
["ethereum-optimism/docs_day_2025-09-10", "ethereum-optimism/docs", "day", "2025-09-10", "# ethereum-optimism/docs Daily Update (Sep 10, 2025)\n## OVERVIEW \nThe day's activity focused on documentation updates, including the addition of a new upgrade notice page and general search result improvements. Several Kurtosis-related issues were closed, indicating a shift in development priorities.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Updates\nA new notice page for \"Upgrade 16a\" was added, along with updates to metadata. Automated fixes were applied to breadcrumbs and the spelling dictionary, which also improved search results.\n- [#1733](https://github.com/ethereum-optimism/docs/pull/1733)\n- [#1735](https://github.com/ethereum-optimism/docs/pull/1735)\n- [#1736](https://github.com/ethereum-optimism/docs/pull/1736)\n\n## NEWLY OPENED PULL REQUESTS\nNone\n\n## CLOSED ISSUES\n\n### Kurtosis Devnet Deprioritization\nSeveral issues related to the Kurtosis devnet were closed with the rationale \"Won't implement, closing\" or \"not currently a priority,\" indicating a shift away from active development in this area. These include adding genesis checks, improving idempotency and performance, extracting L1 chain config, creating tests for proxyd, adding a rotatory welcome message, and investigating selective service selection.\n- [#15753](https://github.com/ethereum-optimism/docs/issues/15753)\n- [#14390](https://github.com/ethereum-optimism/docs/issues/14390)\n- [#15050](https://github.com/ethereum-optimism/docs/issues/15050)\n- [#15558](https://github.com/ethereum-optimism/docs/issues/15558)\n- [#15511](https://github.com/ethereum-optimism/docs/issues/15511)\n- [#15537](https://github.com/ethereum-optimism/docs/issues/15537)\n- [#16712](https://github.com/ethereum-optimism/docs/issues/16712)\n\n### Flashblocks Delivery Threat Modeling\nAn issue concerning infra threat modeling related to flashblocks delivery was closed. The discussion concluded that while the process for building and delivering flashblocks container images needs improvement for reliability and security, it doesn't introduce novel risks beyond what's already accepted for other images. The best short-term mitigation is to hardcode image digests in Kubernetes deployment manifests.\n- [#17144](https://github.com/ethereum-optimism/docs/issues/17144)\n\n### Dispute Game Implementation\nAn issue regarding the use of v2 dispute game implementations in OPCM.addGameType was closed as a duplicate of another issue.\n- [#17259](https://github.com/ethereum-optimism/docs/issues/17259)\n\n## NEW ISSUES\n\n### Op-Program Optimization\nA new issue was opened to add a hint for fast block header oracle lookup in op-program specs, aiming to provide key information before looking up block hashes by number.\n- [#17416](https://github.com/ethereum-optimism/docs/issues/17416)\n\n## ACTIVE ISSUES\n\n### Kurtosis Idempotency / Performance [#14390](https://github.com/ethereum-optimism/docs/issues/14390)\nThis issue, focused on improving Kurtosis devnet performance, was closed by alfonso-op, stating it's \"Largely (if not fully) completed\" and that Kurtosis is \"not currently a priority.\" Earlier discussions highlighted significant improvements in deployment times, with fresh deployments taking around 4 minutes and incremental \"noop\" deployments taking 30 seconds on an M3 Max MBP. There was also a suggestion to track a separate issue for faster failure detection in case of Kurtosis API mismatches. The conversation also touched upon optimizing prestate and contract bundle build times, with ajsutton noting that local devnets don't always need the reproducible build process for prestates, which can be much faster.\n\n### Implement Websockets support in the Kurtosis Reverse Proxy [#17194](https://github.com/ethereum-optimism/docs/issues/17194)\nThis issue was initially closed by alfonso-op with \"Won't implement, closing.\" However, ajsutton reopened it, pointing out a remaining TODO in the code that references this feature. The latest comment from alfonso-op requests the removal of the TODO in the code before closing the issue again, confirming that the feature will not be implemented.", "2025-10-13T20:47:23.481Z"]
["ethereum-optimism/infra_day_2025-09-10", "ethereum-optimism/infra", "day", "2025-09-10", "# ethereum-optimism/infra Daily Update (Sep 10, 2025)\n## OVERVIEW \nThe day saw a new feature added to `op-acceptor` for improved progress indication. Several Kurtosis-related issues were closed, indicating a shift in focus, and a new issue was opened for `op-program` to enhance block header lookups.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### `op-acceptor` Progress Indicator Refinement\nA new feature was introduced to refactor the progress indicator in `op-acceptor`, removing a redundant UI parameter from `NewParallelExecutor` for cleaner code and potentially improved efficiency ([#458](https://github.com/ethereum-optimism/infra/pull/458)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Kurtosis Devnet Prioritization Shift\nSeveral issues related to the Kurtosis devnet were closed, with comments indicating that Kurtosis is not currently a priority for implementation. These include adding genesis checks to `optimism-package` ([#15753](https://github.com/ethereum-optimism/infra/issues/15753)), improving Kurtosis idempotency and performance ([#14390](https://github.com/ethereum-optimism/infra/issues/14390)), extracting/mapping L1 chain config ([#15050](https://github.com/ethereum-optimism/infra/issues/15050)), creating tests for `proxyd` ([#15558](https://github.com/ethereum-optimism/infra/issues/15558)), adding a rotatory welcome message ([#15511](https://github.com/ethereum-optimism/infra/issues/15511)), investigating selective service selection ([#15537](https://github.com/ethereum-optimism/infra/issues/15537)), and adding Kurtosis support to `op-validator` ([#16712](https://github.com/ethereum-optimism/infra/issues/16712)).\n\n### Flashblocks Delivery Threat Modeling Concluded\nAn issue concerning threat modeling related to flashblocks delivery was closed, with a detailed comment outlining that while improvements are needed for reliability and security, no novel risks were identified beyond existing container image practices. The long-term solution involves provenance-based admission control ([#17144](https://github.com/ethereum-optimism/infra/issues/17144)).\n\n### Dispute Game Implementation Update\nAn issue to use v2 dispute game implementations in `OCPM.addGameType` was closed as a duplicate of another issue ([#17259](https://github.com/ethereum-optimism/infra/issues/17259)).\n\n## NEW ISSUES\n\n### `op-program` Block Header Oracle Enhancement\nA new issue was opened to add a hint for fast block header oracle lookups in `op-program` and its specifications, aiming to provide key information before looking up a block hash by number ([#17416](https://github.com/ethereum-optimism/infra/issues/17416)).\n\n## ACTIVE ISSUES\n\n### Kurtosis Reverse Proxy Websockets Support\nDiscussion on implementing Websockets support in the Kurtosis Reverse Proxy ([#17194](https://github.com/ethereum-optimism/infra/issues/17194)) indicates that this feature will not be implemented. A comment from @alfonso-op on September 10, 2025, stated \"Won't implement, closing.\" However, @ajsutton reopened the issue on the same day, noting a \"TODO\" in the code that references this issue and suggesting it needs to be removed if the feature is truly abandoned. @alfonso-op followed up on September 11, 2025, requesting the removal of the TODO before final closure.", "2025-10-13T20:47:24.013Z"]
["ethereum-optimism/optimism_day_2025-09-10", "ethereum-optimism/optimism", "day", "2025-09-10", "# ethereum-optimism/optimism Daily Update (Sep 10, 2025)\n## OVERVIEW \nToday's development focused on bug fixes in op-conductor and contracts-bedrock, alongside enhancements to CI/CD for op-node sync tests and op-dispute-mon for cannon-kona games.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Infrastructure & Testing Improvements\n*   Enabled OPM and Base mainnet op-node sync tests in CircleCI, including Slack notifications for failures, enhancing continuous integration robustness [#17393](https://github.com/ethereum-optimism/optimism/pull/17393).\n*   Added a standalone check for `solc` warnings in contracts-bedrock, improving code quality and preventing potential issues [#17403](https://github.com/ethereum-optimism/optimism/pull/17403).\n\n### Bug Fixes & Maintenance\n*   Corrected the p2p healthcheck in op-conductor to properly utilize the r. [#17294](https://github.com/ethereum-optimism/optimism/pull/17294).\n*   Removed unused variables from the FDG_V2 test file in `packages/contracts-bedrock`, streamlining the codebase [#17400](https://github.com/ethereum-optimism/optimism/pull/17400).\n\n### Dispute Monitoring Enhancements\n*   Introduced support for cannon-kona games in op-dispute-mon, expanding its monitoring capabilities [#17380](https://github.com/ethereum-optimism/optimism/pull/17380).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#17410](https://github.com/ethereum-optimism/optimism/pull/17410) refactor(op-batcher): thread shutdownCtx to AltDA, avoid global ctx\n*   [#17417](https://github.com/ethereum-optimism/optimism/pull/17417) Move block building to sequencer\n*   [#17418](https://github.com/ethereum-optimism/optimism/pull/17418) jovian: add acceptance test for the da footprint limit\n\n## CLOSED ISSUES\n\n### Kurtosis Devnet Deprioritization\n*   Several Kurtosis-related issues were closed as they are no longer a priority or will not be implemented, including adding genesis checks to optimism-package [#15753](https://github.com/ethereum-optimism/optimism/issues/15753), improving Kurtosis idempotency/performance [#14390](https://github.com/ethereum-optimism/optimism/issues/14390), extracting/mapping L1 chain config [#15050](https://github.com/ethereum-optimism/optimism/issues/15050), creating tests for proxyd [#15558](https://github.com/ethereum-optimism/optimism/issues/15558), adding a rotatory welcome message [#15511](https://github.com/ethereum-optimism/optimism/issues/15511), investigating selective service selection [#15537](https://github.com/ethereum-optimism/optimism/issues/15537), and adding Kurtosis support to op-validator [#16712](https://github.com/ethereum-optimism/optimism/issues/16712).\n\n### Infrastructure Security & Dispute Game Updates\n*   An issue concerning infra threat modeling related to flashblocks delivery was closed, with a short-term mitigation identified to hardcode image digests in Kubernetes deployment manifests [#17144](https://github.com/ethereum-optimism/optimism/issues/17144).\n*   An issue regarding the use of v2 dispute game implementations in OPCM.addGameType was closed as a duplicate [#17259](https://github.com/ethereum-optimism/optimism/issues/17259).\n\n## NEW ISSUES\n\n### Op-Program Enhancements\n*   A new issue was opened to add a hint for fast block header oracle lookup in op-program specifications, aiming to improve lookup efficiency [#17416](https://github.com/ethereum-optimism/optimism/issues/17416).\n\n## ACTIVE ISSUES\n\n### Kurtosis Websockets Support\nThe discussion on [#17194](https://github.com/ethereum-optimism/optimism/issues/17194) regarding Websockets support in the Kurtosis Reverse Proxy indicates that this feature will not be implemented. The latest comments confirm the intention to close the issue after removing a related TODO from the codebase.", "2025-10-13T20:47:27.518Z"]
["ethereum-optimism/superchain-ops_day_2025-09-10", "ethereum-optimism/superchain-ops", "day", "2025-09-10", "# ethereum-optimism/superchain-ops Daily Update (Sep 10, 2025)\n## OVERVIEW \nThe day's development focused on internal cleanup and issue grooming, with a minor code refactoring to streamline an example task. Several Kurtosis-related issues were closed, indicating a shift in development priorities.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Internal Task Cleanup\nA minor refactoring was implemented to clean up an example task related to upgrading the superchain configuration. This helps maintain code hygiene and clarity within the repository. ([#1195](https://github.com/ethereum-optimism/superchain-ops/pull/1195))\n\n## NEWLY OPENED PULL REQUESTS\nNone\n\n## CLOSED ISSUES\n\n### Kurtosis Devnet Prioritization Shift\nSeveral issues related to the Kurtosis devnet, including adding genesis checks, improving idempotency/performance, extracting L1 chain config, creating proxyd tests, and adding a rotatory welcome message, were closed with the rationale that Kurtosis is no longer a primary focus. ([#15753](https://github.com/ethereum-optimism/superchain-ops/issues/15753), [#14390](https://github.com/ethereum-optimism/superchain-ops/issues/14390), [#15050](https://github.com/ethereum-optimism/superchain-ops/issues/15050), [#15558](https://github.com/ethereum-optimism/superchain-ops/issues/15558), [#15511](https://github.com/ethereum-optimism/superchain-ops/issues/15511), [#15537](https://github.com/ethereum-optimism/superchain-ops/issues/15537), [#16712](https://github.com/ethereum-optimism/superchain-ops/issues/16712))\n\n### Infrastructure Threat Modeling Review\nAn issue concerning infra threat modeling related to flashblocks delivery was closed after a discussion concluded that while improvements are needed for reliability and security, there's no novel risk beyond what's accepted for other images. The long-term solution involves provenance-based admission control. ([#17144](https://github.com/ethereum-optimism/superchain-ops/issues/17144))\n\n### Dispute Game Implementation Update\nAn issue to use v2 dispute game implementations in OPCM.addGameType was closed as a duplicate of another existing issue. ([#17259](https://github.com/ethereum-optimism/superchain-ops/issues/17259))\n\n## NEW ISSUES\n\n### Fast Block Header Oracle Lookup Hint\nA new issue was opened to add a hint for fast block header oracle lookup within op-program specifications, aiming to provide key information for block hash lookups by number. ([#17416](https://github.com/ethereum-optimism/superchain-ops/issues/17416))\n\n## ACTIVE ISSUES\n\n### Kurtosis Reverse Proxy Websockets Support ([#17194](https://github.com/ethereum-optimism/superchain-ops/issues/17194))\nThe issue, initially closed with the rationale of \"Won't implement,\" was reopened due to a lingering TODO in the code referencing it. The latest comment requests the removal of this TODO if the feature is indeed not planned for implementation, as part of a backlog grooming effort.", "2025-10-13T20:47:28.482Z"]
["ethereum-optimism/infra_day_2025-09-11", "ethereum-optimism/infra", "day", "2025-09-11", "# ethereum-optimism/infra Daily Update (Sep 11, 2025)\n## OVERVIEW \nToday's development focused on enhancing the `op-acceptor` tool with a new console progress indicator and fixing a Go releaser issue. Several flashblocks-related issues were closed, indicating progress in mainnet deployment and monitoring.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### `op-acceptor` Tooling Improvements\nThe `op-acceptor` tool received a significant update with the addition of a console progress indicator, providing users with better feedback during test execution [#457](https://github.com/ethereum-optimism/infra/pull/457). A bug related to the Go releaser when `mise` is activated was also fixed, ensuring smoother operation for `op-acceptor` [#459](https://github.com/ethereum-optimism/infra/pull/459).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Monitoring\nMultiple issues related to the deployment and monitoring of flashblocks on mainnet were closed. This includes enabling flashblocks on specific sequencers [#16759](https://github.com/ethereum-optimism/infra/issues/16759), [#17317](https://github.com/ethereum-optimism/infra/issues/17317), and the remaining sequencers on OP Labs infra [#16760](https://github.com/ethereum-optimism/infra/issues/16760). Alerts for low peer count health of flashblocks-enabled sequencers were also addressed [#16868](https://github.com/ethereum-optimism/infra/issues/16868).\n\n### `op-acceptor` Progress Indicator Implementation\nThe issue tracking the improvement of the `op-acceptor` progress indicator was closed, following the implementation of a more informative console output [#456](https://github.com/ethereum-optimism/infra/issues/456).\n\n### Obsolete NAT Smoke Tests\nSeveral Network Acceptance Testing (NAT) smoke test issues for `op-challenger` [#141](https://github.com/ethereum-optimism/infra/issues/141), general proofs [#140](https://github.com/ethereum-optimism/infra/issues/140), `op-dispute-mon` [#142](https://github.com/ethereum-optimism/infra/issues/142), and `op-proposer` [#143](https://github.com/ethereum-optimism/infra/issues/143) were closed as they are no longer required.\n\n### Documentation Update\nA documentation suggestion to add an example for custom chains in the bridging ETH tutorial was closed after the tutorial was updated [#1473](https://github.com/ethereum-optimism/infra/issues/1473).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Flashblocks and Sequencer Health\nDiscussions around flashblocks continue, with updates on enabling flashblocks on remaining sequencers and confirming stability. The issue regarding alerting on low peer count for flashblocks-enabled sequencers was solved with a new PR. The issue concerning alerts for unhealthy non-flashblocks enabled sequencers was closed, as existing alerts already cover this. The upgrade of `rbuilder` and `node-reth` for a chain stall fix was closed as it was deemed a non-blocker for L2.\n\n### `op-conductor` EL P2P Healthchecks\nThe issue to release and deploy `op-conductor` with EL P2P healthchecks was closed, with confirmation that it is done and working healthily.\n\n### Kurtosis Reverse Proxy Websockets Support\nThe issue for implementing Websockets support in the Kurtosis Reverse Proxy is still active, with a recent comment indicating that the feature will not be implemented and a TODO in the code needs to be removed.\n\n### `op-program` Fast Block Header Oracle Lookup\nA new issue was opened to add a hint for fast block header oracle lookup in `op-program`, with a draft PR already available for validation.\n\n### Contract Upgrade Tests\nAn issue to add \"soneium\" to contract upgrade tests is active, with a PR opened to address it.", "2025-10-13T20:47:29.607Z"]
["ethereum-optimism/docs_day_2025-09-11", "ethereum-optimism/docs", "day", "2025-09-11", "# ethereum-optimism/docs Daily Update (Sep 11, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes, particularly addressing an upgrade notice. Significant progress was made in closing out several long-standing issues related to documentation updates, audit requirements, and flashblocks implementation, streamlining the project's backlog.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Upgrade Notice Bug Fixes**\n    *   Fixed a bug related to the U16a upgrade notice page, ensuring accurate information for users and chain operators ([#1740](https://github.com/ethereum-optimism/docs/pull/1740)).\n\n## NEWLY OPENED PULL REQUESTS\n*   A new pull request, [#1739](https://github.com/ethereum-optimism/docs/pull/1739), was opened to fix the U16a notice page by adding chain operator tasks.\n\n## CLOSED ISSUES\n\n*   **Documentation & Audit Updates**\n    *   Closed several issues related to outdated documentation and audit requirements, including a suggestion for custom chains in bridging ETH ([#1473](https://github.com/ethereum-optimism/docs/issues/1473)), and audit-related tasks ([#1673](https://github.com/ethereum-optimism/docs/issues/1673), [#1727](https://github.com/ethereum-optimism/docs/issues/1727)).\n*   **Flashblocks Implementation & Monitoring**\n    *   Resolved multiple issues concerning the enablement and monitoring of flashblocks on mainnet sequencers, confirming stability and successful deployment ([#16759](https://github.com/ethereum-optimism/docs/issues/16759), [#16760](https://github.com/ethereum-optimism/docs/issues/16760), [#17317](https://github.com/ethereum-optimism/docs/issues/17317)).\n    *   Addressed alerting for low peer count health of flashblocks-enabled sequencers ([#16868](https://github.com/ethereum-optimism/docs/issues/16868)) and health of non-flashblocks enabled sequencers ([#17143](https://github.com/ethereum-optimism/docs/issues/17143)).\n*   **Infrastructure & Metrics Reporting**\n    *   Closed issues related to op-conductor deployment with EL p2p healthchecks ([#17153](https://github.com/ethereum-optimism/docs/issues/17153)) and monthly metrics reports for closed issues and opened PRs ([#1730](https://github.com/ethereum-optimism/docs/issues/1730), [#1731](https://github.com/ethereum-optimism/docs/issues/1731)).\n*   **Proof System Smoke Tests**\n    *   Closed several smoke test issues for op-challenger, op-dispute-mon, and op-proposer, as they are no longer required ([#141](https://github.com/ethereum-optimism/docs/issues/141), [#140](https://github.com/ethereum-optimism/docs/issues/140), [#142](https://github.com/ethereum-optimism/docs/issues/142), [#143](https://github.com/ethereum-optimism/docs/issues/143)).\n\n## NEW ISSUES\n\n*   **Contract Upgrade Testing**\n    *   An issue was opened to add \"soneium\" to the contract upgrade tests in CI, requiring configuration ([#17332](https://github.com/ethereum-optimism/docs/issues/17332)).\n*   **OP-Program Enhancements**\n    *   A new issue proposes adding a hint for fast block header oracle lookup in op-program specifications ([#17416](https://github.com/ethereum-optimism/docs/issues/17416)).\n\n## ACTIVE ISSUES\n\n*   **Websockets Support in Kurtosis Reverse Proxy ([#17194](https://github.com/ethereum-optimism/docs/issues/17194))**\n    *   The issue was initially closed as \"won't implement\" but was reopened due to a lingering TODO in the code referencing this feature. The latest comment indicates that the TODO should be removed if the feature is indeed not being implemented, to groom the backlog.\n*   **Add soneium to contract upgrade tests ([#17332](https://github.com/ethereum-optimism/docs/issues/17332))**\n    *   A PR has been opened that aims to close this issue, indicating active progress on integrating \"soneium\" into the contract upgrade tests.\n*   **op-program: Add hint for fast block header oracle lookup ([#17416](https://github.com/ethereum-optimism/docs/issues/17416))**\n    *   A draft PR has been created to address this issue, which aims to add a hint for fast block header oracle lookup. The next step involves validating the information in the PR.", "2025-10-13T20:47:30.054Z"]
["ethereum-optimism/specs_day_2025-09-10", "ethereum-optimism/specs", "day", "2025-09-10", "# ethereum-optimism/specs Daily Update (Sep 10, 2025)\n## OVERVIEW \nThe day saw significant activity in issue resolution, particularly around Kurtosis devnet improvements and infrastructure threat modeling. Several long-standing Kurtosis-related issues were closed, indicating a shift in focus or completion of planned work in that area. A new issue was opened to enhance op-program's block header oracle lookup.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n- No new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\n- No new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Kurtosis Devnet Refinement and Deprioritization\nSeveral issues related to the Kurtosis devnet were closed, largely due to completion or a decision not to implement further features. This includes adding genesis checks to the optimism-package [#15753](https://github.com/ethereum-optimism/specs/issues/15753), improving Kurtosis idempotency and performance [#14390](https://github.com/ethereum-optimism/specs/issues/14390), extracting/mapping L1 chain configuration [#15050](https://github.com/ethereum-optimism/specs/issues/15050), creating tests for proxyd [#15558](https://github.com/ethereum-optimism/specs/issues/15558), adding a rotatory welcome message [#15511](https://github.com/ethereum-optimism/specs/issues/15511), investigating selective service selection [#15537](https://github.com/ethereum-optimism/specs/issues/15537), and adding Kurtosis support to op-validator [#16712](https://github.com/ethereum-optimism/specs/issues/16712).\n\n### Builder Address Funding Tracking\nAn issue tracking funded builder addresses for OP Stack use, testing, or builder onboarding was closed [#762](https://github.com/ethereum-optimism/specs/issues/762). This issue documented a specific funding event for the \"Titan builder\" with 64 ETH.\n\n### Infrastructure Threat Modeling\nAn issue concerning infrastructure threat modeling related to flashblocks delivery was closed [#17144](https://github.com/ethereum-optimism/specs/issues/17144). The discussion concluded that while improvements are needed for reliability and security in building and delivering flashblocks container images, there is no novel risk beyond what is already accepted for other images. The short-term mitigation involves hardcoding image digests in Kubernetes deployment manifests.\n\n### Dispute Game Implementation Update\nAn issue to use v2 dispute game implementations in OPCM.addGameType was closed as a duplicate [#17259](https://github.com/ethereum-optimism/specs/issues/17259).\n\n## NEW ISSUES\n\n### Op-Program Block Header Oracle Enhancement\nA new issue was opened to add a hint for fast block header oracle lookup in op-program and specs [#17416](https://github.com/ethereum-optimism/specs/issues/17416). This aims to provide key information for looking up a block hash by number.\n\n## ACTIVE ISSUES\n\n### Kurtosis Idempotency / Performance [#14390](https://github.com/ethereum-optimism/specs/issues/14390)\nThis issue, though closed today, had extensive prior discussion. The latest comments from `alfonso-op` indicate that the issue is largely (if not fully) completed and is being closed as Kurtosis is not currently a priority. Earlier discussions highlighted significant improvements in devnet provisioning times, with a \"noop\" deployment taking around 30 seconds after initial setup. There was also a point about the time taken to build prestates (around 4 minutes) and contracts (30 seconds), with a suggestion to use native builds for prestates for faster local development. The discussion also touched upon Docker Desktop performance issues on Mac after sleep/wake cycles and the need for faster failure detection in Kurtosis for API mismatches.\n\n### Implement Websockets support in the Kurtosis Reverse Proxy [#17194](https://github.com/ethereum-optimism/specs/issues/17194)\nThis issue was closed today with a comment from `alfonso-op` stating it won't be implemented. However, `ajsutton` reopened it, noting a `TODO` in the code that references this issue. The latest comment suggests that if the feature is no longer planned, the `TODO` should be removed from the code.", "2025-10-13T20:47:30.322Z"]
["ethereum-optimism/op-analytics_day_2025-09-11", "ethereum-optimism/op-analytics", "day", "2025-09-11", "# ethereum-optimism/op-analytics Daily Update (Sep 11, 2025)\n## OVERVIEW \nToday's development focused on the successful deployment and stabilization of flashblocks on Optimism's mainnet sequencers, alongside the resolution of several critical alerts and the closure of outdated proof-related smoke tests.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Stability\nFlashblocks have been successfully enabled on mainnet sequencers, with stability confirmed. This involved deploying flashblocks on a single sequencer for initial evaluation, followed by deployment on the remaining sequencers. Associated PRs were merged to support these deployments. Alerts for low peer count health on flashblocks-enabled sequencers were also addressed and resolved. ([#16759](https://github.com/ethereum-optimism/op-analytics/issues/16759), [#16760](https://github.com/ethereum-optimism/op-analytics/issues/16760), [#17317](https://github.com/ethereum-optimism/op-analytics/issues/17317), [#16868](https://github.com/ethereum-optimism/op-analytics/issues/16868))\n\n### Sequencer Health and Alerting Improvements\nImprovements were made to sequencer health monitoring, including the resolution of an issue regarding alerts for unhealthy non-flashblocks enabled sequencers. Additionally, `op-conductor` was released and deployed with EL p2p healthchecks, ensuring robust monitoring of sequencer health. ([#17143](https://github.com/ethereum-optimism/op-analytics/issues/17143), [#17153](https://github.com/ethereum-optimism/op-analytics/issues/17153))\n\n### Proofs Smoke Test Deprecation\nSeveral smoke tests related to `op-challenger`, `op-dispute-mon`, and `op-proposer` were closed as they are no longer required. ([#141](https://github.com/ethereum-optimism/op-analytics/issues/141), [#140](https://github.com/ethereum-optimism/op-analytics/issues/140), [#142](https://github.com/ethereum-optimism/op-analytics/issues/142), [#143](https://github.com/ethereum-optimism/op-analytics/issues/143))\n\n### Documentation and Infrastructure Updates\nA documentation issue suggesting an example for custom chains in the bridging tutorial was updated and closed. An issue concerning the upgrade of `rbuilder` and `node-reth` for a Reth chain stall fix was closed as it was determined to be a non-blocker for L2. The issue regarding Websockets support in the Kurtosis Reverse Proxy was also closed as it will not be implemented. ([#1473](https://github.com/ethereum-optimism/op-analytics/issues/1473), [#17328](https://github.com/ethereum-optimism/op-analytics/issues/17328), [#17194](https://github.com/ethereum-optimism/op-analytics/issues/17194))\n\n## NEW ISSUES\n\n### Contract Upgrade Testing\nA new issue was opened to add soneium to the contract upgrade tests in CI, requiring configuration. ([#17332](https://github.com/ethereum-optimism/op-analytics/issues/17332))\n\n### OP-Program Enhancements\nAn issue was created to add a hint for fast block header oracle lookup in `op-program` specs, providing key information for block hash lookups by number. ([#17416](https://github.com/ethereum-optimism/op-analytics/issues/17416))\n\n## ACTIVE ISSUES\n\n### op-program: Add hint for fast block header oracle lookup ([#17416](https://github.com/ethereum-optimism/op-analytics/issues/17416))\nThe discussion revolves around adding a hint to `op-program` specs for faster block header oracle lookups. A draft PR has been created to implement this, and validation is needed to ensure it contains the correct information.\n\n### Add soneium to contract upgrade tests ([#17332](https://github.com/ethereum-optimism/op-analytics/issues/17332))\nA PR has been opened to address this issue, which aims to include soneium in the contract upgrade tests within the CI pipeline.", "2025-10-13T20:47:33.240Z"]
["ethereum-optimism/op-geth_day_2025-09-11", "ethereum-optimism/op-geth", "day", "2025-09-11", "# ethereum-optimism/op-geth Daily Update (Sep 11, 2025)\n## OVERVIEW \nToday, a new feature was added to bump the Superchain Registry to include the Arena-Z Sepolia Isthmus hardfork. Additionally, several issues related to flashblocks enablement, alerts, and op-conductor deployment were closed, indicating progress in operational stability and monitoring.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Registry Update\nA new feature was introduced to update the Superchain Registry, incorporating the Arena-Z Sepolia Isthmus hardfork. This ensures `op-geth` is aligned with the latest Superchain configurations.\n- Bumped Superchain Registry commit to `8ae98b` ([#678](https://github.com/ethereum-optimism/op-geth/pull/678))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Stability\nSignificant progress was made in deploying and stabilizing flashblocks on mainnet sequencers. This included enabling flashblocks on individual sequencers and then extending the deployment to the remaining sequencers.\n- Enabled flashblocks on `prod-mainnet-op-opn-geth-f-sequencer-0` and confirmed stability ([#16759](https://github.com/ethereum-optimism/op-geth/issues/16759))\n- Enabled flashblocks on the remaining sequencers on OP Labs infra ([#16760](https://github.com/ethereum-optimism/op-geth/issues/16760))\n- Enabled flashblocks on `op-opn-geth-f-sequencer-1` mainnet ([#17317](https://github.com/ethereum-optimism/op-geth/issues/17317))\n\n### Operational Monitoring and Alerts\nSeveral issues related to monitoring and alerting for sequencer health and flashblocks were addressed and closed, enhancing the robustness of the system.\n- Implemented an alert for low peer count health of flashblocks-enabled sequencers ([#16868](https://github.com/ethereum-optimism/op-geth/issues/16868))\n- Confirmed existing alerts cover the health of non-flashblocks enabled sequencers ([#17143](https://github.com/ethereum-optimism/op-geth/issues/17143))\n- Released and deployed `op-conductor` with EL P2P health checks ([#17153](https://github.com/ethereum-optimism/op-geth/issues/17153))\n\n### Documentation and Testing Updates\nDocumentation for bridging ETH to OP Mainnet was updated, and several outdated smoke tests were closed.\n- Updated the tutorial for bridging ETH to OP Mainnet with Viem-supported networks ([#1473](https://github.com/ethereum-optimism/op-geth/issues/1473))\n- Closed outdated smoke tests for `op-challenger`, proofs, `op-dispute-mon`, and `op-proposer` as they are no longer required ([#141](https://github.com/ethereum-optimism/op-geth/issues/141), [#140](https://github.com/ethereum-optimism/op-geth/issues/140), [#142](https://github.com/ethereum-optimism/op-geth/issues/142), [#143](https://github.com/ethereum-optimism/op-geth/issues/143))\n\n## NEW ISSUES\n- **Op-Program Enhancements**: A new issue was opened to add a hint for fast block header oracle lookup in `op-program` to improve performance ([#17416](https://github.com/ethereum-optimism/op-geth/issues/17416)).\n\n## ACTIVE ISSUES\n\n### Contract Upgrade Testing\nIssue [#17332](https://github.com/ethereum-optimism/op-geth/issues/17332) \"Add soneium to contract upgrade tests\" is active. The latest comment from @MozirDmitriy indicates that a pull request has been opened to address this issue, suggesting progress towards its resolution.\n\n### Kurtosis Reverse Proxy Websockets Support\nIssue [#17194](https://github.com/ethereum-optimism/op-geth/issues/17194) \"Implement Websockets support in the Kurtosis Reverse Proxy\" is active. @alfonso-op initially closed the issue stating it wouldn't be implemented, but @ajsutton reopened it due to a lingering TODO in the code referencing this feature. @alfonso-op then requested @serpixel to remove the TODO and close the issue, confirming the decision not to implement this feature.", "2025-10-13T20:47:34.470Z"]
["ethereum-optimism/superchain-ops_day_2025-09-11", "ethereum-optimism/superchain-ops", "day", "2025-09-11", "# ethereum-optimism/superchain-ops Daily Update (Sep 11, 2025)\n## OVERVIEW \nToday's development focused on a critical bug fix for Tenderly link generation in nested safes and significant progress in closing out several flashblocks-related issues and proof system smoke tests.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Tenderly Link Generation Fix\n*   A bug was fixed in Tenderly link generation to correctly support doubly nested safes, ensuring accurate state overrides and simulation links for complex multisig tasks ([#1197](https://github.com/ethereum-optimism/superchain-ops/pull/1197)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Monitoring\n*   Flashblocks were successfully enabled on `prod-mainnet-op-opn-geth-f-sequencer-0` ([#16759](https://github.com/ethereum-optimism/superchain-ops/issues/16759)) and the remaining sequencers on OP Labs infra ([#16760](https://github.com/ethereum-optimism/superchain-ops/issues/16760), [#17317](https://github.com/ethereum-optimism/superchain-ops/issues/17317)), with stability confirmed.\n*   Alerting for low peer count health of flashblocks-enabled sequencers was addressed ([#16868](https://github.com/ethereum-optimism/superchain-ops/issues/16868)).\n*   An issue regarding alerts for unhealthy non-flashblocks enabled sequencers was closed, as existing alerts already cover this scenario ([#17143](https://github.com/ethereum-optimism/superchain-ops/issues/17143)).\n\n### Proof System Smoke Tests\n*   Several smoke test issues for `op-challenger` ([#141](https://github.com/ethereum-optimism/superchain-ops/issues/141)), general proofs ([#140](https://github.com/ethereum-optimism/superchain-ops/issues/140)), `op-dispute-mon` ([#142](https://github.com/ethereum-optimism/superchain-ops/issues/142)), and `op-proposer` ([#143](https://github.com/ethereum-optimism/superchain-ops/issues/143)) were closed as they are no longer required.\n\n### Infrastructure and Tooling Updates\n*   The deployment of `op-conductor` with EL p2p healthchecks was completed and confirmed to be working ([#17153](https://github.com/ethereum-optimism/superchain-ops/issues/17153)).\n*   An issue to upgrade `rbuilder` and `node-reth` for a chain stall fix was closed, as L2 was deemed safe from the issue ([#17328](https://github.com/ethereum-optimism/superchain-ops/issues/17328)).\n\n### Documentation and Feature Decisions\n*   A documentation suggestion to add an example for custom chains in the \"Bridging ETH to OP Mainnet with Viem-Supported Networks\" tutorial was updated and closed ([#1473](https://github.com/ethereum-optimism/superchain-ops/issues/1473)).\n*   The feature request for Websockets support in the Kurtosis Reverse Proxy was closed as it will not be implemented ([#17194](https://github.com/ethereum-optimism/superchain-ops/issues/17194)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Contract Upgrade Testing\n*   **[#17332](https://github.com/ethereum-optimism/superchain-ops/issues/17332) Add soneium to contract upgrade tests**: A PR has been opened to address this issue, which aims to include `soneium` in the CI contract upgrade tests.\n\n### OP-Program Enhancements\n*   **[#17416](https://github.com/ethereum-optimism/superchain-ops/issues/17416) op-program: Add hint for fast block header oracle lookup**: Discussions are ongoing regarding adding a hint to specs and `op-program` for faster block header oracle lookups. A draft PR has been created as a starting point for validation.", "2025-10-13T20:47:35.811Z"]
["ethereum-optimism/specs_day_2025-09-11", "ethereum-optimism/specs", "day", "2025-09-11", "# ethereum-optimism/specs Daily Update (Sep 11, 2025)\n## OVERVIEW \nThe day saw significant progress in flashblocks enablement and related infrastructure, with several issues closed concerning deployment, monitoring, and health checks. Documentation for bridging ETH was also updated, and several long-standing smoke test issues were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- None\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Monitoring\n- Flashblocks were successfully enabled on `prod-mainnet-op-opn-geth-f-sequencer-0` and the remaining sequencers on OP Labs infra, with stability confirmed and associated PRs merged ([#16759](https://github.com/ethereum-optimism/specs/issues/16759), [#16760](https://github.com/ethereum-optimism/specs/issues/16760)).\n- Alerts for low peer count health on flashblocks-enabled sequencers were addressed and solved ([#16868](https://github.com/ethereum-optimism/specs/issues/16868)).\n- An issue regarding alerts for unhealthy non-flashblocks enabled sequencers was closed, as existing alerts already cover this scenario ([#17143](https://github.com/ethereum-optimism/specs/issues/17143)).\n- Flashblocks were enabled on `op-opn-geth-f-sequencer-1` mainnet, including the deployment of `rollup-boost` ([#17317](https://github.com/ethereum-optimism/specs/issues/17317)).\n\n### Infrastructure and Health Checks\n- The `op-conductor` with EL P2P health checks was released and deployed, confirming its healthy operation ([#17153](https://github.com/ethereum-optimism/specs/issues/17153)).\n- An issue concerning the upgrade of `rbuilder` and `node-reth` for a Reth chain stall fix was closed, as it was deemed a non-blocker for L2 ([#17328](https://github.com/ethereum-optimism/specs/issues/17328)).\n\n### Documentation and Testing Cleanup\n- The tutorial for bridging ETH to OP Mainnet with Viem-Supported Networks was updated to include an example for custom chains ([#1473](https://github.com/ethereum-optimism/specs/issues/1473)).\n- Several smoke test issues for `op-challenger`, proofs, `op-dispute-mon`, and `op-proposer` were closed as they are no longer required ([#141](https://github.com/ethereum-optimism/specs/issues/141), [#140](https://github.com/ethereum-optimism/specs/issues/140), [#142](https://github.com/ethereum-optimism/specs/issues/142), [#143](https://github.com/ethereum-optimism/specs/issues/143)).\n\n### Feature Implementation Decisions\n- The feature request to implement Websockets support in the Kurtosis Reverse Proxy was closed, with a note that it will not be implemented and a TODO in the code needs to be removed ([#17194](https://github.com/ethereum-optimism/specs/issues/17194)).\n\n## NEW ISSUES\n- None\n\n## ACTIVE ISSUES\n\n### Contract Upgrade Testing\n- **Add soneium to contract upgrade tests** ([#17332](https://github.com/ethereum-optimism/specs/issues/17332)): A PR has been opened to address this issue, which aims to include `soneium` in the contract upgrade tests within the CI.\n\n### op-program Enhancements\n- **op-program: Add hint for fast block header oracle lookup** ([#17416](https://github.com/ethereum-optimism/specs/issues/17416)): A draft PR has been created to add a hint to specs and `op-program` for faster block header oracle lookups. The next step involves validating the information in the draft PR.", "2025-10-13T20:47:36.234Z"]
["ethereum-optimism/optimism_day_2025-09-11", "ethereum-optimism/optimism", "day", "2025-09-11", "# ethereum-optimism/optimism Daily Update (Sep 11, 2025)\n## OVERVIEW \nThe day saw significant progress in enhancing testing infrastructure with updates to `op-acceptance-tests` and improvements to the `op-devstack`. Several issues related to Flashblocks monitoring and deployment were closed, indicating a push towards stabilizing the Superchain.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Acceptance Testing and CI Stability\nUpdates to `op-acceptance-tests` include a new version with an optional progress indicator ([#17422](https://github.com/ethereum-optimism/optimism/pull/17422)) and configuration for flashblocks-with-isthmus gate ([#17413](https://github.com/ethereum-optimism/optimism/pull/17413)). Additionally, a temporary increase in CircleCI timeout was implemented to address occasional test stalling ([#17438](https://github.com/ethereum-optimism/optimism/pull/17438)).\n\n### Devstack Improvements and Bug Fixes\nThe `op-devstack` received a fix for Kona's startup code and now exposes the `UserRPC` endpoint, improving its functionality and restart capabilities ([#17390](https://github.com/ethereum-optimism/optimism/pull/17390)). A fix for slack in `semgrep-scan` was also implemented ([#17433](https://github.com/ethereum-optimism/optimism/pull/17433)).\n\n### CI Configuration Reversion\nA previous change to add a standalone check for `solc` warnings was reverted ([#17428](https://github.com/ethereum-optimism/optimism/pull/17428)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17420](https://github.com/ethereum-optimism/optimism/pull/17420) introduces version 3.2.0 of `op-acceptance-tests`.\n- [#17421](https://github.com/ethereum-optimism/optimism/pull/17421) focuses on DA footprint configuration and testing.\n- [#17426](https://github.com/ethereum-optimism/optimism/pull/17426) adds support for EL Sync PoC in `op-sync-tester`.\n- [#17427](https://github.com/ethereum-optimism/optimism/pull/17427) updates contract upgrade tests to include Soneium.\n- [#17429](https://github.com/ethereum-optimism/optimism/pull/17429) proposes excluding OPCM sub-contracts from ABI/storage snapshots.\n- [#17432](https://github.com/ethereum-optimism/optimism/pull/17432) bumps the `go.opentelemetry.io/otel` dependency.\n- [#17434](https://github.com/ethereum-optimism/optimism/pull/17434) suggests removing the `ProtocolVersions` smart contract.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Monitoring\nSeveral issues related to Flashblocks deployment and monitoring were closed. This includes enabling Flashblocks on mainnet sequencers ([#16759](https://github.com/ethereum-optimism/optimism/issues/16759), [#16760](https://github.com/ethereum-optimism/optimism/issues/16760), [#17317](https://github.com/ethereum-optimism/optimism/issues/17317)), deploying the `flashblocks-websocket-proxy` ([#16763](https://github.com/ethereum-optimism/optimism/issues/16763)), and setting up monitoring and alerting for Flashblocks ([#16388](https://github.com/ethereum-optimism/optimism/issues/16388), [#16868](https://github.com/ethereum-optimism/optimism/issues/16868), [#17143](https://github.com/ethereum-optimism/optimism/issues/17143)). The Flashblocks specification was also closed out ([#17162](https://github.com/ethereum-optimism/optimism/issues/17162)).\n\n### `op-conductor` and `reth` Updates\nThe release and deployment of `op-conductor` with EL p2p healthchecks was completed ([#17153](https://github.com/ethereum-optimism/optimism/issues/17153)). An issue regarding upgrading `rbuilder` and `node-reth` for a `reth` chain stall fix was closed as it was deemed a non-blocker for L2 ([#17328](https://github.com/ethereum-optimism/optimism/issues/17328)).\n\n### Documentation and Testing Cleanup\nA documentation issue suggesting an example for custom chains in bridging ETH to OP Mainnet was closed after the tutorial was updated ([#1473](https://github.com/ethereum-optimism/optimism/issues/1473)). Several smoke test issues for `op-challenger` ([#141](https://github.com/ethereum-optimism/optimism/issues/141)), proofs ([#140](https://github.com/ethereum-optimism/optimism/issues/140)), `op-dispute-mon` ([#142](https://github.com/ethereum-optimism/optimism/issues/142)), and `op-proposer` ([#143](https://github.com/ethereum-optimism/optimism/issues/143)) were closed as they are no longer required.\n\n## NEW ISSUES\n\n### Flashblocks Alerting Refinement\nA new issue was opened to refine alerts and runbooks for Flashblocks, emphasizing the need for clear justifications for thresholds ([#17423](https://github.com/ethereum-optimism/optimism/issues/17423)).\n\n### Dispute Game Creator Refactor\nAn issue was created to update specifications following changes to the dispute game contract parameters and to review related references ([#17436](https://github.com/ethereum-optimism/optimism/issues/17436)).\n\n## ACTIVE ISSUES\n\n### Kurtosis Reverse Proxy Websockets Support\nDiscussion on [#17194](https://github.com/ethereum-optimism/optimism/issues/17194) indicates that Websockets support in the Kurtosis Reverse Proxy will not be implemented. The latest comments confirm the decision to close the issue, with a request to remove a related TODO in the code.\n\n### Soneium Contract Upgrade Tests\nIssue [#17332](https://github.com/ethereum-optimism/optimism/issues/17332) tracks the addition of Soneium to contract upgrade tests. A PR has been opened to address this, indicating progress towards its resolution.\n\n### `op-program` Fast Block Header Oracle Lookup\nIssue [#17416](https://github.com/ethereum-optimism/optimism/issues/17416) focuses on adding a hint for fast block header oracle lookup in `op-program`. A draft PR has been created as a starting point for validation.", "2025-10-13T20:47:38.168Z"]
["ethereum-optimism/superchain-registry_day_2025-09-11", "ethereum-optimism/superchain-registry", "day", "2025-09-11", "# ethereum-optimism/superchain-registry Daily Update (Sep 11, 2025)\n## OVERVIEW \nThe day's development focused on a bug fix to add Isthmus time for the arena-z-testnet. Several issues related to flashblocks enablement, sequencer health alerts, and op-conductor deployment were closed, indicating progress in infrastructure stability and monitoring.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Configuration Updates\nA bug fix was implemented to correctly add Isthmus time for the arena-z-testnet configuration, ensuring accurate time synchronization for the test network ([#1104](https://github.com/ethereum-optimism/superchain-registry/pull/1104)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Stability\nSeveral issues related to the enablement and stability of flashblocks on mainnet sequencers were closed. This includes enabling flashblocks on a production mainnet sequencer ([#16759](https://github.com/ethereum-optimism/superchain-registry/issues/16759)), enabling flashblocks on remaining sequencers ([#16760](https://github.com/ethereum-optimism/superchain-registry/issues/16760)), and enabling flashblocks on a specific mainnet sequencer ([#17317](https://github.com/ethereum-optimism/superchain-registry/issues/17317)). The stability of flashblock production was confirmed.\n\n### Infrastructure Monitoring and Alerts\nIssues concerning alerts for sequencer health were resolved. This includes adding an alert for low peer count health of flashblocks-enabled sequencers ([#16868](https://github.com/ethereum-optimism/superchain-registry/issues/16868)) and an alert for unhealthy non-flashblocks enabled sequencers ([#17143](https://github.com/ethereum-optimism/superchain-registry/issues/17143)). Additionally, the deployment of op-conductor with EL p2p healthchecks was completed ([#17153](https://github.com/ethereum-optimism/superchain-registry/issues/17153)).\n\n### Documentation and Testing Improvements\nA documentation issue suggesting an example for custom chains in bridging ETH to OP Mainnet was closed after the tutorial was updated ([#1473](https://github.com/ethereum-optimism/superchain-registry/issues/1473)). Several \"smoke test\" issues for op-challenger, op-dispute-mon, and op-proposer were closed as they are no longer required ([#141](https://github.com/ethereum-optimism/superchain-registry/issues/141), [#142](https://github.com/ethereum-optimism/superchain-registry/issues/142), [#143](https://github.com/ethereum-optimism/superchain-registry/issues/143)).\n\n### Rbuilder and Reth Upgrade\nAn issue to upgrade rbuilder and node-reth to address a reth chain stall fix was closed, as it was determined to be a non-blocker for L2 ([#17328](https://github.com/ethereum-optimism/superchain-registry/issues/17328)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Websockets Support in Kurtosis Reverse Proxy\nDiscussion on [#17194](https://github.com/ethereum-optimism/superchain-registry/issues/17194) indicates that Websockets support in the Kurtosis Reverse Proxy will not be implemented. A comment from @alfonso-op on 2025-09-11T07:30:45Z requested the removal of a TODO in the code before closing the issue, as the feature is no longer planned. This follows a previous comment from @ajsutton on 2025-09-10T21:57:35Z highlighting the existence of the TODO.\n\n### Adding Soneium to Contract Upgrade Tests\nIssue [#17332](https://github.com/ethereum-optimism/superchain-registry/issues/17332) is active, with @MozirDmitriy commenting on 2025-09-11T13:15:42Z that a pull request has been opened to address the task of adding Soneium to the contract upgrade tests.\n\n### Op-program: Fast Block Header Oracle Lookup Hint\nIssue [#17416](https://github.com/ethereum-optimism/superchain-registry/issues/17416) is discussing the addition of a hint for fast block header oracle lookup in op-program. @emhane commented on 2025-09-11T10:41:48Z to bring the issue to @meyer9's attention for visibility. This follows @ajsutton's comment on 2025-09-10T21:59:32Z, which provided a draft PR as a starting point for validation.", "2025-10-13T20:47:39.546Z"]
["ethereum-optimism/design-docs_day_2025-09-12", "ethereum-optimism/design-docs", "day", "2025-09-12", "# ethereum-optimism/design-docs Daily Update (Sep 12, 2025)\n## OVERVIEW \nThe day saw the opening of a new pull request for a Flash BAL design doc and the creation of two new bug reports. Several older issues related to testing, devnet spinup, and abnormal CPU usage were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work was reported for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#337](https://github.com/ethereum-optimism/design-docs/pull/337), was opened to introduce a design document for Flash BAL.\n\n## CLOSED ISSUES\n\n### Testing and Development Process Improvements\nSeveral issues related to testing and development processes were closed. This includes the closure of [#188](https://github.com/ethereum-optimism/design-docs/issues/188) concerning test retries, which was deemed no longer wanted. Additionally, [#198](https://github.com/ethereum-optimism/design-docs/issues/198), which requested the return of test stdout & stderr, was closed as completed. The issue [#168](https://github.com/ethereum-optimism/design-docs/issues/168), focused on porting Isthmus withdrawals root Action Tests, was closed as Isthmus has already shipped. The issue [#346](https://github.com/ethereum-optimism/design-docs/issues/346), regarding a script for permissionless devnet spinup, was closed as it has been implemented elsewhere or differently.\n\n### Performance and Stability Issues\nThe issue [#613](https://github.com/ethereum-optimism/design-docs/issues/613), reporting abnormal CPU usage with op-geth v1.101511.0, was closed. The latest comment suggests the issue might have resolved itself after log indexing finished.\n\n## NEW ISSUES\n\n### Bug Reports\nTwo new bug reports were opened, both titled \"\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19\u0e08\u0e38\u0e14\u0e1a\u0e01\u0e1e\u0e23\u0e48\u0e2d\u0e07\" (Bug Report) and lacking specific details in their initial body: [#338](https://github.com/ethereum-optimism/design-docs/issues/338) and [#339](https://github.com/ethereum-optimism/design-docs/issues/339).\n\n## ACTIVE ISSUES\n\n### Receipt Correction: Failed to decode RLP receipts ([#679](https://github.com/ethereum-optimism/design-docs/issues/679))\nThis issue, opened on September 12, 2025, reports a crash with \"Failed to decode RLP receipts\" when using op-geth v1.101602.0 on op-mainnet during full sync. The user `cpuchainorg` noted that the full log was unavailable due to Geth crashing and filling logs with \"Receipt Correction\" messages. `sebastianst` confirmed the team has experienced this issue during snap-syncing an op-mainnet node and is investigating, later suggesting a fix in a separate PR. `cpuchainorg` later commented that the issue seems fixed with the latest version patch.", "2025-10-13T20:47:39.922Z"]
["ethereum-optimism/supersim_day_2025-09-11", "ethereum-optimism/supersim", "day", "2025-09-11", "# ethereum-optimism/supersim Daily Update (Sep 11, 2025)\n## OVERVIEW \nToday's development focused on significant progress in flashblocks deployment and stability, with multiple related issues closed. Documentation for bridging ETH was updated, and several proof-related smoke tests were deemed no longer required.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, tests added, or other work were completed today.\n\n## NEWLY OPENED PULL REQUESTS\n- A dependency update was initiated to bump `vite` from version 5.4.9 to 5.4.20 in the `/examples/tictactoe` directory ([#416](https://github.com/ethereum-optimism/supersim/pull/416)).\n\n## CLOSED ISSUES\n### Flashblocks Deployment and Monitoring\nSeveral issues related to the deployment and monitoring of flashblocks on mainnet sequencers were closed. This includes enabling flashblocks on the initial `prod-mainnet-op-opn-geth-f-sequencer-0` ([#16759](https://github.com/ethereum-optimism/supersim/issues/16759)) and subsequently on the remaining sequencers on OP Labs infra ([#16760](https://github.com/ethereum-optimism/supersim/issues/16760)). Additionally, flashblocks were enabled on `op-opn-geth-f-sequencer-1` ([#17317](https://github.com/ethereum-optimism/supersim/issues/17317)). Alerts for low peer count health of flashblocks-enabled sequencers were also addressed and solved ([#16868](https://github.com/ethereum-optimism/supersim/issues/16868)).\n### Sequencer Health and Upgrades\nAn issue concerning alerts for unhealthy non-flashblocks enabled sequencers was closed, confirming that existing alerts cover these cases ([#17143](https://github.com/ethereum-optimism/supersim/issues/17143)). The release and deployment of `op-conductor` with EL p2p healthchecks was completed and confirmed to be working ([#17153](https://github.com/ethereum-optimism/supersim/issues/17153)). An issue regarding upgrading `rbuilder` and `node-reth` for a chain stall fix was closed as it was deemed a non-blocker for L2 ([#17328](https://github.com/ethereum-optimism/supersim/issues/17328)).\n### Documentation and Testing Updates\nA documentation suggestion to add an example for custom chains in the \"Bridging ETH to OP Mainnet with Viem-Supported Networks\" guide was updated and closed ([#1473](https://github.com/ethereum-optimism/supersim/issues/1473)). Several proof-related smoke tests, including those for `op-challenger` ([#141](https://github.com/ethereum-optimism/supersim/issues/141)), general proofs ([#140](https://github.com/ethereum-optimism/supersim/issues/140)), `op-dispute-mon` ([#142](https://github.com/ethereum-optimism/supersim/issues/142)), and `op-proposer` ([#143](https://github.com/ethereum-optimism/supersim/issues/143)), were closed as they are no longer required.\n### Kurtosis Reverse Proxy\nAn issue to implement Websockets support in the Kurtosis Reverse Proxy was closed as it will not be implemented, with a request to remove a related TODO in the code ([#17194](https://github.com/ethereum-optimism/supersim/issues/17194)).\n\n## NEW ISSUES\n### Op-Program Enhancements\nA new issue was opened to add a hint for fast block header oracle lookup in `op-program` specifications ([#17416](https://github.com/ethereum-optimism/supersim/issues/17416)).\n### Contract Upgrade Testing\nAn issue was created to add `soneium` to the contract upgrade tests in CI ([#17332](https://github.com/ethereum-optimism/supersim/issues/17332)).\n\n## ACTIVE ISSUES\n- **Implement Websockets support in the Kurtosis Reverse Proxy** ([#17194](https://github.com/ethereum-optimism/supersim/issues/17194)): The issue was initially closed as \"Won't implement\" by @alfonso-op. However, @ajsutton reopened it, noting a remaining TODO in the code referencing this issue, suggesting the TODO should be removed if the feature is truly not being implemented. @alfonso-op then requested @serpixel to remove the TODO and close the issue.", "2025-10-13T20:47:40.585Z"]
["ethereum-optimism/optimism_day_2025-09-12", "ethereum-optimism/optimism", "day", "2025-09-12", "# ethereum-optimism/optimism Daily Update (Sep 12, 2025)\n## OVERVIEW \nToday's development focused on significant upgrades to the Optimism Protocol Contracts Manager (OPCM) for U17, alongside critical op-node improvements for L1 genesis hash checks and an op-geth bump for Superchain registry configuration. Several long-standing issues related to devnet spinup, Isthmus withdrawals, and test retries were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Protocol Contracts Manager (OPCM) Upgrade for U17\nA major feature was added to set up the OPCM for U17, removing U16 code and updating it for the new version. This enhancement also improves the OPCM's maintainability for future developers. ([#17406](https://github.com/ethereum-optimism/optimism/pull/17406))\n\n### Op-Node Stability and Configuration Updates\nThe op-node now skips L1 genesis hash checks if the block is unavailable from the L1, addressing issues with pruned block and receipt data on L1 nodes. Additionally, op-geth was bumped to include new Superchain registry configurations for the arena-z-sepolia isthmus hardfork. ([#17407](https://github.com/ethereum-optimism/optimism/pull/17407), [#17437](https://github.com/ethereum-optimism/optimism/pull/17437))\n\n## NEWLY OPENED PULL REQUESTS\n- [#17439](https://github.com/ethereum-optimism/optimism/pull/17439) op-batcher: throttle config overhaul (pending-DA defaults, always-limit, step alignment)\n- [#17442](https://github.com/ethereum-optimism/optimism/pull/17442) feat(kurtosis-devner): guard concurrent writes to build output buffer\n\n## CLOSED ISSUES\n\n### Devnet and Testing Infrastructure Improvements\nSeveral issues related to development and testing infrastructure were closed. This includes the completion of a script for permissionless devnet spinup ([#346](https://github.com/ethereum-optimism/optimism/issues/346)), and the closure of issues concerning Isthmus withdrawals root Action Tests ([#168](https://github.com/ethereum-optimism/optimism/issues/168)), test retries ([#188](https://github.com/ethereum-optimism/optimism/issues/188)), and returning test stdout & stderr ([#198](https://github.com/ethereum-optimism/optimism/issues/198)).\n\n### Geth Merge and Related Bug Fixes\nThe issue tracking the completion of the Geth v1.16.2 merge was closed ([#17223](https://github.com/ethereum-optimism/optimism/issues/17223)).\n\n## NEW ISSUES\n- No new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Abnormal CPU Usage with op-geth ([#613](https://github.com/ethereum-optimism/optimism/issues/613))\nThe discussion around abnormal CPU usage with op-geth v1.101511.0 continued, with the latest comment from `cpuchainorg` on 2025-09-12T12:15:48Z suggesting that CPU usage has decreased after the log indexing introduced by Geth 1.15.x finished. Earlier comments from `PierrickGT` and `jsvisa` provided guidance on how to capture pprof metrics to diagnose the issue, with `PierrickGT` noting that the performance issue was likely due to an index update that took about 24 hours. `hekich` also confirmed that CPU usage returned to normal after the index upgrade.\n\n### Receipt Correction: Failed to decode RLP receipts ([#679](https://github.com/ethereum-optimism/optimism/issues/679))\nThis issue, opened today, reports crashes with \"Receipt Correction: Failed to decode RLP receipts\" when using op-geth v1.101602.0 and op-node v1.13.6 on op-mainnet during a full sync. `cpuchainorg` provided the initial report and noted that full logs are unavailable due to Geth crashing. `sebastianst` confirmed experiencing the issue during snap-syncing an op-mainnet node and is investigating, also providing a link to a potential fix.", "2025-10-13T20:47:42.354Z"]
["ethereum-optimism/superchain-ops_day_2025-09-12", "ethereum-optimism/superchain-ops", "day", "2025-09-12", "# ethereum-optimism/superchain-ops Daily Update (Sep 12, 2025)\n## OVERVIEW \nToday's development focused on preparing for the U16a devnet Freya upgrade tasks, specifically adding configurations for four Freya devnet chains. Several long-standing issues related to CPU usage, receipt decoding, and test infrastructure were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Devnet Upgrade Preparations\nTasks were added to facilitate the upgrade of four Freya devnet chains to U16a. This includes updating the SuperchainConfig to version 3.2.0 for U15 chains, which is a prerequisite for the upgrade. ([#1193](https://github.com/ethereum-optimism/superchain-ops/pull/1193))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Devnet and Testing Infrastructure Improvements\nSeveral issues related to devnet operations and testing infrastructure were closed. This includes the closure of a task to script permissionless devnet spinup ([#346](https://github.com/ethereum-optimism/superchain-ops/issues/346)), and two issues concerning test retries ([#188](https://github.com/ethereum-optimism/superchain-ops/issues/188)) and returning test stdout & stderr ([#198](https://github.com/ethereum-optimism/superchain-ops/issues/198)), which were marked as no longer wanted or completed.\n\n### Isthmus Withdrawals Root Action Tests\nThe task to port Isthmus withdrawals root Action Tests was closed ([#168](https://github.com/ethereum-optimism/superchain-ops/issues/168)), as Isthmus has already shipped.\n\n### Geth-related Performance and Decoding Issues\nAn issue concerning abnormal CPU usage with op-geth v1.101511.0 was closed ([#613](https://github.com/ethereum-optimism/superchain-ops/issues/613)), with the latest comment suggesting the issue resolved after log indexing finished. Another issue regarding failed RLP receipt decoding with op-geth v1.101602.0 was also closed ([#679](https://github.com/ethereum-optimism/superchain-ops/issues/679)), with a comment indicating the issue was fixed in a later patch.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments remain open.", "2025-10-13T20:47:42.615Z"]
["ethereum-optimism/specs_day_2025-09-12", "ethereum-optimism/specs", "day", "2025-09-12", "# ethereum-optimism/specs Daily Update (Sep 12, 2025)\n## OVERVIEW \nThe day saw significant progress in issue resolution, with several long-standing issues related to devnet spinup, test retries, and Isthmus withdrawals being closed. A new critical issue regarding receipt decoding in op-geth v1.101602.0 was also reported.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Devnet and Testing Infrastructure Improvements\nSeveral issues related to development and testing infrastructure were closed. This includes the closure of a script for permissionless devnet spinup, which was deemed implemented elsewhere/differently ([#346](https://github.com/ethereum-optimism/specs/issues/346)). Additionally, issues concerning test retries ([#188](https://github.com/ethereum-optimism/specs/issues/188)) and returning test stdout & stderr ([#198](https://github.com/ethereum-optimism/specs/issues/198)) were closed, with the latter being marked as completed.\n\n### Isthmus Withdrawals Root Action Tests\nThe issue regarding porting Isthmus withdrawals root Action Tests was closed ([#168](https://github.com/ethereum-optimism/specs/issues/168)), as Isthmus has already shipped.\n\n### op-geth CPU Usage Anomaly\nThe issue concerning abnormal CPU usage with op-geth v1.101511.0 was closed ([#613](https://github.com/ethereum-optimism/specs/issues/613)). The latest comment suggests the issue might have resolved after log indexing introduced by Geth 1.15.x finished.\n\n## NEW ISSUES\n### Receipt Correction in op-geth\nA new critical issue was reported concerning receipt correction, specifically \"Failed to decode RLP receipts\" with op-geth v1.101602.0 ([#679](https://github.com/ethereum-optimism/specs/issues/679)). This issue causes crashes during full sync on op-mainnet.\n\n## ACTIVE ISSUES\n### Abnormal CPU usage with latest op-geth ( v1.101511.0 ) ([#613](https://github.com/ethereum-optimism/specs/issues/613))\nThis issue, which was closed today, discussed abnormal CPU usage with op-geth v1.101511.0. The latest comment from `cpuchainorg` on September 12, 2025, at 12:15:48Z, suggests that the CPU usage decreased after log indexing, introduced by Geth 1.15.x, was completed. Earlier discussions involved `PierrickGT` and `jsvisa` sharing methods to capture pprof metrics to diagnose the high CPU usage, with `PierrickGT` confirming the issue was due to index updates taking about 24 hours. `hekich` also noted that after an index upgrade, the CPU usage returned to normal.\n\n### Receipt Correction: Failed to decode RLP receipts ( v1.101602.0 ) ([#679](https://github.com/ethereum-optimism/specs/issues/679))\nThis newly opened issue reports crashes due to \"Failed to decode RLP receipts\" with op-geth v1.101602.0 during full sync on op-mainnet. The initial report by `cpuchainorg` on September 12, 2025, at 12:19:12Z, indicates that Geth crashes with logs filled with \"Receipt Correction.\" The full log is unavailable due to the crash.", "2025-10-13T20:47:43.419Z"]
["ethereum-optimism/op-geth_day_2025-09-12", "ethereum-optimism/op-geth", "day", "2025-09-12", "# ethereum-optimism/op-geth Daily Update (Sep 12, 2025)\n## OVERVIEW \nThe day saw significant activity in issue resolution, with several long-standing issues being closed, including those related to CPU usage and devnet spinup. A new critical issue regarding receipt decoding errors during full sync was also reported.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Performance and Resource Utilization\nAn issue concerning abnormal CPU usage with `op-geth` was closed today, with the user noting that CPU usage decreased after log indexing completed, suggesting a temporary performance impact during this process ([#613](https://github.com/ethereum-optimism/op-geth/issues/613)).\n\n### Development and Testing Workflow Improvements\nSeveral issues related to development and testing were closed:\n- A request to port Isthmus withdrawals root Action Tests was closed as Isthmus has already shipped ([#168](https://github.com/ethereum-optimism/op-geth/issues/168)).\n- An issue regarding handling test retries was closed as it is no longer wanted ([#188](https://github.com/ethereum-optimism/op-geth/issues/188)).\n- An enhancement to return test stdout & stderr in `TestResult` was closed, indicating it has been implemented ([#198](https://github.com/ethereum-optimism/op-geth/issues/198)).\n\n### Devnet Scripting\nA task to improve the permissionless devnet spinup runbook into a runnable shell script was closed, as it has been implemented elsewhere or differently ([#346](https://github.com/ethereum-optimism/op-geth/issues/346)).\n\n## NEW ISSUES\n### Critical Syncing and Decoding Errors\nA new issue was reported concerning \"Receipt Correction: Failed to decode RLP receipts\" leading to crashes during a full sync of op-mainnet with `op-geth` v1.101602.0 ([#679](https://github.com/ethereum-optimism/op-geth/issues/679)).\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-10-13T20:47:43.823Z"]
["ethereum-optimism/optimism_day_2025-09-13", "ethereum-optimism/optimism", "day", "2025-09-13", "# ethereum-optimism/optimism Daily Update (Sep 13, 2025)\n## OVERVIEW \nThe day saw minimal development activity with no new features, bug fixes, or code refactoring. The primary activity involved a comment on an existing issue related to the status page.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo significant technical developments occurred today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Status Page Development\nA comment was added to [#945](https://github.com/ethereum-optimism/optimism/issues/945) (\"Spike out status.optimism.io\") by divine9549, expressing regret for not being able to assist with the task. This issue, opened on September 2, 2025, remains active with ongoing discussion.", "2025-10-13T20:47:43.946Z"]
["ethereum-optimism/superchain-ops_day_2025-09-13", "ethereum-optimism/superchain-ops", "day", "2025-09-13", "# ethereum-optimism/superchain-ops Daily Update (Sep 13, 2025)\n## OVERVIEW \nToday's activity in the superchain-ops repository was minimal, with no new features, bug fixes, or code refactoring. The primary activity involved a comment on an existing issue related to the status page.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo significant technical developments occurred today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Status Page Spike Out\nA comment was added to issue [#945](https://github.com/ethereum-optimism/superchain-ops/issues/945), \"Spike out status.optimism.io,\" indicating an inability to assist with the task. This issue, created on September 2, 2025, remains open.", "2025-10-13T20:47:44.192Z"]
["ethereum-optimism/infra_day_2025-09-12", "ethereum-optimism/infra", "day", "2025-09-12", "# ethereum-optimism/infra Daily Update (Sep 12, 2025)\n## OVERVIEW \nThe day saw significant activity in issue management, with several older issues being closed and new ones opened, particularly concerning `op-acceptor` and `op-geth` stability.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Devnet and Test Infrastructure Improvements\n- The issue regarding scripting permissionless devnet spinup was closed as it has been implemented elsewhere or differently [#346](https://github.com/ethereum-optimism/infra/issues/346).\n- An issue related to porting Isthmus withdrawals root Action Tests was closed as Isthmus has already shipped [#168](https://github.com/ethereum-optimism/infra/issues/168).\n- Issues concerning test retries and returning test stdout & stderr were closed as they are no longer wanted or have been completed [#188](https://github.com/ethereum-optimism/infra/issues/188), [#198](https://github.com/ethereum-optimism/infra/issues/198).\n\n## NEW ISSUES\n\n### `op-acceptor` Testing Tooling Enhancements\n- A bug was reported where the console progress indicator is not showing progress in Kurtosis-based runs [#460](https://github.com/ethereum-optimism/infra/issues/460).\n- A request was made to log all configuration at start-up and in the HTML report for better reproducibility and debugging [#461](https://github.com/ethereum-optimism/infra/issues/461).\n- An issue was opened to improve package parallelism in `op-acceptor`, as the current implementation is sub-optimal and prevents `t.Parallel()` from working correctly within packages [#462](https://github.com/ethereum-optimism/infra/issues/462).\n\n## ACTIVE ISSUES\n\n### `op-geth` CPU Usage and Stability Concerns\n- **Abnormal CPU usage with latest op-geth (v1.101511.0)** [#613](https://github.com/ethereum-optimism/infra/issues/613): The issue was closed today, with the latest comment suggesting that CPU usage might have decreased after finishing log indexing introduced by Geth 1.15.x. Earlier discussions involved users reporting high CPU usage (up to 50% on a 16-core CPU) with `op-geth` v1.101511.0. It was initially speculated that this was due to a temporary log indexing rebuild process in Geth v1.15.11. Users shared pprof profiles to help diagnose the issue, and some noted that the CPU spike might be related to a database upgrade in the new version.\n- **Receipt Correction: Failed to decode RLP receipts (v1.101602.0)** [#679](https://github.com/ethereum-optimism/infra/issues/679): This new issue reports `op-geth` crashing with \"Failed to decode RLP receipts\" errors during a full sync on op-mainnet using `op-node` v1.13.6. The latest comments indicate that the Optimism team has confirmed experiencing this issue during snap-syncing and is actively investigating it, with a potential fix being tested.", "2025-10-13T20:47:44.389Z"]
["ethereum-optimism/docs_day_2025-09-14", "ethereum-optimism/docs", "day", "2025-09-14", "# ethereum-optimism/docs Daily Update (Sep 14, 2025)\n## OVERVIEW \nThe day saw the resolution of a long-standing issue concerning archive node synchronization, with a configurable timeout flag being implemented. A new feature to add an operator fee vault was also initiated.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1741](https://github.com/ethereum-optimism/docs/pull/1741), was opened to add an operator fee vault.\n\n## CLOSED ISSUES\n### Archive Node Synchronization Improvement\nIssue [#13852](https://github.com/ethereum-optimism/docs/issues/13852), which addressed persistent block synchronization slowdowns in Base and Optimism archive nodes, was resolved. The solution involved implementing a configurable timeout flag for the L2 engine to enhance synchronization flexibility.\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n### Archive Node Synchronization Challenges\nIssue [#13852](https://github.com/ethereum-optimism/docs/issues/13852) discussed the problem of archive node synchronization slowdowns. The latest comment from pengin7384 at 2025-09-14T07:25:28Z confirms the issue is \"Resolved!\". Earlier, on 2025-01-20T02:27:17Z, pengin7384 had mentioned creating PR #13853 to implement a configurable timeout flag for the L2 engine to improve synchronization flexibility.", "2025-10-13T20:47:45.225Z"]
["ethereum-optimism/specs_day_2025-09-14", "ethereum-optimism/specs", "day", "2025-09-14", "# ethereum-optimism/specs Daily Update (Sep 14, 2025)\n## OVERVIEW \nThe day saw the resolution of a long-standing issue concerning archive node synchronization, with a configurable timeout flag being implemented to improve stability. A new pull request was also opened.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#769](https://github.com/ethereum-optimism/specs/pull/769), titled \"update\" was opened.\n\n## CLOSED ISSUES\n- **Archive Node Synchronization Improvement:** The issue [#13852](https://github.com/ethereum-optimism/specs/issues/13852), which addressed slow block synchronization in op-node for archive nodes, was marked as resolved. This issue aimed to improve archive node synchronization by adding a configurable timeout flag.\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n- **op-node: Improve archive node synchronization by adding configurable timeout flag** ([#13852](https://github.com/ethereum-optimism/specs/issues/13852)): This issue, opened on January 20, 2025, and closed today, focused on improving archive node synchronization. The latest comment from pengin7384 on September 14, 2025, confirms the resolution of the issue. An earlier comment from pengin7384 on January 20, 2025, mentioned the creation of PR #13853 to implement the proposed changes, which included a configurable timeout flag for the L2 engine.", "2025-10-13T20:47:45.950Z"]
["ethereum-optimism/optimism_day_2025-09-14", "ethereum-optimism/optimism", "day", "2025-09-14", "# ethereum-optimism/optimism Daily Update (Sep 14, 2025)\n## OVERVIEW \nThe day saw a focus on new feature development with several pull requests opened for dynamic and static cancellation timelocks, and support for OPSuccinct game type detection. An issue regarding op-node invalid block signatures was reported, and a long-standing feature request for improving archive node synchronization was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nFive new pull requests were opened today, primarily focusing on new features. These include:\n- **Game Type Detection:** A new feature to support OPSuccinct game type detection was introduced in [#17443](https://github.com/ethereum-optimism/optimism/pull/17443).\n- **Dynamic Cancellation Timelocks:** Two pull requests, [#17444](https://github.com/ethereum-optimism/optimism/pull/17444) and [#17445](https://github.com/ethereum-optimism/optimism/pull/17445), propose dynamic cancellation for recursive and forward timelocks, respectively.\n- **Static Cancellation Timelocks:** Similarly, [#17446](https://github.com/ethereum-optimism/optimism/pull/17446) and [#17447](https://github.com/ethereum-optimism/optimism/pull/17447) introduce static cancellation for recursive and forward timelocks.\n\n## CLOSED ISSUES\n\n- **Archive Node Synchronization Improvement:** A feature request to improve archive node synchronization by adding a configurable timeout flag for the L2 engine, initially opened in January, was closed today. The issue, [#13852](https://github.com/ethereum-optimism/optimism/issues/13852), was marked as resolved.\n\n## NEW ISSUES\n\n- **Op-node Invalid Block Signature:** A new issue, [#17448](https://github.com/ethereum-optimism/optimism/issues/17448), was reported concerning an \"op-node invalid block signature unrecognized signer\" error encountered during testnet deployment.\n\n## ACTIVE ISSUES", "2025-10-13T20:47:46.443Z"]
["ethereum-optimism/docs_day_2025-09-15", "ethereum-optimism/docs", "day", "2025-09-15", "# ethereum-optimism/docs Daily Update (Sep 15, 2025)\n## OVERVIEW \nThe day saw the opening of two new pull requests related to custom gas tokens and bridge recovery. Several issues were closed, including those concerning load testing, partner support criteria, and DA Footprint Limit threat modeling. A new issue was opened regarding DA Footprint Limit documentation.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for features added, bug fixes, code refactoring, documentation enhancements, or tests added.\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n- **Custom Gas Tokens Draft**: This PR ([#1743](https://github.com/ethereum-optimism/docs/pull/1743)) introduces a draft for custom gas tokens.\n- **Bridge Recovery Feature**: This PR ([#1744](https://github.com/ethereum-optimism/docs/pull/1744)) focuses on a new bridge recovery feature.\n\n## CLOSED ISSUES\nSeveral issues were closed today, indicating progress in various areas:\n- **Testing and Acceptance Criteria**: Issues related to load testing flashblocks on devnets ([#16756](https://github.com/ethereum-optimism/docs/issues/16756)) and evaluating partner support criteria on eris-0 ([#16765](https://github.com/ethereum-optimism/docs/issues/16765)) were closed, with links to detailed reports provided in the comments.\n- **DA Footprint Limit Analysis**: The threat modeling and failure modes analysis for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/docs/issues/336)) was closed, with a Miro board link provided.\n- **Receipt Correction**: An issue concerning failed RLP receipt decoding ([#679](https://github.com/ethereum-optimism/docs/issues/679)) was closed, with a fix being tested.\n\n## NEW ISSUES\nA new issue was opened today:\n- **DA Footprint Limit Documentation**: This issue ([#1742](https://github.com/ethereum-optimism/docs/issues/1742)) highlights the need for documentation emphasizing the risks of setting the DA Footprint Limit scalar too high or too low, and its interaction with the Gas Limit.\n\n## ACTIVE ISSUES\n- **Receipt Correction: Failed to decode RLP receipts ([#679](https://github.com/ethereum-optimism/docs/issues/679))**: The latest comments indicate that a fix has been provided and is being tested by the user. The issue was confirmed by the team, who experienced it during snap-syncing an op-mainnet node.\n- **Dispute game creator pattern refactor: update specs ([#17436](https://github.com/ethereum-optimism/docs/issues/17436))**: The latest comment questions if this issue is a duplicate of another or if it intends to delve deeper into the constructor and `implArgs` functionality.\n- **load testing flashblocks on devnets ([#16756](https://github.com/ethereum-optimism/docs/issues/16756))**: The issue was closed with a link to a Notion document summarizing the load testing results.\n- **Partner's support criteria evaluation on eris-0 ([#16765](https://github.com/ethereum-optimism/docs/issues/16765))**: This issue was closed with a link to a Notion document detailing the eris-betanet acceptance test results.", "2025-10-13T20:47:48.147Z"]
["ethereum-optimism/op-analytics_day_2025-09-15", "ethereum-optimism/op-analytics", "day", "2025-09-15", "# ethereum-optimism/op-analytics Daily Update (Sep 15, 2025)\n## OVERVIEW \nThe day's development focused on a critical bug fix related to transaction tracking and the resolution of several key issues, including load testing, partner support criteria evaluation, and a threat modeling analysis.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Transaction Tracking Bug Fix\nA bug affecting the `alltxs` functionality was addressed, specifically by adding \"hype\" to the `get_all_txs.ipynb` script. This fix ensures more accurate and comprehensive transaction tracking. ([#1746](https://github.com/ethereum-optimism/op-analytics/pull/1746))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Testing and Evaluation\nTwo critical issues related to Flashblocks were closed today. This includes the completion of load testing on devnets to ensure readiness for public service ([#16756](https://github.com/ethereum-optimism/op-analytics/issues/16756)) and the evaluation of partner support criteria on eris-0, confirming its performance against SLAs ([#16765](https://github.com/ethereum-optimism/op-analytics/issues/16765)).\n\n### Data Availability Footprint Analysis\nA threat modeling and failure modes analysis for the DA Footprint Limit was concluded, with the findings documented in a Miro board. ([#336](https://github.com/ethereum-optimism/op-analytics/issues/336))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Receipt Decoding Error Investigation\nDiscussion continued on an issue concerning \"Receipt Correction: Failed to decode RLP receipts\" ([#679](https://github.com/ethereum-optimism/op-analytics/issues/679)). The latest comments indicate that a fix has been proposed and is being tested, with the user confirming the issue might be resolved with the latest version patch.\n\n### Dispute Game Creator Pattern Refactor\nAn active discussion is ongoing regarding the \"Dispute game creator pattern refactor: update specs\" ([#17436](https://github.com/ethereum-optimism/op-analytics/issues/17436)). The latest comment questions if this issue is a duplicate of an existing one or if it aims for a more in-depth analysis of constructor and `implArgs` functionality.", "2025-10-13T20:47:48.513Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-15", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-15", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 15, 2025)\n\n## OVERVIEW \nThe day saw significant activity in adding new tokens to the Base network, including FLIXX, MDEX, CANA, and ZKC. An issue regarding token discoverability was also addressed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### New Token Integrations on Base\nSeveral new tokens were added to the Base network, expanding its ecosystem. This includes the FLIXX token ([#1195](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1195)), MDEX (MasterDEX Token) ([#1196](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1196)), CANA Holdings California Carbon Credits ([#1197](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1197)), and ZKC, the native token of the Boundless protocol ([#1198](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1198)).\n\n### Token Discoverability Enhancement\nAn update was made to remove the 'nobridge' flag for the ARCV2 token, ensuring its addresses and bridges are discoverable ([#1202](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1202)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Load Testing and Partner Support Evaluation\nLoad testing for flashblocks on devnets was completed, with results summarized in a Notion document ([#16756](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16756)). Similarly, the evaluation of partner support criteria on eris-0, leveraging flashblocks enablement, was also concluded and documented ([#16765](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16765)).\n\n### Data Availability Footprint Limit Threat Modeling\nThe threat modeling and failure modes analysis for the DA Footprint Limit were completed and documented on Miro ([#336](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/336)).\n\n## NEW ISSUES\n\n### Token Bridging and Configuration Concerns\nA new issue was opened seeking clarification on why a token, despite being merged, is not bridging to its counterpart on Base, suggesting a potential configuration mismatch ([#1203](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1203)).\n\n### Incorrect ETH Address on Optimism-Sepolia\nAn issue was reported regarding an incorrect address for ETH on Optimism-Sepolia, noting that the provided address is a normal address on the testnet rather than an ERC token address ([#1201](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1201)).\n\n## ACTIVE ISSUES\n\n### Receipt Correction: Failed to decode RLP receipts ([#679](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/679))\nThe issue of Geth crashing with \"Failed to decode RLP receipts\" during full sync on op-mainnet was confirmed and is under investigation. A potential fix has been suggested for testing.\n\n### Dispute game creator pattern refactor: update specs ([#17436](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17436))\nDiscussion is ongoing regarding whether this issue is a duplicate of another and if the intent is to delve deeper into the constructor and `implArgs` functionality.", "2025-10-13T20:47:48.639Z"]
["ethereum-optimism/infra_day_2025-09-15", "ethereum-optimism/infra", "day", "2025-09-15", "# ethereum-optimism/infra Daily Update (Sep 15, 2025)\n## OVERVIEW \nThe day saw significant progress in infrastructure, with new features for `op-acceptor` to surface effective configurations and `proxyd` gaining support for post-Fusaka blob transactions. Several key issues related to load testing, partner support criteria, and threat modeling were also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Configuration Visibility for `op-acceptor`\nA new feature was added to `op-acceptor` to log and display a summary of its effective configuration on startup and in HTML reports. This also includes outputting the effective configuration as a JSON file, improving transparency and debugging capabilities [#463](https://github.com/ethereum-optimism/infra/pull/463).\n\n### `proxyd` Update for Blob Transactions\n`proxyd` now supports post-Fusaka blob transactions, including cell proofs. This update involved upgrading Geth and monorepo versions used by `proxyd` and also addressed a bug where `proxyd` would panic on ingesting pre-EIP-155 transactions [#464](https://github.com/ethereum-optimism/infra/pull/464).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Testing and Evaluation\nTwo critical issues related to Flashblocks were closed today. This includes the successful completion of load testing on `eris-0` to ensure its readiness for public service [#16756](https://github.com/ethereum-optimism/infra/issues/16756) and the evaluation of partner support criteria on `eris-0` using its Flashblocks enablement [#16765](https://github.com/ethereum-optimism/infra/issues/16765).\n\n### Threat Modeling and Failure Analysis\nThe threat modeling and failure modes analysis for the DA Footprint Limit has been completed and closed [#336](https://github.com/ethereum-optimism/infra/issues/336).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Receipt Correction: Failed to decode RLP receipts [#679](https://github.com/ethereum-optimism/infra/issues/679)\nThe issue regarding Geth crashing with \"Receipt Correction: Failed to decode RLP receipts\" (v1.101602.0) during full sync on op-mainnet is being actively investigated. A potential fix has been identified and shared for testing, with the reporter confirming the issue is likely resolved with the latest patch.\n\n### Dispute game creator pattern refactor: update specs [#17436](https://github.com/ethereum-optimism/infra/issues/17436)\nDiscussion is ongoing regarding whether this issue is a duplicate of another related to dispute game contract parameters. The intent is to ensure that changes to dispute game contract parameters are reflected in the specifications, and to double-check for any other related changes.", "2025-10-13T20:47:48.869Z"]
["ethereum-optimism/op-geth_day_2025-09-15", "ethereum-optimism/op-geth", "day", "2025-09-15", "# ethereum-optimism/op-geth Daily Update (Sep 15, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out several key issues, particularly around flashblocks load testing and partner support criteria evaluation for eris-0, alongside addressing a critical receipt correction bug.\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n\n## CLOSED ISSUES\n### Flashblocks Testing and Evaluation\nTwo key issues related to flashblocks on the eris-0 network were closed. This included the completion of load testing to ensure public readiness and quality of service for flashblocks [#16756](https://github.com/ethereum-optimism/op-geth/issues/16756), and the evaluation of partner support criteria for eris-0's flashblocks enablement [#16765](https://github.com/ethereum-optimism/op-geth/issues/16765).\n### Receipt Correction Bug Resolution\nA critical bug concerning \"Receipt Correction: Failed to decode RLP receipts\" was addressed and closed [#679](https://github.com/ethereum-optimism/op-geth/issues/679). This issue caused crashes during full sync on op-mainnet.\n### Dispute Game and DA Footprint Analysis\nAn issue regarding the dispute game creator pattern refactor and updating specs was closed [#17436](https://github.com/ethereum-optimism/op-geth/issues/17436). Additionally, a threat modeling and failure modes analysis for the DA Footprint Limit was completed and closed [#336](https://github.com/ethereum-optimism/op-geth/issues/336).\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n### Flashblocks Load Testing on Devnets\nIssue [#16756](https://github.com/ethereum-optimism/op-geth/issues/16756) was closed today. The latest comment from yashvardhan-kukreja confirmed the completion of load testing, linking to a Notion document with the results and asking for confirmation to close the issue. Previously, zhwrd had indicated they were working on a report, and alfonso-op requested a summary document of the load test outcomes.\n### Partner's Support Criteria Evaluation on Eris-0\nIssue [#16765](https://github.com/ethereum-optimism/op-geth/issues/16765) was closed today. The final comment from yashvardhan-kukreja confirmed completion and provided a link to a Notion document detailing the eris-betanet acceptance test results.\n### Dispute Game Creator Pattern Refactor: Update Specs\nIssue [#17436](https://github.com/ethereum-optimism/op-geth/issues/17436) was closed today. The latest comment from stevennevins questioned if this issue was a duplicate of another, or if it intended a more in-depth look at constructor and implArgs.\n### Receipt Correction: Failed to Decode RLP Receipts\nIssue [#679](https://github.com/ethereum-optimism/op-geth/issues/679) was closed today. The latest comment from cpuchainorg indicated that the issue might be fixed with the latest patch. Earlier, sebastianst had provided a link to a fix and confirmed that the team had experienced the issue during snap-syncing an op-mainnet node, stating they were investigating.\n### [DA Footprint Limit] Conduct Threat Modelling / Failure Modes Analysis\nIssue [#336](https://github.com/ethereum-optimism/op-geth/issues/336) was closed today. The final comment from geoknee provided a Miro board link, presumably containing the analysis.", "2025-10-13T20:47:49.960Z"]
["ethereum-optimism/superchain-ops_day_2025-09-15", "ethereum-optimism/superchain-ops", "day", "2025-09-15", "# ethereum-optimism/superchain-ops Daily Update (Sep 15, 2025)\n## OVERVIEW \nToday's development focused on expanding Superchain capabilities with a new task for Base Sepolia and improving developer tooling by integrating `fzf` into `mise`. Several issues were closed, including load testing and partner support criteria evaluations for eris-0, and a threat modeling analysis for DA Footprint Limit.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Task Expansion\nA new task, U16a, was added for Base Sepolia, indicating continued expansion and testing within the Superchain ecosystem. This task includes configuration files, a README, and validation documentation. ([#1196](https://github.com/ethereum-optimism/superchain-ops/pull/1196))\n\n### Developer Tooling Enhancements\nThe `fzf` utility was integrated into `mise`, resolving a dependency issue for the `justfile` and improving the developer experience. ([#1199](https://github.com/ethereum-optimism/superchain-ops/pull/1199))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Eris-0 Network Readiness\nTwo issues related to the eris-0 network were closed. This includes the completion of load testing to ensure quality of service ([#16756](https://github.com/ethereum-optimism/superchain-ops/issues/16756)) and the evaluation of partner support criteria for eris-0's flashblocks enablement ([#16765](https://github.com/ethereum-optimism/superchain-ops/issues/16765)).\n\n### Threat Modeling and Analysis\nA threat modeling and failure modes analysis for the DA Footprint Limit was completed and documented. ([#336](https://github.com/ethereum-optimism/superchain-ops/issues/336))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Receipt Correction: Failed to decode RLP receipts ([#679](https://github.com/ethereum-optimism/superchain-ops/issues/679))\nDiscussions confirm that the issue of Geth crashing due to failed RLP receipt decoding during op-mainnet full sync is being actively investigated. A potential fix has been proposed and is awaiting testing by the reporter. The team acknowledges experiencing this issue during snap-syncing.\n\n### Dispute game creator pattern refactor: update specs ([#17436](https://github.com/ethereum-optimism/superchain-ops/issues/17436))\nThe discussion revolves around whether this issue is a duplicate of an existing one in the `optimism` repository or if it intends to delve deeper into the specifics of constructor and `implArgs` functionality for dispute game contract parameter changes.", "2025-10-13T20:47:51.559Z"]
["ethereum-optimism/specs_day_2025-09-15", "ethereum-optimism/specs", "day", "2025-09-15", "# ethereum-optimism/specs Daily Update (Sep 15, 2025)\n## OVERVIEW \nThe day saw a bug fix for broken links in configurability documentation and an update to system configuration details. Several issues were closed, including those related to load testing, partner support criteria, and receipt correction. New issues were opened concerning `daFootprintGasScalar` and `minBaseFee` interactions, and cleanup of `protocol/system-config.md`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Improvements & Bug Fixes\n- Fixed broken links related to operator fees in the protocol configurability documentation ([#765](https://github.com/ethereum-optimism/specs/pull/765)).\n- Added more details regarding the minimum base fee in the system configuration specifications ([#766](https://github.com/ethereum-optimism/specs/pull/766)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Testing and Evaluation Completion\n- Load testing for flashblocks on devnets was completed, with results summarized in a Notion document ([#16756](https://github.com/ethereum-optimism/specs/issues/16756)).\n- Evaluation of partner support criteria on eris-0 was finalized, with results documented in a Notion page ([#16765](https://github.com/ethereum-optimism/specs/issues/16765)).\n\n### Protocol Specification Updates\n- The issue regarding dispute game creator pattern refactor and spec updates was closed as a duplicate ([#17436](https://github.com/ethereum-optimism/specs/issues/17436)).\n\n### Bug Resolution\n- The \"Receipt Correction: Failed to decode RLP receipts\" issue was addressed, with a fix provided for testing ([#679](https://github.com/ethereum-optimism/specs/issues/679)).\n\n### Threat Modeling Conclusion\n- The threat modeling and failure modes analysis for the DA Footprint Limit was completed, with findings available on a Miro board ([#336](https://github.com/ethereum-optimism/specs/issues/336)).\n\n## NEW ISSUES\n\n### System Configuration Clarification\n- An issue was opened to update the default value for `daFootprintGasScalar` once finalized ([#773](https://github.com/ethereum-optimism/specs/issues/773)).\n- Discussion initiated on how `daFootprintGasScalar` and `minBaseFee` should interact with the standard configuration and if they should appear in `protocol/configurability.md` ([#770](https://github.com/ethereum-optimism/specs/issues/770)).\n\n### Documentation Cleanup\n- A new issue was created to clean up `protocol/system-config.md`, suggesting the inclusion of numerical values for config update enums and linking to hard fork-specific specs ([#771](https://github.com/ethereum-optimism/specs/issues/771)).\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:47:52.263Z"]
["ethereum-optimism/design-docs_day_2025-09-15", "ethereum-optimism/design-docs", "day", "2025-09-15", "# ethereum-optimism/design-docs Daily Update (Sep 15, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out several long-standing issues related to flashblocks load testing and partner support criteria evaluation on eris-0, alongside addressing a critical receipt decoding bug.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Data Availability Footprint Analysis\nThe threat modeling and failure modes analysis for the DA Footprint Limit was completed, with a Miro board linked for further details ([#336](https://github.com/ethereum-optimism/design-docs/issues/336)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Flashblocks Load Testing and Partner Support Evaluation\nDiscussions on the load testing of flashblocks on devnets ([#16756](https://github.com/ethereum-optimism/design-docs/issues/16756)) and the evaluation of partner support criteria on eris-0 ([#16765](https://github.com/ethereum-optimism/design-docs/issues/16765)) concluded with links to Notion documents summarizing the outcomes and results. Both issues were subsequently closed.\n\n### Receipt Correction Bug\nAn issue regarding failed RLP receipt decoding in Geth v1.101602.0 ([#679](https://github.com/ethereum-optimism/design-docs/issues/679)) was actively discussed. A fix was proposed and shared for testing, with the reporter confirming the issue appears resolved with the latest patch.\n\n### Dispute Game Creator Pattern Refactor\nDiscussion continued on updating specs for the dispute game creator pattern refactor ([#17436](https://github.com/ethereum-optimism/design-docs/issues/17436)). A question was raised regarding whether this issue duplicates an existing one or aims for a more in-depth exploration of constructor and `implArgs` functionality.", "2025-10-13T20:47:53.031Z"]
["ethereum-optimism/superchain-registry_day_2025-09-15", "ethereum-optimism/superchain-registry", "day", "2025-09-15", "# ethereum-optimism/superchain-registry Daily Update (Sep 15, 2025)\n## OVERVIEW \nThe day's development focused on refining chain configurations by reducing redundant address data, enhancing efficiency and maintainability. Several issues related to load testing, partner support criteria, and a critical receipt decoding bug were closed, indicating significant progress in stability and operational readiness.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Configuration File Optimization\nA significant refactoring effort was completed to streamline chain configuration files. This involved reducing the number of contract and role addresses directly embedded in `.toml` files, as these frequently change. By relying on the `addresses.json` codegen file for these dynamic values, the configuration files are now less prone to becoming stale, improving maintainability and accuracy across various Superchain configurations. ([#1103](https://github.com/ethereum-optimism/superchain-registry/pull/1103))\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1105](https://github.com/ethereum-optimism/superchain-registry/pull/1105), was opened to add the Sova testnet to the registry.\n\n## CLOSED ISSUES\n\n### Operational Readiness and Testing\nSeveral issues related to the operational readiness of the Superchain were closed. This includes the successful completion of load testing for flashblocks on devnets ([#16756](https://github.com/ethereum-optimism/superchain-registry/issues/16756)) and the evaluation of partner support criteria on the `eris-0` chain ([#16765](https://github.com/ethereum-optimism/superchain-registry/issues/16765)). These closures indicate that critical testing and validation phases have been completed.\n\n### Configuration and Data Management\nAn issue focused on reducing redundant chain configuration addresses was closed ([#978](https://github.com/ethereum-optimism/superchain-registry/issues/978)). This aligns with the day's code refactoring efforts to improve the maintainability and accuracy of configuration files by centralizing dynamic address data.\n\n### Threat Modeling and Analysis\nA threat modeling and failure modes analysis for the DA Footprint Limit was completed and closed ([#336](https://github.com/ethereum-optimism/superchain-registry/issues/336)), with a link to the Miro board summarizing the findings.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n\n### Receipt Correction: Failed to decode RLP receipts ([#679](https://github.com/ethereum-optimism/superchain-registry/issues/679))\nThe issue, reporting Geth crashes due to failed RLP receipt decoding during full sync on op-mainnet, saw active discussion. @sebastianst confirmed the team has experienced this issue when snap-syncing an op-mainnet node and is investigating. A potential fix ([this fix](https://github.com/ethereum-optimism/op-geth/pull/680)) was suggested for @cpuchainorg to try. @cpuchainorg later confirmed that the issue seems to be fixed with the latest version patch.\n\n### Dispute game creator pattern refactor: update specs ([#17436](https://github.com/ethereum-optimism/superchain-registry/issues/17436))\nDiscussion revolved around whether this issue is a duplicate of another. @stevennevins asked @pauldowman if it duplicates `optimism/issues/15784` or if it intends to delve deeper into constructor and `implArgs` functionality. @pauldowman later marked it as a duplicate.", "2025-10-13T20:47:53.750Z"]
["ethereum-optimism/docs_day_2025-09-16", "ethereum-optimism/docs", "day", "2025-09-16", "# ethereum-optimism/docs Daily Update (Sep 16, 2025)\n## OVERVIEW \nToday's activity focused on ongoing discussions within existing issues, particularly around token bridging clarifications and documentation cleanup. No new features, bug fixes, or code refactoring were reported.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were reported today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n### Token Bridging Clarification\nDiscussion continued on [#1203](https://github.com/ethereum-optimism/docs/issues/1203) regarding a token bridging issue. A maintainer clarified that `@superbridgeapp` is not responsible for the repository and suggested that the token in question might not be an `OptimismMintableERC20`, which would explain why a bridge address was not generated. Verification of the token's implementation was recommended to confirm this assumption.\n\n### Protocol System Configuration Cleanup\nOngoing discussion on [#771](https://github.com/ethereum-optimism/docs/issues/771) suggests improvements for `protocol/system-config.md`. A new suggestion was made to include both the numerical value and the canonical name (e.g., `MIN_BASE_FEE` and `6`) for config update enums, rather than just the name.\n\n### Flaky Test Investigation\nThe issue [#17298](https://github.com/ethereum-optimism/docs/issues/17298) concerning the flakiness of `TestPreNoInbox` received an update. Another flake was reported, and it was noted that a recent pull request ([#17495](https://github.com/ethereum-optimism/optimism/pull/17495)) did not resolve the issue.", "2025-10-13T20:47:54.659Z"]
["ethereum-optimism/optimism_day_2025-09-15", "ethereum-optimism/optimism", "day", "2025-09-15", "# ethereum-optimism/optimism Daily Update (Sep 15, 2025)\n## OVERVIEW \nToday's development focused on contract enhancements for min-base-fee, bug fixes in the op-deployer, and significant updates to testing infrastructure. Several issues related to flashblocks and system configurations were closed, while new issues emerged concerning rollup-boost as a flashblocks forwarder.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Contract Enhancements for Min-Base-Fee\nA new feature was added to the `contracts-bedrock` package, enabling minimum base fee functionality. This involved changes to `ISystemConfig.sol`, `DeployConfig.s.sol`, and `SystemConfig.sol`, along with corresponding snapshot and test updates. This work is a cherry-pick from a larger PR, broken down for easier review. ([#17330](https://github.com/ethereum-optimism/optimism/pull/17330))\n\n### `op-deployer` Bug Fixes and Address Management\nA bug in `op-deployer` was fixed to ensure the default cache directory exists, preventing downstream failures. Additionally, the `op-deployer` was updated to read addresses directly from on-chain instead of relying on static `chainConfig` files, preparing for the removal of hardcoded addresses. ([#17411](https://github.com/ethereum-optimism/optimism/pull/17411), [#17456](https://github.com/ethereum-optimism/optimism/pull/17456))\n\n### Testing Infrastructure Improvements\nSignificant updates were made to the testing framework. A new `just latest-versions` recipe was introduced to easily retrieve stable and latest component versions. The `op-acceptance-tests` were refined by removing the `INITIAL_L2_BLOCK` variable and simplifying sync tests with external nodes, now fetching the latest block number from the EL node. ([#17399](https://github.com/ethereum-optimism/optimism/pull/17399), [#17453](https://github.com/ethereum-optimism/optimism/pull/17453))\n\n### Code Cleanup and Task Removal\nA task related to the reverse proxy websockets implementation was removed from `op-devstack`, as it will not be implemented, contributing to overall code cleanup. ([#17452](https://github.com/ethereum-optimism/optimism/pull/17452))\n\n## NEWLY OPENED PULL REQUESTS\n- [#17450](https://github.com/ethereum-optimism/optimism/pull/17450) Dynamic cancellation non-nested timelock\n- [#17454](https://github.com/ethereum-optimism/optimism/pull/17454) Add minimal cancellation function relying on Safe logic\n\n## CLOSED ISSUES\n\n### Flashblocks Testing and Evaluation\nSeveral issues related to flashblocks testing and partner support criteria on `eris-0` were closed. This includes the completion of load testing on devnets and the evaluation of partner support criteria, with results documented in Notion. ([#16756](https://github.com/ethereum-optimism/optimism/issues/16756), [#16765](https://github.com/ethereum-optimism/optimism/issues/16765))\n\n### System Configuration and Feature Implementation\nThe issue concerning the addition of a `minBaseFee` configuration variable to the `SystemConfig` contract was closed, indicating the successful implementation of this feature. ([#16839](https://github.com/ethereum-optimism/optimism/issues/16839))\n\n### Websockets Implementation Decision\nThe issue tracking the implementation of Websockets support in the Kurtosis Reverse Proxy was closed, with the decision not to implement this feature. ([#17194](https://github.com/ethereum-optimism/optimism/issues/17194))\n\n### Component Versioning Clarity\nAn issue seeking an easy way to get the latest version numbers for OP Stack components was closed, likely addressed by the new `just latest-versions` recipe. ([#17396](https://github.com/ethereum-optimism/optimism/issues/17396))\n\n## NEW ISSUES\n\n### Rollup-Boost as Flashblocks Forwarder\nA series of new issues were opened to explore and implement `rollup-boost` as a flashblocks forwarder. This includes initial investigation into its role as a flashblocks forwarder ([#17457](https://github.com/ethereum-optimism/optimism/issues/17457)), deployment plans for `eris-0` ([#17458](https://github.com/ethereum-optimism/optimism/issues/17458)), Sepolia ([#17459](https://github.com/ethereum-optimism/optimism/issues/17459)), and mainnet ([#17460](https://github.com/ethereum-optimism/optimism/issues/17460)).\n\n### Deployment and Load Testing for Rollup-Boost on Eris-0\nSpecific issues were created for the deployment setup ([#17461](https://github.com/ethereum-optimism/optimism/issues/17461)) and load testing ([#17462](https://github.com/ethereum-optimism/optimism/issues/17462)) of `rollup-boost` as a flashblocks forwarder on `eris-0`, outlining scenarios for testing and performance comparison.\n\n## ACTIVE ISSUES\n\n### Receipt Correction: Failed to decode RLP receipts ([#679](https://github.com/ethereum-optimism/optimism/issues/679))\nThe issue reports Geth crashing with \"Receipt Correction: Failed to decode RLP receipts\" during full sync on op-mainnet. The team confirmed experiencing this issue during snap-syncing an op-mainnet node and is investigating. A potential fix has been proposed and is awaiting testing by the reporter.\n\n### Dispute game creator pattern refactor: update specs ([#17436](https://github.com/ethereum-optimism/optimism/issues/17436))\nThis issue calls for updating specifications to reflect changes in dispute game contract parameters, specifically checking references to constructor and `implArgs`. There's a question about whether this is a duplicate of an older issue or requires a more in-depth analysis.", "2025-10-13T20:47:54.996Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-16", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-16", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 16, 2025)\n## OVERVIEW \nThe day saw the opening of two new pull requests, focusing on adding token addresses for Celo and VLR. Discussions continued on existing issues, including a persistent test flakiness and a token bridging configuration query.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nTwo new pull requests were opened today:\n- A feature to add Celo network addresses for weETH and wstETH tokens was proposed ([#1204](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1204)).\n- Another feature to add VLR was also opened ([#1205](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1205)).\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n\n### Addressing Test Flakiness\nThe issue of `TestPreNoInbox` flakiness in `op-acceptance-tests` continues to be a concern ([#17298](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17298)). A recent attempt to fix the issue via `optimism/pull/17495` was unsuccessful, as confirmed by `pcw109550` on September 17th. Another flake was observed on September 16th, indicating the problem persists.\n\n### Token Bridging Configuration Clarification\nDiscussion continued regarding a token bridging issue related to PR #1184 ([#1203](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1203)). `AlexBHarley` suggested that the token at `0x431151F26c48B4D4BEFc34048a0966Bf960A0c50` on Base might not be an `OptimismMintableERC20`, which would explain the lack of a bridge address in the generated entry. Verification of the implementation was recommended to confirm this.\n\n### Protocol Documentation Cleanup\nWork is ongoing to clean up `protocol/system-config.md` ([#771](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/771)). `joshklop` noted a suggestion from `sebastianst` to specify both the number and canonical name for config update enums (e.g., `MIN_BASE_FEE` and `6`). Additionally, linking to fork-specific specs for hard fork-added config updates is being considered.", "2025-10-13T20:47:55.326Z"]
["ethereum-optimism/infra_day_2025-09-16", "ethereum-optimism/infra", "day", "2025-09-16", "# ethereum-optimism/infra Daily Update (Sep 16, 2025)\n## OVERVIEW \nThe day's development focused on improving RPC metric reporting within the `proxyd` component, specifically enhancing error categorization for Prometheus. Discussions continued on active issues, including flakiness in `op-acceptance-tests` and a token bridging query.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### RPC Metric Improvement\nA bug fix was implemented to refine RPC metrics, changing \"unknown\" error states to \"method_not_allowed\" for better Prometheus reporting. This enhancement improves the observability and debugging capabilities of the `proxyd` service. ([#465](https://github.com/ethereum-optimism/infra/pull/465))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Addressing `op-acceptance-tests` Flakiness\nDiscussions continued regarding the flakiness of `TestPreNoInbox` in `op-acceptance-tests` ([#17298](https://github.com/ethereum-optimism/infra/issues/17298)). A recent comment confirmed that a proposed fix in `optimism/pull/17495` did not resolve the issue, indicating further investigation is needed. Another flake was observed and linked.\n\n### Token Bridging Clarification\nAn active discussion is ongoing regarding a token bridging issue related to PR #1184 ([#1203](https://github.com/ethereum-optimism/infra/issues/1203)). A maintainer clarified that the `superbridgeapp` is not responsible for this repository and suggested that the token in question might not be an `OptimismMintableERC20`, which could explain why a bridge address was not included. Verification of the token's implementation was recommended.\n\n### `protocol/system-config.md` Cleanup\nWork continues on cleaning up the `protocol/system-config.md` documentation ([#771](https://github.com/ethereum-optimism/infra/issues/771)). A suggestion was made to include both the numerical and canonical names for config update enums (e.g., `MIN_BASE_FEE` and `6`) and to link to fork-specific specs for hard fork-added config updates.", "2025-10-13T20:47:56.380Z"]
["ethereum-optimism/specs_day_2025-09-16", "ethereum-optimism/specs", "day", "2025-09-16", "# ethereum-optimism/specs Daily Update (Sep 16, 2025)\n## OVERVIEW \nToday's development focused on minor documentation corrections within the `specs/protocol` directory, specifically addressing typos and refining attribute descriptions. Discussions continued on existing issues, including flakiness in acceptance tests and clarifications regarding token bridging.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Refinements in Protocol Specifications\nMinor corrections were made to the protocol specifications. A typo was fixed in the Jovian system-config documentation ([#768](https://github.com/ethereum-optimism/specs/pull/768)), and the `operatorFee` attributes in the Isthmus l1-attributes documentation were revised for clarity ([#774](https://github.com/ethereum-optimism/specs/pull/774)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Addressing Flakiness in Acceptance Tests\nDiscussion continued on [#17298](https://github.com/ethereum-optimism/specs/issues/17298) regarding the flakiness of `TestPreNoInbox` in `op-acceptance-tests`. A recent comment from pcw109550 indicated that a previous attempt to fix the issue in `optimism/pull/17495` was unsuccessful, following an earlier report of another flake by scharissis.\n\n### Clarification on Token Bridging\nIssue [#1203](https://github.com/ethereum-optimism/specs/issues/1203) saw further discussion regarding a token bridging problem. AlexBHarley clarified that the token in question is likely not an `OptimismMintableERC20`, which would explain why the generated entry does not include a bridge address. The next step suggested is to verify the implementation.\n\n### Cleaning Up Protocol System Configuration\nDiscussion on [#771](https://github.com/ethereum-optimism/specs/issues/771) focused on improving the `protocol/system-config.md` document. joshklop referenced a suggestion from @sebastianst to specify both the number and canonical name for config update enums (e.g., `MIN_BASE_FEE` and `6`), and to consider linking to fork-specific specs for updates added by hard forks.", "2025-10-13T20:47:58.125Z"]
["ethereum-optimism/op-geth_day_2025-09-16", "ethereum-optimism/op-geth", "day", "2025-09-16", "# ethereum-optimism/op-geth Daily Update (Sep 16, 2025)\n## OVERVIEW \nToday, a critical bug fix was implemented for deposit receipt correction in the `eth/downloader` component, resolving an issue introduced by a previous upstream merge. Additionally, the `superchain-registry` was updated to a newer version.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Critical Bug Fix for Deposit Receipt Correction\nA significant bug in the `eth/downloader` component related to deposit receipt correction was fixed. This issue, which caused problems during snap sync due to changes in how receipts are transferred upstream, was resolved by adjusting the handling of storage RLP. This fix is crucial for maintaining the stability and reliability of the syncing process. ([#680](https://github.com/ethereum-optimism/op-geth/pull/680))\n\n### Superchain Registry Update\nThe `superchain-registry` was updated to a newer version, specifically by bumping the commit reference in `superchain-registry-commit.txt`. This update likely includes an addresses cleanup and ensures the project is aligned with the latest Superchain configurations. ([#672](https://github.com/ethereum-optimism/op-geth/pull/672))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#681](https://github.com/ethereum-optimism/op-geth/pull/681) titled \"[Do Not Merge] bypass static interop filters,\" was opened. Its status indicates it is not yet ready for merging.\n\n## CLOSED ISSUES\n\n### Resolution of Receipt Correction Failure\nThe issue [#679](https://github.com/ethereum-optimism/op-geth/issues/679), concerning \"Receipt Correction: Failed to decode RLP receipts,\" was closed today. This bug, which caused Geth to crash during full sync on op-mainnet, was confirmed to be fixed with the latest version patch, likely referring to the fix implemented in [#680](https://github.com/ethereum-optimism/op-geth/pull/680).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Addressing Flakiness in `TestPreNoInbox`\nThe issue [#17298](https://github.com/ethereum-optimism/op-geth/issues/17298), \"op-acceptance-tests: Tame `TestPreNoInbox` flakiness,\" continues to be active. The latest comment indicates that a previous attempt to fix the issue in `optimism/optimism` pull request [#17495](https://github.com/ethereum-optimism/optimism/pull/17495) did not resolve the flakiness, as another flake was observed.\n\n### Clarification on Token Bridging Issue\nIssue [#1203](https://github.com/ethereum-optimism/op-geth/issues/1203), \"Clarification on PR #1184 and Token Bridging Issue,\" is active with recent discussion. The main point of discussion revolves around why a specific token is not bridging to another on Base, despite a related PR being merged. A maintainer clarified that the `superbridgeapp` is not a maintainer for this repository and suggested that the issue might stem from the target token not being an `OptimismMintableERC20`, which would explain why the generated entry lacks a bridge address. Further verification of the implementation is needed.\n\n### Cleaning Up `protocol/system-config.md`\nThe issue [#771](https://github.com/ethereum-optimism/op-geth/issues/771), \"Clean up `protocol/system-config.md`,\" is active with a recent suggestion. The discussion focuses on improving the documentation for config updates, specifically by including both the numerical value and canonical name for update enums (e.g., `MIN_BASE_FEE` and `6`). It also suggests linking to fork-specific specifications for config updates introduced by hard forks.", "2025-10-13T20:47:58.291Z"]
["ethereum-optimism/superchain-ops_day_2025-09-16", "ethereum-optimism/superchain-ops", "day", "2025-09-16", "# ethereum-optimism/superchain-ops Daily Update (Sep 16, 2025)\n## OVERVIEW \nToday's development focused on preparing for the U16a upgrade, specifically for Optimism, Soneium, Ink, and Unichain. This included adding new tasks, updating their statuses, and refining templates for the OPCM v410 upgrade.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### U16a Upgrade Task Management\nNew tasks were added for the Sepolia U16a upgrade, specifically for Optimism, Soneium, Ink, and Unichain. These tasks involve the OPCM upgrade to v410, with Optimism, Soneium, and Ink sharing a common PAO, while Unichain has a separate one. The statuses of these tasks were subsequently updated to \"ready to sign.\" ([#1198](https://github.com/ethereum-optimism/superchain-ops/pull/1198), [#1202](https://github.com/ethereum-optimism/superchain-ops/pull/1202))\n\n### Template and Version Updates\nThe U13 to U16 template and example tasks were updated to reflect U16a OPCM/Validator addresses. This also included updating all mentions of U16 to U16a and OPCM v400 to v410. ([#1203](https://github.com/ethereum-optimism/superchain-ops/pull/1203))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Flakiness in `TestPreNoInbox`\nThe issue [#17298](https://github.com/ethereum-optimism/superchain-ops/issues/17298) regarding the flakiness of `TestPreNoInbox` in `op-acceptance-tests` continues to be active. A recent comment on September 17th indicates that a previous attempt to fix the issue ([https://github.com/ethereum-optimism/optimism/pull/17495](https://github.com/ethereum-optimism/optimism/pull/17495)) was unsuccessful, following another reported flake on September 16th.\n\n### Token Bridging Clarification\nIssue [#1203](https://github.com/ethereum-optimism/superchain-ops/issues/1203) seeks clarification on a token bridging problem related to PR #1184. A comment from September 16th suggests that the token in question on Base might not be an `OptimismMintableERC20`, which could explain why the generated entry lacks a bridge address. Verification of the implementation is recommended.\n\n### `protocol/system-config.md` Cleanup\nDiscussion on issue [#771](https://github.com/ethereum-optimism/superchain-ops/issues/771) for cleaning up `protocol/system-config.md` continued with a suggestion on September 16th to specify both the number and canonical name for config update enums (e.g., `MIN_BASE_FEE` and `6`).", "2025-10-13T20:47:58.438Z"]
["ethereum-optimism/community-hub_day_2025-09-16", "ethereum-optimism/community-hub", "day", "2025-09-16", "# ethereum-optimism/community-hub Daily Update (Sep 16, 2025)\n## OVERVIEW \nThe day saw the creation of a new issue regarding a broken link for CEX listing requests documentation. Discussions continued on existing issues concerning test flakiness, token bridging, and documentation cleanup.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\n- **Documentation Link Issues**\n    - A broken link for CEX listing requests documentation was reported, hindering community members from accessing information on how to request a CEX listing for OP [#1185](https://github.com/ethereum-optimism/community-hub/issues/1185).\n\n## ACTIVE ISSUES\n\n- **Addressing Test Flakiness**\n    - Discussion continued on taming `TestPreNoInbox` flakiness in `op-acceptance-tests` [#17298](https://github.com/ethereum-optimism/community-hub/issues/17298). A recent comment indicated that a previous pull request (`ethereum-optimism/optimism/pull/17495`) did not resolve the issue, and another flake was observed.\n\n- **Clarifying Token Bridging Behavior**\n    - An ongoing discussion seeks clarification on why a specific token is not bridging to another token on Base, despite a related pull request being merged [#1203](https://github.com/ethereum-optimism/community-hub/issues/1203). A maintainer suggested that the destination token might not be an OptimismMintableERC20, which would explain why the generated entry lacks a bridge address. Verification of the implementation was suggested to confirm this.\n\n- **Improving Protocol System Configuration Documentation**\n    - Work continues on cleaning up `protocol/system-config.md` [#771](https://github.com/ethereum-optimism/community-hub/issues/771). A recent suggestion was made to format the report by including both the numerical value and the canonical name for config update enums (e.g., `MIN_BASE_FEE` and `6`).", "2025-10-13T20:47:59.487Z"]
["ethereum-optimism/docs_day_2025-09-17", "ethereum-optimism/docs", "day", "2025-09-17", "# ethereum-optimism/docs Daily Update (Sep 17, 2025)\n## OVERVIEW \nThe day saw a bug fix related to contract addresses and the closure of several issues, including one concerning the Forge Deployer CLI wrapper and another about dispute game creator pattern refactor.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Contract Address Correction\n* A bug fix was implemented to correct a contract address, improving the accuracy of the documentation. ([#1745](https://github.com/ethereum-optimism/docs/pull/1745))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Forge Deployer CLI Wrapper\n* The issue regarding the creation of a CLI wrapper around the Forge binary for the OP Deployer was closed. ([#17214](https://github.com/ethereum-optimism/docs/issues/17214))\n\n### Dispute Game Creator Pattern Refactor\n* The task to update specifications for changes to the dispute game contract parameters was closed. ([#17436](https://github.com/ethereum-optimism/docs/issues/17436))\n\n### `proxyd` Preparation for Fusaka Activation\n* An issue related to preparing `proxyd` for Fusaka activation on L1, including updating to the latest `geth` blob transaction handling, was closed. ([#467](https://github.com/ethereum-optimism/docs/issues/467))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### `op-acceptance-tests`: Tame `TestPreNoInbox` Flakiness\n* The `TestPreNoInbox` test continues to exhibit flakiness, with a recent pull request ([#17495](https://github.com/ethereum-optimism/optimism/pull/17495)) failing to resolve the issue. Further investigation is needed to address the intermittent failures. ([#17298](https://github.com/ethereum-optimism/docs/issues/17298))", "2025-10-13T20:48:00.663Z"]
["ethereum-optimism/community-hub_day_2025-09-17", "ethereum-optimism/community-hub", "day", "2025-09-17", "# ethereum-optimism/community-hub Daily Update (Sep 17, 2025)\n## OVERVIEW \nThe day saw a documentation update to the `get-support.mdx` file. Additionally, several issues were closed, including one related to a Forge Deployer CLI wrapper and another concerning `proxyd` preparation for Fusaka activation on L1. An issue regarding dispute game creator pattern refactor was also closed as a duplicate.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Updates\n*   An update was made to the `get-support.mdx` file, providing updated information within the grant section ([#1186](https://github.com/ethereum-optimism/community-hub/pull/1186)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Forge Deployer CLI Wrapper\nThe issue concerning the creation of a CLI wrapper around the Forge binary for OP Deployer was closed, with a reference to the pull request that addressed it ([#17214](https://github.com/ethereum-optimism/community-hub/issues/17214)).\n\n### Dispute Game Creator Pattern Refactor\nAn issue related to updating specifications for the dispute game creator pattern refactor was closed as a duplicate ([#17436](https://github.com/ethereum-optimism/community-hub/issues/17436)).\n\n### `proxyd` Preparation for Fusaka Activation\nThe issue regarding `proxyd` preparation for Fusaka activation on L1, which included updating to the latest geth blob tx handling and checking for transaction filtering, was closed ([#467](https://github.com/ethereum-optimism/community-hub/issues/467)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Addressing `TestPreNoInbox` Flakiness\nDiscussion continues on taming the flakiness of `TestPreNoInbox` in `op-acceptance-tests` ([#17298](https://github.com/ethereum-optimism/community-hub/issues/17298)). The latest comment indicates that a recent pull request ([#17495](https://github.com/ethereum-optimism/optimism/pull/17495)) did not resolve the issue, suggesting further investigation is needed. Previously, another flake was reported, highlighting the ongoing nature of this problem.", "2025-10-13T20:48:00.887Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-17", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-17", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 17, 2025)\n## OVERVIEW \nThe day saw the closure of several issues, including a CLI wrapper for Forge and a dispute game creator pattern refactor. A new pull request was opened.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1206](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1206), titled \"DOGE\" was opened.\n\n## CLOSED ISSUES\n\n### CLI Wrapper for Forge Deployer\nThe issue to create a CLI wrapper around the Forge binary for use within OP Deployer, [#17214](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17214), was closed today.\n\n### Dispute Game Creator Pattern Refactor\nThe issue concerning updating specs for changes to the dispute game contract parameters, [#17436](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17436), was closed as a duplicate.\n\n### Proxyd Preparation for Fusaka Activation\nThe issue to prepare proxyd for Fusaka activation on L1, [#467](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/467), was closed.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Addressing `TestPreNoInbox` Flakiness\nDiscussion continues on [#17298](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17298) regarding the flakiness of `TestPreNoInbox` in `op-acceptance-tests`. The latest comment from pcw109550 indicates that a recent pull request, https://github.com/ethereum-optimism/optimism/pull/17495, did not resolve the issue. Previously, scharissis reported another instance of the test flaking.", "2025-10-13T20:48:00.963Z"]
["ethereum-optimism/optimism_day_2025-09-16", "ethereum-optimism/optimism", "day", "2025-09-16", "# ethereum-optimism/optimism Daily Update (Sep 16, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure for the `min-base-fee` feature, improving CI efficiency, and fixing bugs in the `op-deployer`. Significant progress was made in preparing for the Jovian activation and Fusaka.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing for Min-Base-Fee Feature\nExtensive tests were added for the `min-base-fee` functionality, ensuring its correct behavior across various scenarios, including e2e and acceptance tests. This work involved updates to `kurtosis-devnet`, `op-acceptance-tests`, `op-devstack`, `op-e2e`, `op-node`, and `op-service` components. ([#17441](https://github.com/ethereum-optimism/optimism/pull/17441))\n\n### CI/CD and Developer Tooling Improvements\nThe CI pipeline saw an upgrade with the parallelization of `go-test` jobs, aiming for faster and more reliable test execution. Additionally, the `op-acceptor` tool was updated to v3.3.0, streamlining acceptance testing processes. ([#17467](https://github.com/ethereum-optimism/optimism/pull/17467), [#17468](https://github.com/ethereum-optimism/optimism/pull/17468))\n\n### Bug Fixes in Deployment and Contract Verification\nSeveral bugs in the `op-deployer`'s verification command were addressed, alongside fixes in `contracts-bedrock` that previously hindered proper contract verification. This improves the reliability of deployment processes. ([#17478](https://github.com/ethereum-optimism/optimism/pull/17478))\n\n## NEWLY OPENED PULL REQUESTS\n- [#17469](https://github.com/ethereum-optimism/optimism/pull/17469) fix(justfile): latest-versions\n- [#17473](https://github.com/ethereum-optimism/optimism/pull/17473) [Do not merge] Inteorp PoC\n- [#17474](https://github.com/ethereum-optimism/optimism/pull/17474) Add length check for comments in the contracts\n- [#17477](https://github.com/ethereum-optimism/optimism/pull/17477) dependabot(gomod): bump github.com/lmittmann/w3 from 0.19.5 to 0.20.3\n\n## CLOSED ISSUES\n\n### Min-Base-Fee Feature Completion\nSeveral issues related to the `min-base-fee` feature were closed, including the addition of acceptance tests ([#16841](https://github.com/ethereum-optimism/optimism/issues/16841)), loading the minimum base fee value from `SystemConfig` contract events ([#17340](https://github.com/ethereum-optimism/optimism/issues/17340)), and adding `actions/proof` tests ([#17479](https://github.com/ethereum-optimism/optimism/issues/17479)).\n\n### Documentation and Deployment Fixes\nA godoc fix for `MinBaseFee` in the `op-service SystemConfig` struct was completed ([#17480](https://github.com/ethereum-optimism/optimism/issues/17480)). An issue regarding the installation of the forge binary in docker builds for the Forge Deployer was also resolved ([#17485](https://github.com/ethereum-optimism/optimism/issues/17485)).\n\n## NEW ISSUES\n\n### Preparations for Fusaka and Jovian Activations\nNew issues were opened to prepare for upcoming network upgrades. This includes updating the `withdrawal op-chain-ops` command for U16a ([#17470](https://github.com/ethereum-optimism/optimism/issues/17470)) and preparing the `op-batcher` for Fusaka, which will require sending blob transactions with cell proofs instead of blob proofs ([#17472](https://github.com/ethereum-optimism/optimism/issues/17472)).\n\n### Testing and Documentation Enhancements\nAn issue was created to re-add `op-reth` to the Jovian Kurtosis devnet once it supports the `min-base-fee` ([#17475](https://github.com/ethereum-optimism/optimism/issues/17475)). Further testing for `min-base-fee` was proposed by running `actions/proof` tests against Kona ([#17483](https://github.com/ethereum-optimism/optimism/issues/17483)).\n\n## ACTIVE ISSUES\n\n### `TestPreNoInbox` Flakiness\nThe issue [#17298](https://github.com/ethereum-optimism/optimism/issues/17298) concerning the flakiness of `TestPreNoInbox` in `op-acceptance-tests` remains active. A recent comment from `scharissis` on Sep 16, 2025, reported another flake, indicating the problem persists despite attempts to fix it. `pcw109550` later confirmed on Sep 17, 2025, that a recent PR did not resolve the issue.\n\n### Token Bridging Clarification\nIssue [#1203](https://github.com/ethereum-optimism/optimism/issues/1203) discusses a token bridging problem. `AlexBHarley` commented on Sep 16, 2025, suggesting that the token at `0x431151F26c48B4D4BEFc34048a0966Bf960A0c50` might not be an `OptimismMintableERC20`, which would explain why the generated entry lacks a bridge address. Verification of the implementation was suggested to confirm this.\n\n### `protocol/system-config.md` Cleanup\nIssue [#771](https://github.com/ethereum-optimism/optimism/issues/771) focuses on cleaning up the `protocol/system-config.md` documentation. `joshklop` on Sep 16, 2025, relayed a suggestion from `sebastianst` to include both the numerical value and the canonical name (e.g., `MIN_BASE_FEE` and `6`) for config update enums, and to link to fork-specific specs for hard fork-added config updates.", "2025-10-13T20:48:01.734Z"]
["ethereum-optimism/infra_day_2025-09-17", "ethereum-optimism/infra", "day", "2025-09-17", "# ethereum-optimism/infra Daily Update (Sep 17, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to route WebSocket requests from Kubernetes ingress with a custom suffix. A critical issue regarding `proxyd` preparation for Fusaka activation on L1 was opened and swiftly closed, indicating a quick resolution.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, tests, or other work were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#466](https://github.com/ethereum-optimism/infra/pull/466), was opened to route WebSocket requests originating from Kubernetes ingress with a custom suffix.\n\n## CLOSED ISSUES\n\n### `proxyd` Preparation for Fusaka Activation\nIssue [#467](https://github.com/ethereum-optimism/infra/issues/467), concerning the preparation of `proxyd` for Fusaka activation on L1, was opened and closed on the same day. The issue aimed to update `proxyd` to include the latest geth blob transaction handling and ensure new transactions are not filtered out. It was closed by [#464](https://github.com/ethereum-optimism/infra/pull/464).\n\n## NEW ISSUES\n\n### `proxyd` Preparation for Fusaka Activation\nA new issue, [#467](https://github.com/ethereum-optimism/infra/issues/467), was opened to address the preparation of `proxyd` for Fusaka activation on L1. This involved updating to the latest `op-geth` for blob transaction handling and verifying that new transactions would not be filtered. This issue was closed shortly after being opened.\n\n## ACTIVE ISSUES\n\n### `op-acceptance-tests`: Taming `TestPreNoInbox` Flakiness\nDiscussion on [#17298](https://github.com/ethereum-optimism/infra/issues/17298) continues regarding the flakiness of `TestPreNoInbox` in `op-acceptance-tests`. The latest comment indicates that a previous attempt to fix the issue via [#17495](https://github.com/ethereum-optimism/optimism/pull/17495) was unsuccessful. Another flake was reported on September 16th.", "2025-10-13T20:48:02.307Z"]
["ethereum-optimism/op-geth_day_2025-09-17", "ethereum-optimism/op-geth", "day", "2025-09-17", "# ethereum-optimism/op-geth Daily Update (Sep 17, 2025)\n\n## OVERVIEW \nToday, development focused on preparing for the Jovian hardfork with the introduction of feature toggles and streamlining the release workflow. Several issues were closed, including a Forge Deployer CLI wrapper and a dispute game spec update, while new issues were opened to prepare for the Fusaka release.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Jovian Hardfork Preparation\n- Introduced feature toggles for the Jovian hardfork to allow for easy removal of features if needed, pairing with a related Optimism pull request ([#677](https://github.com/ethereum-optimism/op-geth/pull/677)).\n\n### Release Workflow Optimization\n- Removed the approval hold job from the release workflow in the CircleCI configuration, streamlining the release process ([#683](https://github.com/ethereum-optimism/op-geth/pull/683)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Developer Tooling Enhancements\n- The issue regarding the creation of a CLI wrapper around the Forge binary for OP Deployer was closed, with the solution implemented via a pull request in the Optimism repository ([#17214](https://github.com/ethereum-optimism/op-geth/issues/17214)).\n\n### Dispute Game Updates\n- An issue concerning the update of dispute game creator pattern specs was closed as a duplicate ([#17436](https://github.com/ethereum-optimism/op-geth/issues/17436)).\n\n### Fusaka Activation Preparation\n- The issue for preparing proxyd for Fusaka activation on L1 was closed, referencing a previous pull request as the solution ([#467](https://github.com/ethereum-optimism/op-geth/issues/467)).\n\n## NEW ISSUES\n\n### Fusaka Release Preparation\n- A new issue was opened to prepare op-geth for the Fusaka release, including upstream merges to Geth 1.16.3 and the Fusaka release for Sepolia via cherry-pick ([#682](https://github.com/ethereum-optimism/op-geth/issues/682)).\n\n## ACTIVE ISSUES\n\n### Test Flakiness Investigation\n- **op-acceptance-tests: Tame `TestPreNoInbox` flakiness** ([#17298](https://github.com/ethereum-optimism/op-geth/issues/17298)): Discussions continue regarding the flakiness of `TestPreNoInbox`. A recent pull request (optimism/optimism#17495) did not resolve the issue, indicating further investigation is needed. The test has flaked multiple times, as evidenced by CircleCI reports.", "2025-10-13T20:48:04.010Z"]
["ethereum-optimism/specs_day_2025-09-17", "ethereum-optimism/specs", "day", "2025-09-17", "# ethereum-optimism/specs Daily Update (Sep 17, 2025)\n## OVERVIEW \nToday's development focused on expanding the Jovian protocol specifications, particularly around data availability footprint limits. Several issues were closed, including those related to Forge Deployer CLI and dispute game creator pattern refactoring. A new issue was opened concerning future SystemConfig.ConfigUpdate event parsing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Jovian Protocol Specification Expansion\nSignificant progress was made in detailing the Jovian protocol, specifically by adding specifications for data availability footprint limits. This involved updates across various Jovian-related documentation files.\n- Added DA footprint limit specifications for Jovian ([#767](https://github.com/ethereum-optimism/specs/pull/767)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Forge Deployer CLI Wrapper\nThe issue concerning the creation of a CLI wrapper around the Forge binary for the OP Deployer was closed, indicating its resolution.\n- Forge Deployer CLI wrapper implemented ([#17214](https://github.com/ethereum-optimism/specs/issues/17214)).\n\n### Dispute Game Creator Pattern Refactor\nAn issue related to updating specifications for changes in dispute game contract parameters was closed, identified as a duplicate.\n- Dispute game creator pattern refactor specifications updated ([#17436](https://github.com/ethereum-optimism/specs/issues/17436)).\n\n### Proxyd Preparation for Fusaka Activation\nAn issue regarding the preparation of proxyd for Fusaka activation on L1, including updating to the latest geth blob tx handling, was closed.\n- Proxyd updated for Fusaka activation on L1 ([#467](https://github.com/ethereum-optimism/specs/issues/467)).\n\n## NEW ISSUES\n\n### Future SystemConfig Event Parsing\nA new issue was opened to address the need for CL clients to parse future `SystemConfig.ConfigUpdate` events without critical errors, suggesting a need for forward compatibility in event handling.\n- Allow CL clients to parse future `SystemConfig.ConfigUpdate` events without critical error ([#777](https://github.com/ethereum-optimism/specs/issues/777)).\n\n## ACTIVE ISSUES\n\n### op-acceptance-tests: Tame `TestPreNoInbox` flakiness ([#17298](https://github.com/ethereum-optimism/specs/issues/17298))\nDiscussion continues regarding the flakiness of `TestPreNoInbox`. A recent attempt to fix the issue via a pull request ([https://github.com/ethereum-optimism/optimism/pull/17495](https://github.com/ethereum-optimism/optimism/pull/17495)) was reported to be unsuccessful, indicating the problem persists. The test has flaked multiple times, highlighting an ongoing stability concern.", "2025-10-13T20:48:04.748Z"]
["ethereum-optimism/superchain-ops_day_2025-09-17", "ethereum-optimism/superchain-ops", "day", "2025-09-17", "# ethereum-optimism/superchain-ops Daily Update (Sep 17, 2025)\n## OVERVIEW \nToday's development focused on bug fixes related to Base U16a Sepolia state diffs and preparing for its readiness to sign. Several issues were closed, including a Forge Deployer CLI wrapper and a dispute game creator pattern refactor.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Base U16a Sepolia State Diff Fixes\nBug fixes were implemented to provide necessary state diffs for the Base U16a Sepolia upgrade, specifically for different safes. This involved adding markdown files detailing validation transactions and a Superchain validation. The status of the Base Sepolia U16a was also updated to \"READY TO SIGN\" after these fixes.\n- [#1204](https://github.com/ethereum-optimism/superchain-ops/pull/1204)\n- [#1207](https://github.com/ethereum-optimism/superchain-ops/pull/1207)\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1205](https://github.com/ethereum-optimism/superchain-ops/pull/1205), was opened to add a Worldchain key handback over template.\n\n## CLOSED ISSUES\n\n### Forge Deployer CLI Wrapper\nThe issue [#17214](https://github.com/ethereum-optimism/superchain-ops/issues/17214), concerning the creation of a CLI wrapper around the Forge binary for OP Deployer, was closed. This was resolved via a pull request in the main Optimism repository.\n\n### Dispute Game Creator Pattern Refactor\nThe issue [#17436](https://github.com/ethereum-optimism/superchain-ops/issues/17436), which aimed to update specifications for changes to dispute game contract parameters, was closed as a duplicate.\n\n### Proxyd Preparation for Fusaka Activation\nThe issue [#467](https://github.com/ethereum-optimism/superchain-ops/issues/467), related to preparing proxyd for Fusaka activation on L1 by updating to the latest geth blob transaction handling, was closed.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### op-acceptance-tests: Tame `TestPreNoInbox` flakiness\nThe issue [#17298](https://github.com/ethereum-optimism/superchain-ops/issues/17298) continues to track flakiness in the `TestPreNoInbox` test. The latest comment indicates that a recent pull request ([#17495](https://github.com/ethereum-optimism/optimism/pull/17495)) did not resolve the issue, suggesting further investigation is needed. Previously, another flake was reported on September 16th.", "2025-10-13T20:48:05.115Z"]
["ethereum-optimism/superchain-registry_day_2025-09-17", "ethereum-optimism/superchain-registry", "day", "2025-09-17", "# ethereum-optimism/superchain-registry Daily Update (Sep 17, 2025)\n## OVERVIEW \nThe day's activity focused on adding new addresses for u16a on mainnet and sepolia, alongside the closure of several issues related to CLI wrappers, dispute game specs, and proxyd preparation for Fusaka activation.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Registry Updates\n*   Added addresses for u16a on mainnet and sepolia, impacting `validation/standard/standard-versions-mainnet.toml` and `validation/standard/standard-versions-sepolia.toml`. ([#1106](https://github.com/ethereum-optimism/superchain-registry/pull/1106))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Developer Tooling Enhancements\n*   The issue concerning the creation of a CLI wrapper around the Forge binary for OP Deployer was closed, indicating its completion. ([#17214](https://github.com/ethereum-optimism/superchain-registry/issues/17214))\n\n### Dispute Game Specification Updates\n*   An issue related to updating dispute game creator pattern specifications was closed, marked as a duplicate. ([#17436](https://github.com/ethereum-optimism/superchain-registry/issues/17436))\n\n### Infrastructure Preparation\n*   The task to prepare proxyd for Fusaka activation on L1, including updating to the latest geth blob tx handling, was closed. ([#467](https://github.com/ethereum-optimism/superchain-registry/issues/467))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Test Flakiness Investigation\n*   Discussion continues on addressing the flakiness of `TestPreNoInbox` in `op-acceptance-tests` ([#17298](https://github.com/ethereum-optimism/superchain-registry/issues/17298)). The latest comment confirms that a recent pull request ([#17495](https://github.com/ethereum-optimism/optimism/pull/17495)) did not resolve the issue, indicating further investigation is needed.", "2025-10-13T20:48:05.138Z"]
["ethereum-optimism/community-hub_day_2025-09-18", "ethereum-optimism/community-hub", "day", "2025-09-18", "# ethereum-optimism/community-hub Daily Update (Sep 18, 2025)\n## OVERVIEW \nThe day's activity focused on addressing configuration logging and parallelism within `op-acceptor`, with one issue closed and another receiving an update regarding Fusaka compatibility.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\n\n**`op-acceptor` Configuration and Parallelism Improvements**\n*   The issue regarding logging all configuration at startup and in the HTML report for `op-acceptor` was closed, with the implementation noted as completed in an associated pull request [#461](https://github.com/ethereum-optimism/community-hub/issues/461).\n*   The issue addressing sub-optimal package parallelism in `op-acceptor` was also closed, with its resolution linked to the same pull request [#462](https://github.com/ethereum-optimism/community-hub/issues/462).\n\n## NEW ISSUES\n\nNo new issues were reported.\n\n## ACTIVE ISSUES\n\n**`op-node` Fusaka Compatibility**\n*   Discussion on [#17493](https://github.com/ethereum-optimism/community-hub/issues/17493) highlighted a concern regarding potential absolute prestate updates if `op-node` is tightly coupled to upstream Geth code, especially with every upstream merge and `op-geth` / `op-node` release. The issue aims to ensure compatibility with Fusaka, specifically concerning the derivation pipeline and converting excess blob gas into L1 cost, by hardcoding Fusaka and blob parameter-only hardfork [EIP 7892](https://eips.ethereum.org/EIPS/eip-789).", "2025-10-13T20:48:06.410Z"]
["ethereum-optimism/docs_day_2025-09-18", "ethereum-optimism/docs", "day", "2025-09-18", "# ethereum-optimism/docs Daily Update (Sep 18, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, or documentation enhancements. Discussions continued on preparing for the Fusaka hardfork and improving `op-acceptor` logging and parallelism.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new work was completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### op-node: Prepare for Fusaka Hardfork\nDiscussion on [#17493](https://github.com/ethereum-optimism/docs/issues/17493) continued with a comment from geoknee noting that tight coupling to upstream Geth code could necessitate absolute prestate updates with every upstream merge and `op-geth`/`op-node` release. The issue focuses on ensuring compatibility for the derivation pipeline, specifically converting excess blob gas into L1 cost and hardcoding Fusaka and blob parameters for EIP 7892.\n\n### op-acceptor Configuration and Parallelism Improvements\nDiscussions on `op-acceptor` issues concluded today. Issue [#461](https://github.com/ethereum-optimism/docs/issues/461), concerning logging all configuration at start-up and in the HTML report, was marked as done by scharissis, referencing a pull request in the `infra` repository. Similarly, issue [#462](https://github.com/ethereum-optimism/docs/issues/462), which aimed to improve package parallelism to correctly support `t.Parallel()` and `devtest.ParallelT()`, was also marked as done by scharissis, referencing the same `infra` pull request.", "2025-10-13T20:48:07.221Z"]
["ethereum-optimism/op-analytics_day_2025-09-18", "ethereum-optimism/op-analytics", "day", "2025-09-18", "# ethereum-optimism/op-analytics Daily Update (Sep 18, 2025)\n## OVERVIEW \nThe day's development focused on refining data analysis for Jovian, specifically updating DA size estimation by excluding deposit transactions. Additionally, progress was made on `op-acceptor` configuration logging and parallelism improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Jovian Analysis Refinements\n- Modified the data availability (DA) size estimate calculation within the Jovian analysis framework.\n- Excluded deposit transactions from the DA size estimation to improve accuracy. ([#1745](https://github.com/ethereum-optimism/op-analytics/pull/1745))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### op-acceptor Configuration and Parallelism Improvements\n- The issue regarding logging all `op-acceptor` configuration at startup and in HTML reports was closed, with the work completed in an associated infrastructure pull request. ([#461](https://github.com/ethereum-optimism/op-analytics/issues/461))\n- The issue addressing sub-optimal package parallelism in `op-acceptor` was closed, indicating that improvements were implemented as part of an infrastructure pull request. ([#462](https://github.com/ethereum-optimism/op-analytics/issues/462))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### op-node: prepare for Fusaka\nDiscussion on [#17493](https://github.com/ethereum-optimism/op-analytics/issues/17493) highlighted a concern regarding tight coupling to upstream Geth code. A comment from geoknee at 2025-09-18T14:37:04Z noted that such coupling could potentially necessitate an absolute prestate update with every upstream merge and subsequent `op-geth` or `op-node` release. This issue remains open, with its closure scheduled for October 2, 2025.", "2025-10-13T20:48:08.126Z"]
["ethereum-optimism/infra_day_2025-09-18", "ethereum-optimism/infra", "day", "2025-09-18", "# ethereum-optimism/infra Daily Update (Sep 18, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure with new acceptance tests and fixing issues in the `op-acceptor` package. A key dependency upgrade for `op-signer` was also completed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Acceptance Testing Framework\nNew basic acceptance tests were added to the `op-acceptor` package, enabling end-to-end integration testing with `op-devstack`. This includes new `Makefile` commands for execution and various test files for faucet, initialization, and RPC connectivity. ([#470](https://github.com/ethereum-optimism/infra/pull/470))\n\n### `op-acceptor` Package Improvements\nSeveral fixes were implemented for the `op-acceptor` package, including the addition of a default package timeout and improved logging to display package names during testing. ([#468](https://github.com/ethereum-optimism/infra/pull/468))\n\n### `op-signer` Dependency Upgrade\nThe `op-signer` component received an upgrade to its Geth dependency, moving to `v1.16.2`. This update is crucial for the \"fusaka defence\" initiative. ([#471](https://github.com/ethereum-optimism/infra/pull/471))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Improved Test Configuration Logging\nThe issue regarding logging all configuration at startup and in the HTML report for `op-acceptor` has been resolved. This enhancement provides better visibility into test configurations. ([#461](https://github.com/ethereum-optimism/infra/issues/461))\n\n### Optimized Test Parallelism\nThe problem with sub-optimal parallelism in `op-acceptor`'s test execution, which prevented `t.Parallel()` from working correctly, has been addressed. ([#462](https://github.com/ethereum-optimism/infra/issues/462))\n\n## NEW ISSUES\n\n### Streamlined Acceptance Test Execution\nA new issue has been opened to address the current dependency on the monorepo for running acceptance tests. The goal is to make it easier to run these tests from external repositories, specifically by tackling challenges related to contract artifact finding. ([#469](https://github.com/ethereum-optimism/infra/issues/469))\n\n## ACTIVE ISSUES\n\n### `op-node`: Preparing for Fusaka\nDiscussion on [#17493](https://github.com/ethereum-optimism/infra/issues/17493) highlights the need for `op-node` to ensure compatibility with Fusaka, particularly concerning the derivation pipeline and converting excess blob gas into L1 cost. A recent comment from geoknee emphasizes a potential challenge: tight coupling to upstream Geth code might necessitate absolute prestate updates with every upstream merge and `op-geth`/`op-node` release.", "2025-10-13T20:48:09.108Z"]
["ethereum-optimism/optimism_day_2025-09-17", "ethereum-optimism/optimism", "day", "2025-09-17", "# ethereum-optimism/optimism Daily Update (Sep 17, 2025)\n## OVERVIEW \nToday's development focused on introducing Jovian feature toggles, critical bug fixes for custom gas tokens and deployer verification, and significant refactoring of devnet configurations. Testing efforts included increasing timeouts and de-flaking interop message tests.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Protocol Enhancements & Feature Toggles\n- Introduced `IsFeature` toggles for Jovian, pairing with `op-geth` updates to enable new functionalities within the rollup attributes and program client. [#17424](https://github.com/ethereum-optimism/optimism/pull/17424)\n- Updated the `op-geth` dependency to incorporate a storage root update for address cleanup, ensuring compatibility and efficiency. [#17404](https://github.com/ethereum-optimism/optimism/pull/17404)\n\n### Deployer and Contract Stability Improvements\n- Fixed a critical bug related to custom gas token rebase, addressing CI check failures and updating various contract configurations. [#17484](https://github.com/ethereum-optimism/optimism/pull/17484)\n- Resolved issues blocking `op-deployer` verification, including bugs in the verify command and contract-related problems that hindered proper verification. [#17503](https://github.com/ethereum-optimism/optimism/pull/17503)\n- Ensured the latest contracts are built and embedded in the `op-deployer` binary by including contract builds in the `just build` recipe. [#17304](https://github.com/ethereum-optimism/optimism/pull/17304)\n\n### Testing Infrastructure and Reliability\n- Enhanced `op-devstack` with configurable presets for the `op-sync-tester`, allowing for more flexible test initialization. [#17491](https://github.com/ethereum-optimism/optimism/pull/17491)\n- Increased timeouts for interop message tests and de-flaked `TestPreNoInbox` to improve test suite stability and reliability. [#17492](https://github.com/ethereum-optimism/optimism/pull/17492), [#17495](https://github.com/ethereum-optimism/optimism/pull/17495)\n- Cleaned up Kurtosis devnets by activating Isthmus on the `simple` devnet and removing `pectra` and `isthmus` devnets, streamlining the testing environment. [#17455](https://github.com/ethereum-optimism/optimism/pull/17455)\n\n## NEWLY OPENED PULL REQUESTS\n- **Validator and Performance Updates:** New PRs include updating the validator for Cannon and Cannon-Kona games ([#17486](https://github.com/ethereum-optimism/optimism/pull/17486)), and refactoring to use `strings.Builder` for performance improvements ([#17487](https://github.com/ethereum-optimism/optimism/pull/17487)).\n- **Dependency and Configuration Management:** Updates to `github.com/docker/docker` dependency ([#17488](https://github.com/ethereum-optimism/optimism/pull/17488), [#17509](https://github.com/ethereum-optimism/optimism/pull/17509)), and extraction of Kona/Asterisc versions from `docker-bake.hcl` ([#17498](https://github.com/ethereum-optimism/optimism/pull/17498)).\n- **Bug Fixes and Test Enhancements:** Fixes include addressing a missing `KONA_LOG_LEVEL` in supervisor config ([#17496](https://github.com/ethereum-optimism/optimism/pull/17496)), de-flaking `op-acceptance-tests` ([#17497](https://github.com/ethereum-optimism/optimism/pull/17497)), and removing a duplicate `invalidBatchCount` increment in the batch decoder ([#17507](https://github.com/ethereum-optimism/optimism/pull/17507)).\n- **Node Behavior and Test Validation:** A PR to prevent setting an unsafe head while the payload is syncing in `op-node` ([#17494](https://github.com/ethereum-optimism/optimism/pull/17494)), and a refactor to extract test validation exclusions to a TOML config ([#17508](https://github.com/ethereum-optimism/optimism/pull/17508)).\n\n## CLOSED ISSUES\n\n### Forge Deployer Enhancements\n- The CLI wrapper around the Forge binary for `OP Deployer` has been completed and closed. [#17214](https://github.com/ethereum-optimism/optimism/issues/17214)\n- The issue regarding installing the Forge binary in Docker builds for the Forge Deployer has been resolved. [#17485](https://github.com/ethereum-optimism/optimism/issues/17485)\n\n### Protocol and Dispute Game Updates\n- Support for U16a changes has been implemented and the issue closed. [#17306](https://github.com/ethereum-optimism/optimism/issues/17306)\n- The task to update specifications for the dispute game creator pattern refactor has been closed, noted as a duplicate. [#17436](https://github.com/ethereum-optimism/optimism/issues/17436)\n\n## NEW ISSUES\n\n### Fusaka Hardfork Preparations\n- An issue was opened to prepare `op-node` for the Fusaka hardfork, focusing on derivation pipeline compatibility and converting excess blob gas into L1 cost. [#17493](https://github.com/ethereum-optimism/optimism/issues/17493)\n- A related issue was created to develop a Fusaka activation test within `op-e2e/actions/proofs`, specifically for L1 activation. [#17500](https://github.com/ethereum-optimism/optimism/issues/17500)\n\n### System Configuration and Metrics\n- A new issue addresses the need for `op-node` to parse future `SystemConfig.ConfigUpdate` events without critical errors. [#17490](https://github.com/ethereum-optimism/optimism/issues/17490)\n- Another issue proposes adding a DA footprint block metric, similar to the existing base fee block metric. [#17501](https://github.com/ethereum-optimism/optimism/issues/17501)\n\n### Deployer Configuration\n- An issue was opened to set the `FeesDepositor` address on the deployer upon deployment, requiring updates in `op-deployer` and `superchain-ops`. [#17505](https://github.com/ethereum-optimism/optimism/issues/17505)\n\n## ACTIVE ISSUES\n\n### `TestPreNoInbox` Flakiness\n- The issue [#17298](https://github.com/ethereum-optimism/optimism/issues/17298) concerning the flakiness of `TestPreNoInbox` in `op-acceptance-tests` remains active. A recent PR ([#17495](https://github.com/ethereum-optimism/optimism/pull/17495)) aimed to fix this by adjusting the interop hardfork time, but a comment from `pcw109550` on 2025-09-17 indicates that the fix was unsuccessful. The issue continues to be a focus for stability improvements.\n\n### `proxyd` and Fusaka Activation\n- Issue [#467](https://github.com/ethereum-optimism/optimism/issues/467) regarding `proxyd` preparation for Fusaka activation on L1 was opened and immediately closed on 2025-09-17, with a comment from `geoknee` stating it was resolved by #464. This indicates a swift resolution to the initial concerns about `proxyd`'s compatibility with the upcoming hardfork.", "2025-10-13T20:48:09.527Z"]
["ethereum-optimism/superchain-ops_day_2025-09-18", "ethereum-optimism/superchain-ops", "day", "2025-09-18", "# ethereum-optimism/superchain-ops Daily Update (Sep 18, 2025)\n## OVERVIEW \nThe day's development focused on enhancing AnchorStateRegistry (ASR) support for normalized hashes in V410, crucial for the speedrun template, and adding Mainnet U16a tasks for OP, Soneium, Ink, and Unichain.\n## KEY TECHNICAL DEVELOPMENTS\n\n### AnchorStateRegistry V410 Support\n- Added support for normalized hashes in AnchorStateRegistry V410, ensuring consistent hash behavior for the speedrun template. ([#1209](https://github.com/ethereum-optimism/superchain-ops/pull/1209))\n\n### Mainnet U16a Task Integration\n- Introduced Mainnet U16a tasks for OPCM upgrade to V410, specifically for OP, Soneium, and Ink (sharing PAO), and a separate task for Unichain (due to its distinct PAO). ([#1201](https://github.com/ethereum-optimism/superchain-ops/pull/1201))\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1208](https://github.com/ethereum-optimism/superchain-ops/pull/1208), was opened for \"Worldchain sepolia key handback over\".\n\n## CLOSED ISSUES\n\n### op-acceptor Configuration and Parallelism Improvements\n- The issue of logging all configuration at start-up and in the HTML report for `op-acceptor` was resolved. ([#461](https://github.com/ethereum-optimism/superchain-ops/issues/461))\n- Improvements to `op-acceptor` package parallelism were completed, addressing the sub-optimal implementation that prevented `t.Parallel()` and `devtest.ParallelT()` from working correctly. ([#462](https://github.com/ethereum-optimism/superchain-ops/issues/462))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### op-node: Prepare for Fusaka\n- Discussion continues on preparing `op-node` for Fusaka, specifically regarding derivation pipeline compatibility and converting excess blob gas into L1 cost. A key concern raised is the potential for frequent absolute prestate updates if tightly coupled to upstream Geth code. ([#17493](https://github.com/ethereum-optimism/superchain-ops/issues/17493))", "2025-10-13T20:48:10.261Z"]
["ethereum-optimism/specs_day_2025-09-18", "ethereum-optimism/specs", "day", "2025-09-18", "# ethereum-optimism/specs Daily Update (Sep 18, 2025)\n## OVERVIEW \nThe day saw the creation of a new issue to improve the specs upgrade transaction generator script. Discussions continued on preparing for the Fusaka hardfork and improvements to op-acceptor logging and parallelism.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Specs Upgrade Script Improvement\nA new issue was opened to improve the specs upgrade transaction generator script [#779](https://github.com/ethereum-optimism/specs/issues/779). The goal is to integrate helper functions from a previous pull request to simplify hardfork specifications by only requiring the recording of invocation environment variables.\n\n## ACTIVE ISSUES\n### Fusaka Hardfork Preparation\nDiscussion continued on preparing `op-node` for the Fusaka hardfork [#17493](https://github.com/ethereum-optimism/specs/issues/17493). A recent comment highlighted a potential concern: tightly coupling to upstream Geth code might necessitate an absolute prestate update with every upstream merge and subsequent `op-geth` / `op-node` release.\n\n### op-acceptor Configuration Logging and Parallelism\nDiscussions on `op-acceptor` issues concluded with updates on configuration logging [#461](https://github.com/ethereum-optimism/specs/issues/461) and package parallelism [#462](https://github.com/ethereum-optimism/specs/issues/462). Both issues were marked as done, with the changes implemented in a related pull request in the `infra` repository.", "2025-10-13T20:48:10.975Z"]
["ethereum-optimism/design-docs_day_2025-09-19", "ethereum-optimism/design-docs", "day", "2025-09-19", "# ethereum-optimism/design-docs Daily Update (Sep 19, 2025)\n## OVERVIEW \nThe day saw the closure of an issue concerning redundant address structs and the opening of a new issue to establish a convention for network upgrade transactions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n\n## CLOSED ISSUES\n### Address Struct Consolidation\nAn issue to create a single source of truth for address structs, aiming to eliminate duplication across various packages, has been closed. The intended scope of this work was completed. [#14977](https://github.com/ethereum-optimism/design-docs/issues/14977)\n\n## NEW ISSUES\n### Network Upgrade Transaction Convention\nA new issue has been opened to enshrine a new convention for Network Upgrade Transactions that deploy new contracts. The current practice of choosing a unique `from` address with `nonce=0` affects deployment addresses and needs a more robust convention. [#781](https://github.com/ethereum-optimism/design-docs/issues/781)\n\n## ACTIVE ISSUES\n### Enshrine new convention for Network Upgrade Transactions which deploy new contracts [#781](https://github.com/ethereum-optimism/design-docs/issues/781)\nDiscussion on this newly opened issue focuses on the address collision resistance of the proposed convention. A note highlights that `CREATE`, `CREATE2`, and upgrade source-hash computations use different keccak preimage starts, preventing collisions. A suggestion was made to use the `CREATE2` computation with a system address as the deployer and the source-hash as the salt for extra safety and to fit within existing address computation frameworks.", "2025-10-13T20:48:11.214Z"]
["ethereum-optimism/optimism_day_2025-09-18", "ethereum-optimism/optimism", "day", "2025-09-18", "# ethereum-optimism/optimism Daily Update (Sep 18, 2025)\n\n## OVERVIEW\nToday's development focused on enhancing the `op-sync-tester` with EL Sync support, refining contract parameters for dispute games, and streamlining the CI/CD pipeline. Several new pull requests were opened, addressing L1 chain configuration and e2e testing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Sync Tester Enhancements\nThe `op-sync-tester` now supports EL Sync, improving the testing capabilities for L2 client synchronization. This includes new test files and updates to `op-devstack` and `op-service` components to integrate EL Sync functionality. Additionally, an unused `elSyncEnabled` flag was removed from `op-node` to streamline the codebase.\n- [#17516](https://github.com/ethereum-optimism/optimism/pull/17516)\n- [#17425](https://github.com/ethereum-optimism/optimism/pull/17425)\n\n### Contract Parameter Refinements\nParameters for `proposer` and `challenger` in the `PermissionedDisputeGameV2` contract have been moved from the constructor to immutable storage. This change affects several contract files and their associated tests, enhancing contract immutability and security.\n- [#17463](https://github.com/ethereum-optimism/optimism/pull/17463)\n\n### CI/CD Pipeline Optimization\nA \"hold job phase\" was removed from the CircleCI configuration, indicating an effort to simplify and potentially speed up the continuous integration process.\n- [#17506](https://github.com/ethereum-optimism/optimism/pull/17506)\n\n## NEWLY OPENED PULL REQUESTS\n- [#17520](https://github.com/ethereum-optimism/optimism/pull/17520) WIP: pass L1 chain config to `CalcBlobFeeDefault`: This pull request is a work in progress aimed at passing L1 chain configuration to the `CalcBlobFeeDefault` function.\n- [#17522](https://github.com/ethereum-optimism/optimism/pull/17522) op-e2e/actions: add L1 Osaka activation test: This PR introduces a new end-to-end test to verify the activation of L1 Osaka.\n\n## CLOSED ISSUES\n- No issues were closed today.\n\n## NEW ISSUES\n\n### Fusaka Compatibility\nAn issue was opened to update `optimism-package` to support Fusaka on L1, which requires bumping the `ethereum-package` version in both `optimism-package` and `optimism`.\n- [#17521](https://github.com/ethereum-optimism/optimism/issues/17521)\n\n### Test Parallelization\nA new issue proposes parallelizing the \"memory-all\" job in `op-acceptance-tests` to prevent increased CI duration as this workflow becomes blocking.\n- [#17525](https://github.com/ethereum-optimism/optimism/issues/17525)\n\n## ACTIVE ISSUES\n\n### Fusaka Preparation\nThe issue [#17493](https://github.com/ethereum-optimism/optimism/issues/17493) discusses preparing `op-node` for Fusaka, focusing on derivation pipeline compatibility and converting excess blob gas into L1 cost. A recent comment from @geoknee highlights a concern that tight coupling to upstream Geth code might necessitate absolute prestate updates with every upstream merge and `op-geth`/`op-node` release.\n\n### Logging and Reporting\nIssue [#461](https://github.com/ethereum-optimism/optimism/issues/461) addresses logging all configuration at start-up and in the HTML report for `op-acceptor`. @scharissis confirmed this has been completed in a related pull request.\n\n### Test Parallelism Improvement\nThe issue [#462](https://github.com/ethereum-optimism/optimism/issues/462) focuses on improving parallelism in `op-acceptor` tests, specifically to allow `t.Parallel()` and `devtest.ParallelT()` to function correctly within packages. @scharissis noted that this has also been completed as part of a related pull request.", "2025-10-13T20:48:11.317Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-19", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-19", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 19, 2025)\n## OVERVIEW \nToday's development focused on addressing existing technical debt by closing an issue related to redundant address structs and initiating a discussion on standardizing network upgrade transactions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- No new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Addressing Redundant Address Structs\nThe issue [#14977](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/14977), which aimed to create a single source of truth for address structs across the codebase, was closed today. The scope of this issue was deemed complete.\n\n## NEW ISSUES\n\n### Standardizing Network Upgrade Transactions\nA new issue, [#781](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/781), was opened to enshrine a new convention for Network Upgrade Transactions that deploy new contracts. This issue highlights the current practice of using a unique account with `nonce=0` as the `from` address for such transactions and seeks to establish a more robust and collision-resistant method.\n\n## ACTIVE ISSUES\n\n### Enshrine new convention for Network Upgrade Transactions which deploy new contracts ([#781](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/781))\nDiscussion on this newly opened issue immediately delved into the technical specifics of address collision resistance. @protolambda provided a detailed note explaining how `CREATE`, `CREATE2`, and the proposed upgrade source-hash computations differ in their keccak preimage, thus preventing address collisions. They also suggested an extra-safe approach using `CREATE2` computation with a system address as the deployer and the source-hash as the salt, to fit within existing address computation frameworks and prevent future unexpected collisions.", "2025-10-13T20:48:12.695Z"]
["ethereum-optimism/docs_day_2025-09-19", "ethereum-optimism/docs", "day", "2025-09-19", "# ethereum-optimism/docs Daily Update (Sep 19, 2025)\n\n## OVERVIEW \nToday's development focused on a significant documentation enhancement, specifically updating the L2 rollup testnet tutorial to reflect the latest `op-d` tools. Additionally, two dependency updates were initiated, and an issue regarding redundant address structs was closed. A new issue was opened to establish a convention for network upgrade transactions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced L2 Rollup Testnet Tutorial\nA comprehensive and modernized tutorial for deploying an OP Stack testnet chain using the latest `op-d` tools was added. This update significantly improves the documentation for chain operators. ([#1705](https://github.com/ethereum-optimism/docs/pull/1705))\n\n### Dependency Updates\nTwo pull requests were opened to update project dependencies, specifically `brace-expansion` and `next`. ([#1747](https://github.com/ethereum-optimism/docs/pull/1747), [#1748](https://github.com/ethereum-optimism/docs/pull/1748))\n\n## NEWLY OPENED PULL REQUESTS\n- **Dependency Updates:** Two pull requests were opened to bump the versions of `brace-expansion` from 1.1.11 to 1.1.12 ([#1747](https://github.com/ethereum-optimism/docs/pull/1747)) and `next` from 14.2.21 to 14.2.32 ([#1748](https://github.com/ethereum-optimism/docs/pull/1748)).\n\n## CLOSED ISSUES\n\n### Address Struct Standardization\nThe issue concerning the duplication of address structs across various packages was closed, with the intended scope of work completed. ([#14977](https://github.com/ethereum-optimism/docs/issues/14977))\n\n## NEW ISSUES\n\n### Network Upgrade Transaction Convention\nA new issue was opened to establish a new convention for Network Upgrade Transactions, particularly for those that deploy new contracts. The current practice of choosing a `from` address with `nonce=0` is being re-evaluated due to its impact on deployed contract addresses. ([#781](https://github.com/ethereum-optimism/docs/issues/781))\n\n## ACTIVE ISSUES\n\n### Enshrine new convention for Network Upgrade Transactions which deploy new contracts ([#781](https://github.com/ethereum-optimism/docs/issues/781))\nThe discussion revolves around establishing a new convention for `from` addresses in network upgrade transactions that deploy new contracts. @protolambda provided a detailed note on address collision resistance for the suggested approach, comparing `CREATE`, `CREATE2`, and the proposed upgrade source-hash computation. They highlighted that the start of the keccak preimage always differs, preventing collisions. As an extra safety measure, @protolambda suggested using the `CREATE2` computation with a system address as the deployer and the source-hash as the salt, to fit within existing address computation frameworks and prevent future collisions.", "2025-10-13T20:48:12.880Z"]
["ethereum-optimism/op-geth_day_2025-09-19", "ethereum-optimism/op-geth", "day", "2025-09-19", "# ethereum-optimism/op-geth Daily Update (Sep 19, 2025)\n## OVERVIEW \nToday, development focused on integrating the latest Go-Ethereum updates and addressing a long-standing issue regarding redundant address structs. A new discussion also emerged concerning conventions for network upgrade transactions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#684](https://github.com/ethereum-optimism/op-geth/pull/684), was opened to merge `go-ethereum v1.16.3`, indicating an effort to keep `op-geth` up-to-date with the upstream Geth client.\n\n## CLOSED ISSUES\n\n- **Address Struct Consolidation**: The issue [#14977](https://github.com/ethereum-optimism/op-geth/issues/14977), which aimed to create a single source of truth for address structs and eliminate duplication across `op-deployer` and `op-chain-ops`, was closed. The maintainer, alfonso-op, confirmed that the intended scope was completed.\n\n## NEW ISSUES\n\n- **Network Upgrade Transaction Convention**: A new issue, [#781](https://github.com/ethereum-optimism/op-geth/issues/781), was opened to establish a new convention for network upgrade transactions that deploy new contracts. The issue highlights the current practice of using a unique `from` address with `nonce=0` and seeks to enshrine a more robust and collision-resistant method for determining deployer addresses.\n\n## ACTIVE ISSUES\n\n- **Enshrining New Convention for Network Upgrade Transactions** ([#781](https://github.com/ethereum-optimism/op-geth/issues/781)): The discussion revolves around establishing a new convention for network upgrade transactions that deploy new contracts. Protolambda provided a detailed note on address collision resistance for the suggested approach, comparing `CREATE`, `CREATE2`, and the proposed upgrade source-hash method. They also suggested using the `CREATE2` computation with a system address and the source-hash as salt for enhanced safety and to fit within existing address computation frameworks.", "2025-10-13T20:48:14.032Z"]
["ethereum-optimism/infra_day_2025-09-19", "ethereum-optimism/infra", "day", "2025-09-19", "# ethereum-optimism/infra Daily Update (Sep 19, 2025)\n## OVERVIEW \nToday's development focused on enhancing the stability of `proxyd` with a critical bug fix for a multicall test flake. Additionally, a long-standing issue regarding address struct duplication was closed, and a new issue was opened to standardize network upgrade transaction conventions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### `proxyd` Stability Improvements\nA bug fix was implemented to address a flaky multicall test in `proxyd`. This involved modifying the `nodeBackendRequestCount` function to utilize the thread-safe `Requests()` method, ensuring more reliable test execution and overall stability for the `proxyd` component. ([#472](https://github.com/ethereum-optimism/infra/pull/472))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Address Struct Standardization\nThe issue concerning the duplication of address structs across various packages, such as `op-deployer/op-chain-ops` and `interopgen`, has been closed. The intended scope of this work was completed, aiming to create a single source of truth for these critical structs. ([#14977](https://github.com/ethereum-optimism/infra/issues/14977))\n\n## NEW ISSUES\n\n### Network Upgrade Transaction Convention\nA new issue has been opened to establish a new convention for Network Upgrade Transactions that involve deploying new contracts. The current practice of choosing a unique `from` address with `nonce=0` affects deployment addresses, and the issue seeks to enshrine a more robust and standardized approach. ([#781](https://github.com/ethereum-optimism/infra/issues/781))\n\n## ACTIVE ISSUES\n\n### Enshrine new convention for Network Upgrade Transactions which deploy new contracts ([#781](https://github.com/ethereum-optimism/infra/issues/781))\nDiscussion on this newly opened issue primarily revolves around ensuring address collision resistance for the proposed new convention. @protolambda provided a detailed analysis comparing `CREATE`, `CREATE2`, and the suggested upgrade source-hash computations, concluding that the start of the keccak preimage always differs, preventing collisions. They also suggested an extra-safe approach using `CREATE2` computation with a system address as the deployer and the source-hash as a salt, integrating it into existing address computation frameworks and preventing user collisions.", "2025-10-13T20:48:14.159Z"]
["ethereum-optimism/optimism_day_2025-09-20", "ethereum-optimism/optimism", "day", "2025-09-20", "# ethereum-optimism/optimism Daily Update (Sep 20, 2025)\n## OVERVIEW \nThere were no new features, bug fixes, code refactoring, documentation enhancements, tests added, or other work completed today.\n## KEY TECHNICAL DEVELOPMENTS\nNo key technical developments were reported for this date.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were reported today.", "2025-10-13T20:48:15.114Z"]
["ethereum-optimism/superchain-ops_day_2025-09-19", "ethereum-optimism/superchain-ops", "day", "2025-09-19", "# ethereum-optimism/superchain-ops Daily Update (Sep 19, 2025)\n## OVERVIEW \nToday's development focused on significant upgrades for several Sepolia chains, advancing them from U13 to U16 and U15 to U16a. A bug fix for Worldchain's nonce update and hash was also implemented, alongside a documentation update for `mise` activation instructions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Sepolia Chain Upgrades\nMultiple Sepolia-based chains, including Zora, Metal, Mode, and Arena-Z, received significant upgrades. These tasks involved sequentially executing upgrades from U13 to U16, and U15 to U16a, enhancing their functionality and bringing them to newer versions.\n- Zora Sepolia U13 to U16 ([#1180](https://github.com/ethereum-optimism/superchain-ops/pull/1180))\n- Metal Sepolia U13 to U16 ([#1181](https://github.com/ethereum-optimism/superchain-ops/pull/1181))\n- Mode Sepolia U13 to U16 ([#1182](https://github.com/ethereum-optimism/superchain-ops/pull/1182))\n- Arena-Z Sepolia U15 to U16a ([#1194](https://github.com/ethereum-optimism/superchain-ops/pull/1194))\n\n### Worldchain Bug Fix and Documentation\nA bug related to Worldchain's nonce update and hash was addressed, ensuring correct transaction processing. Additionally, documentation for `mise` activation instructions was updated for improved clarity.\n- Worldchain Nonce Update and Hash Fix ([#1210](https://github.com/ethereum-optimism/superchain-ops/pull/1210))\n- Mise Activate Instruction Documentation Update ([#1211](https://github.com/ethereum-optimism/superchain-ops/pull/1211))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Redundant Address Structs Consolidation\nThe issue concerning duplicated address structs across `op-deployer/op-chain-ops` and other packages was closed. The intended scope of consolidating these structs was completed.\n- Create a single source of truth for addresses structs ([#14977](https://github.com/ethereum-optimism/superchain-ops/issues/14977))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Enshrine New Convention for Network Upgrade Transactions ([#781](https://github.com/ethereum-optimism/superchain-ops/issues/781))\nDiscussion on this issue, opened today, focuses on establishing a new convention for Network Upgrade Transactions that deploy new contracts. Specifically, the conversation revolves around the `from` address choice and its impact on deployment. @protolambda provided a detailed note on address collision resistance for the proposed convention, comparing `CREATE`, `CREATE2`, and upgrade source-hash computations. They highlighted that the start of the `keccak` preimage always differs, preventing collisions. As an extra safety measure, @protolambda suggested using the `CREATE2` computation with a system address as the deployer and the source-hash as the salt, to fit within existing address computation frameworks and prevent future unexpected collisions.", "2025-10-13T20:48:16.639Z"]
["ethereum-optimism/specs_day_2025-09-19", "ethereum-optimism/specs", "day", "2025-09-19", "# ethereum-optimism/specs Daily Update (Sep 19, 2025)\n## OVERVIEW \nToday's development focused on refining and improving the tooling for generating upgrade transaction specifications, alongside a bug fix related to flashblocks authorship. A new pull request for revenue sharing specs was opened, and discussions continued on standardizing network upgrade transactions and addressing redundant address structs.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Upgrade Transaction Specification Generation\n*   New scripts were added to streamline the generation of specifications for upgrade and proxy update transactions, improving efficiency for future network upgrades ([#673](https://github.com/ethereum-optimism/specs/pull/673)).\n*   Improvements were made to the specs tool, including factoring out per-fork constants for brevity and deduplication, removing unwanted whitespace from templates, and co-locating scripts for better organization ([#780](https://github.com/ethereum-optimism/specs/pull/780)).\n\n### Protocol Specification Refinements\n*   A bug related to flashblocks authorship within the protocol specifications was fixed, ensuring accuracy in the documentation ([#775](https://github.com/ethereum-optimism/specs/pull/775)).\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#782](https://github.com/ethereum-optimism/specs/pull/782), was opened to add specifications for revenue sharing.\n\n## CLOSED ISSUES\n\n### Tooling Improvement for Upgrade Transaction Generation\nThe issue [#779](https://github.com/ethereum-optimism/specs/issues/779), which aimed to improve the specs upgrade transaction generator script, was closed today. This suggests that the improvements discussed, likely related to helper functions and consistent invocation environments, have been implemented.\n\n### Standardization of Address Structs\nThe issue [#14977](https://github.com/ethereum-optimism/specs/issues/14977), concerning the creation of a single source of truth for address structs to eliminate duplication across packages, was closed. The intended scope of this work has been completed.\n\n## NEW ISSUES\n\n### Standardizing Network Upgrade Transactions\nA new issue, [#781](https://github.com/ethereum-optimism/specs/issues/781), was opened to enshrine a new convention for Network Upgrade Transactions that deploy new contracts. The current practice of using a unique `from` address with `nonce=0` for such transactions is being re-evaluated due to its impact on deployed addresses.\n\n## ACTIVE ISSUES\n\n### Standardizing Network Upgrade Transactions ([#781](https://github.com/ethereum-optimism/specs/issues/781))\nDiscussion on this newly opened issue focuses on the address computation for new contract deployments during network upgrades. Protolambda provided a detailed analysis of `CREATE`, `CREATE2`, and upgrade source-hash address computations, confirming no immediate collision risks due to differing keccak preimages. A suggestion was made to potentially use `CREATE2` with a system address as the deployer and the source-hash as a salt to further integrate with existing address computation frameworks and prevent future collisions.", "2025-10-13T20:48:16.658Z"]
["ethereum-optimism/optimism_day_2025-09-21", "ethereum-optimism/optimism", "day", "2025-09-21", "# ethereum-optimism/optimism Daily Update (Sep 21, 2025)\n## OVERVIEW \nThe day's development focused on refining internal tooling with a significant refactor of the test validation script for improved maintainability. New issues were opened concerning peer message delivery statistics and an unspecified \"Piloto\" topic.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Test Validation Script Refactoring\nThe test validation script for `contracts-bedrock` was refactored to externalize exclusion logic into a TOML config file, enhancing maintainability and flexibility. This change also included adding comprehensive test coverage for validation functions. ([#17510](https://github.com/ethereum-optimism/optimism/pull/17510))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#17543](https://github.com/ethereum-optimism/optimism/pull/17543), was opened to address `op-up` development experience, specifically regarding proxy admin override and L1 static IP.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\n\n### Node Performance and Peer Statistics\nA new feature request, [#17544](https://github.com/ethereum-optimism/optimism/issues/17544), was opened to request detailed statistics on peer message deliveries for `op-node`. The user noted that some peers consume resources without participating in block propagation.\n\n### Unspecified Issue\nA new issue, [#17546](https://github.com/ethereum-optimism/optimism/issues/17546), titled \"Piloto\" was created. The body of the issue is empty.\n\n## ACTIVE ISSUES\n\n### Receipt Correction During Sync\nIn issue [#679](https://github.com/ethereum-optimism/optimism/issues/679), the user `cpuchainorg` confirmed on September 21st that the issue with \"Failed to decode RLP receipts\" appears to be fixed with the latest version patch. Previously, `sebastianst` had provided a fix for the user to try and confirmed that the team had also experienced the issue during snap-syncing an op-mainnet node.\n\n### Unspecified \"Its done\" Issue\nIssue [#786](https://github.com/ethereum-optimism/optimism/issues/786), titled \"Its done\", received a comment from `ajit2903` on September 21st stating \"Not updating\". The original issue was created based on a comment in a pull request.", "2025-10-13T20:48:17.353Z"]
["ethereum-optimism/optimism_day_2025-09-19", "ethereum-optimism/optimism", "day", "2025-09-19", "# ethereum-optimism/optimism Daily Update (Sep 19, 2025)\n## OVERVIEW \nThe day saw significant progress in developer tooling with new integration tests for `op-deployer` and fixes for CI/CD processes. Security was also a focus with the addition of a new security review report. Several key issues related to Superchain integration and address struct standardization were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Deployment Tooling and Testing\nImprovements were made to the `op-deployer` with the introduction of CLI-based integration tests, ensuring more robust testing of deployment workflows. Additionally, fixes were implemented to address issues with Forge verbose installation and version checks within the CI environment.\n- [#17511](https://github.com/ethereum-optimism/optimism/pull/17511)\n- [#17534](https://github.com/ethereum-optimism/optimism/pull/17534)\n- [#17540](https://github.com/ethereum-optimism/optimism/pull/17540)\n- [#17541](https://github.com/ethereum-optimism/optimism/pull/17541)\n\n### Security and Protocol Updates\nA new security report for U16a was added to the documentation, enhancing transparency and trust. Initial implementation of the LivenessModule2 specification was drafted, aligning the codebase with proposed design for improved liveness mechanisms.\n- [#17538](https://github.com/ethereum-optimism/optimism/pull/17538)\n- [#17272](https://github.com/ethereum-optimism/optimism/pull/17272)\n\n### CI/CD and Acceptance Test Refinements\nThe acceptance tests were refactored to move network presets directly into the tests, reducing reliance on the `config.yaml` and making the CI configuration more streamlined. Support for Cannon+Kona games was also added to the `OPContractsManager` behind a dev feature toggle.\n- [#17519](https://github.com/ethereum-optimism/optimism/pull/17519)\n- [#17513](https://github.com/ethereum-optimism/optimism/pull/17513)\n\n## NEWLY OPENED PULL REQUESTS\n- [#17527](https://github.com/ethereum-optimism/optimism/pull/17527) feat(op-acceptance-tests): ci; build caching: This PR aims to improve CI performance by implementing build caching for acceptance tests.\n- [#17531](https://github.com/ethereum-optimism/optimism/pull/17531) update op-geth to: merge go-ethereum v1.16.3: This PR updates `op-geth` to incorporate changes from `go-ethereum` version 1.16.3.\n- [#17533](https://github.com/ethereum-optimism/optimism/pull/17533) Add enumerableSet and get pending functionality: This PR introduces new functionality for enumerable sets and retrieving pending states.\n- [#17536](https://github.com/ethereum-optimism/optimism/pull/17536) feat: introduce fee splitter for revenue share: This PR proposes a new feature to implement a fee splitter for revenue sharing.\n- [#17537](https://github.com/ethereum-optimism/optimism/pull/17537) chore: Update optimism-package & kurtosis: This PR updates the `optimism-package` and `kurtosis` dependencies.\n\n## CLOSED ISSUES\n\n### Superchain Integration and Registry\nThe issue tracking the integration of the Superchain Registry for interop-enabled networks has been closed. This work ensures that production-style configurations are used in devnets, with a sub-issue for proofs team also being tracked.\n- [#15847](https://github.com/ethereum-optimism/optimism/issues/15847)\n\n### Codebase Standardization\nThe effort to create a single source of truth for address structs across `op-deployer` and `op-chain-ops` has been completed and the issue closed. This addresses redundancy and improves consistency within the codebase.\n- [#14977](https://github.com/ethereum-optimism/optimism/issues/14977)\n\n### CI/CD and Testing Infrastructure\nThe issue related to adding a nightly CI job for `op-sync-tester` to sync using the latest `op-node` has been closed, indicating successful implementation of this testing mechanism.\n- [#17253](https://github.com/ethereum-optimism/optimism/issues/17253)\n\n### Dependency Updates\nThe issue concerning the update of `optimism-package` to support Fusaka on L1 has been closed, indicating the necessary dependency bumps have been completed.\n- [#17521](https://github.com/ethereum-optimism/optimism/issues/17521)\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Network Upgrade Transaction Conventions\nDiscussion continues on [#781](https://github.com/ethereum-optimism/optimism/issues/781) regarding enshrining new conventions for Network Upgrade Transactions that deploy new contracts. The latest comment from @protolambda provides a detailed analysis of address collision resistance for `CREATE`, `CREATE2`, and upgrade source-hashes, noting that the start of the keccak preimage always differs, preventing collisions. A suggestion was made to use the `CREATE2` computation with a system address as the deployer and the source-hash as salt for extra safety, fitting within existing address computation frameworks and preventing user collisions.", "2025-10-13T20:48:17.907Z"]
["ethereum-optimism/specs_day_2025-09-21", "ethereum-optimism/specs", "day", "2025-09-21", "# ethereum-optimism/specs Daily Update (Sep 21, 2025)\n## OVERVIEW \nThe day saw new pull requests opened, primarily focusing on updates to `derivation.md`. A new issue was created to propose using SSZ hash_tree_root for SequencerCommitment signatures, and an existing issue regarding receipt correction received a new comment indicating a potential fix.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nThree new pull requests were opened:\n- [#783](https://github.com/ethereum-optimism/specs/pull/783) titled \"Adddd\"\n- [#784](https://github.com/ethereum-optimism/specs/pull/784) titled \"Update derivation.md\"\n- [#785](https://github.com/ethereum-optimism/specs/pull/785) titled \"Update derivation.md\"\n\nA comment on [#785](https://github.com/ethereum-optimism/specs/pull/785) indicated \"Not updating\", suggesting a potential halt or change in direction for that specific PR.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nTwo new issues were opened:\n- **Documentation and Process Clarification**\n    - [#786](https://github.com/ethereum-optimism/specs/issues/786) \"Its done\" was created and subsequently closed on Sep 29, 2025, with the body \"Its done\".\n- **Protocol Enhancement Proposal**\n    - [#787](https://github.com/ethereum-optimism/specs/issues/787) \"Proposal: Use SSZ hash_tree_root instead of keccak(payload) for SequencerCommitment signatures\" was opened, suggesting a feature request related to improving signature mechanisms.\n\n## ACTIVE ISSUES\n- **Receipt Correction: Failed to decode RLP receipts**\n    - Issue [#679](https://github.com/ethereum-optimism/specs/issues/679) received a new comment from @cpuchainorg stating, \"Thanks I think the issue is fixed with the latest version patch.\" This indicates that the problem, which involved Geth crashing during full sync on op-mainnet due to RLP receipt decoding failures, might have been resolved by a recent update. Previous discussions involved confirming the issue and investigating a fix.", "2025-10-13T20:48:18.527Z"]
["ethereum-optimism/docs_day_2025-09-22", "ethereum-optimism/docs", "day", "2025-09-22", "# ethereum-optimism/docs Daily Update (Sep 22, 2025)\n## OVERVIEW \nThe day saw minor documentation fixes, specifically an update to the `op-deployer-setup.mdx` file. A significant issue regarding `op-test-sequencer` integration was closed, and a new issue concerning `ChainConfig.BlobConfig` was opened and immediately noted as resolved by an upstream fix.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Updates\nA minor documentation fix was implemented in the `op-deployer-setup.mdx` file, improving the clarity and accuracy of the operator setup guide ([#1749](https://github.com/ethereum-optimism/docs/pull/1749)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `op-test-sequencer` Integration Deprioritized\nThe issue concerning the addition of `op-test-sequencer` to the devnet environment and Kurtosis was closed ([#15265](https://github.com/ethereum-optimism/docs/issues/15265)). The decision to close was based on a strategic shift away from Kurtosis.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### `op-test-sequencer` Integration ([#15265](https://github.com/ethereum-optimism/docs/issues/15265))\nThe issue, which aimed to integrate `op-test-sequencer` into the devnet environment and Kurtosis, was closed today. The latest comment from janjakubnanista confirms the closure, stating, \"Closing since we are moving away from `kurtosis`.\" This follows earlier discussions about the necessity of this integration for reorg tests and a previous deprioritization by teddyknox, which was later re-opened by ajsutton due to a pending todo in the code.\n\n### ChainConfig.BlobConfig Default Behavior ([#685](https://github.com/ethereum-optimism/docs/issues/685))\nThis newly opened issue highlights that `ChainConfig.BlobConfig` was always using default configurations instead of the actual config contents. However, geoknee's immediate comment indicates that this issue has already been fixed upstream in `ethereum/go-ethereum` ([#32579](https://github.com/ethereum/go-ethereum/pull/32579)) and should be resolved with the next upstream merge.", "2025-10-13T20:48:19.988Z"]
["ethereum-optimism/community-hub_day_2025-09-22", "ethereum-optimism/community-hub", "day", "2025-09-22", "# ethereum-optimism/community-hub Daily Update (Sep 22, 2025)\n## OVERVIEW \nThe day's activity focused on refining the `op-token` section, including the addition of a Superchain revenue explainer and several metadata updates. A sidebar bug was also addressed.\n \n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Revenue Explainer & Metadata Updates\nA new Superchain revenue explainer was added to the `op-token` section, providing valuable information. This was accompanied by several updates to the `_meta.json` file to ensure proper navigation and display.\n- Added Superchain revenue explainer ([#1187](https://github.com/ethereum-optimism/community-hub/pull/1187))\n- Updated `_meta.json` for navigation and display ([#1188](https://github.com/ethereum-optimism/community-hub/pull/1188), [#1189](https://github.com/ethereum-optimism/community-hub/pull/1189))\n- Adjusted heading format in the new explainer document ([#1191](https://github.com/ethereum-optimism/community-hub/pull/1191))\n\n### Sidebar Bug Fix\nA bug affecting the sidebar display was identified and resolved, improving user experience and navigation within the community hub.\n- Fixed sidebar display issue ([#1190](https://github.com/ethereum-optimism/community-hub/pull/1190))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `op-test-sequencer` Integration Deprioritization\nThe issue concerning the integration of `op-test-sequencer` into the devnet environment and Kurtosis has been closed. The decision was made to move away from Kurtosis, leading to the deprioritization of this integration.\n- `op-test-sequencer`: add to devnet env and kurtosis ([#15265](https://github.com/ethereum-optimism/community-hub/issues/15265))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### `op-test-sequencer` Integration in Devnet ([#15265](https://github.com/ethereum-optimism/community-hub/issues/15265))\nThis issue, initially opened to add `op-test-sequencer` to the devnet environment and Kurtosis, was closed today. The latest comment from `janjakubnanista` confirms the closure due to a strategic shift away from using `kurtosis`. Previously, `emhane` highlighted its necessity for running reorg tests in the `kona-supervisor` devstack environment, and `ajsutton` had reopened it due to a pending todo in the code. `teddyknox` had initially deprioritized it pending use-cases for testing with `sysgo`. The current status indicates a change in approach for testing.", "2025-10-13T20:48:20.642Z"]
["ethereum-optimism/infra_day_2025-09-22", "ethereum-optimism/infra", "day", "2025-09-22", "# ethereum-optimism/infra Daily Update (Sep 22, 2025)\n## OVERVIEW \nThe day saw a new pull request to update the Kurtosis SDK in `op-acceptor`. An issue related to `op-test-sequencer` was closed, while a new issue regarding `ChainConfig.BlobConfig` was opened and immediately noted as resolved by an upstream fix.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#473](https://github.com/ethereum-optimism/infra/pull/473), was opened to update the Kurtosis SDK in `op-acceptor`.\n\n## CLOSED ISSUES\n\n### Kurtosis Integration Deprecation\nThe issue [#15265](https://github.com/ethereum-optimism/infra/issues/15265), concerning the addition of `op-test-sequencer` to the devnet environment and Kurtosis, was closed due to a shift away from using Kurtosis.\n\n## NEW ISSUES\n\n### Blob Configuration Bug\nA new issue, [#685](https://github.com/ethereum-optimism/infra/issues/685), was opened regarding `ChainConfig.BlobConfig` always using default configurations. It was noted that this issue was fixed upstream and should be resolved with the next upstream merge.\n\n## ACTIVE ISSUES\n\n### op-test-sequencer Integration and Deprioritization\nIssue [#15265](https://github.com/ethereum-optimism/infra/issues/15265) was closed today, with the latest comment from janjakubnanista indicating the closure is due to moving away from `kurtosis`. Previous discussions highlighted its requirement for reorg tests in the `kona-supervisor` devstack environment (emhane, Aug 11, 2025) and a re-opening due to a todo in the code (ajsutton, Jun 2, 2025), after an initial deprioritization by teddyknox (Jun 2, 2025) pending use-cases.\n\n### ChainConfig.BlobConfig Upstream Fix\nIssue [#685](https://github.com/ethereum-optimism/infra/issues/685) was opened today, with the initial comment from geoknee noting that the issue, where `ChainConfig.BlobConfig` always uses default configurations, was fixed upstream and should be resolved by the next upstream merge.", "2025-10-13T20:48:20.745Z"]
["ethereum-optimism/op-geth_day_2025-09-22", "ethereum-optimism/op-geth", "day", "2025-09-22", "# ethereum-optimism/op-geth Daily Update (Sep 22, 2025)\n## OVERVIEW \nThe day saw the identification of a configuration bug related to `ChainConfig.BlobConfig` and the closure of an issue concerning the `op-test-sequencer` due to a shift away from Kurtosis.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Deprecation of Kurtosis for `op-test-sequencer`\nThe issue [#15265](https://github.com/ethereum-optimism/op-geth/issues/15265) regarding the addition of `op-test-sequencer` to the devnet environment and Kurtosis was closed. This decision was made because the team is moving away from using Kurtosis.\n\n## NEW ISSUES\n### Upstream Configuration Bug Identified\nA new issue [#685](https://github.com/ethereum-optimism/op-geth/issues/685) was opened concerning `ChainConfig.BlobConfig` always using default configurations. This appears to be an upstream configuration bug that has already been fixed in the `go-ethereum` repository and is expected to be resolved with the next upstream merge.\n\n## ACTIVE ISSUES\n### `op-test-sequencer` and Kurtosis Integration\nIssue [#15265](https://github.com/ethereum-optimism/op-geth/issues/15265), \"op-test-sequencer: add to devnet env and kurtosis,\" was closed today. The latest comment from janjakubnanista at 2025-09-22T18:25:26Z explicitly states, \"Closing since we are moving away from `kurtosis`.\" This follows earlier discussions, including emhane's comment on 2025-08-11T13:16:17Z highlighting its necessity for reorg tests in the kona-supervisor devstack environment, and ajsutton's re-opening of the issue on 2025-06-02T20:42:52Z due to a todo in the code. teddyknox had previously deprioritized it on 2025-06-02T14:53:47Z pending use-cases for testing versus using the test-sequencer with sysgo.", "2025-10-13T20:48:21.085Z"]
["ethereum-optimism/community-hub_day_2025-09-23", "ethereum-optimism/community-hub", "day", "2025-09-23", "# ethereum-optimism/community-hub Daily Update (Sep 23, 2025)\n## OVERVIEW \nToday's activity focused on a minor content update within the `op-token` section, specifically removing emojis from the Superchain Revenue Explainer. An issue related to enabling flashblocks on Sunnyside sequencers was also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Content Refinement\nA minor update was made to the `superchain-revenue-explainer.mdx` file, removing emojis to maintain a consistent tone and style within the documentation. ([#1192](https://github.com/ethereum-optimism/community-hub/pull/1192))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Infrastructure Deployment\nThe issue concerning the enablement of flashblocks on Sunnyside sequencers has been closed, with the task completed as indicated by a linked pull request in the `k8s` repository. ([#16761](https://github.com/ethereum-optimism/community-hub/issues/16761))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-10-13T20:48:22.457Z"]
["ethereum-optimism/superchain-ops_day_2025-09-22", "ethereum-optimism/superchain-ops", "day", "2025-09-22", "# ethereum-optimism/superchain-ops Daily Update (Sep 22, 2025)\n\n## OVERVIEW\n\nToday's development focused on enhancing debugging capabilities for nonce errors, fixing state differences for Base U16a Sepolia, and improving documentation for wallet imports.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Debugging and Validation\nA new feature was added to display the task configuration file in nonce error messages, significantly speeding up debugging in CI environments [#1215](https://github.com/ethereum-optimism/superchain-ops/pull/1215). Additionally, state differences for Base U16a Sepolia were corrected, specifically addressing omitted `approveHash` diffs [#1212](https://github.com/ethereum-optimism/superchain-ops/pull/1212).\n\n### Documentation and Configuration Updates\nDocumentation was improved to guide users on importing Keystore Cast Wallets using raw private keys [#1214](https://github.com/ethereum-optimism/superchain-ops/pull/1214). Configuration for U16a Sepolia was also updated to reflect execution for Ink, Soneium, and OP [#1213](https://github.com/ethereum-optimism/superchain-ops/pull/1213).\n\n## NEWLY OPENED PULL REQUESTS\n\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Kurtosis Integration Deprecation\nThe issue regarding adding `op-test-sequencer` to the devnet environment and Kurtosis [#15265](https://github.com/ethereum-optimism/superchain-ops/issues/15265) was closed. The decision was made to move away from Kurtosis, rendering the task obsolete.\n\n### Blob Configuration Fix\nAn issue concerning `ChainConfig.BlobConfig` always using default configurations [#685](https://github.com/ethereum-optimism/superchain-ops/issues/685) was closed. This was identified as an upstream bug in Go-Ethereum that has since been fixed, and will be resolved with the next upstream merge.\n\n## NEW ISSUES\n\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments.", "2025-10-13T20:48:23.083Z"]
["ethereum-optimism/design-docs_day_2025-09-23", "ethereum-optimism/design-docs", "day", "2025-09-23", "# ethereum-optimism/design-docs Daily Update (Sep 23, 2025)\n## OVERVIEW \nToday's development focused on introducing a DA footprint block limit to mitigate spam and prevent priority fee auctions, enhancing the protocol's robustness.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Enhancements for Data Availability\nA significant update introduced a DA footprint block limit to address data availability spam and prevent priority fee auctions. This mechanism tracks DA footprint alongside gas, dynamically adjusting the block gas limit based on estimated DA impact. This change is documented in new and updated protocol files. ([#317](https://github.com/ethereum-optimism/design-docs/pull/317))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Flashblocks Enablement on Sunnyside Sequencers\nThe issue concerning the enablement of flashblocks on Sunnyside sequencers ([#16761](https://github.com/ethereum-optimism/design-docs/issues/16761)) has been resolved. The latest update confirms that flashblocks have been successfully enabled, with a reference to the corresponding pull request in the k8s repository. Previous updates indicated that both Sunnyside sequencers had `op-rbuilder` deployed and synced, with next steps including deploying `rollup-boosts` in disabled mode and a backup sequencer without flashblocks, followed by enabling `execution_mode` based on flashblocks health.", "2025-10-13T20:48:23.188Z"]
["ethereum-optimism/op-analytics_day_2025-09-22", "ethereum-optimism/op-analytics", "day", "2025-09-22", "# ethereum-optimism/op-analytics Daily Update (Sep 22, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, or code refactoring. Development focused on issue management, with one new issue opened and two issues closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Deprecating Kurtosis for Test Sequencer\nThe issue concerning the addition of `op-test-sequencer` to the devnet environment and Kurtosis was closed, as the team is moving away from Kurtosis. [#15265](https://github.com/ethereum-optimism/op-analytics/issues/15265)\n\n### Resolved Blob Configuration Issue\nAn issue regarding `ChainConfig.BlobConfig` always using default configurations was closed, as an upstream fix has resolved the problem. [#685](https://github.com/ethereum-optimism/op-analytics/issues/685)\n\n## NEW ISSUES\n\n### Dagster Helm Chart Bitnami Image Availability\nA new issue was opened to address the upcoming unavailability of Bitnami images used by the Dagster Helm chart. [#1747](https://github.com/ethereum-optimism/op-analytics/issues/1747)\n\n## ACTIVE ISSUES\n\n### op-test-sequencer: add to devnet env and kurtosis [#15265](https://github.com/ethereum-optimism/op-analytics/issues/15265)\nThis issue was closed today. The latest comment from janjakubnanista indicates that the issue is being closed because the team is moving away from `kurtosis`. Previously, emhane noted that this was required for running reorg tests in the `kona-supervisor` devstack environment. ajsutton had re-opened the issue due to a todo in the code, after teddyknox had initially deprioritized it pending use-cases for testing with `sysgo`.\n\n### ChainConfig.BlobConfig always uses default configs [#685](https://github.com/ethereum-optimism/op-analytics/issues/685)\nThis issue was closed today. The latest comment from geoknee confirms that the issue was fixed upstream and should be resolved with the next upstream merge. The issue highlighted that `ChainConfig.BlobConfig` was not correctly using the receiver `c`, indicating an upstream configuration bug that was subsequently addressed in a Go-Ethereum pull request.", "2025-10-13T20:48:24.033Z"]
["ethereum-optimism/op-analytics_day_2025-09-23", "ethereum-optimism/op-analytics", "day", "2025-09-23", "# ethereum-optimism/op-analytics Daily Update (Sep 23, 2025)\n## OVERVIEW \nToday, development focused on maintenance with a key bug fix addressing the weekly CI/CD job. An important issue regarding flashblocks on Sunnyside sequencers was also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### CI/CD Pipeline Stability\nA bug affecting the weekly CI/CD job was fixed, ensuring the continuous integration and deployment pipeline remains robust and reliable. ([#1749](https://github.com/ethereum-optimism/op-analytics/pull/1749))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Enablement on Sunnyside Sequencers\nThe issue concerning the enablement of flashblocks on Sunnyside sequencers was closed, indicating successful deployment and configuration. ([#16761](https://github.com/ethereum-optimism/op-analytics/issues/16761))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:24.858Z"]
["ethereum-optimism/infra_day_2025-09-23", "ethereum-optimism/infra", "day", "2025-09-23", "# ethereum-optimism/infra Daily Update (Sep 23, 2025)\n## OVERVIEW \nToday's development focused on improving the `op-acceptor`'s logging and reporting capabilities, with several bug fixes implemented to enhance output capture and parsing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced `op-acceptor` Logging and Reporting\nImprovements were made to the `op-acceptor`'s logging and reporting mechanisms. This included fixing the parser to capture subtest stdout output, handling plain text output when JSON parsing fails, ensuring HTML report links match actual created files, and adding file existence checks. These changes aim to provide more robust and accurate logging and reporting for the `op-acceptor` component. ([#474](https://github.com/ethereum-optimism/infra/pull/474))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Enabled on Sunnyside Sequencers\nThe issue concerning the enablement of flashblocks on Sunnyside sequencers has been closed. This follows the successful deployment of flashblocks on mainnet sequencers, with the implementation on Sunnyside now complete. ([#16761](https://github.com/ethereum-optimism/infra/issues/16761))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Flashblocks on Sunnyside Sequencers\nThe issue [#16761](https://github.com/ethereum-optimism/infra/issues/16761) regarding enabling flashblocks on Sunnyside sequencers was closed today. The latest comment from yashvardhan-kukreja confirms the completion of this task, referencing a related pull request in the `k8s` repository. Previously, updates indicated that both Sunnyside sequencers had `op-rbuilder` deployed and synced, with next steps including deploying `rollup-boosts` in disabled mode and a backup sequencer without flashblocks, followed by enabling `execution_mode` based on flashblock health.", "2025-10-13T20:48:24.953Z"]
["ethereum-optimism/op-geth_day_2025-09-23", "ethereum-optimism/op-geth", "day", "2025-09-23", "# ethereum-optimism/op-geth Daily Update (Sep 23, 2025)\n## OVERVIEW \nThe primary activity for the day involved a significant merge of go-ethereum v1.16.3, impacting numerous core components and preparing for further integration.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Geth Update\nA major update was performed by merging `go-ethereum v1.16.3` into the repository. This merge involved extensive changes across various core components, including `accounts/abi`, `core/rawdb`, `common`, `consensus/misc`, and `core/state`, indicating a foundational update to the underlying Geth client. ([#686](https://github.com/ethereum-optimism/op-geth/pull/686))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Flashblocks Enablement on Sunnyside Sequencers\nDiscussion on enabling flashblocks on Sunnyside sequencers concluded with the task being marked as done. The latest update confirms the successful deployment of flashblocks on Sunnyside, referencing a related pull request in the `k8s` repository. Previously, updates detailed the deployment of `op-rbuilder` and the next steps involving `rollup-boosts` and a backup sequencer. ([#16761](https://github.com/ethereum-optimism/op-geth/issues/16761))", "2025-10-13T20:48:25.071Z"]
["ethereum-optimism/optimism_day_2025-09-22", "ethereum-optimism/optimism", "day", "2025-09-22", "# ethereum-optimism/optimism Daily Update (Sep 22, 2025)\n\n## OVERVIEW \nToday's development focused on enhancing acceptance tests for custom gas tokens, refining smart contracts, and streamlining deployment processes. Several issues related to Interop Acceptance Tests and rollup-boost deployments were closed, while new issues emerged concerning flaky tests and the OP Supernode.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Custom Gas Token Acceptance Tests & Contract Refinements\nNew acceptance tests for Custom Gas Tokens (CGT) were added, covering introspection, L1 portal introspection, native payment, and various revert scenarios ([#17451](https://github.com/ethereum-optimism/optimism/pull/17451)). Additionally, an errant comment in `OptimismPortal2.sol` was fixed ([#17482](https://github.com/ethereum-optimism/optimism/pull/17482)), and the `SystemConfig` code was simplified based on audit findings ([#17539](https://github.com/ethereum-optimism/optimism/pull/17539)).\n\n### Streamlined Deployment and Test Management\nThe `ReadImplementationAddresses.s.sol` script was simplified for better readability and consistency ([#17542](https://github.com/ethereum-optimism/optimism/pull/17542)). The `DeployOPChain.s.sol` script was updated to allow arbitrary gas limits, moving away from a hardcoded 60Mgas/block limit ([#17550](https://github.com/ethereum-optimism/optimism/pull/17550)). Furthermore, Interop Acceptance Tests were skipped due to flakiness and lack of current production value ([#17555](https://github.com/ethereum-optimism/optimism/pull/17555)), and Isthmus-related acceptance tests were integrated into the base gate ([#17514](https://github.com/ethereum-optimism/optimism/pull/17514)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17552](https://github.com/ethereum-optimism/optimism/pull/17552) `opcm: Add new v2 dispute game implementation fields` was opened to introduce new fields for the v2 dispute game implementation.\n\n## CLOSED ISSUES\n\n### Interop and Rollup-Boost Deployments Finalized\nSeveral issues related to the Interop POC implementation and rollup-boost deployments were closed. This includes completing the Interop POC implementation and deployment to devnet ([#17190](https://github.com/ethereum-optimism/optimism/issues/17190)), and finalizing the setup of rollup-boost as a flashblocks forwarder on eris-0 ([#17461](https://github.com/ethereum-optimism/optimism/issues/17461)), Sepolia ([#17459](https://github.com/ethereum-optimism/optimism/issues/17459)), and Mainnet ([#17460](https://github.com/ethereum-optimism/optimism/issues/17460)).\n\n### Development Tooling and Audit Resolution\nThe issue of adding `op-test-sequencer` to the devnet environment and Kurtosis was closed ([#15265](https://github.com/ethereum-optimism/optimism/issues/15265)), with the decision to move away from Kurtosis. The tracking issue for `op-up` was also closed ([#17000](https://github.com/ethereum-optimism/optimism/issues/17000)), indicating progress on this tool. Additionally, a divergence report from ImmuneFi was resolved ([#17224](https://github.com/ethereum-optimism/optimism/issues/17224)).\n\n### DA Footprint Limit Specification\nThe issue concerning the specification for the DA Footprint Limit was closed ([#17087](https://github.com/ethereum-optimism/optimism/issues/17087)).\n\n## NEW ISSUES\n\n### Flaky Test Investigations\nNew issues were opened to address persistent flakiness in various tests, including `TestL2CLAheadOfSupervisor` ([#17548](https://github.com/ethereum-optimism/optimism/issues/17548)), `TestSubProcess` ([#17553](https://github.com/ethereum-optimism/optimism/issues/17553)), and `TestQueue_Send_MaxPendingMetrics` ([#17554](https://github.com/ethereum-optimism/optimism/issues/17554)).\n\n### OP Supernode Development and Tracking\nSeveral issues were created to track and implement the OP Supernode initiative, including a general tracking issue ([#17556](https://github.com/ethereum-optimism/optimism/issues/17556)) and a specific milestone for its development ([#17558](https://github.com/ethereum-optimism/optimism/issues/17558)).\n\n### Protocol and Contract Refinements\nA new issue was opened to complete the implementation of the DA Footprint Limit ([#17551](https://github.com/ethereum-optimism/optimism/issues/17551)). Another issue proposes refactoring super dispute game contracts for reusability across chains ([#17561](https://github.com/ethereum-optimism/optimism/issues/17561)).\n\n## ACTIVE ISSUES\n\n### ChainConfig.BlobConfig Default Behavior\nIssue [#685](https://github.com/ethereum-optimism/optimism/issues/685) highlights that `ChainConfig.BlobConfig` always uses default configurations instead of the actual config contents. The latest comment from `geoknee` on 2025-09-22T15:34:49Z indicates that this issue was fixed upstream in `go-ethereum` ([https://github.com/ethereum/go-ethereum/pull/32579](https://github.com/ethereum/go-ethereum/pull/32579)) and should be resolved with the next upstream merge.", "2025-10-13T20:48:25.327Z"]
["ethereum-optimism/superchain-ops_day_2025-09-23", "ethereum-optimism/superchain-ops", "day", "2025-09-23", "# ethereum-optimism/superchain-ops Daily Update (Sep 23, 2025)\n\n## OVERVIEW \nToday's development focused on enhancing the Superchain-ops system with direct L2 upgrade capabilities and introducing the U16a task for Base Mainnet. Significant cleanup efforts were also made by removing the `FinanceTemplate` and the `improvements` directory, streamlining the codebase.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain-ops System Enhancements and Streamlining\nThe Superchain-ops system received a significant upgrade, now supporting direct L2 upgrade transactions, a feature previously available in the older system. This enhancement allows for more direct and efficient L2 operations within the new framework ([#1187](https://github.com/ethereum-optimism/superchain-ops/pull/1187)). Concurrently, the codebase was streamlined by removing the `FinanceTemplate`, which was not yet fully supported and required further development ([#1216](https://github.com/ethereum-optimism/superchain-ops/pull/1216)). The `improvements` directory, an artifact from an earlier version, was also removed as the new Superchain-ops system is now a first-class citizen ([#1217](https://github.com/ethereum-optimism/superchain-ops/pull/1217)).\n\n### New Task Introduction and Script Refinements\nA new U16a task was created for Base Mainnet, expanding the operational capabilities for this chain ([#1200](https://github.com/ethereum-optimism/superchain-ops/pull/1200)). Additionally, the `get-rpc-url` script was refined for cleaner and more consistent functionality across various environments ([#1220](https://github.com/ethereum-optimism/superchain-ops/pull/1220)). A small update was also made to the README for the `U16a-opcm-upgrade-v410-unichain` task ([#1221](https://github.com/ethereum-optimism/superchain-ops/pull/1221)).\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1218](https://github.com/ethereum-optimism/superchain-ops/pull/1218), was opened to add Trezor support.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Flashblocks Enablement on Sunnyside Sequencers\nThe issue [#16761](https://github.com/ethereum-optimism/superchain-ops/issues/16761) regarding enabling flashblocks on Sunnyside sequencers has been closed. The latest update from yashvardhan-kukreja confirms the completion of this task, referencing a pull request in the k8s repository ([https://github.com/ethereum-optimism/k8s/pull/7341](https://github.com/ethereum-optimism/k8s/pull/7341)). Previously, yashvardhan-kukreja had provided an update on September 4th, stating that both Sunnyside sequencers had `op-rbuilder` deployed and synced, outlining the next steps which included deploying `rollup-boosts` in disabled mode, a backup sequencer without flashblocks, and then enabling `execution_mode` based on flashblocks-enablement's health.", "2025-10-13T20:48:29.389Z"]
["ethereum-optimism/optimism_day_2025-09-23", "ethereum-optimism/optimism", "day", "2025-09-23", "# ethereum-optimism/optimism Daily Update (Sep 23, 2025)\n## OVERVIEW \nToday, Optimism saw significant advancements in AI-driven contract test maintenance, enhanced EL Sync testing capabilities, and critical updates to the transaction manager for improved fee estimation and stability.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### AI-Powered Contract Test Maintenance System Introduced\nA new AI Contract Test Maintenance System was added to reduce technical debt in contract tests. This system includes a prompt renderer to convert test ranking output into AI-ready prompts, streamlining the maintenance process.\n- [#17560](https://github.com/ethereum-optimism/optimism/pull/17560)\n- [#17578](https://github.com/ethereum-optimism/optimism/pull/17578)\n\n### Enhanced EL Sync Testing and Stability\nImprovements were made to EL Sync testing, enabling the use of real chain data for more robust validation. Additionally, the transaction manager was updated to fetch `BlobBaseFee` via RPC, simplifying fee estimation and addressing a flaky test related to concurrent map writes.\n- [#17532](https://github.com/ethereum-optimism/optimism/pull/17532)\n- [#17567](https://github.com/ethereum-optimism/optimism/pull/17567)\n- [#17566](https://github.com/ethereum-optimism/optimism/pull/17566)\n- [#17570](https://github.com/ethereum-optimism/optimism/pull/17570)\n\n### Core Infrastructure Updates\nThe `op-geth` client was updated to `v1.16.3`, and a new `justfile` command was added to simplify `op-geth` updates. Security review documents were also updated.\n- [#17547](https://github.com/ethereum-optimism/optimism/pull/17547)\n- [#17549](https://github.com/ethereum-optimism/optimism/pull/17549)\n- [#17576](https://github.com/ethereum-optimism/optimism/pull/17576)\n\n## NEWLY OPENED PULL REQUESTS\n- [#17565](https://github.com/ethereum-optimism/optimism/pull/17565) \"[DO NOT MERGE] op-node: EL Sync concurrency experiment\" explores concurrency in the `op-node`'s EL Sync.\n- [#17569](https://github.com/ethereum-optimism/optimism/pull/17569) \"feat(op-deployer): convert deployopchain and deployimplementations to use forge\" proposes converting deployment scripts to use Forge.\n- [#17573](https://github.com/ethereum-optimism/optimism/pull/17573) \"op-alt-da: fix NewCommitmentData nil interface return\" addresses a bug in `op-alt-da` related to nil interface returns.\n- [#17574](https://github.com/ethereum-optimism/optimism/pull/17574) \"Refactor: use a single struct to store all state for a given Safe\" suggests a refactoring to consolidate state management for Safes.\n\n## CLOSED ISSUES\n\n### Flashblocks and Throttling Configuration\nIssues related to enabling flashblocks on Sunnyside sequencers and their alerting setup were closed, indicating successful implementation. Additionally, a review of `op-batcher`'s throttling configuration was completed.\n- [#16761](https://github.com/ethereum-optimism/optimism/issues/16761)\n- [#16762](https://github.com/ethereum-optimism/optimism/issues/16762)\n- [#16947](https://github.com/ethereum-optimism/optimism/issues/16947)\n\n### Data Availability Footprint and EL Sync Testing\nDesign documents for the DA Footprint Limit were completed and ratified. Support for EL Sync testing in `op-sync-tester` was also implemented and closed.\n- [#17009](https://github.com/ethereum-optimism/optimism/issues/17009)\n- [#17394](https://github.com/ethereum-optimism/optimism/issues/17394)\n- [#17388](https://github.com/ethereum-optimism/optimism/issues/17388)\n\n### Test Stability\nA flaky test, `TestQueue_Send_MaxPendingMetrics`, was identified and subsequently closed, indicating a resolution to the concurrency issue.\n- [#17554](https://github.com/ethereum-optimism/optimism/issues/17554)\n\n## NEW ISSUES\n\n### `op-challenger` Flag and RPC Errors\nA dangling `cannon-rollup-config` flag in `op-challenger` was reported, indicating a potential cleanup needed. An issue regarding `eth_sendRawTransaction` not existing or being unavailable via RPC was also opened, suggesting a problem with transaction submission.\n- [#17562](https://github.com/ethereum-optimism/optimism/issues/17562)\n- [#17563](https://github.com/ethereum-optimism/optimism/issues/17563)\n\n### EL Sync Correctness and CI Infrastructure\nConcerns were raised about EL Sync correctness in `op-node` and `op-sync-tester`, specifically regarding `EngineController` parallelism. Additionally, a need for an extra RPC node in CI was identified due to capacity issues.\n- [#17564](https://github.com/ethereum-optimism/optimism/issues/17564)\n- [#17571](https://github.com/ethereum-optimism/optimism/issues/17571)\n\n### Fusaka Prestate Review\nA new issue was opened to review the Fusaka prestate, indicating an upcoming focus on this aspect.\n- [#17575](https://github.com/ethereum-optimism/optimism/issues/17575)\n\n## ACTIVE ISSUES\n\n### EL Sync Correctness: EngineController Parallelism and EL Sync Tests\nIssue [#17564](https://github.com/ethereum-optimism/optimism/issues/17564) discusses a synchronization issue in the `op-node`'s EL sync code path, particularly concerning `EngineController` parallelism. The issue was closed on Sep 30, 2025, with the latest comment from pcw109550 confirming that PR [#17648](https://github.com/ethereum-optimism/optimism/pull/17648) has been merged and tested, fixing the issue after proper locking was applied and race window amplified. The comment suggests that enabling a race detector for future implementations might be beneficial.", "2025-10-13T20:48:32.132Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-24", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-24", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 24, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out long-standing issues related to the `superchain-ops` architecture, with 17 issues closed. Discussions also began on new issues concerning testing and developer experience.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Superchain-Ops Architecture Refinements\nSeveral issues related to the `superchain-ops` architecture were closed, reflecting a shift in design and implementation. This includes the closure of issues concerning `SignFromJson` compatibility with Safe Web UI [#49](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/49), cleanup of JSON length parsing [#12](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/12), and the merging of `VerificationBase` into `JsonTxBuilderBase` [#427](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/427). The `AccountAccessParser` was also refactored, leading to the closure of [#666](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/666).\n\n### Developer Experience and Tooling Improvements\nImprovements to developer experience and tooling were addressed with the closure of issues such as improved proposal operations [#140](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/140), enforcement of folder numbering [#203](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/203), and task tracking configuration [#433](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/433). Issues related to `mise install` instructions [#617](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/617) and creating skeleton config test tasks [#697](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/697) were also closed.\n\n### Simulation and Testing Enhancements\nSeveral issues related to simulation and testing within `superchain-ops` were closed. This includes the removal of etch from proposal simulation [#436](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/436), new template tooling for E2E testing [#489](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/489), and the re-implementation of security council rehearsals [#529](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/529). Issues concerning easy task invocation [#593](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/593), `sim-seq` related tasks [#646](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/646), [#647](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/647), [#714](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/714), and the implementation of `checkStateDiff` in example templates [#608](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/608) were also closed.\n\n### CI Stability and Template Creation\nIssues related to CI stability, such as `mise deps` rate limiting [#569](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/569) and general CI rate limits [#628](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/628), were closed. A test failure with the latest Foundry version [#577](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/577) was also resolved. Additionally, the issue for creating a swap owner template [#1167](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1167) was closed.\n\n## NEW ISSUES\n\n### Testing and Code Quality Nits\nNew issues were opened to address minor improvements in testing and code quality. These include splitting assertions in tests [#17598](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17598), adding a helper function for `_authorizeMinter` [#17600](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17600), and adding an explicit custom error [#17601](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17601).\n\n### Superchain-Ops Flow Feedback\nA new issue was opened to report snags encountered during the improved `superchain-ops` flow [#1224](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1224). This issue details several points of confusion and difficulties experienced during the signing process.\n\n## ACTIVE ISSUES\n\n### [#17598](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17598) Split assertions in tests\nThis issue suggests splitting assertions in tests for better clarity and maintainability, specifically recommending separate `LiquidityController_Version_Test` for each assertion. Comments from `hexshire` link to related discussions on a pull request, indicating ongoing consideration of this testing practice.\n\n### [#17600](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17600) Add `_authorizeMinter(_minter)` as a helper function.\nThe discussion on this issue, initiated by `smartcontracts`, proposes creating a helper function `_authorizeMinter(_minter)` to improve code organization. `hexshire` provided a related link to a pull request discussion, suggesting active consideration of this refactoring.\n\n### [#17601](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17601) Add explicit custom error\nThis issue, raised by `smartcontracts`, suggests adding an explicit custom error for a specific case. `hexshire` linked to a related discussion on a pull request, indicating that this suggestion is being reviewed.\n\n### [#1224](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1224) snag report on improved superchain-ops flow\nThis issue details several points of confusion and difficulties encountered during the `superchain-ops` signing flow. `blmalone` provided a detailed response, addressing each point and mentioning a new pull request ([#1230](https://github.com/ethereum-optimism/superchain-ops/pull/1230)) that aims to fix some of the reported snags. Key points of discussion include the intentional printing of markdown with 'TODOs' during simulation for task developers, the experimental nature of audit reports in the workflow, the varying requirements for `op-txverify` among signers, and the need for better boilerplate markdown. `geoknee` further clarified the importance of simulation for signers and questioned the current approach.", "2025-10-13T20:48:33.275Z"]
["ethereum-optimism/optimism_day_2025-09-24", "ethereum-optimism/optimism", "day", "2025-09-24", "# ethereum-optimism/optimism Daily Update (Sep 24, 2025)\n\n## OVERVIEW \nToday's development focused on enhancing contract safety checks, integrating AI for test maintenance, and refining custom gas token functionalities. Significant progress was also made in streamlining CI processes and addressing various technical debt issues.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Smart Contract Enhancements and Safety\nSafety checks for the `ETHLockbox` feature in the `setFeature` function were added to the `SystemConfig.sol` contract, improving protocol security. Compiler optimization runs were explicitly set to 0 for the lite profile to reduce compile times. Additionally, Codecov coverage was enabled for MIPS64 contracts, reflecting updated test coverage.\n- feat: add safety checks for lockbox in setFeature ([#17559](https://github.com/ethereum-optimism/optimism/pull/17559))\n- perf: explictly set compiler runs to 0 to reduce profiles ([#17572](https://github.com/ethereum-optimism/optimism/pull/17572))\n- codecov: enable coverage for MIPS64 contracts ([#17409](https://github.com/ethereum-optimism/optimism/pull/17409))\n\n### AI-Powered Test Maintenance and CI Improvements\nThe AI Contract Test Maintenance System was expanded with Devin API integration, enabling automated test improvement workflows. Concurrently, Kurtosis-based CI acceptance tests were removed due to deprecation, streamlining the CI pipeline.\n- feat(ai-contracts-test): add devin API integration ([#17602](https://github.com/ethereum-optimism/optimism/pull/17602))\n- chore(op-acceptance-tests): ci; remove kurtosis jobs. ([#17581](https://github.com/ethereum-optimism/optimism/pull/17581))\n\n### Custom Gas Token Refinements\nReview comments for the custom gas token rebase were addressed, leading to fixes across acceptance tests, deployer configurations, and e2e utilities, ensuring robust functionality.\n- fix: custom gas token rebase review comments ([#17577](https://github.com/ethereum-optimism/optimism/pull/17577))\n\n## NEWLY OPENED PULL REQUESTS\n- [#17580](https://github.com/ethereum-optimism/optimism/pull/17580) chore(op-acceptance-tests): op-acceptor v3.3.2: This PR updates the op-acceptor version.\n- [#17582](https://github.com/ethereum-optimism/optimism/pull/17582) Security, dependencies, and base images update: This PR focuses on updating security, dependencies, and base images.\n- [#17583](https://github.com/ethereum-optimism/optimism/pull/17583) clean(op-acceptance-tests): cgt; use w3: This PR cleans up custom gas token acceptance tests to use w3.\n\n## CLOSED ISSUES\n\n### Isthmus End-to-End Test Tracking\nThe tracking issue for Isthmus End-to-End Tests was closed, indicating completion of test creation and coverage for the Isthmus upgrade. Discussions included the feasibility of testing EIP-6110 and operator fee coverage. ([#14249](https://github.com/ethereum-optimism/optimism/issues/14249))\n\n### CI and Deployment Infrastructure Improvements\nSeveral issues related to CI stability and deployment were resolved, including an `op-node` invalid block signature error, the addition of an extra RPC node for CI capacity, and the removal of an unnecessary `fund()` function in a critical contract. ([#17448](https://github.com/ethereum-optimism/optimism/issues/17448), [#17571](https://github.com/ethereum-optimism/optimism/issues/17571), [#17590](https://github.com/ethereum-optimism/optimism/issues/17590))\n\n### Superchain-Ops Tooling Refinements\nA series of issues related to the `superchain-ops` tooling were closed, reflecting significant architectural changes and improvements. These include making `SignFromJson` compatible with Safe Web UI, cleaning up JSON length parsing, improving proposal operations, enforcing folder numbering, merging `VerificationBase` into `JsonTxBuilderBase`, and enhancing task tracking and simulation processes. ([#49](https://github.com/ethereum-optimism/optimism/issues/49), [#12](https://github.com/ethereum-optimism/optimism/issues/12), [#140](https://github.com/ethereum-optimism/optimism/issues/140), [#203](https://github.com/ethereum-optimism/optimism/issues/203), [#427](https://github.com/ethereum-optimism/optimism/issues/427), [#433](https://github.com/ethereum-optimism/optimism/issues/433), [#436](https://github.com/ethereum-optimism/optimism/issues/436), [#489](https://github.com/ethereum-optimism/optimism/issues/489), [#529](https://github.com/ethereum-optimism/optimism/issues/529), [#593](https://github.com/ethereum-optimism/optimism/issues/593), [#569](https://github.com/ethereum-optimism/optimism/issues/569), [#577](https://github.com/ethereum-optimism/optimism/issues/577), [#608](https://github.com/ethereum-optimism/optimism/issues/608), [#646](https://github.com/ethereum-optimism/optimism/issues/646), [#647](https://github.com/ethereum-optimism/optimism/issues/647), [#617](https://github.com/ethereum-optimism/optimism/issues/617), [#628](https://github.com/ethereum-optimism/optimism/issues/628), [#666](https://github.com/ethereum-optimism/optimism/issues/666), [#697](https://github.com/ethereum-optimism/optimism/issues/697), [#714](https://github.com/ethereum-optimism/optimism/issues/714), [#778](https://github.com/ethereum-optimism/optimism/issues/778), [#781](https://github.com/ethereum-optimism/optimism/issues/781), [#1167](https://github.com/ethereum-optimism/optimism/issues/1167))\n\n## NEW ISSUES\n\n### Custom Gas Token Review Feedback\nSeveral new issues were opened to address specific feedback and nits from a custom gas token review. These include refactoring tests for simplicity, clarifying naming conventions, considering explicit custom error cases, and merging inherited test versions.\n- Refactor test to make it simpler: `OptimismPortal2.sol` ([#17593](https://github.com/ethereum-optimism/optimism/issues/17593))\n- Review Custom Gas Token ([#17586](https://github.com/ethereum-optimism/optimism/issues/17586))\n- Nit: in L1BlockCGT this is just `+custom-gas-token` ([#17587](https://github.com/ethereum-optimism/optimism/issues/17587))\n- Nit - maybe consider an explicit custom error case for this? Thoughts? ([#17588](https://github.com/ethereum-optimism/optimism/issues/17588))\n- Revert `OptimismPortal2.t.sol` diff n1 ([#17591](https://github.com/ethereum-optimism/optimism/issues/17591))\n- Revert `OptimismPortal2.t.sol` diff n2 ([#17592](https://github.com/ethereum-optimism/optimism/issues/17592))\n- Merge L1Block Tests Using DevFeatures ([#17596](https://github.com/ethereum-optimism/optimism/issues/17596))\n- Remove unnecessary `virtual` tags ([#17595](https://github.com/ethereum-optimism/optimism/issues/17595))\n- Merge L2ToL1MessagePasser Tests Using DevFeatures ([#17597](https://github.com/ethereum-optimism/optimism/issues/17597))\n- Split assertions in tests ([#17598](https://github.com/ethereum-optimism/optimism/issues/17598))\n- Add `_authorizeMinter(_minter)` as a helper function. ([#17600](https://github.com/ethereum-optimism/optimism/issues/17600))\n- Replace `setInputCGTEnabled` modifier with `setUp` ([#17605](https://github.com/ethereum-optimism/optimism/issues/17605))\n- Refactor test contract with `skipIfDevFeatureDisabled` ([#17604](https://github.com/ethereum-optimism/optimism/issues/17604))\n- Add explicit custom error ([#17601](https://github.com/ethereum-optimism/optimism/issues/17601))\n- Remove assert from test initializer contract ([#17603](https://github.com/ethereum-optimism/optimism/issues/17603))\n\n### Superchain-Ops Flow Snags\nAn issue was opened to report snags encountered during the improved superchain-ops signing flow, highlighting areas for better user experience and documentation.\n- snag report on improved superchain-ops flow ([#1224](https://github.com/ethereum-optimism/optimism/issues/1224))\n\n## ACTIVE ISSUES\n\n### Superchain-Ops Flow Snags ([#1224](https://github.com/ethereum-optim", "2025-10-13T20:48:35.722Z"]
["ethereum-optimism/docs_day_2025-09-25", "ethereum-optimism/docs", "day", "2025-09-25", "# ethereum-optimism/docs Daily Update (Sep 25, 2025)\n## OVERVIEW \nToday's development focused on updating documentation related to the U16a upgrade, specifically adding chain operator information. Discussions continued on an active issue regarding the `superchain-ops` flow, with feedback provided and addressed. A new issue was opened concerning Engine API validations.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Documentation Updates\n*   Added chain operator information to the U16a upgrade notice ([#1751](https://github.com/ethereum-optimism/docs/pull/1751)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n\n### Engine API Validation Improvements\n*   A new issue was opened to deduplicate Engine API validations in `Miner.prepareWork`, noting that many checks are already performed as part of the Engine API validation in `eth/catalyst/api_optimism.go` ([#688](https://github.com/ethereum-optimism/docs/issues/688)).\n\n## ACTIVE ISSUES\n\n### Superchain-ops Flow Improvements\nDiscussion continued on improving the `superchain-ops` flow ([#1224](https://github.com/ethereum-optimism/docs/issues/1224)). @blmalone provided detailed responses to feedback from @geoknee, addressing several \"snags\" encountered during the signing flow. Key points included:\n*   Clarification on why \"TODOs\" are printed during task simulation (for task developers to create `VALIDATION.md` files).\n*   Acknowledgement that audit reports were an experimental addition and the language around them needs to be changed.\n*   Discussion on the necessity of `op-txverify` for some signers.\n*   Confirmation that the \"normalized state diff hash\" explanation should be included.\n*   A PR was raised to address some of the identified issues.\n\n### op-batcher preparation for Fusaka\nDiscussion on preparing `op-batcher` for Fusaka activation continued ([#17472](https://github.com/ethereum-optimism/docs/issues/17472)). @geoknee provided a recipe for manual testing against a Fusaka L1, emphasizing the need for the batcher to send blob transactions with cell proofs rather than blob proofs once Fusaka activates.", "2025-10-13T20:48:36.449Z"]
["ethereum-optimism/specs_day_2025-09-24", "ethereum-optimism/specs", "day", "2025-09-24", "# ethereum-optimism/specs Daily Update (Sep 24, 2025)\n\n## OVERVIEW \nThe day saw significant progress in refining L1 block attribute transaction choices for the Isthmus and Jovian upgrades, alongside a substantial cleanup of older, no longer relevant issues related to superchain-ops architecture and CI processes.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Specification Refinements\nPrecision was added to the L1 block attribute transaction choice within the activation blocks for the Isthmus and Jovian protocol upgrades. This involved updates to the overview, L1 attributes, and system configuration documentation for both protocols.\n- ([#789](https://github.com/ethereum-optimism/specs/pull/789))\n\n### Superchain-Ops Architecture Streamlining\nSeveral issues related to the previous superchain-ops architecture were closed, reflecting the adoption of new processes and tools. This includes the deprecation of `JsonTxBuilderBase`, the implementation of new task tracking via stacked simulations, and the removal of `etch` from proposal simulations.\n- ([#49](https://github.com/ethereum-optimism/specs/issues/49)), ([#12](https://github.com/ethereum-optimism/specs/issues/12)), ([#140](https://github.com/ethereum-optimism/specs/issues/140)), ([#427](https://github.com/ethereum-optimism/specs/issues/427)), ([#433](https://github.com/ethereum-optimism/specs/issues/433)), ([#436](https://github.com/ethereum-optimism/specs/issues/436)), ([#489](https://github.com/ethereum-optimism/specs/issues/489)), ([#593](https://github.com/ethereum-optimism/specs/issues/593)), ([#577](https://github.com/ethereum-optimism/specs/issues/577)), ([#608](https://github.com/ethereum-optimism/specs/issues/608)), ([#666](https://github.com/ethereum-optimism/specs/issues/666)), ([#781](https://github.com/ethereum-optimism/specs/issues/781))\n\n### CI and Development Workflow Improvements\nIssues related to CI rate limits, `mise` installation instructions, and `sim-seq` processes were addressed and closed, indicating a more robust and efficient development workflow.\n- ([#203](https://github.com/ethereum-optimism/specs/issues/203)), ([#569](https://github.com/ethereum-optimism/specs/issues/569)), ([#646](https://github.com/ethereum-optimism/specs/issues/646)), ([#647](https://github.com/ethereum-optimism/specs/issues/647)), ([#617](https://github.com/ethereum-optimism/specs/issues/617)), ([#628](https://github.com/ethereum-optimism/specs/issues/628)), ([#714](https://github.com/ethereum-optimism/specs/issues/714))\n\n### Task and Template Management\nProgress was made on creating new task templates and refining existing ones, including the completion of the security council rehearsals and the creation of a swap owner template.\n- ([#529](https://github.com/ethereum-optimism/specs/issues/529)), ([#1167](https://github.com/ethereum-optimism/specs/issues/1167)), ([#697](https://github.com/ethereum-optimism/specs/issues/697)), ([#778](https://github.com/ethereum-optimism/specs/issues/778))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Deprecated Superchain-Ops Features\nSeveral issues related to features that are no longer part of the superchain-ops architecture were closed. This includes issues concerning `SignFromJson` compatibility with Safe Web UI, `JsonTxBuilderBase` cleanup, improved proposal ops, task tracking configuration, and the removal of `etch` from proposal simulation.\n- ([#49](https://github.com/ethereum-optimism/specs/issues/49)), ([#12](https://github.com/ethereum-optimism/specs/issues/12)), ([#140](https://github.com/ethereum-optimism/specs/issues/140)), ([#427](https://github.com/ethereum-optimism/specs/issues/427)), ([#433](https://github.com/ethereum-optimism/specs/issues/433)), ([#436](https://github.com/ethereum-optimism/specs/issues/436)), ([#489](https://github.com/ethereum-optimism/specs/issues/489)), ([#593](https://github.com/ethereum-optimism/specs/issues/593)), ([#577](https://github.com/ethereum-optimism/specs/issues/577)), ([#608](https://github.com/ethereum-optimism/specs/issues/608)), ([#666](https://github.com/ethereum-optimism/specs/issues/666)), ([#781](https://github.com/ethereum-optimism/specs/issues/781))\n\n### CI and Development Environment Enhancements\nIssues related to CI stability and development environment setup were resolved. This includes enforcing folder numbering, addressing `mise deps` rate limits, fixing test failures with the latest Foundry version, and streamlining `README` installation instructions.\n- ([#203](https://github.com/ethereum-optimism/specs/issues/203)), ([#569](https://github.com/ethereum-optimism/specs/issues/569)), ([#646](https://github.com/ethereum-optimism/specs/issues/646)), ([#647](https://github.com/ethereum-optimism/specs/issues/647)), ([#617](https://github.com/ethereum-optimism/specs/issues/617)), ([#628](https://github.com/ethereum-optimism/specs/issues/628)), ([#714](https://github.com/ethereum-optimism/specs/issues/714))\n\n### Task and Template Completion\nSeveral tasks and template-related issues were closed, indicating progress in standardizing and automating operational procedures. This includes the reimplementation of security council rehearsals, the creation of a swap owner template, and the closure of a skeleton config test task.\n- ([#529](https://github.com/ethereum-optimism/specs/issues/529)), ([#1167](https://github.com/ethereum-optimism/specs/issues/1167)), ([#697](https://github.com/ethereum-optimism/specs/issues/697)), ([#778](https://github.com/ethereum-optimism/specs/issues/778))\n\n## NEW ISSUES\n\n### Superchain-Ops Flow Improvements\nA new issue was opened to report snags and areas for improvement in the superchain-ops signing flow, highlighting confusion during simulation and signing processes.\n- ([#1224](https://github.com/ethereum-optimism/specs/issues/1224))\n\n### Code Quality and Error Handling\nNew issues were created to address code quality and error handling, specifically suggesting splitting assertions in tests for better granularity and adding explicit custom error cases.\n- ([#17598](https://github.com/ethereum-optimism/specs/issues/17598)), ([#17601](https://github.com/ethereum-optimism/specs/issues/17601))\n\n### Helper Function Implementation\nA new issue proposes adding a helper function `_authorizeMinter(_minter)` to improve code organization and reusability.\n- ([#17600](https://github.com/ethereum-optimism/specs/issues/17600))\n\n## ACTIVE ISSUES\n\n### [#1224](https://github.com/ethereum-optimism/specs/issues/1224) snag report on improved superchain-ops flow\nThe discussion revolves around improving the user experience for the superchain-ops signing flow. @geoknee reported several points of confusion, including the printing of \"TODOs\" during simulation, the experimental nature of audit reports, the requirement for `op-txverify`, and unclear explanations of terms like \"normalized state diff hash\". @blmalone acknowledged the feedback and created a PR to address some of the snags. They clarified that \"TODOs\" are intentionally printed during task simulation to aid task developers in creating `VALIDATION.md` files, and that the audit report language will be updated. The need for `op-txverify` is still under discussion, and improvements to boilerplate markdown and explanations of technical terms are being implemented. @geoknee further questioned if signers are expected to simulate tasks, implying that the \"TODOs\" might still impact their UX.\n\n### [#49](https://github.com/ethereum-optimism/specs/issues/49) Make SignFromJson compatible with Safe Web UI\nThis issue was closed by @blmalone, stating that the architecture has meaningfully changed since its opening. The original discussion from 2024 involved making `SignFromJson` compatible with the Safe Web UI, with suggestions for using `MultiSendCallOnly` or exploring ways to sign arbitrary data in the Safe UI. @mds1 had expressed interest in keeping it open to explore options, and @maurelian had planned to include it in a PR. However, with the architectural changes, the issue is now considered resolved.\n\n### [#140](https://github.com/ethereum-optimism/specs/issues/140) Suggestion: improved proposal ops\nThis issue was closed by @blmalone, noting that Superchain-ops has implemented a new architecture based on previous discussions. The original suggestion by @ElliotFriedman was to use a framework like `forge-proposal-simulator` to improve governance proposals by enabling explicit validations, integrating with existing integration tests, and writing proposals in readable Solidity instead of JSON. @mds1 had asked for more details on the vision, and @ElliotFriedman provided extensive explanations and examples of the benefits. The closure indicates that the new architecture addresses the", "2025-10-13T20:48:38.021Z"]
["ethereum-optimism/superchain-ops_day_2025-09-24", "ethereum-optimism/superchain-ops", "day", "2025-09-24", "# ethereum-optimism/superchain-ops Daily Update (Sep 24, 2025)\n## OVERVIEW \nToday, the Superchain Ops team focused on expanding functionality with a new owner swap template and performing multiple network upgrades to U16a. Several long-standing issues related to architecture changes and CI stability were also closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Network Upgrades\nMultiple Superchain networks, including Metal, Mode, Zora, Arena-Z, and Swell, were upgraded to U16a. These upgrades involved sequentially executing U13, U14, and U15 tasks, ensuring a smooth transition for these chains. Additionally, U16a mainnet tasks for OP/Ink/Soneium and Unichain were set to \"ready to sign,\" and the Unichain U16a SEP was marked as executed.\n([#1188](https://github.com/ethereum-optimism/superchain-ops/pull/1188), [#1189](https://github.com/ethereum-optimism/superchain-ops/pull/1189), [#1190](https://github.com/ethereum-optimism/superchain-ops/pull/1190), [#1191](https://github.com/ethereum-optimism/superchain-ops/pull/1191), [#1192](https://github.com/ethereum-optimism/superchain-ops/pull/1192), [#1225](https://github.com/ethereum-optimism/superchain-ops/pull/1225), [#1226](https://github.com/ethereum-optimism/superchain-ops/pull/1226))\n\n### New Owner Swap Template\nA new feature was added to allow swapping owner X to owner Y on a given Safe, enhancing the flexibility and security of Safe management. This template is crucial for security council operations that periodically swap owners.\n([#1219](https://github.com/ethereum-optimism/superchain-ops/pull/1219))\n\n### Documentation Improvements\nMinor documentation fixes were implemented for Base U16a, improving clarity and accuracy for validation processes.\n([#1223](https://github.com/ethereum-optimism/superchain-ops/pull/1223))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Streamlining Task Management and Architecture\nSeveral issues related to the previous architecture and task management systems were closed. This includes making `SignFromJson` compatible with Safe Web UI ([#49](https://github.com/ethereum-optimism/superchain-ops/issues/49)), cleaning up JSON length parsing ([#12](https://github.com/ethereum-optimism/superchain-ops/issues/12)), and improving proposal operations ([#140](https://github.com/ethereum-optimism/superchain-ops/issues/140)). The `VerificationBase` was merged into `JsonTxBuilderBase` ([#427](https://github.com/ethereum-optimism/superchain-ops/issues/427)), and a task tracking configuration was implemented ([#433](https://github.com/ethereum-optimism/superchain-ops/issues/433)).\n\n### Enhancing Developer Experience and Tooling\nImprovements to developer experience were addressed by closing issues such as making task invocation easier ([#593](https://github.com/ethereum-optimism/superchain-ops/issues/593)), updating README installation instructions ([#617](https://github.com/ethereum-optimism/superchain-ops/issues/617)), and creating a skeleton config test task ([#697](https://github.com/ethereum-optimism/superchain-ops/issues/697)). The `AccountAccessParser` was refactored ([#666](https://github.com/ethereum-optimism/superchain-ops/issues/666)), and the `signFromChildMultisig` function was refactored to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/superchain-ops/issues/781)).\n\n### CI Stability and Testing Improvements\nIssues impacting CI stability and testing were resolved, including `mise deps` rate limit errors ([#569](https://github.com/ethereum-optimism/superchain-ops/issues/569), [#628](https://github.com/ethereum-optimism/superchain-ops/issues/628)), and test failures with the latest Foundry version ([#577](https://github.com/ethereum-optimism/superchain-ops/issues/577)). Issues related to the `sim-seq` feature, such as killing anvil after simulation ([#646](https://github.com/ethereum-optimism/superchain-ops/issues/646)) and supporting Chain Governor 3/3 ([#647](https://github.com/ethereum-optimism/superchain-ops/issues/647)), were closed as `sim-seq` is no longer in use.\n\n### Security and Template Enhancements\nThe issue of reimplementing security council rehearsals using the new superchain-ops format was closed ([#529](https://github.com/ethereum-optimism/superchain-ops/issues/529)). The creation of a \"Swap Owner Template\" was completed ([#1167](https://github.com/ethereum-optimism/superchain-ops/issues/1167)), and additional safety checks for finance templates were deprioritized and closed ([#778](https://github.com/ethereum-optimism/superchain-ops/issues/778)).\n\n## NEW ISSUES\n\n### Superchain-Ops Flow Improvements\nA new issue was opened to report snags and suggest improvements for the superchain-ops flow, particularly during the signing process. Key points include confusion around `TODOs` in simulation output, the experimental nature of audit reports, the necessity of `op-txverify`, and the lack of explanation for \"normalized state diff hash.\"\n([#1224](https://github.com/ethereum-optimism/superchain-ops/issues/1224))\n\n### Testing and Helper Function Refinements\nNew issues were created to refine testing practices and helper functions. These include splitting assertions in tests for better granularity ([#17598](https://github.com/ethereum-optimism/superchain-ops/issues/17598)), adding an `_authorizeMinter(_minter)` helper function ([#17600](https://github.com/ethereum-optimism/superchain-ops/issues/17600)), and considering explicit custom error cases ([#17601](https://github.com/ethereum-optimism/superchain-ops/issues/17601)).\n\n## ACTIVE ISSUES\n\n### Superchain-Ops Flow Snags\nThe issue [#1224](https://github.com/ethereum-optimism/superchain-ops/issues/1224) highlights several pain points in the superchain-ops signing flow. @geoknee reported confusion regarding `TODOs` in simulation output, the experimental nature of audit reports, the requirement for `op-txverify`, and the lack of explanation for \"normalized state diff hash.\" @blmalone responded by clarifying that `TODOs` are intended for task developers during simulation, not signers, and that audit reports were experimental. A PR was opened to address some of these snags, including changing language around audit reports and adding a missing `VALIDATION.md` section. @geoknee questioned the assumption that signers don't simulate, suggesting that `TODOs` still impact signer UX.\n\n### Skeleton Upgrade Test Task\nIssue [#698](https://github.com/ethereum-optimism/superchain-ops/issues/698) remains open, with @blmalone requesting @alcueca to provide more detail on the task. The issue aims to create a skeleton for upgrade test tasks, which is crucial for standardizing and streamlining the testing process for future upgrades.", "2025-10-13T20:48:38.185Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-25", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-25", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 25, 2025)\n## OVERVIEW \nToday's development focused on expanding token data with the addition of LITKEY for Optimism and Base. Discussions on active issues included preparing for the Fusaka L1 activation and refining the `superchain-ops` flow.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Token Data Expansion\n- Added LITKEY token data for Optimism and Base, including Sepolia support for both chains ([#1214](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1214)).\n\n## NEWLY OPENED PULL REQUESTS\n- No new pull requests were opened today.\n\n## CLOSED ISSUES\n- No issues were closed today.\n\n## NEW ISSUES\n### Engine API Validation Refinement\n- A new issue was opened to discuss deduplicating Engine API validation checks in `Miner.prepareWork`, which are currently redundant with existing checks in `eth/catalyst/api_optimism.go` ([#688](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/688)).\n\n## ACTIVE ISSUES\n### Fusaka L1 Activation Preparation\n- Discussion on [#17472](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17472) centered on the `op-batcher`'s necessary behavioral changes when Fusaka activates on L1, specifically regarding sending blob transactions with cell proofs instead of blob proofs. A recipe for manual testing against a Fusaka L1 was shared.\n\n### Improving Superchain Operations Flow\n- On [#1224](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1224), feedback was provided on the `superchain-ops` signing flow. Key points included:\n    - Clarification on why 'TODOs' are printed during task simulation for task developers, but not during signing.\n    - Acknowledgment that the inclusion of audit reports was experimental and needs language adjustment.\n    - Discussion on the necessity of `op-txverify` for different signers.\n    - Suggestions for improving boilerplate markdown and the clarity of the \"normalized state diff hash.\"\n    - A PR was opened to address some of the raised snags.", "2025-10-13T20:48:38.607Z"]
["ethereum-optimism/infra_day_2025-09-25", "ethereum-optimism/infra", "day", "2025-09-25", "# ethereum-optimism/infra Daily Update (Sep 25, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing capabilities with a new \"flake-shake\" runner mode for identifying flaky tests and improving `proxyd` with public access and authentication features. Minor code cleanup was also performed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing Infrastructure\nA new \"flake-shake\" runner mode was introduced in `op-acceptor` to identify flaky tests by running them multiple times. This feature generates HTML and JSON reports for CI artifacts, which will be used to aggregate results across multiple runners and improve test reliability [#475](https://github.com/ethereum-optimism/infra/pull/475).\n\n### `proxyd` Access and Authentication Improvements\nThe `proxyd` component was updated to enable public access and authentication, enhancing its flexibility and security [#424](https://github.com/ethereum-optimism/infra/pull/424).\n\n### Codebase Cleanup\nAn unused `min` function was removed from `op-acceptor/logging` as Go 1.21 now includes built-in `min` and `max` functions, streamlining the codebase [#476](https://github.com/ethereum-optimism/infra/pull/476).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Engine API Validation Deduplication\nA new issue was opened to address the duplication of Engine API validation checks within `Miner.prepareWork` that are already performed as part of the Engine API validation in `eth/catalyst/api_optimism.go` [#688](https://github.com/ethereum-optimism/infra/issues/688). The discussion suggests moving additional checks, such as those for force-included L1 attributes deposit transactions and specific L1 attribute deposit data lengths for Jovian, into the Engine API checks.\n\n## ACTIVE ISSUES\n### `op-batcher` Preparation for Fusaka\nDiscussion on preparing `op-batcher` for Fusaka activation continued [#17472](https://github.com/ethereum-optimism/infra/issues/17472). A comment provided a recipe for manual testing against a Fusaka L1, emphasizing the need for the batcher to send blob transactions with cell proofs instead of blob proofs once Fusaka activates.\n\n### Improved `superchain-ops` Flow\nFeedback was provided on the `superchain-ops` signing flow, highlighting several snags and areas for improvement [#1224](https://github.com/ethereum-optimism/infra/issues/1224). Key points from the discussion include:\n- The printing of markdown with 'TODOs' during task simulation is intended for task developers to create `VALIDATION.md` files, but it was noted that signers also perform simulations, making it part of their UX.\n- The language around audit reports needs to be clarified as their inclusion in the workflow was experimental.\n- The necessity of `op-txverify` for all signers is still under consideration.\n- Suggestions were made to improve boilerplate markdown files and clarify the meaning of \"normalized state diff hash.\"\n- The importance of retaining Tenderly links for non-OPCM upgrades was reiterated.", "2025-10-13T20:48:40.960Z"]
["ethereum-optimism/op-geth_day_2025-09-25", "ethereum-optimism/op-geth", "day", "2025-09-25", "# ethereum-optimism/op-geth Daily Update (Sep 25, 2025)\n## OVERVIEW \nThe day saw the introduction of a new experimental feature for a mint-burn precompile and a new issue to deduplicate Engine API validations. Discussions continued on preparing the op-batcher for Fusaka and improving the superchain-ops flow.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#687](https://github.com/ethereum-optimism/op-geth/pull/687), was opened to experiment with a mint-burn precompile.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n### Engine API Validation Deduplication\nA new issue, [#688](https://github.com/ethereum-optimism/op-geth/issues/688), was opened to address the duplication of Engine API validation checks in `Miner.prepareWork`. The issue highlights that many validation checks for payload attributes are redundant, as they are already performed within `eth/catalyst/api_optimism.go`. A comment suggested moving additional checks, such as those for force-included L1 attributes deposit transactions and Jovian's 178-byte L1 attributes deposit data, into the Engine API checks.\n\n## ACTIVE ISSUES\n### Preparing op-batcher for Fusaka\nDiscussion on [#17472](https://github.com/ethereum-optimism/op-geth/issues/17472) continued regarding the `op-batcher`'s adaptation to Fusaka's activation on L1. The latest comment provided a recipe for manual testing against a Fusaka L1, emphasizing the need for the batcher to send blob transactions with cell proofs instead of blob proofs.\n\n### Improving Superchain-Ops Flow\nOn [#1224](https://github.com/ethereum-optimism/op-geth/issues/1224), feedback was provided on the `superchain-ops` signing flow. Key points from the discussion include:\n- Clarification that \"TODOs\" in markdown are intentionally printed during task simulation for task developers, but not during actual signing.\n- Acknowledgment that the inclusion of audit reports in the workflow is experimental and the language should be adjusted.\n- The necessity of `op-txverify` for some signers is still under debate.\n- Suggestions for improving markdown formatting and explanations, such as for the \"normalized state diff hash.\"\n- A PR was raised to address some of the identified snags.", "2025-10-13T20:48:41.433Z"]
["ethereum-optimism/superchain-registry_day_2025-09-24", "ethereum-optimism/superchain-registry", "day", "2025-09-24", "# ethereum-optimism/superchain-registry Daily Update (Sep 24, 2025)\n## OVERVIEW \nThe day saw the addition of a new standard version for `op-contracts/v3.0.1` to both Sepolia and Mainnet, enabling configurable gas limits. Several long-standing issues related to `superchain-ops` architecture and tooling were closed, reflecting significant progress in streamlining development processes.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain-Ops Architecture Streamlining\nA number of issues related to the `superchain-ops` architecture and its underlying components were closed, indicating a significant shift and improvement in the tooling and processes. This includes the deprecation of `JsonTxBuilderBase.sol` and `sim-seq`, and the implementation of new task management and testing methodologies. ([#49](https://github.com/ethereum-optimism/superchain-registry/issues/49), [#12](https://github.com/ethereum-optimism/superchain-registry/issues/12), [#140](https://github.com/ethereum-optimism/superchain-registry/issues/140), [#427](https://github.com/ethereum-optimism/superchain-registry/issues/427), [#433](https://github.com/ethereum-optimism/superchain-registry/issues/433), [#436](https://github.com/ethereum-optimism/superchain-registry/issues/436), [#489](https://github.com/ethereum-optimism/superchain-registry/issues/489), [#593](https://github.com/ethereum-optimism/superchain-registry/issues/593), [#577](https://github.com/ethereum-optimism/superchain-registry/issues/577), [#608](https://github.com/ethereum-optimism/superchain-registry/issues/608), [#646](https://github.com/ethereum-optimism/superchain-registry/issues/646), [#647](https://github.com/ethereum-optimism/superchain-registry/issues/647), [#666](https://github.com/ethereum-optimism/superchain-registry/issues/666), [#714](https://github.com/ethereum-optimism/superchain-registry/issues/714), [#781](https://github.com/ethereum-optimism/superchain-registry/issues/781))\n\n### Standard Version Updates\nA new standard version, `op-contracts/v3.0.1`, was added for both Sepolia and Mainnet. This update specifically allows for configurable gas limits within the `DeployOPChain.s.sol` script. ([#1107](https://github.com/ethereum-optimism/superchain-registry/pull/1107))\n\n### CI/CD and Developer Experience Improvements\nIssues related to CI rate limiting and installation instructions were addressed, leading to a more robust and user-friendly development environment. The enforcement of folder numbering in tasks was also implemented. ([#203](https://github.com/ethereum-optimism/superchain-registry/issues/203), [#569](https://github.com/ethereum-optimism/superchain-registry/issues/569), [#617](https://github.com/ethereum-optimism/superchain-registry/issues/617), [#628](https://github.com/ethereum-optimism/superchain-registry/issues/628))\n\n### Security Council and Template Development\nWork on reimplementing security council rehearsals using the new `superchain-ops` format was completed, and a template for swapping owners was created. ([#529](https://github.com/ethereum-optimism/superchain-registry/issues/529), [#1167](https://github.com/ethereum-optimism/superchain-registry/issues/1167))\n\n## NEWLY OPENED PULL REQUESTS\nNone.\n\n## CLOSED ISSUES\n\n### Superchain-Ops Architecture and Tooling Refinements\nSeveral issues related to the `superchain-ops` architecture and its associated tooling were closed. This includes making `SignFromJson` compatible with Safe Web UI ([#49](https://github.com/ethereum-optimism/superchain-registry/issues/49)), cleaning up JSON length parsing ([#12](https://github.com/ethereum-optimism/superchain-registry/issues/12)), improving proposal operations ([#140](https://github.com/ethereum-optimism/superchain-registry/issues/140)), merging `VerificationBase` into `JsonTxBuilderBase` ([#427](https://github.com/ethereum-optimism/superchain-registry/issues/427)), and removing etch from proposal simulation ([#436](https://github.com/ethereum-optimism/superchain-registry/issues/436)). These closures reflect significant architectural changes and improvements in the `superchain-ops` framework.\n\n### Developer Experience and CI/CD Enhancements\nIssues aimed at improving the developer experience and CI/CD pipeline were closed. This includes enforcing folder numbering ([#203](https://github.com/ethereum-optimism/superchain-registry/issues/203)), addressing CI errors related to `mise deps` rate limits ([#569](https://github.com/ethereum-optimism/superchain-registry/issues/569)), fixing test failures with the latest Foundry version ([#577](https://github.com/ethereum-optimism/superchain-registry/issues/577)), updating README installation instructions ([#617](https://github.com/ethereum-optimism/superchain-registry/issues/617)), and resolving CI rate limit issues ([#628](https://github.com/ethereum-optimism/superchain-registry/issues/628)).\n\n### Task Management and Template Development\nSeveral issues related to task management and template development were closed. This includes implementing a task tracking configuration ([#433](https://github.com/ethereum-optimism/superchain-registry/issues/433)), providing new template tooling for E2E testing ([#489](https://github.com/ethereum-optimism/superchain-registry/issues/489)), reimplementing security council rehearsals ([#529](https://github.com/ethereum-optimism/superchain-registry/issues/529)), making task invocation easier ([#593](https://github.com/ethereum-optimism/superchain-registry/issues/593)), implementing `checkStateDiff` in example templates ([#608](https://github.com/ethereum-optimism/superchain-registry/issues/608)), creating a swap owner template ([#1167](https://github.com/ethereum-optimism/superchain-registry/issues/1167)), and creating a skeleton config test task ([#697](https://github.com/ethereum-optimism/superchain-registry/issues/697)).\n\n### Simulation and Output Refinements\nIssues concerning simulation processes and terminal output were closed. This includes killing anvil after simulation ([#646](https://github.com/ethereum-optimism/superchain-registry/issues/646)), supporting the Chain Governor 3/3 during simulation ([#647](https://github.com/ethereum-optimism/superchain-registry/issues/647)), displaying datahash and message hash in SIM-SEQUENCE ([#714](https://github.com/ethereum-optimism/superchain-registry/issues/714)), and refactoring `signFromChildMultisig` to reduce noisy terminal output ([#781](https://github.com/ethereum-optimism/superchain-registry/issues/781)).\n\n## NEW ISSUES\n\n### Code Quality and Best Practices\nNew issues were opened to address code quality and best practices within the codebase. This includes splitting assertions in tests for better clarity and maintainability ([#17598](https://github.com/ethereum-optimism/superchain-registry/issues/17598)), adding a helper function for authorizing minters to improve code reusability ([#17600](https://github.com/ethereum-optimism/superchain-registry/issues/17600)), and considering explicit custom error cases for improved error handling ([#17601](https://github.com/ethereum-optimism/superchain-registry/issues/17601)).\n\n### Developer Workflow and User Experience\nAn issue was opened to report snags and areas for improvement in the `superchain-ops` signing flow, highlighting challenges encountered during task simulation and signing processes ([#1224](https://github.com/ethereum-optimism/superchain-registry/issues/1224)).\n\n## ACTIVE ISSUES\n\n### Snags in Superchain-Ops Flow ([#1224](https://github.com/ethereum-optimism/superchain-registry/issues/1224))\nDiscussion revolves around improving the `superchain-ops` signing flow. @geoknee reported several snags, including confusing output during simulation, unclear requirements for audit reports, and the need for better explanations of concepts like \"normalized state diff hash.\" @blmalone provided a PR addressing some of these points, clarifying that \"TODOs\" are for task developers during simulation, and acknowledging that the audit report workflow was experimental. There's an ongoing discussion about whether signers are expected to run task simulations and the implications for their user experience.\n\n### Create Skeleton Upgrade Test Task ([#698](https://github.com/ethereum-optimism/superchain-registry/issues/698))\n@blmalone requested @alcueca to add more detail to this ticket, indicating that the scope or requirements for creating a skeleton upgrade test task need further clarification.", "2025-10-13T20:48:42.410Z"]
["ethereum-optimism/infra_day_2025-09-26", "ethereum-optimism/infra", "day", "2025-09-26", "# ethereum-optimism/infra Daily Update (Sep 26, 2025)\n## OVERVIEW \nThe day's development activity was minimal, with a single new pull request opened to address a CircleCI Go releaser fix.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#477](https://github.com/ethereum-optimism/infra/pull/477), was opened to fix an issue with the CircleCI Go releaser.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:42.727Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-26", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-26", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 26, 2025)\n## OVERVIEW \nToday's development focused on expanding chain and token support, including the addition of Celo-Sepolia and the IncomRWA token, alongside an important dependency update.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Chain and Token Support Expansion\nNew chains and tokens were integrated, enhancing the ecosystem's reach. This includes the addition of the Celo-Sepolia testnet and its WETH token, as well as the IncomRWA (iRWA) token to the Base Network. The Wrapped WIT token address on Sepolia was also updated.\n[#1199](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1199), [#1200](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1200), [#1211](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1211)\n\n### Dependency Updates\nThe `eslint-plugin-unicorn` dependency was bumped from version 42.0.0 to 44.0.2, ensuring the project uses updated linting rules and improvements.\n[#1092](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1092)\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:43.007Z"]
["ethereum-optimism/op-analytics_day_2025-09-26", "ethereum-optimism/op-analytics", "day", "2025-09-26", "# ethereum-optimism/op-analytics Daily Update (Sep 26, 2025)\n## OVERVIEW \nThe day's development focused on updating Helm configurations for Dagster, specifically addressing a sunsetting requirement.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Helm Chart Updates\n*   Updated `helm/dagster/values.yaml` to reflect changes related to a sunsetting requirement, as detailed in [#1748](https://github.com/ethereum-optimism/op-analytics/pull/1748).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened.\n\n## CLOSED ISSUES\nNo issues were closed.\n\n## NEW ISSUES\nNo new issues were reported.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:43.728Z"]
["ethereum-optimism/op-geth_day_2025-09-26", "ethereum-optimism/op-geth", "day", "2025-09-26", "# ethereum-optimism/op-geth Daily Update (Sep 26, 2025)\n## OVERVIEW \nThe day's development activity focused on a significant update to the underlying go-ethereum dependency, with a new pull request opened to merge version v1.16.4.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#689](https://github.com/ethereum-optimism/op-geth/pull/689), was opened to merge `go-ethereum` version `v1.16.4`.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-10-13T20:48:44.114Z"]
["ethereum-optimism/superchain-ops_day_2025-09-25", "ethereum-optimism/superchain-ops", "day", "2025-09-25", "# ethereum-optimism/superchain-ops Daily Update (Sep 25, 2025)\n## OVERVIEW \nToday's development focused on enhancing CI reliability with retry mechanisms, refining multisig task processes, and updating task statuses. Key updates include improved CircleCI stability and clearer documentation for Superchain operations.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### CI Reliability Improvements\n*   Implemented retry mechanisms for `forge_test` and `template_regression_tests` in CircleCI to mitigate flakiness from RPC nodes, ensuring more stable and reliable continuous integration processes ([#1229](https://github.com/ethereum-optimism/superchain-ops/pull/1229)).\n\n### Multisig Task Refinements\n*   Addressed feedback from issue #1224, improving the `MultisigTaskPrinter.sol` and `MultisigTask.sol` to enhance the user experience and clarity for multisig operations ([#1230](https://github.com/ethereum-optimism/superchain-ops/pull/1230)).\n*   Updated README commands for Uni U16a tasks to ensure correctness for signers and facilitators, improving documentation for critical Superchain upgrades ([#1227](https://github.com/ethereum-optimism/superchain-ops/pull/1227)).\n\n### Task Status and Configuration Updates\n*   Updated the status of several Sepolia tasks to \"executed\" with corresponding Etherscan links, providing clear progress tracking for deployments ([#1228](https://github.com/ethereum-optimism/superchain-ops/pull/1228)).\n*   Added new configuration files for Fusaka (fus) and FOS (fos) rotations, preparing for upcoming operational changes ([#1222](https://github.com/ethereum-optimism/superchain-ops/pull/1222)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Engine API Validation Deduplication\n*   A new issue was opened to address the duplication of Engine API validation checks within `Miner.prepareWork`, suggesting that many of these checks are already performed as part of the Engine API validation in `eth/catalyst/api_optimism.go` ([#688](https://github.com/ethereum-optimism/superchain-ops/issues/688)). The discussion suggests moving additional checks, such as those for force-included L1 attributes deposit transactions and Jovian's L1 attributes deposit data length, into the Engine API checks.\n\n## ACTIVE ISSUES\n\n### Feedback on Superchain-Ops Flow Improvements ([#1224](https://github.com/ethereum-optimism/superchain-ops/issues/1224))\nDiscussion continued regarding feedback on the improved superchain-ops flow. Key points from the latest comments include:\n*   **Signer Simulation:** @geoknee questioned if signers are expected to perform task simulation, implying that TODOs printed during simulation are part of the signer's UX. @blmalone clarified that while signers are expected to simulate, most check Tenderly links after running the `sign` command.\n*   **TODOs in Simulation:** @blmalone explained that TODOs are intentionally printed during task simulation to guide task developers in creating `VALIDATION.md` files, especially for state diff sections. These TODOs are not printed during the actual signing process.\n*   **Audit Reports:** The experimental nature of audit reports in the workflow was acknowledged, with a fix proposed to change the language around them.\n*   **`op-txverify` Requirement:** The necessity of `op-txverify` for some signers but not others was highlighted as an area needing a solid decision.\n*   **Markdown and Tenderly Links:** Suggestions were made to improve markdown quality and to retain Tenderly links for validating state diffs in non-OPCM upgrades.\n*   **\"Normalized State Diff Hash\":** A request was made to include an explanation of what the \"normalized state diff hash\" is.\n\n### op-batcher: prepare for Fusaka ([#17472](https://github.com/ethereum-optimism/superchain-ops/issues/17472))\nThe discussion focused on the `op-batcher`'s behavior change when Fusaka activates on L1.\n*   @geoknee provided a recipe for manual testing against a Fusaka L1, including a link to a Notion document detailing how to point a batcher at a Fusaka devnet. This is crucial for ensuring the batcher sends blob transactions with cell proofs instead of blob proofs post-Fusaka activation.", "2025-10-13T20:48:44.299Z"]
["ethereum-optimism/superchain-ops_day_2025-09-26", "ethereum-optimism/superchain-ops", "day", "2025-09-26", "# ethereum-optimism/superchain-ops Daily Update (Sep 26, 2025)\n## OVERVIEW \nThe day's development focused on adding a new template and example task for transferring L2PAO from L1 to an EOA, enhancing testing infrastructure.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### L2PAO Transfer Mechanism\nA new template and an example task were introduced to facilitate the transfer of L2PAO from L1 to an EOA, along with corresponding configuration and test files ([#1233](https://github.com/ethereum-optimism/superchain-ops/pull/1233)).\n\n## NEWLY OPENED PULL REQUESTS\n- No new pull requests were opened.\n\n## CLOSED ISSUES\n- No issues were closed.\n\n## NEW ISSUES\n- No new issues were reported.\n\n## ACTIVE ISSUES\n- No active issues with more than 3 comments.", "2025-10-13T20:48:45.374Z"]
["ethereum-optimism/optimism_day_2025-09-27", "ethereum-optimism/optimism", "day", "2025-09-27", "# ethereum-optimism/optimism Daily Update (Sep 27, 2025)\n## OVERVIEW \nToday's development focused on enhancing the `kona-proof`'s compatibility with L1 chain configurations, crucial for the upcoming Fusaka update. This ensures the proving system can correctly interpret L1 chain data.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Kona-Proof L1 Chain Configuration Compatibility\nA significant feature was added to make `kona-proof` compatible with L1 chain configurations, which is essential for the Fusaka update. This involved modifications to the `op-challenger` and `op-e2e` components to explicitly provide L1 chain configuration to `kona-proof` and `op-program`. ([#17638](https://github.com/ethereum-optimism/optimism/pull/17638))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### L2CL<>L2EL Syncing Conditions\nDiscussion continues on understanding the conditions for L2EL to initiate EL Syncing, particularly for `op-geth` with `op-sepolia` ([#17628](https://github.com/ethereum-optimism/optimism/issues/17628)). The latest comments clarify that the EL client should simply sync after receiving a FCU call, regardless of whether it's a snap-sync or full block execution. There's a consensus that the EL client's internal syncing mechanism should not leak implementation details to the L2CL. The issue may be closed as the approach to handle EL Syncs after initial runs is being addressed in `engineController.insertUnsafePayload`.", "2025-10-13T20:48:46.169Z"]
["ethereum-optimism/superchain-ops_day_2025-09-27", "ethereum-optimism/superchain-ops", "day", "2025-09-27", "# ethereum-optimism/superchain-ops Daily Update (Sep 27, 2025)\n## OVERVIEW \nThe day's focus was on refining the `022-U16a-opcm-upgrade-v410-base` instructions, enhancing clarity and detail for semi-technical users, and marking the upgrade as ready for signing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Upgrade Instruction Refinements\nImprovements were made to the `022-U16a-opcm-upgrade-v410-base` instructions, adding greater guidance and clarity for semi-technical users across various validation and facilitator documents. ([#1232](https://github.com/ethereum-optimism/superchain-ops/pull/1232))\n\n### Upgrade Readiness\nThe Base U16a Mainnet Upgrade (`022-U16a-opcm-upgrade-v410-base`) was marked as `READY TO SIGN` in its `README.md` instructions. ([#1234](https://github.com/ethereum-optimism/superchain-ops/pull/1234))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### L2CL<>L2EL Syncing Conditions\nDiscussion continued on understanding the conditions for L2EL to start EL Syncing, particularly for `op-geth` with `op-sepolia`. The latest comments clarify that the EL client should simply sync, and the method (e.g., snap-sync vs. full block execution) is less critical than its ability to reach the new chain head after a FCU call. The ticket may be closed as this is potentially handled by `engineController.insertUnsafePayload` for avoiding `ReqRes` sync. ([#17628](https://github.com/ethereum-optimism/superchain-ops/issues/17628))", "2025-10-13T20:48:46.997Z"]
["ethereum-optimism/docs_day_2025-09-27", "ethereum-optimism/docs", "day", "2025-09-27", "# ethereum-optimism/docs Daily Update (Sep 27, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, or documentation enhancements. A new issue was opened regarding a theme-switcher button text visibility problem in light mode. Discussions continued on an active issue concerning L2EL syncing conditions.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\n### Documentation Site Display Issues\n*   A new issue was reported concerning the theme-switcher button text visibility in light mode on the Optimism docs site, where the text is not displayed properly when the button is active ([#1752](https://github.com/ethereum-optimism/docs/issues/1752)).\n\n## ACTIVE ISSUES\n### L2EL Syncing Conditions\nDiscussions continued on the issue of determining the conditions under which L2EL can start syncing ([#17628](https://github.com/ethereum-optimism/docs/issues/17628)). On September 27th, ajsutton commented that `op-geth` will still sync even if it has a finalized sync, and the primary concern is for the EL to reach the new chain head, regardless of the specific syncing mechanism. This suggests that the focus should be on the EL's ability to sync rather than the method it uses.", "2025-10-13T20:48:47.666Z"]
["ethereum-optimism/optimism_day_2025-09-25", "ethereum-optimism/optimism", "day", "2025-09-25", "# ethereum-optimism/optimism Daily Update (Sep 25, 2025)\n\n## OVERVIEW \nToday's development focused on integrating new creator pattern implementations, refining custom gas token features, and enhancing testing infrastructure. Several bug fixes were implemented, and new pull requests were opened to address logging, deployment, and monitoring.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Core Protocol Enhancements & Bug Fixes\nSignificant progress was made on integrating new creator pattern implementations for FaultDisputeGameV2 and PermissionedDisputeGameV2, enhancing the core dispute game logic ([#17329](https://github.com/ethereum-optimism/optimism/pull/17329)). A critical bug in `op-devstack` was fixed, ensuring correct finalization waiting behavior ([#17618](https://github.com/ethereum-optimism/optimism/pull/17618)). Additionally, comments and fixes related to the Custom Gas Token (CGT) feature were addressed, improving its stability and integration ([#17612](https://github.com/ethereum-optimism/optimism/pull/17612), [#17621](https://github.com/ethereum-optimism/optimism/pull/17621)).\n\n### Testing and CI/CD Improvements\nNew invariant tests were added for Custom Gas Token to ensure supply conservation, mint/withdraw, and burn/deposit consistency ([#17489](https://github.com/ethereum-optimism/optimism/pull/17489)). The `op-acceptor` was updated to v3.3.1, and sync-tester hardfork tests were refactored for better parallel execution in CI ([#17515](https://github.com/ethereum-optimism/optimism/pull/17515), [#17535](https://github.com/ethereum-optimism/optimism/pull/17535)). A temporary disablement of `TestSyncTesterELSync` was implemented due to flakiness, with re-enablement tracked separately ([#17617](https://github.com/ethereum-optimism/optimism/pull/17617)).\n\n### Deployment and Configuration Updates\nSupport for custom gasLimit was added to `op-deployer`, aligning with `op-contracts/v3.0.1` and enabling more flexible chain deployments ([#17585](https://github.com/ethereum-optimism/optimism/pull/17585)). The `OPContractsManager` was updated to zero out cannon-kona game types during migration when the `CANNON_KONA` dev feature is enabled ([#17523](https://github.com/ethereum-optimism/optimism/pull/17523)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17607](https://github.com/ethereum-optimism/optimism/pull/17607) fix(challenger): reduce asterisc info logging frequency from 10M to 1\u2026: This PR aims to reduce the frequency of info logging in the challenger component.\n- [#17613](https://github.com/ethereum-optimism/optimism/pull/17613) op-deployer: prepare deploy scripts with forge invokers: This PR prepares deploy scripts by integrating forge invokers.\n- [#17622](https://github.com/ethereum-optimism/optimism/pull/17622) op-dispute-mon: node endpoint error metrics: This PR introduces error metrics for node endpoints in the dispute monitor.\n\n## CLOSED ISSUES\n\n### Custom Gas Token Refinements\nSeveral issues related to the Custom Gas Token feature were closed, including a general review ([#17586](https://github.com/ethereum-optimism/optimism/issues/17586)), minor naming conventions ([#17587](https://github.com/ethereum-optimism/optimism/issues/17587)), considerations for explicit custom error cases ([#17588](https://github.com/ethereum-optimism/optimism/issues/17588), [#17601](https://github.com/ethereum-optimism/optimism/issues/17601)), and refactoring test contracts with `skipIfDevFeatureDisabled` ([#17604](https://github.com/ethereum-optimism/optimism/issues/17604)).\n\n### Test Suite Improvements\nIssues addressing test suite improvements were closed, such as refactoring `OptimismPortal2.t.sol` ([#17593](https://github.com/ethereum-optimism/optimism/issues/17593), [#17591](https://github.com/ethereum-optimism/optimism/issues/17591), [#17592](https://github.com/ethereum-optimism/optimism/issues/17592)), merging `L1Block` tests using `DevFeatures` ([#17596](https://github.com/ethereum-optimism/optimism/issues/17596)), removing unnecessary `virtual` tags ([#17595](https://github.com/ethereum-optimism/optimism/issues/17595)), splitting assertions in tests ([#17598](https://github.com/ethereum-optimism/optimism/issues/17598)), and refactoring test initializers ([#17603](https://github.com/ethereum-optimism/optimism/issues/17603)).\n\n### Helper Functions and Setup Refactoring\nIssues related to code organization and test setup were closed, including adding `_authorizeMinter(_minter)` as a helper function ([#17600](https://github.com/ethereum-optimism/optimism/issues/17600)) and replacing `setInputCGTEnabled` modifier with `setUp` in tests ([#17605](https://github.com/ethereum-optimism/optimism/issues/17605)).\n\n### Critical Bug Resolution\nA critical bug where the recommit mechanism failed due to interrupt signal reuse, leading to degraded transaction throughput, was identified and closed ([#17606](https://github.com/ethereum-optimism/optimism/issues/17606)).\n\n## NEW ISSUES\n\n### Test Flakiness Investigation\nAn issue was opened to investigate and root cause failures in `TestSyncTesterELSync` within `op-acceptance-tests` ([#17615](https://github.com/ethereum-optimism/optimism/issues/17615)).\n\n### Recommit Mechanism Failure\nA new issue was created to address the recommit mechanism in `op-geth` failing due to interrupt signal reuse, resulting in blocks with only one transaction ([#17606](https://github.com/ethereum-optimism/optimism/issues/17606)).\n\n## ACTIVE ISSUES\n\n### Fusaka Preparation for op-batcher ([#17472](https://github.com/ethereum-optimism/optimism/issues/17472))\nDiscussion continues on preparing `op-batcher` for the Fusaka activation on L1. The key point is that the batcher will need to send blob transactions with *cell proofs* instead of *blob proofs*. A recipe for manual testing against a Fusaka L1 has been shared to aid in this transition.\n\n### Snag Report on Improved Superchain-Ops Flow ([#1224](https://github.com/ethereum-optimism/optimism/issues/1224))\nFeedback on the `superchain-ops` signing flow highlights several areas for improvement. Key discussion points include:\n- The printing of markdown with 'TODOs' during task simulation: While intended for task developers, it's questioned if this impacts the signer's UX, especially if signers are expected to simulate tasks.\n- The experimental nature of audit reports in the workflow: The language around this needs to be clarified as it's not a fully committed feature.\n- The necessity of `op-txverify` for all signers: This remains an open decision point.\n- The need for clearer markdown and validation for state diffs, particularly for non-OPCM upgrades.\n- A request for an explanation of the \"normalized state diff hash.\"\nA PR has been raised to address some of these snags.\n\n### Deduplicate Engine API Validations in `Miner.prepareWork` ([#688](https://github.com/ethereum-optimism/optimism/issues/688))\nThe discussion revolves around the duplication of Engine API validation checks in `Miner.prepareWork` that are already performed in `eth/catalyst/api_optimism.go`. There's a suggestion to move additional checks into the Engine API, such as:\n- Optimism chains requiring a force-included L1 attributes deposit transaction.\n- Jovian requiring a specific length (178 bytes) for L1 attributes deposit data to extract `daFootprintScalar`.", "2025-10-13T20:48:47.969Z"]
["ethereum-optimism/optimism_day_2025-09-28", "ethereum-optimism/optimism", "day", "2025-09-28", "# ethereum-optimism/optimism Daily Update (Sep 28, 2025)\n## OVERVIEW \nThe day saw the introduction of a new feature to enhance testing capabilities, specifically adding EL engine mocking support to `op-sync-tester`. This development directly addresses an active issue concerning the validation of L2CL by mimicking different L2EL implementations.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing Capabilities\nA new feature was introduced to add EL engine mocking support to `op-sync-tester` ([#17645](https://github.com/ethereum-optimism/optimism/pull/17645)). This is a significant step towards validating L2CL by allowing the simulation of various L2EL implementations, particularly for initial EL sync and diverse engine API responses.\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#17645](https://github.com/ethereum-optimism/optimism/pull/17645), titled \"feat: add EL engine mocking support to op-sync-tester\" was opened. This PR introduces a new feature to enhance testing.\n\n## CLOSED ISSUES\nNo issues were closed on this day.\n\n## NEW ISSUES\nNo new issues were opened on this day.\n\n## ACTIVE ISSUES\n### op-sync-tester: Mock different EL implementations for initial EL Sync\nDiscussion on [#17632](https://github.com/ethereum-optimism/optimism/issues/17632) continued with a new comment from @avorylli. They indicated that an implementation of the proposed feature (mocking different EL implementations for initial EL Sync) has been made and requested a review from @pcw109550. This suggests progress on addressing the need to validate L2CL by mimicking multiple L2EL implementations.", "2025-10-13T20:48:48.796Z"]
["ethereum-optimism/optimism_day_2025-09-26", "ethereum-optimism/optimism", "day", "2025-09-26", "# ethereum-optimism/optimism Daily Update (Sep 26, 2025)\n## OVERVIEW \nToday's development focused on enhancing contract features, fixing critical bugs in contract tests and transaction handling, and improving testing infrastructure. Key updates include new dispute game flags, a fix for acceptance job memory usage, and updates for Fusaka compatibility.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Contract Enhancements & Feature Flags\nNew development feature flags, `CANNON_KONA` and `DEPLOY_V2_DISPUTE_GAMES`, were added to the bedrock contracts test matrix to support future dispute game functionalities ([#17635](https://github.com/ethereum-optimism/optimism/pull/17635)). Additionally, a basic rules file for Diamond was introduced, establishing a starting point for style guidelines ([#17640](https://github.com/ethereum-optimism/optimism/pull/17640)).\n\n### Bug Fixes in Testing and Transaction Management\nCritical bug fixes were implemented to optimize the testing pipeline and ensure correct transaction behavior. The acceptance job now skips building contract tests, reducing memory usage and speeding up execution ([#17639](https://github.com/ethereum-optimism/optimism/pull/17639)). A fix was also applied to the `auth minter` helper and `_mint` binding in `depositTransaction` tests ([#17642](https://github.com/ethereum-optimism/optimism/pull/17642)). Furthermore, the `txmgr` was updated to allow blobs to be sent with Fusaka-compatible cell proofs by configuration, addressing a key requirement for Fusaka activation on L2 ([#17620](https://github.com/ethereum-optimism/optimism/pull/17620)).\n\n### Testing Infrastructure Improvements\nSeveral updates were made to enhance the robustness and reliability of the testing suite. A new test was added for popping the same element in `op-node/rollup/clsync` ([#17608](https://github.com/ethereum-optimism/optimism/pull/17608)). The `op-acceptor` was updated to version `v3.4.2` ([#17623](https://github.com/ethereum-optimism/optimism/pull/17623)), and the `op-sync-tester` now retries block fetching when processing `newPayload` to prevent flakiness in `TestSyncTesterELSync` ([#17624](https://github.com/ethereum-optimism/optimism/pull/17624)).\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#17626](https://github.com/ethereum-optimism/optimism/pull/17626), was opened to remove `check-{canyon,delta,ecotone,fjord}` commands from `op-chain-ops`.\n\n## CLOSED ISSUES\n\n### Fusaka Compatibility and Testing Flakiness Resolved\nThe issue of `op-batcher` preparing for Fusaka activation, specifically sending blob transactions with cell proofs, has been resolved ([#17472](https://github.com/ethereum-optimism/optimism/issues/17472)). Additionally, the root cause of `TestSyncTesterELSync` failures in `op-acceptance-tests` has been identified and addressed ([#17615](https://github.com/ethereum-optimism/optimism/issues/17615)).\n\n### Contract Test Consolidation\nThe `L2ToL1MessagePasser` tests have been merged using `DevFeatures`, allowing for better organization and maintenance of contract tests ([#17597](https://github.com/ethereum-optimism/optimism/issues/17597)).\n\n## NEW ISSUES\n\n### L2CL and L2EL Synchronization Challenges\nNew issues have been opened to investigate the conditions for L2EL to start EL Syncing, particularly concerning `op-geth` with `op-sepolia` ([#17628](https://github.com/ethereum-optimism/optimism/issues/17628)). Further challenges include ensuring the verifier syncs to the tip of the chain, reaching the unsafe head through L1 reads and advancing safe heads ([#17629](https://github.com/ethereum-optimism/optimism/issues/17629)).\n\n### Sequencer and EL Sync Mode\nAn issue has been raised to understand why the sequencer cannot advance blocks when in EL Sync mode and to consolidate `sync.CLSync` and `sync.ELSync` modes ([#17630](https://github.com/ethereum-optimism/optimism/issues/17630)).\n\n### EL Sync Testing with Multiple Implementations\nA need has been identified to validate L2CL by mimicking multiple L2EL implementations for initial EL Sync, especially concerning different network behaviors and engine API responses ([#17632](https://github.com/ethereum-optimism/optimism/issues/17632)).\n\n## ACTIVE ISSUES\n\n### L2CL<>L2EL: Find out condition of L2EL for starting EL Syncing ([#17628](https://github.com/ethereum-optimism/optimism/issues/17628))\nThe discussion revolves around the conditions under which an Execution Layer (EL) client can initiate syncing, particularly for `op-geth` on `op-sepolia`. While the initial confusion about triggering snap-sync twice has been clarified, the consensus is that the EL client should simply sync, regardless of the specific mechanism (snap-sync or full block execution via p2p). The latest comment suggests that this issue might be handled by `engineController.insertUnsafePayload` and could potentially be closed, as the focus for removing `ReqRes` sync may shift to EL Syncs after the initial run. The key takeaway is that the EL client's prerequisites for backfilling should primarily be p2p connections to other nodes and receiving a `FCU` call to set new sync targets.", "2025-10-13T20:48:49.809Z"]
["ethereum-optimism/design-docs_day_2025-09-29", "ethereum-optimism/design-docs", "day", "2025-09-29", "# ethereum-optimism/design-docs Daily Update (Sep 29, 2025)\n## OVERVIEW \nThe day's activity focused on closing out several issues related to flashblocks RPC deployment and load testing, as well as clarifying conditions for L2EL syncing.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n\n## CLOSED ISSUES\n### Flashblocks Deployment & Testing\n- Deployment of a flashblocks-rpc node was completed, identified as `op-opn-reth-f-fb-0` [#16764](https://github.com/ethereum-optimism/design-docs/issues/16764).\n- Load tests for the `rollup-boost flashblocks forwarder` were performed, and results were documented, including a note on inflated latency due to testing location [#17462](https://github.com/ethereum-optimism/design-docs/issues/17462).\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n### L2CL<>L2EL Syncing Conditions\nDiscussion on [#17628](https://github.com/ethereum-optimism/design-docs/issues/17628) revolved around the conditions for L2 Execution Layer (EL) to start syncing. Key points from the latest comments include:\n- @pcw109550 agreed with previous comments, suggesting refinement of the ticket to avoid leaking EL implementation details and acknowledging a misunderstanding about triggering snap-sync twice.\n- @sebastianst clarified that EL clients primarily need p2p connections to other nodes and a FCU call to set new sync targets to backfill blocks, not necessarily snap-sync.\n- @ajsutton emphasized that op-geth will still sync even if it doesn't trigger snap sync after a finalized sync, and the main concern is for the EL to reach the new chain head, regardless of the sync mechanism.", "2025-10-13T20:48:49.837Z"]
["ethereum-optimism/infra_day_2025-09-29", "ethereum-optimism/infra", "day", "2025-09-29", "# ethereum-optimism/infra Daily Update (Sep 29, 2025)\n## OVERVIEW \nToday's development focused on enhancing logging capabilities within `op-acceptor` and resolving several key issues related to flashblocks deployment and load testing, as well as clarifying L2CL and L2EL synchronization conditions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Logging and ANSI Stripping in `op-acceptor`\nA new feature was added to `op-acceptor` to improve logging by replacing the custom ANSI stripper with a more robust solution, ensuring cleaner log outputs. ([#478](https://github.com/ethereum-optimism/infra/pull/478))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#480](https://github.com/ethereum-optimism/infra/pull/480) Jelias2/proxyd mise build fix, was opened.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Load Testing\nThe issue of deploying a flashblocks-rpc node was closed, with confirmation of a successful spin-up. Additionally, load tests for the rollup-boost flashblocks forwarder were completed and documented. ([#16764](https://github.com/ethereum-optimism/infra/issues/16764), [#17462](https://github.com/ethereum-optimism/infra/issues/17462))\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### L2CL and L2EL Synchronization Conditions\nDiscussions continued on [#17628](https://github.com/ethereum-optimism/infra/issues/17628) regarding the conditions for L2EL to start syncing. The latest comments from @pcw109550, @sebastianst, and @ajsutton clarified that the EL client should simply sync, regardless of the specific mechanism (e.g., snap-sync), as long as it has p2p connections and receives a FCU call. The ticket may be closed soon as the focus shifts to handling EL Syncs after the initial run.", "2025-10-13T20:48:50.103Z"]
["ethereum-optimism/docs_day_2025-09-29", "ethereum-optimism/docs", "day", "2025-09-29", "# ethereum-optimism/docs Daily Update (Sep 29, 2025)\n## OVERVIEW \nThe day saw significant progress in closing out issues related to flashblocks RPC deployment and load testing, alongside ongoing discussions regarding L2CL and L2EL synchronization conditions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added.\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#1776](https://github.com/ethereum-optimism/docs/pull/1776), was opened for \"U16a comms updates\".\n\n## CLOSED ISSUES\n\n**Flashblocks RPC Deployment and Testing**\n- The issue of deploying a flashblocks-rpc node was resolved with the successful spin-up of an instance identified as `op-opn-reth-f-fb-0` ([#16764](https://github.com/ethereum-optimism/docs/issues/16764)).\n- Load tests for the rollup-boost flashblocks forwarder were completed, and their results were documented in an augmented Notion page ([#17462](https://github.com/ethereum-optimism/docs/issues/17462)).\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n**L2CL<>L2EL Synchronization Conditions**\nDiscussions continued on [#17628](https://github.com/ethereum-optimism/docs/issues/17628) regarding the conditions for L2EL to start syncing. The latest comments from @pcw109550, @ajsutton, and @sebastianst indicate a general agreement that the EL client should primarily focus on syncing itself to the new chain head, regardless of the specific sync mechanism (e.g., snap-sync). The ticket may be closed as the focus shifts to handling EL Syncs after the initial run, potentially addressed by `engineController.insertUnsafePayload`.", "2025-10-13T20:48:50.276Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-09-30", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-09-30", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Sep 30, 2025)\n## OVERVIEW \nThe day saw significant progress in the Optimism ecosystem with the successful enablement of Flashblocks on op-mainnet, accompanied by comprehensive onboarding and a detailed blog post.\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Documentation\n- Flashblocks were successfully enabled live on op-mainnet, marking a significant operational milestone for the network [#16498](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16498).\n- On-call onboarding and revision for Flashblocks were completed, including a dedicated session and documentation to ensure operational readiness [#17142](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17142).\n- A deep-dive blog post detailing the Flashblocks deployment, learnings, and improvements for mainnet was written and published [#17664](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17664).\n\n### EngineController Parallelism and EL Sync Tests\n- An issue related to synchronization in the `op-node`'s EL sync code path was addressed and closed, with a merged pull request fixing the problem after proper locking was applied and tested [#17564](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17564).\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-10-13T20:48:52.834Z"]
["ethereum-optimism/specs_day_2025-09-29", "ethereum-optimism/specs", "day", "2025-09-29", "# ethereum-optimism/specs Daily Update (Sep 29, 2025)\n## OVERVIEW \nToday's focus was on closing out several issues related to flashblocks RPC deployment and load testing, alongside discussions on L2CL and L2EL synchronization conditions.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks RPC Deployment and Testing\nThe deployment of flashblocks-rpc nodes has been completed, with a new instance spun up. Additionally, load tests for the rollup-boost flashblocks forwarder were performed, and their results were documented, comparing performances and capturing Flashblocks-oriented metrics.\n- [#16764](https://github.com/ethereum-optimism/specs/issues/16764)\n- [#17462](https://github.com/ethereum-optimism/specs/issues/17462)\n\n### Miscellaneous Issue Closure\nA general issue was closed with a simple \"Its done\" comment.\n- [#786](https://github.com/ethereum-optimism/specs/issues/786)\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### L2CL<>L2EL Synchronization Conditions\nDiscussions continued regarding the conditions under which the L2 Execution Layer (EL) can start syncing, particularly concerning `op-geth` and `op-sepolia`. The latest comments suggest that the ticket might be closed as the issue of avoiding ReqRes sync could be handled after the initial EL Sync run, potentially within `engineController.insertUnsafePayload`. There was also agreement that the EL client should simply sync, regardless of whether it's snap-sync or full block execution via its P2P network, as long as it receives a FCU call to set new sync targets and has P2P connections.\n- [#17628](https://github.com/ethereum-optimism/specs/issues/17628)", "2025-10-13T20:48:52.943Z"]
["ethereum-optimism/op-analytics_day_2025-09-30", "ethereum-optimism/op-analytics", "day", "2025-09-30", "# ethereum-optimism/op-analytics Daily Update (Sep 30, 2025)\n## OVERVIEW \nToday's focus was on the successful deployment and documentation of Flashblocks on op-mainnet, alongside addressing an EL Sync correctness issue in op-node/sync-tester. Onboarding and a deep-dive blog post were also completed for Flashblocks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new features, bug fixes, code refactoring, documentation enhancements, or tests were added today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Documentation\nFlashblocks were successfully enabled live on op-mainnet, with a detailed status provided by the `op-conductor-ops` tool, showing several sequencers with Flashblocks enabled ([#16498](https://github.com/ethereum-optimism/op-analytics/issues/16498)). Additionally, an on-call onboarding session and revision for Flashblocks were completed, including a presentation and documentation ([#17142](https://github.com/ethereum-optimism/op-analytics/issues/17142)). A blog post diving deep into the Flashblocks deployment, learnings, and improvements for mainnet was also written and published ([#17664](https://github.com/ethereum-optimism/op-analytics/issues/17664)).\n\n### EL Sync Correctness\nAn issue regarding synchronization in the op-node's EL sync code path was closed. The fix, which involved proper locking and was tested with an amplified race window, has been merged and appears to resolve the problem. The discussion suggests that enabling a race detector might be beneficial for future implementations ([#17564](https://github.com/ethereum-optimism/op-analytics/issues/17564)).\n\n## NEW ISSUES\n\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\nNo active issues with more than 3 comments.", "2025-10-13T20:48:53.171Z"]
["ethereum-optimism/infra_day_2025-09-30", "ethereum-optimism/infra", "day", "2025-09-30", "# ethereum-optimism/infra Daily Update (Sep 30, 2025)\n## OVERVIEW \nThe day saw a critical bug fix for the proxyd build process, ensuring the presence of the Go binary for releases. Significant progress was made on flashblocks, with enablement on op-mainnet and completion of on-call onboarding and a deep-dive blog post.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Build Process Enhancements\nA bug affecting the `proxyd` build was resolved by ensuring `mise` is installed for every release, which guarantees the availability of the Go binary. This fix improves the reliability of `proxyd` releases. ([#479](https://github.com/ethereum-optimism/infra/pull/479))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Rollout and Documentation\nFlashblocks were successfully enabled live on op-mainnet, with a progressive rollout strategy. Additionally, on-call onboarding and a revision session for flashblocks were completed, and a detailed blog post diving into the Flashblocks deployment, learnings, and improvements for mainnet was written and published. ([#16498](https://github.com/ethereum-optimism/infra/issues/16498), [#17142](https://github.com/ethereum-optimism/infra/issues/17142), [#17664](https://github.com/ethereum-optimism/infra/issues/17664))\n\n### EL Sync Correctness Improvement\nAn issue related to synchronization in the `op-node`'s EL sync code path was closed. A pull request addressing the synchronization issue by applying proper locking and amplifying the race window was merged and tested, indicating a fix for the problem. ([#17564](https://github.com/ethereum-optimism/infra/issues/17564))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:53.663Z"]
["ethereum-optimism/optimism_day_2025-09-29", "ethereum-optimism/optimism", "day", "2025-09-29", "# ethereum-optimism/optimism Daily Update (Sep 29, 2025)\n## OVERVIEW \nToday's development focused on refining contract security, enhancing AI-driven contract testing, standardizing test naming, and improving L2 synchronization mechanisms.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Contract Security and Deployment Enhancements\nProtocol versions were added to restrictions to prevent non-deterministic optimizer results, improving contract verification reliability. Additionally, forge callers were set up for applying deploy scripts, preparing for more robust deployment processes.\n- feat: add ProtocolVersions to restrictions ([#17651](https://github.com/ethereum-optimism/optimism/pull/17651))\n- op-deployer: setup forge callers for apply deploy scripts ([#17637](https://github.com/ethereum-optimism/optimism/pull/17637))\n\n### AI-Driven Contract Testing Improvements\nThe AI contract testing system received updates to handle API timeouts with retries, prevent redundant work by excluding recently processed files, and address prompt issues, enhancing the efficiency and reliability of automated contract testing.\n- fix(ai-contracts-test): handle 504 timeout, prevent duplicate work, prompt changes ([#17616](https://github.com/ethereum-optimism/optimism/pull/17616))\n\n### Test Suite Refinement and L2 Sync Optimization\nTest contract naming was standardized by replacing \"Unclassified\" with \"Uncategorized\" for consistency. The L2 sync test was tweaked to verify chain advancement beyond genesis, and the `ReceivedUnsafePayloadEvent` was removed to streamline the rollup driver's synchronization logic.\n- refactor(test): standardize Unclassified to Uncategorized in test naming ([#17650](https://github.com/ethereum-optimism/optimism/pull/17650))\n- op-e2e: Tweak EL Sync Test to check non genesis ([#17440](https://github.com/ethereum-optimism/optimism/pull/17440))\n- op-node/rollup: remove ReceivedUnsafePayloadEvent event ([#17530](https://github.com/ethereum-optimism/optimism/pull/17530))\n\n## NEWLY OPENED PULL REQUESTS\n- **op-test-sequencer bug fixes**: A new pull request ([#17653](https://github.com/ethereum-optimism/optimism/pull/17653)) aims to fix bugs introduced by a previous change related to L1 Geth subprocess support.\n- **op-geth upgrade**: Another pull request ([#17655](https://github.com/ethereum-optimism/optimism/pull/17655)) proposes upgrading `op-geth` across the codebase.\n\n## CLOSED ISSUES\n\n### Flashblocks RPC Deployment and Evaluation\nSeveral issues related to the deployment and evaluation of flashblocks-rpc nodes and rollup-boost as a flashblocks forwarder were closed. This included deploying a flashblocks-rpc node ([#16764](https://github.com/ethereum-optimism/optimism/issues/16764)), implementing rollup-boost as a flashblocks forwarder ([#17457](https://github.com/ethereum-optimism/optimism/issues/17457)), deploying these changes on eris-0 ([#17458](https://github.com/ethereum-optimism/optimism/issues/17458)), and conducting load tests for the flashblocks forwarder on eris-0 ([#17462](https://github.com/ethereum-optimism/optimism/issues/17462)). The load tests were performed and documented, with notes on latency due to geographical distance.\n\n## NEW ISSUES\n\n### Sequencer Block Progression\nA new issue ([#17654](https://github.com/ethereum-optimism/optimism/issues/17654)) has been opened regarding the sequencer not advancing blocks when the node is in ELSync. The problem requires diagnosing the failure mode and consolidating `sync.CLSync` and `sync.ELSync` into a consistent path.\n\n## ACTIVE ISSUES\n\n### L2CL<>L2EL: Find out condition of L2EL for starting EL Syncing ([#17628](https://github.com/ethereum-optimism/optimism/issues/17628))\nThe discussion on this issue revolves around understanding the conditions under which the Execution Layer (EL) can start EL Syncing, particularly for `op-geth` with `op-sepolia`. Recent comments clarify that the EL client should simply sync, and the method of backfilling blocks (e.g., snap-sync vs. full block execution) is an implementation detail of the EL. The consensus is that the EL doesn't need to trigger snap-sync if it already has a finalized sync, but it will still sync to the new chain head. The ticket may be closed as the issue might be handled by `engineController.insertUnsafePayload` when removing ReqRes sync.", "2025-10-13T20:48:54.705Z"]
["ethereum-optimism/op-geth_day_2025-09-30", "ethereum-optimism/op-geth", "day", "2025-09-30", "# ethereum-optimism/op-geth Daily Update (Sep 30, 2025)\n## OVERVIEW \nThe day saw significant progress in Flashblocks implementation on op-mainnet, with successful enablement and related documentation. A new issue was opened to discuss DA footprint storage.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Rollout and Documentation\n- Flashblocks were successfully enabled live on op-mainnet, marking a major milestone for preconfirmations on the network ([#16498](https://github.com/ethereum-optimism/op-geth/issues/16498)).\n- On-call onboarding and revision for Flashblocks operational knowledge was completed, including a dedicated session and documentation ([#17142](https://github.com/ethereum-optimism/op-geth/issues/17142)).\n- A blog post detailing the Flashblocks deployment, learnings, and improvements for mainnet was written and published ([#17664](https://github.com/ethereum-optimism/op-geth/issues/17664)).\n\n### EL Sync Correctness\n- An issue related to synchronization in the op-node's EL sync code path was closed, with a merged PR addressing the problem and testing confirming the fix ([#17564](https://github.com/ethereum-optimism/op-geth/issues/17564)).\n\n## NEW ISSUES\n\n### Data Availability Footprint\n- A new issue proposes using the `blobGasUsed` header field to store the total Data Availability (DA) footprint, moving away from the current method of using `gasUsed` ([#691](https://github.com/ethereum-optimism/op-geth/issues/691)).\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:55.330Z"]
["ethereum-optimism/superchain-registry_day_2025-09-30", "ethereum-optimism/superchain-registry", "day", "2025-09-30", "# ethereum-optimism/superchain-registry Daily Update (Sep 30, 2025)\n## OVERVIEW \nThe day saw the addition of the Silent Data mainnet chain to the registry, alongside significant progress in enabling flashblocks on op-mainnet and related operational improvements.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Registry Expansion\n*   The Silent Data mainnet chain was added to the Superchain registry, including its configuration files and genesis data. ([#1091](https://github.com/ethereum-optimism/superchain-registry/pull/1091))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Deployment and Documentation\n*   Flashblocks were successfully enabled on op-mainnet, following thorough testing on op-sepolia. ([#16498](https://github.com/ethereum-optimism/superchain-registry/issues/16498))\n*   On-call onboarding and revision for flashblocks operations were completed, including documentation and a recorded session. ([#17142](https://github.com/ethereum-optimism/superchain-registry/issues/17142))\n*   A blog post detailing the Flashblocks deployment, learnings, and improvements for mainnet was written and published. ([#17664](https://github.com/ethereum-optimism/superchain-registry/issues/17664))\n\n### EL Sync Correctness Improvements\n*   An issue related to synchronization in the op-node's EL sync code path was resolved with a merged PR that applied proper locking. ([#17564](https://github.com/ethereum-optimism/superchain-registry/issues/17564))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:56.128Z"]
["ethereum-optimism/superchain-ops_day_2025-09-30", "ethereum-optimism/superchain-ops", "day", "2025-09-30", "# ethereum-optimism/superchain-ops Daily Update (Sep 30, 2025)\n## OVERVIEW \nThe day saw significant progress in operational stability with the successful enablement of Flashblocks on op-mainnet and the completion of related onboarding and documentation. A new task for Worldchain key handback was introduced, and an issue regarding `justfile` command input validation was opened.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1235](https://github.com/ethereum-optimism/superchain-ops/pull/1235), was opened to add a task for Worldchain key handback.\n\n## CLOSED ISSUES\n\n### Flashblocks Rollout and Documentation\nFlashblocks were successfully enabled live on op-mainnet, as confirmed by the status of multiple sequencers showing \"enabled\" for Flashblocks. This milestone was accompanied by the completion of on-call onboarding and revision for Flashblocks, including a dedicated session and documentation. A blog post detailing the Flashblocks deployment, learnings, and improvements for mainnet was also written and published. ([#16498](https://github.com/ethereum-optimism/superchain-ops/issues/16498), [#17142](https://github.com/ethereum-optimism/superchain-ops/issues/17142), [#17664](https://github.com/ethereum-optimism/superchain-ops/issues/17664))\n\n### EL Sync Correctness\nAn issue related to EL Sync Correctness in `op-node` and `op-sync-tester`, specifically concerning EngineController parallelism and EL Sync Tests, was closed. The fix involved applying proper locking, which was tested and merged. The team noted that race detector enablement might be beneficial for future implementations. ([#17564](https://github.com/ethereum-optimism/superchain-ops/issues/17564))\n\n## NEW ISSUES\n\n### Developer Tooling Improvements\nA new issue, [#1236](https://github.com/ethereum-optimism/superchain-ops/issues/1236), was created to address the need for better `justfile` command input validation. The current system provides unhelpful error messages when users incorrectly use commands, hindering the developer experience.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:56.367Z"]
["ethereum-optimism/infra_day_2025-10-01", "ethereum-optimism/infra", "day", "2025-10-01", "# ethereum-optimism/infra Daily Update (Oct 1, 2025)\n## OVERVIEW \nToday's development focused on enhancing transaction logging within `proxyd` for better observability and debugging. Additionally, two long-standing issues related to `op-node` architecture and flashblock alerts were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Transaction Logging in `proxyd`\n- Implemented comprehensive logging for `eth_sendRawTransaction` and `eth_sendRawTransactionConditional` requests within `proxyd` to include transaction hash, method, request ID, auth context, chain ID, and nonce. ([#481](https://github.com/ethereum-optimism/infra/pull/481))\n- Added integration tests to validate the new transaction hash logging functionality. ([#481](https://github.com/ethereum-optimism/infra/pull/481))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `op-node` Architecture Refinement\n- The issue concerning the splitting of `op-node` CLI/entrypoint/service/backend was closed as \"not planned\" after initial spike work was not supported. ([#16680](https://github.com/ethereum-optimism/infra/issues/16680))\n\n### Flashblock Alert Refinement\n- The issue to refine alerts and runbooks for flashblocks was closed, indicating that the work has been completed. ([#17423](https://github.com/ethereum-optimism/infra/issues/17423))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were updated today.", "2025-10-13T20:48:57.083Z"]
["ethereum-optimism/optimism_day_2025-09-30", "ethereum-optimism/optimism", "day", "2025-09-30", "# ethereum-optimism/optimism Daily Update (Sep 30, 2025)\n## OVERVIEW \nToday's development focused on refining the `op-node`'s EngineController for improved stability and adding new testing infrastructure. Flashblocks were successfully enabled on op-mainnet, marking a significant milestone.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Engine Controller Stability and Refactoring\nThe `op-node`'s EngineController underwent significant refactoring to improve its internal logic and ensure proper locking mechanisms for concurrent operations. This work aims to enhance the stability and correctness of the execution layer synchronization process. ([#17647](https://github.com/ethereum-optimism/optimism/pull/17647), [#17648](https://github.com/ethereum-optimism/optimism/pull/17648))\n\n### Expanded Testing and CI Improvements\nNew testing infrastructure was introduced, including nightly Kurtosis tests for `op-acceptance-tests` to prevent blocking PRs and a script to validate semantic versioning in `contracts-bedrock`. Additionally, CI now ensures consistent Forge versions across `op-deployer` and the development environment. ([#17658](https://github.com/ethereum-optimism/optimism/pull/17658), [#17641](https://github.com/ethereum-optimism/optimism/pull/17641), [#17670](https://github.com/ethereum-optimism/optimism/pull/17670))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Flashblocks Enabled on op-mainnet\nFlashblocks have been successfully enabled on op-mainnet, a major step forward for preconfirmations. This achievement followed a progressive rollout and thorough testing. ([#16498](https://github.com/ethereum-optimism/optimism/issues/16498))\n\n### Flashblocks Documentation and Onboarding Completed\nDocumentation and onboarding for Flashblocks were completed, including an internal session for on-call teams and a public blog post detailing the Flashblocks deployment and learnings. ([#17142](https://github.com/ethereum-optimism/optimism/issues/17142), [#17664](https://github.com/ethereum-optimism/optimism/issues/17664))\n\n### EL Sync Correctness Issue Resolved\nA synchronization issue within the `op-node`'s execution layer sync code path, particularly concerning the EngineController's parallelism, has been addressed and resolved. ([#17564](https://github.com/ethereum-optimism/optimism/issues/17564))\n\n## NEW ISSUES\n\n### Documentation for op-sync-tester\nThere is a new issue to update the `op-sync-tester` README with its current implementation. ([#17667](https://github.com/ethereum-optimism/optimism/issues/17667))\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:48:57.143Z"]
["ethereum-optimism/op-analytics_day_2025-10-01", "ethereum-optimism/op-analytics", "day", "2025-10-01", "# ethereum-optimism/op-analytics Daily Update (Oct 1, 2025)\n## OVERVIEW \nToday's development focused on integrating Superchain configuration data into op-analytics, enhancing data accessibility for `eip1559_elasticity` and `eip1559_denominator`. Two issues were closed, one related to `op-node` architecture and another concerning flashblock alerts.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Superchain Configuration Integration\nA new feature was added to pull Superchain configuration data, specifically for `eip1559_elasticity` and `eip1559_denominator`, from the `superchain-registry`. This involved modifications across multiple files including `Makefile`, `Pipfile`, `helm/dagster/values.yaml`, and various Python source and test files. ([#1750](https://github.com/ethereum-optimism/op-analytics/pull/1750))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `op-node` Architecture Refinement\nThe issue concerning the splitting of `op-node`'s CLI, entrypoint, service, and backend components was closed as \"not planned\" after initial exploration. ([#16680](https://github.com/ethereum-optimism/op-analytics/issues/16680))\n\n### Flashblock Alert and Runbook Enhancement\nAn issue focused on refining alerts and developing runbooks for flashblocks was closed, with the resolution implemented in a related pull request in the `k8s` repository. ([#17423](https://github.com/ethereum-optimism/op-analytics/issues/17423))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-10-13T20:48:57.810Z"]
["ethereum-optimism/op-geth_day_2025-10-01", "ethereum-optimism/op-geth", "day", "2025-10-01", "# ethereum-optimism/op-geth Daily Update (Oct 1, 2025)\n## OVERVIEW \nThe day's development focused on cherry-picking upstream Geth PRs to enhance Fusaka defense on Sepolia, addressing a configuration bug. Several issues were closed, including one related to flashblock alerts and another concerning the splitting of `op-node` components.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Upstream Geth Integration for Fusaka Defense\nCritical upstream Geth PRs were cherry-picked to improve Fusaka defense on Sepolia, specifically addressing a configuration bug related to `ChainConfig.BlobConfig`. This work involved updates to `core/forkid`, `params`, and `tests` directories. ([#690](https://github.com/ethereum-optimism/op-geth/pull/690))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Configuration Bug Resolution\nA bug where `ChainConfig.BlobConfig` always used default configurations was closed. This issue was resolved by cherry-picking an upstream Geth fix that ensures the actual config contents are used. ([#685](https://github.com/ethereum-optimism/op-geth/issues/685))\n\n### `op-node` Component Refactoring\nThe issue concerning the splitting of `op-node` CLI, entrypoint, service, and backend components was closed as \"not planned.\" ([#16680](https://github.com/ethereum-optimism/op-geth/issues/16680))\n\n### Flashblock Alert Refinement\nThe task to refine alerts and runbooks for flashblocks was closed, indicating that the necessary updates and justifications for thresholds have been completed. ([#17423](https://github.com/ethereum-optimism/op-geth/issues/17423))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were updated today.", "2025-10-13T20:48:58.505Z"]
["ethereum-optimism/superchain-registry_day_2025-10-01", "ethereum-optimism/superchain-registry", "day", "2025-10-01", "# ethereum-optimism/superchain-registry Daily Update (Oct 1, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, or code refactoring. The primary activity involved the closure of two issues related to `op-node` architecture and flashblock alerts, alongside the opening of a new pull request to update `CHAINS.md`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1108](https://github.com/ethereum-optimism/superchain-registry/pull/1108), was opened to update the `CHAINS.md` file.\n\n## CLOSED ISSUES\n\n### `op-node` Architecture Refinement\nThe issue [#16680](https://github.com/ethereum-optimism/superchain-registry/issues/16680), concerning the splitting of `op-node` CLI/entrypoint/service/backend, was closed. The latest comment indicates that the work was completed in a spike, but the proposed PR was not supported, leading to its closure as \"not planned.\"\n\n### Flashblock Alert Refinement\nThe issue [#17423](https://github.com/ethereum-optimism/superchain-registry/issues/17423), focused on refining alerts and runbooks for flashblocks, was closed. This closure was attributed to a related pull request in the `k8s` repository, specifically https://github.com/ethereum-optimism/k8s/pull/7612.\n\n## NEW ISSUES\n\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\nNo active issues had more than 3 comments today.", "2025-10-13T20:48:59.159Z"]
["ethereum-optimism/superchain-ops_day_2025-10-01", "ethereum-optimism/superchain-ops", "day", "2025-10-01", "# ethereum-optimism/superchain-ops Daily Update (Oct 1, 2025)\n## OVERVIEW \nThe day saw the addition of a new feature enabling L1 to L2 call execution via the Optimism Portal, enhancing cross-chain interoperability. Two issues were closed, one related to `op-node` refactoring and another concerning flashblock alerts.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### L1 to L2 Call Execution\n*   A new feature was added to enable L1 to L2 call execution using the Optimism Portal, specifically for dispatching L2 calls from an L1 Safe. This includes a new template and configuration-driven parameters. ([#1231](https://github.com/ethereum-optimism/superchain-ops/pull/1231))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### `op-node` Refactoring\n*   The issue concerning splitting the `op-node` CLI, entrypoint, service, and backend was closed as not planned, despite initial work on the first step. ([#16680](https://github.com/ethereum-optimism/superchain-ops/issues/16680))\n\n### Flashblock Alert Refinement\n*   The task to refine alerts and runbooks for flashblocks was closed, with the resolution attributed to a related pull request in the `k8s` repository. ([#17423](https://github.com/ethereum-optimism/superchain-ops/issues/17423))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments were updated today.", "2025-10-13T20:48:59.454Z"]
["ethereum-optimism/docs_day_2025-10-01", "ethereum-optimism/docs", "day", "2025-10-01", "# ethereum-optimism/docs Daily Update (Oct 1, 2025)\n## OVERVIEW \nThe day saw the closure of two issues related to `op-node` architecture and flashblock alerts. Additionally, two new issues were opened to report September metrics for closed issues and opened pull requests.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo new technical developments were reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### `op-node` Architecture Refinement\nThe issue concerning the splitting of `op-node` CLI/entrypoint/service/backend components was closed as \"not planned\" [#16680](https://github.com/ethereum-optimism/docs/issues/16680). The work was reportedly completed in a spike, but the proposed PR was not supported.\n\n### Flashblock Alert and Runbook Refinement\nThe issue to refine alerts and runbooks for flashblocks was closed [#17423](https://github.com/ethereum-optimism/docs/issues/17423). This was resolved by a pull request in the `k8s` repository.\n\n## NEW ISSUES\n### September Metrics Reporting\nTwo new issues were opened to report metrics for September 2025:\n- A report for closed issues, including average, median, and 90th percentile for time to first response and time to close [#1777](https://github.com/ethereum-optimism/docs/issues/1777).\n- A report for opened pull requests, detailing average, median, and 90th percentile for time to first response, time to close, and time to answer [#1778](https://github.com/ethereum-optimism/docs/issues/1778).\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-10-13T20:49:00.309Z"]
["ethereum-optimism/docs_day_2025-10-02", "ethereum-optimism/docs", "day", "2025-10-02", "# ethereum-optimism/docs Daily Update (Oct 2, 2025)\n## OVERVIEW \nToday's development focused on enhancing documentation for creating L2 rollups with example code. Several issues related to the Isthmus upgrade, L2CL<>L2EL syncing conditions, and acceptance testing were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced L2 Rollup Creation Documentation\n- Documentation was updated to clarify how containers are run and to reflect the target version for L2 rollup creation.\n- Example code and related files were added to provide a practical guide for users creating L2 rollups, covering aspects like environment setup, Makefile, Docker Compose, and scripts for deploying and setting up the rollup components ([#1775](https://github.com/ethereum-optimism/docs/pull/1775)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Isthmus Upgrade Tracking\n- The tracking issue for the Isthmus Upgrade was closed as the upgrade is now complete ([#12703](https://github.com/ethereum-optimism/docs/issues/12703)).\n\n### L2EL Syncing Conditions\n- An issue investigating the conditions for L2EL to start syncing was closed, with the conclusion that the process is likely handled by `engineController.insertUnsafePayload` after initial EL Sync runs ([#17628](https://github.com/ethereum-optimism/docs/issues/17628)).\n\n### Acceptance Test Reporting\n- The issue to include setup information in the HTML output of `op-acceptance-test` was closed, indicating the feature has been implemented ([#386](https://github.com/ethereum-optimism/docs/issues/386)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### cannon: Support go1.25 ([#17060](https://github.com/ethereum-optimism/docs/issues/17060))\nDiscussion today confirmed that the Go 1.25 compatibility issue significantly affects Cannon, specifically causing incorrect Keccak hashes when running in Cannon with Go 1.25. This prevents correct block hash calculations. A detailed diagnosis is available, and the underlying problem is linked to a known Go issue. While Go 1.25.1 has been released, it does not appear to include the necessary MIPS fix.\n\n### op-acceptance-test: add back op-reth to jovian kt-devnet ([#17475](https://github.com/ethereum-optimism/docs/issues/17475))\nThe latest comment suggests that since Kurtosis devnet is deprecated, the focus should shift to integrating `op-reth` into the `devstack` / `sysgo` system instead of adding it back to the `jovian kt-devnet`. This implies a change in strategy for `op-reth` integration.", "2025-10-13T20:49:01.910Z"]
["ethereum-optimism/infra_day_2025-10-02", "ethereum-optimism/infra", "day", "2025-10-02", "# ethereum-optimism/infra Daily Update (Oct 2, 2025)\n## OVERVIEW \nToday, a new feature was added to `op-acceptor` to pass environment variables to `go test`, addressing a newly opened issue. Several issues related to `op-acceptor` and the Isthmus upgrade were closed, indicating progress in testing infrastructure and upgrade finalization.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced `op-acceptor` Testing Capabilities\nA new feature was implemented to allow environment variables passed to `op-acceptor` to be forwarded to `go test`. This enables more flexible and controlled test execution within the `op-acceptor` framework. ([#483](https://github.com/ethereum-optimism/infra/pull/483))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#484](https://github.com/ethereum-optimism/infra/pull/484), was opened to test modifying CircleCI configurations.\n\n## CLOSED ISSUES\n\n### `op-acceptor` Enhancements and Fixes\nSeveral issues related to the `op-acceptor` testing tool were closed. This includes forwarding environment variables to `go test` ([#482](https://github.com/ethereum-optimism/infra/issues/482)), improving package parallelism ([#462](https://github.com/ethereum-optimism/infra/issues/462)), and including setup information in HTML output ([#386](https://github.com/ethereum-optimism/infra/issues/386)).\n\n### Isthmus Upgrade Finalization\nThe tracking issue for the Isthmus Upgrade ([#12703](https://github.com/ethereum-optimism/infra/issues/12703)) was closed, with a comment confirming that the Isthmus upgrade is complete.\n\n### L2CL<>L2EL Sync Condition Clarification\nAn issue investigating the conditions for L2EL to start EL Syncing ([#17628](https://github.com/ethereum-optimism/infra/issues/17628)) was closed. The discussion concluded that the EL client should simply sync, and the focus shifted to handling EL Syncs after the initial run.\n\n## NEW ISSUES\n\n### `op-acceptor` Environment Variable Forwarding\nA new issue, [#482](https://github.com/ethereum-optimism/infra/issues/482), was opened to request the `op-acceptor` to forward environment variables to `go test` to allow custom environment variables for test execution.\n\n## ACTIVE ISSUES\n\n### Cannon Go 1.25 Compatibility\nDiscussion on [#17060](https://github.com/ethereum-optimism/infra/issues/17060) regarding Cannon's compatibility with Go 1.25 continues. @ajsutton confirmed that the issue affects Optimism, specifically causing incorrect Keccak hashes when running in Cannon with Go 1.25, and provided a link to a detailed diagnosis. @pauldowman linked to the blocking Go issue, and @sebastianst inquired about the impact on Optimism.\n\n### `op-acceptance-test`: Re-integrating `op-reth`\nOn [#17475](https://github.com/ethereum-optimism/infra/issues/17475), the discussion around re-adding `op-reth` to the Jovian Kurtosis devnet was updated. @geoknee suggested that since Kurtosis devnet is deprecated, the focus should shift to integrating `op-reth` into the devstack/sysgo system instead.", "2025-10-13T20:49:03.426Z"]
["ethereum-optimism/specs_day_2025-10-02", "ethereum-optimism/specs", "day", "2025-10-02", "# ethereum-optimism/specs Daily Update (Oct 2, 2025)\n## OVERVIEW \nToday's development focused on clarifying specifications for the Fusaka defense mechanism. Additionally, several long-standing issues were closed, including the Isthmus Upgrade tracker and an issue related to op-acceptance-test reporting.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Protocol Specification Refinements\n*   A pull request was opened to clarify the specifications for the Fusaka defense mechanism, enhancing the protocol's robustness and security ([#790](https://github.com/ethereum-optimism/specs/pull/790)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Upgrade Tracking and Completion\n*   The tracker for the Isthmus Upgrade was closed, indicating its completion. Discussions confirmed the upgrade's successful implementation and the resolution of associated tasks ([#12703](https://github.com/ethereum-optimism/specs/issues/12703)).\n\n### Test Infrastructure Enhancements\n*   An issue concerning the inclusion of setup information in op-acceptor HTML output was closed, with the resolution implemented in a related infrastructure pull request ([#386](https://github.com/ethereum-optimism/specs/issues/386)).\n\n### Execution Layer Syncing Conditions\n*   An issue investigating the conditions for the L2 Execution Layer (EL) to start syncing was closed. The resolution suggests that EL Syncs after the initial run are handled by `engineController.insertUnsafePayload`, making the ticket's original concern less critical ([#17628](https://github.com/ethereum-optimism/specs/issues/17628)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Cannon Go1.25 Compatibility\nDiscussion on [#17060](https://github.com/ethereum-optimism/specs/issues/17060) confirms that the Go 1.25 compatibility issue significantly affects Cannon, specifically causing incorrect Keccak hashes and potentially other cryptographic operations. The problem is linked to a blocking issue in the Go toolchain, and while Go 1.25.1 has been released, it does not appear to include the necessary MIPS fix.\n\n### op-acceptance-test: Re-integrating op-reth\nThe latest comment on [#17475](https://github.com/ethereum-optimism/specs/issues/17475) suggests that since Kurtosis devnet is deprecated, the focus should shift to integrating `op-reth` into the `devstack` / `sysgo` system instead of adding it back to the Kurtosis devnet. This indicates a change in strategy for testing `op-reth` within the Optimism ecosystem.", "2025-10-13T20:49:03.822Z"]
["ethereum-optimism/optimism_day_2025-10-01", "ethereum-optimism/optimism", "day", "2025-10-01", "# ethereum-optimism/optimism Daily Update (Oct 1, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure with new unit tests for `DevFeatures.sol` and the introduction of a flake-shaker system for test stability. Significant CI/CD improvements were made, including consolidating workflows and adding a nightly heavy fuzz testing job. Several issues related to devnet migration and interop testing were closed.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing and CI/CD Infrastructure\n*   Added unit tests for `DevFeatures.sol` and its corresponding Go code, improving contract reliability ([#17643](https://github.com/ethereum-optimism/optimism/pull/17643)).\n*   Introduced \"flake-shaker,\" a system to validate test stability by running tests multiple times to detect flakiness before production deployment ([#17646](https://github.com/ethereum-optimism/optimism/pull/17646)).\n*   Consolidated CI workflows for `op-acceptance-tests`, streamlining the pre/post-merge to develop process ([#17673](https://github.com/ethereum-optimism/optimism/pull/17673)).\n*   Implemented a new nightly CI job for heavy fuzz testing of smart contracts, utilizing `ciheavy` Foundry profile for extensive runs to catch edge cases ([#17668](https://github.com/ethereum-optimism/optimism/pull/17668)).\n*   Updated Discord notifications for `op-acceptance-tests` CI, directing alerts to the 'protocol devx pod' role ([#17672](https://github.com/ethereum-optimism/optimism/pull/17672)).\n\n### Core Protocol Updates\n*   Updated `op-geth` to the \"fusaka defence cherry pick\" commit, ensuring the latest improvements and fixes are integrated ([#17661](https://github.com/ethereum-optimism/optimism/pull/17661)).\n\n## NEWLY OPENED PULL REQUESTS\n*   [#17671](https://github.com/ethereum-optimism/optimism/pull/17671) Feat/xxx node\n*   [#17674](https://github.com/ethereum-optimism/optimism/pull/17674) feat(op-deployer): customize etherscan URL from CLI and environment\n*   [#17687](https://github.com/ethereum-optimism/optimism/pull/17687) chore: replace fmt.Errorf with errors.New for constant errors\n*   [#17689](https://github.com/ethereum-optimism/optimism/pull/17689) fix(devstack/op-reth): fix devstack configuration for op-reth/networks with more than one validator\n*   [#17691](https://github.com/ethereum-optimism/optimism/pull/17691) op node l1 chain config\n\n## CLOSED ISSUES\n\n### Devnet and Interop Testing Enhancements\n*   Migration of `devnet-sdk` acceptance tests to the `devstack` framework was completed ([#15574](https://github.com/ethereum-optimism/optimism/issues/15574)).\n*   The `interop: follow-mode / simplify / embed` tracker issue was closed ([#16442](https://github.com/ethereum-optimism/optimism/issues/16442)).\n*   The `interop: test sequencing tracker` issue, focused on implementing the test sequencing design document, has been closed ([#14122](https://github.com/ethereum-optimism/optimism/issues/14122)).\n*   The `devnet-sdk: expand devstack DSL` issue, aimed at improving the DSL for testing components, has been closed ([#15137](https://github.com/ethereum-optimism/optimism/issues/15137)).\n\n### Protocol and Error Handling Improvements\n*   Cleanup of error handling in `op-node` derivation was completed ([#10725](https://github.com/ethereum-optimism/optimism/issues/10725)).\n*   The issue regarding fixing source map lookups in `SourceMapFS` within `op-chain-ops` has been closed ([#13236](https://github.com/ethereum-optimism/optimism/issues/13236)).\n\n### Reorg Testing and Flashblocks\n*   The reorg testing checklist has been completed ([#14530](https://github.com/ethereum-optimism/optimism/issues/14530)).\n*   Refinement of alerts and runbooks for flashblocks has been completed ([#17423](https://github.com/ethereum-optimism/optimism/issues/17423)).\n\n### `op-node` Architecture Refinement\n*   The issue to split `op-node` CLI/entrypoint/service/backend was closed as not planned, following a spike that indicated it was not supported ([#16680](https://github.com/ethereum-optimism/optimism/issues/16680)).\n\n## NEW ISSUES\n\n### Flashblocks and Performance Optimization\n*   **Flashblocks Performance Tuning:** Issues were opened to enable 200ms Flashblocks on a devnet and conduct load tests against it to compare performance with 250ms counterparts ([#17676](https://github.com/ethereum-optimism/optimism/issues/17676), [#17677](https://github.com/ethereum-optimism/optimism/issues/17677)).\n*   **Sequencing Infrastructure:** Discussions initiated on shifting Sepolia sequencing to full-nodes to improve performance and considering `snapman` for Reth snapshots of full nodes ([#17681](https://github.com/ethereum-optimism/optimism/issues/17681), [#17684](https://github.com/ethereum-optimism/optimism/issues/17684)).\n\n### Health Checks and Monitoring\n*   **`op-rbuilder` Health Checks:** New issues propose implementing `replica-healthcheck` for `op-rbuilder` to track non-divergence from `op-geth` and introducing a partial healthiness tolerance for `rollup-boost` ([#17685](https://github.com/ethereum-optimism/optimism/issues/17685), [#17678](https://github.com/ethereum-optimism/optimism/issues/17678)).\n*   **Monitoring Multiple Health Checks:** An issue was created to ensure graceful monitoring and alerting for multiple `replica-healthchecks` per namespace, especially with the addition of `op-rbuilder` checks ([#17686](https://github.com/ethereum-optimism/optimism/issues/17686)).\n*   **Deployment of Healthiness Tolerance:** An issue was opened to roll out the `rollup-boost` partial healthiness tolerance to devnet, Sepolia, and mainnet ([#17680](https://github.com/ethereum-optimism/optimism/issues/17680)).\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments.", "2025-10-13T20:49:04.884Z"]
["ethereum-optimism/superchain-ops_day_2025-10-02", "ethereum-optimism/superchain-ops", "day", "2025-10-02", "# ethereum-optimism/superchain-ops Daily Update (Oct 2, 2025)\n## OVERVIEW \nToday, the team focused on closing out several long-standing issues, including the Isthmus upgrade tracker and an acceptance test reporting enhancement. Discussions continued on Go 1.25 compatibility for Cannon and the integration of op-reth into the devstack.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n\n## CLOSED ISSUES\n\n### Isthmus Upgrade Finalized\nThe tracking issue for the Isthmus upgrade has been closed, indicating its completion. A comment confirmed that \"Isthmus is done\" ([#12703](https://github.com/ethereum-optimism/superchain-ops/issues/12703)).\n\n### L2EL Sync Condition Clarified\nAn issue investigating the conditions for L2EL to start syncing was closed. The resolution suggests that focusing on EL Syncs after the initial run, handled by `engineController.insertUnsafePayload`, addresses the concern ([#17628](https://github.com/ethereum-optimism/superchain-ops/issues/17628)).\n\n### Acceptance Test Reporting Improved\nAn issue aimed at including setup information in the HTML output of `op-acceptor` was closed, with a reference to a pull request in the `infra` repository that implemented the change ([#386](https://github.com/ethereum-optimism/superchain-ops/issues/386)).\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n\n### Cannon Go 1.25 Compatibility\nDiscussions continued regarding Cannon's compatibility with Go 1.25. It was confirmed that the issue affects the project, specifically causing incorrect Keccak hashes when running Cannon with Go 1.25. The underlying problem is linked to a Go issue, and while Go 1.25.1 has been released, it does not appear to include the necessary MIPS fix ([#17060](https://github.com/ethereum-optimism/superchain-ops/issues/17060)).\n\n### op-reth Integration for Jovian kt-devnet\nThe issue tracking the re-addition of `op-reth` to the Jovian kt-devnet is being re-evaluated. Given that Kurtosis devnet is deprecated, the focus has shifted to ensuring `op-reth` is integrated into the `devstack` or `sysgo` system instead ([#17475](https://github.com/ethereum-optimism/superchain-ops/issues/17475)).", "2025-10-13T20:49:05.204Z"]
["ethereum-optimism/design-docs_day_2025-10-02", "ethereum-optimism/design-docs", "day", "2025-10-02", "# ethereum-optimism/design-docs Daily Update (Oct 2, 2025)\n## OVERVIEW \nThe day saw no new features, bug fixes, or code refactoring. The primary activities involved the closure of several long-standing issues and the creation of a new issue concerning consistent terminology.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo new technical developments were reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Isthmus Upgrade Tracker Concluded\nThe tracking issue for the Isthmus Upgrade has been closed, with a comment indicating that \"Isthmus is done.\" This marks the completion of a significant upgrade initiative. ([#12703](https://github.com/ethereum-optimism/design-docs/issues/12703))\n\n### L2EL Sync Condition Clarified\nAn issue investigating the conditions for L2EL to start EL Syncing has been closed. The resolution suggests that the concern may be handled by `engineController.insertUnsafePayload`, indicating a clearer understanding of EL synchronization. ([#17628](https://github.com/ethereum-optimism/design-docs/issues/17628))\n\n### Acceptance Test Output Enhanced\nThe issue to include setup information in the HTML output of `op-acceptor` has been closed, with the work completed in a related infrastructure pull request. This improves the diagnostic capabilities of acceptance tests. ([#386](https://github.com/ethereum-optimism/design-docs/issues/386))\n\n## NEW ISSUES\n\n### Terminology Consistency\nA new issue has been opened to address the inconsistent use of \"soft-fork\" versus \"hard-fork\" terminology within the design documentation, aiming for greater clarity and precision. ([#342](https://github.com/ethereum-optimism/design-docs/issues/342))\n\n## ACTIVE ISSUES\n\n### cannon: Support go1.25 ([#17060](https://github.com/ethereum-optimism/design-docs/issues/17060))\nDiscussion continues regarding the compatibility of Cannon with Go 1.25. @pauldowman confirmed that the issue affects Optimism, and @ajsutton provided further context, noting that all Keccak hashes are incorrect when running Cannon with Go 1.25, impacting block hash calculations. The blocking issue in the Go repository has been linked for reference.\n\n### op-acceptance-test: add back op-reth to jovian kt-devnet ([#17475](https://github.com/ethereum-optimism/design-docs/issues/17475))\nThe latest comment from @geoknee suggests a shift in strategy for integrating `op-reth`. Given that Kurtosis devnet is deprecated, the focus should now be on integrating `op-reth` into the `devstack / sysgo` system instead of adding it back to the Jovian Kurtosis devnet.", "2025-10-13T20:49:07.371Z"]
["ethereum-optimism/superchain-ops_day_2025-10-03", "ethereum-optimism/superchain-ops", "day", "2025-10-03", "# ethereum-optimism/superchain-ops Daily Update (Oct 3, 2025)\n## OVERVIEW \nThe day's development focused on minor adjustments to example tasks and command optimizations. Two issues were closed, including one related to Fusaka activation testing and another concerning validation refactoring. Discussions continued on an active issue regarding Go 1.25 compatibility with Cannon.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n*   **Example Task Refinements:** An example task for `eth/013` was updated to pin the `FORK_BLOCK_NUMBER` to resolve a CircleCI issue. ([#1240](https://github.com/ethereum-optimism/superchain-ops/pull/1240))\n*   **Command Optimization:** Base commands were modified to improve execution speed. ([#1241](https://github.com/ethereum-optimism/superchain-ops/pull/1241))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n*   **Fusaka Activation Testing:** A test for Fusaka (Osaka) activation on L1 was successfully implemented and the issue closed. ([#17500](https://github.com/ethereum-optimism/superchain-ops/issues/17500))\n*   **Validation Refactoring:** The issue concerning the addition of chain configuration negative testing was closed as the team has transitioned to a report-based approach for validation. ([#686](https://github.com/ethereum-optimism/superchain-ops/issues/686))\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n*   **Cannon: Support go1.25** ([#17060](https://github.com/ethereum-optimism/superchain-ops/issues/17060)): Discussions confirmed that the Go 1.25 compatibility issue affects the project, specifically causing incorrect Keccak hashes when running in Cannon. The team is aware of a blocking issue with Go 1.25.1 not including a necessary MIPS fix.", "2025-10-13T20:49:07.450Z"]
["ethereum-optimism/optimism_day_2025-10-02", "ethereum-optimism/optimism", "day", "2025-10-02", "# ethereum-optimism/optimism Daily Update (Oct 2, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure, particularly for L1 Osaka activation and EL payload caching, alongside critical updates to L1 chain configuration embedding and dependency management. Several issues related to testing and configuration were closed, and new discussions emerged around L2CL documentation and SuperchainConfig transactions.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Test Validation and CI Integration\nImprovements were made to the test validation process, specifically adding library support to address failures with internal-only functions in libraries ([#17690](https://github.com/ethereum-optimism/optimism/pull/17690)). Additionally, CI now includes an isolated `CANNON_KONA` devfeature flag to ensure proper sequencing before `DEPLOY_V2_` ([#17702](https://github.com/ethereum-optimism/optimism/pull/17702)). A bug fix was also implemented to ensure flaky test reports only show tests for the target branch ([#17706](https://github.com/ethereum-optimism/optimism/pull/17706)).\n\n### Critical L1 Chain Configuration and Dependency Updates\nThe L1ChainConfig is now embedded directly into the configuration for `op-node`, `op-program`, and `kona` to better handle L1 block info and blob base fees, especially relevant since Ecotone ([#17568](https://github.com/ethereum-optimism/optimism/pull/17568)). A dependency on `go-bip39` was replaced with `github.com/base/go-bip39` due to the former's removal from Google ([#17526](https://github.com/ethereum-optimism/optimism/pull/17526)).\n\n### Advanced E2E and Acceptance Testing\nNew tests were added to validate L1 Osaka activation ([#17666](https://github.com/ethereum-optimism/optimism/pull/17666)) and to cache and canonicalize L2EL payloads after gap filling in `op-acceptance-tests` ([#17675](https://github.com/ethereum-optimism/optimism/pull/17675)). A test for resolving L1 chain configuration by chain ID was also introduced in `op-program` ([#17707](https://github.com/ethereum-optimism/optimism/pull/17707)).\n\n### Refinements in Deployment and Node Architecture\nThe `DeployOPChain.s.sol` script was refactored to conform to an input/output struct pattern, simplifying its usage ([#17657](https://github.com/ethereum-optimism/optimism/pull/17657)). The `EngineResetDeriver` was merged with `EngineController` in `op-node`, streamlining the node's architecture and reducing parameter passing ([#17662](https://github.com/ethereum-optimism/optimism/pull/17662)). Custom gas limit configuration was backported to `op-deployer` for greater flexibility ([#17665](https://github.com/ethereum-optimism/optimism/pull/17665)).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17697](https://github.com/ethereum-optimism/optimism/pull/17697) chore: remove unused CrossL2Inbox ABI loader\n- [#17699](https://github.com/ethereum-optimism/optimism/pull/17699) fix(op-deployer): avoid embedded artifacts recompilation\n- [#17705](https://github.com/ethereum-optimism/optimism/pull/17705) op-e2e: remove dead code from e2e setup\n\n## CLOSED ISSUES\n\n### Test Validation and Configuration Improvements\nThe issue of extending `lint-forge-tests-check-no-build` to handle library artifacts was resolved ([#16662](https://github.com/ethereum-optimism/optimism/issues/16662)). Additionally, issues related to `op-program/chainconfig` tests following Fusaka defense changes ([#17700](https://github.com/ethereum-optimism/optimism/issues/17700)) and moving L1 config resolution out of executors in `op-challenger` ([#17703](https://github.com/ethereum-optimism/optimism/issues/17703)) were closed.\n\n### Isthmus Upgrade Completion\nThe tracker for the Isthmus Upgrade has been closed, indicating its completion ([#12703](https://github.com/ethereum-optimism/optimism/issues/12703)).\n\n### Node Compatibility and EL Sync Conditions\nThe issue concerning `op-node` preparation for Fusaka was closed ([#17493](https://github.com/ethereum-optimism/optimism/issues/17493)). The investigation into L2CL<>L2EL conditions for starting EL Syncing was also closed, with the conclusion that the issue is handled by `engineController.insertUnsafePayload` ([#17628](https://github.com/ethereum-optimism/optimism/issues/17628)).\n\n### Acceptance Test Reporting\nThe acceptance test issue regarding including setup info in HTML output was closed ([#386](https://github.com/ethereum-optimism/optimism/issues/386)).\n\n## NEW ISSUES\n\n### Documentation and Configuration Gaps\nNew issues highlight the need for better documentation of EL Sync behavior in `op-node` and `kona-node` ([#17693](https://github.com/ethereum-optimism/optimism/issues/17693)). There's also a requirement to create calldata for SuperchainConfig transactions in `op-deployer` for `op-contracts/v4.x.x` and beyond ([#17698](https://github.com/ethereum-optimism/optimism/issues/17698)).\n\n### Jovian Activation Block Requirements\nA new issue specifies that the Jovian activation block must only contain deposit transactions, aligning with recent spec updates ([#17704](https://github.com/ethereum-optimism/optimism/issues/17704)).\n\n## ACTIVE ISSUES\n\n### Cannon Go1.25 Compatibility ([#17060](https://github.com/ethereum-optimism/optimism/issues/17060))\nDiscussion continues regarding the compatibility of Cannon with Go 1.25. The latest comments confirm that the issue affects Optimism, specifically causing incorrect Keccak hashes when running Cannon with Go 1.25. This impacts the calculation of block hashes and potentially other cryptographic operations. A specific Go issue ([https://github.com/golang/go/issues/74998](https://github.com/golang/go/issues/74998)) is identified as the underlying problem, and it's noted that Go 1.25.1 does not appear to include the necessary MIPS fix.\n\n### op-acceptance-test: add back op-reth to jovian kt-devnet ([#17475](https://github.com/ethereum-optimism/optimism/issues/17475))\nThe latest comment suggests that since Kurtosis devnet is deprecated, the focus should shift to integrating `op-reth` into the `devstack / sysgo` system instead of adding it back to the Jovian kt-devnet. This indicates a change in strategy for `op-reth` integration.", "2025-10-13T20:49:07.551Z"]
["ethereum-optimism/superchain-registry_day_2025-10-03", "ethereum-optimism/superchain-registry", "day", "2025-10-03", "# ethereum-optimism/superchain-registry Daily Update (Oct 3, 2025)\n## OVERVIEW \nThe day saw the addition of a new standard version for `op-contracts/v4.1.0` to the registry. Two issues were closed, including one related to validation testing and another concerning a Fusaka activation test.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Standard Version Updates\n*   Added `op-contracts/v4.1.0` entries for Sepolia and Mainnet, mirroring the `v4.1.0-rc.3` configurations ([#1109](https://github.com/ethereum-optimism/superchain-registry/pull/1109)).\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n\n### Validation Testing Refinement\n*   Closed an issue regarding adding chain configuration negative testing, as the project has shifted from a validation-based approach to a report-based one, rendering the original goal less relevant ([#686](https://github.com/ethereum-optimism/superchain-registry/issues/686)).\n\n### Fusaka Activation Test Completion\n*   The Fusaka activation test for L1 was closed, indicating its successful implementation or resolution ([#17500](https://github.com/ethereum-optimism/superchain-registry/issues/17500)).\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Cannon Go1.25 Compatibility\nDiscussion on [#17060](https://github.com/ethereum-optimism/superchain-registry/issues/17060) confirms that the Go 1.25 compatibility issue significantly affects Cannon, specifically causing incorrect Keccak hashes and potentially other crypto functions. A Notion document provides a detailed diagnosis, linking the problem to a known Go issue. While Go 1.25.1 has been released, it does not appear to include the necessary MIPS fix.", "2025-10-13T20:49:07.824Z"]
["ethereum-optimism/op-geth_day_2025-10-04", "ethereum-optimism/op-geth", "day", "2025-10-04", "# ethereum-optimism/op-geth Daily Update (Oct 4, 2025)\n## OVERVIEW \nThe day saw minimal activity with no completed work, bug fixes, or documentation enhancements. The primary development was the opening of a new pull request focused on adding benchmarks.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\n*   **Benchmarking Improvements**\n    *   A new pull request, [#692](https://github.com/ethereum-optimism/op-geth/pull/692), was opened to add `benchmarkComputeCellProofs`. This PR is currently open and awaiting review.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this period.", "2025-10-13T20:49:09.005Z"]
["ethereum-optimism/Retro-Funding_day_2025-10-04", "ethereum-optimism/Retro-Funding", "day", "2025-10-04", "# ethereum-optimism/Retro-Funding Daily Update (Oct 4, 2025)\n## OVERVIEW \nThe day's development focused on testing infrastructure, with significant updates to sample data for dashboard testing in preparation for official results.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Testing Infrastructure Enhancements\n*   Added sample data for M8 to support dashboard testing, including various data files for devtooling and onchain metrics, along with output results and weight configurations. This is purely for testing purposes, with official results to be locked on October 8th. ([#78](https://github.com/ethereum-optimism/Retro-Funding/pull/78))\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\nNo active issues had more than 3 comments today.", "2025-10-13T20:49:09.043Z"]
["ethereum-optimism/optimism_day_2025-10-03", "ethereum-optimism/optimism", "day", "2025-10-03", "# ethereum-optimism/optimism Daily Update (Oct 3, 2025)\n## OVERVIEW \nToday's development focused on enhancing testing infrastructure, particularly for sync and cross-domain messaging, alongside critical updates to the OP Contracts Manager and TimelockGuard for improved security and functionality.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Testing and Sync Logic\nSignificant progress was made in bolstering the testing framework, including a new acceptance test to verify unsafe chain stalling when `ReqResSync` is disabled [#17696](https://github.com/ethereum-optimism/optimism/pull/17696). Additionally, comments related to unsafe payload queue syncing logic in `op-acceptance-tests` were corrected to accurately reflect the system's behavior [#17712](https://github.com/ethereum-optimism/optimism/pull/17712). A bug fix was also implemented to exclude Foundry VM addresses from L2ToL2CrossDomainMessenger fuzz tests, preventing intermittent failures [#17709](https://github.com/ethereum-optimism/optimism/pull/17709).\n\n### OP Contracts Manager and TimelockGuard Updates\nThe OP Contracts Manager now supports Cannon and Kona games in `updatePrestates` through a new struct, allowing for incremental updates [#17512](https://github.com/ethereum-optimism/optimism/pull/17512). A full implementation of the `TimelockGuard` was completed, featuring external signature validation for `cancelTransaction` and `configureTimelockGuard`, and a single struct per Safe [#17584](https://github.com/ethereum-optimism/optimism/pull/17584).\n\n### Beacon Client and Deployer Optimizations\nThe `op-deployer`'s default `GasPadFactor` was reduced from 2.0 to 1.2 to ensure `opcm.deploy` transactions remain under the 16.77Mgas limit imposed by EIP-7825 [#17710](https://github.com/ethereum-optimism/optimism/pull/17710). Furthermore, the `op-service/L1BeaconClient` now allows blob proof verification to be skipped via a new `l1.beacon.skip-blob-verification` flag, which has also been added to `op-program` and `op-challenger` [#17713](https://github.com/ethereum-optimism/optimism/pull/17713), [#17718](https://github.com/ethereum-optimism/optimism/pull/17718).\n\n## NEWLY OPENED PULL REQUESTS\n- [#17717](https://github.com/ethereum-optimism/optimism/pull/17717): This pull request aims to correct a `console.log` format string within the `ManageDrippie` script.\n- [#17720](https://github.com/ethereum-optimism/optimism/pull/17720): This pull request proposes a refactor to improve the test coverage and quality of `ProtocolVersions` tests.\n\n## CLOSED ISSUES\n\n### Fusaka Activation Test\nThe issue regarding the need for a Fusaka activation test, similar to the L1 Prague fork test, has been closed [#17500](https://github.com/ethereum-optimism/optimism/issues/17500). This was addressed via PR #17666.\n\n### Validation Chain Config Negative Testing\nThe long-standing issue concerning the addition of chain config negative testing for validation code has been closed [#686](https://github.com/ethereum-optimism/optimism/issues/686). The decision was made to close it as it is no longer relevant, given the shift to a report-based approach instead of a validation-based one.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\n\n### Cannon: Support go1.25 [#17060](https://github.com/ethereum-optimism/optimism/issues/17060)\nDiscussion continues regarding the compatibility of Cannon with Go 1.25. @sebastianst inquired if Optimism is affected, to which @pauldowman confirmed that it does affect them, with @ajsutton providing more context. @ajsutton further elaborated that all keccak hashes are incorrect when running in Cannon with Go 1.25, impacting block hash calculations. A Notion document detailing the diagnosis was linked, pointing to a specific Go issue as the underlying problem.\n\n### validation: add chain config negative testing [#686](https://github.com/ethereum-optimism/optimism/issues/686)\nThis issue was closed today. @alfonso-op confirmed with @bitwiseguy that the issue is no longer relevant due to a shift from a validation-based approach to a report-based one.", "2025-10-13T20:49:09.405Z"]
["ethereum-optimism/optimism_day_2025-10-04", "ethereum-optimism/optimism", "day", "2025-10-04", "# ethereum-optimism/optimism Daily Update (Oct 4, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to enhance op-acceptance-tests with flake-shaking and test promotions. Additionally, a long-standing question regarding the initialization of precompile addresses was closed.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work to report for this period.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#17723](https://github.com/ethereum-optimism/optimism/pull/17723), was opened to address flake-shaking and test promotions within the `op-acceptance-tests`.\n\n## CLOSED ISSUES\n### Precompile Address Initialization Clarification\nIssue [#16620](https://github.com/ethereum-optimism/optimism/issues/16620), which questioned the purpose of initializing addresses 0x00-0xff with 1 wei balance and no contract code in the op-stack, was closed. The discussion clarified that these are precompile addresses, and the 1 wei balance is standard practice due to rules governing empty accounts.\n\n## NEW ISSUES\nNo new issues were opened today.\n\n## ACTIVE ISSUES\nNo active issues with more than 3 comments to report for this period.", "2025-10-13T20:49:09.678Z"]
["ethereum-optimism/optimism_day_2025-10-07", "ethereum-optimism/optimism", "day", "2025-10-07", "# ethereum-optimism/optimism Daily Update (Oct 7, 2025)\n## OVERVIEW \nThe day's development focused on a single new pull request aimed at enhancing the `op-node`'s ability to perform ELSync gap filling, indicating ongoing efforts to improve data synchronization within the Optimism network.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#17751](https://github.com/ethereum-optimism/optimism/pull/17751), was opened. This PR proposes an update to the `op-node` to incorporate ELSync gap filling functionality within its `OnUnsafeL2Payload` method. This enhancement aims to improve the synchronization of L2 payloads.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-10-13T20:49:10.478Z"]
["ethereum-optimism/community-hub_day_2025-10-03", "ethereum-optimism/community-hub", "day", "2025-10-03", "# ethereum-optimism/community-hub Daily Update (Oct 3, 2025)\n## OVERVIEW \nThe day saw the closure of two long-standing issues related to testing and validation, alongside the creation of two new issues. Discussions continued on the Go 1.25 compatibility for Cannon.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nNo new pull requests were opened today.\n\n## CLOSED ISSUES\n### Test and Validation Refinement\nTwo issues related to testing and validation were closed today. The \"Fusaka activation test\" issue, aimed at creating a specific test for Fusaka (Osaka) activation on L1, was closed via [#17666](https://github.com/ethereum-optimism/community-hub/pull/17666) ([#17500](https://github.com/ethereum-optimism/community-hub/issues/17500)). Additionally, the \"validation: add chain config negative testing\" issue, which sought to improve validation code testing, was closed as it is no longer relevant due to a shift to a report-based approach ([#686](https://github.com/ethereum-optimism/community-hub/issues/686)).\n\n## NEW ISSUES\n### BEP Documentation\nTwo new issues were opened today, both referencing \"BEPs/BEP2.md\" ([#1193](https://github.com/ethereum-optimism/community-hub/issues/1193), [#1194](https://github.com/ethereum-optimism/community-hub/issues/1194)). The bodies of these issues were not provided, suggesting they might be placeholders or related to documentation updates.\n\n## ACTIVE ISSUES\n### Cannon Go 1.25 Compatibility\nDiscussion continued on the \"cannon: Support go1.25\" issue ([#17060](https://github.com/ethereum-optimism/community-hub/issues/17060)). On October 3rd, @pauldowman confirmed that the issue does affect Optimism, with @ajsutton providing more context. @sebastianst had previously inquired if the issue, which seems to affect some emulated MIPS hardware, was relevant. The blocking issue, https://github.com/golang/go/issues/74998, was linked by @pauldowman. Earlier comments from September indicated that Go 1.25.1 was released but did not appear to include the MIPS fix. The latest comment on October 5th from @ajsutton confirmed that all keccak hashes are incorrect when running in cannon with go1.25, impacting block hash calculations, and linked a detailed diagnosis.", "2025-10-13T20:49:10.734Z"]
["ethereum-optimism/optimism_day_2025-10-08", "ethereum-optimism/optimism", "day", "2025-10-08", "# ethereum-optimism/optimism Daily Update (Oct 8, 2025)\n## OVERVIEW \nThe day saw new development activity with the introduction of support for V2 contracts in `opcm` and a dependency bump for `github.com/docker/docker`.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- **Contract Management Enhancements**: A new pull request, [#17782](https://github.com/ethereum-optimism/optimism/pull/17782), was opened to add support for V2 contracts within the `addGameType` function in `opcm`.\n- **Dependency Updates**: Another pull request, [#17793](https://github.com/ethereum-optimism/optimism/pull/17793), was opened by Dependabot to bump the `github.com/docker/docker` dependency from version 27.5.1+incompatible to 28.5.1+incompatible.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-10-13T20:49:10.937Z"]
["ethereum-optimism/optimism_day_2025-10-11", "ethereum-optimism/optimism", "day", "2025-10-11", "# ethereum-optimism/optimism Daily Update (Oct 11, 2025)\n## OVERVIEW \nThe day saw minimal activity with no new features, bug fixes, or documentation. The primary development involved a new pull request to remove an unused variable from the OPCM.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- **Code Clean-up and Optimization**\n  - A new pull request, [#17828](https://github.com/ethereum-optimism/optimism/pull/17828), was opened to remove an unused `superchainProxyAdmin` immutable variable from the OPCM, aiming to streamline the codebase.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES", "2025-10-13T20:49:11.783Z"]
["ethereum-optimism/infra_day_2025-10-10", "ethereum-optimism/infra", "day", "2025-10-10", "# ethereum-optimism/infra Daily Update (Oct 10, 2025)\n## OVERVIEW \nThe day saw the opening of a new pull request focused on enhancing the `op-acceptor` with stricter exclusion gates. A significant new issue was also identified regarding the `op-dispute-mon`'s handling of out-of-sync nodes, highlighting a potential vulnerability in dispute monitoring.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo completed work to report for this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#490](https://github.com/ethereum-optimism/infra/pull/490), was opened to introduce stricter exclusion gates within the `op-acceptor` component, aiming to improve its filtering capabilities.\n\n## CLOSED ISSUES\n\nNo closed issues to report for this day.\n\n## NEW ISSUES\n\nNo new issues to report for this day.\n\n## ACTIVE ISSUES\n\n### Addressing `op-dispute-mon` Out-of-Sync Node Handling\nDiscussion on [#17814](https://github.com/ethereum-optimism/infra/issues/17814) centers on the `op-dispute-mon` incorrectly identifying disagreements when one of the configured rollup RPCs is out of sync. The latest comments suggest that while a related PR ([#17819](https://github.com/ethereum-optimism/infra/issues/17819)) might mitigate some instances, a more general solution is needed. This solution could involve using `syncStatus` to determine the true L2 head across all nodes and ignoring results from nodes that are significantly behind, rather than treating their differing outputs as a disagreement. There's also a consideration that simply trusting the highest L2 block might be problematic if it's from an incorrect fork, suggesting a need to verify if the node has processed the relevant L1 block.", "2025-10-13T20:49:12.016Z"]
["ethereum-optimism/optimism_day_2025-10-10", "ethereum-optimism/optimism", "day", "2025-10-10", "# ethereum-optimism/optimism Daily Update (Oct 10, 2025)\n\n## OVERVIEW \nThe day's development focused on addressing potential issues within the `op-dispute-mon` component, specifically around handling out-of-sync nodes and improving \"not found\" scenarios.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\n- A new pull request, [#17825](https://github.com/ethereum-optimism/optimism/pull/17825), was opened to improve the handling of \"not found\" scenarios within `op-dispute-mon`.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n- **`op-dispute-mon` Synchronization Challenges:** A new issue, [#17814](https://github.com/ethereum-optimism/optimism/issues/17814), was opened to address how `op-dispute-mon` handles out-of-sync nodes. The problem arises when multiple rollup RPCs are configured, and one is behind, leading to it being incorrectly detected as a disagreement rather than an out-of-sync state. Discussions suggest using `syncStatus` to determine if a node has processed the relevant L1 block and ignoring results from behind nodes.\n\n## ACTIVE ISSUES\n- **`op-dispute-mon` Out-of-Sync Node Handling:** On [#17814](https://github.com/ethereum-optimism/optimism/issues/17814), discussions are ongoing regarding how `op-dispute-mon` should handle out-of-sync nodes. The latest comment from ajsutton at 2025-10-12T20:33:19Z highlights that simply trusting the highest L2 block might be incorrect if it's from a node on an incorrect fork. The suggestion is to check the `CurrentL1` from the sync status to confirm if the node has processed the L1 block where the dispute game was created. If not, the node is considered behind and its results may be invalid. Earlier, pauldowman at 2025-10-10T16:18:14Z noted that [#17819](https://github.com/ethereum-optimism/optimism/pull/17819) will mitigate the problem for real output root not found errors, but a general solution might involve using `syncStatus` to identify the highest unsafe block across all nodes and ignoring results from nodes that are behind.", "2025-10-13T20:49:12.495Z"]
["ethereum-optimism/docs_day_2025-10-12", "ethereum-optimism/docs", "day", "2025-10-12", "# ethereum-optimism/docs Daily Update (Oct 12, 2025)\n## OVERVIEW \nThe day saw no completed work in terms of features, bug fixes, refactoring, documentation enhancements, or tests. A new pull request was opened to address a genesis config file naming issue in the quick start tutorial. Discussions continued on an active issue concerning `op-dispute-mon`'s handling of out-of-sync nodes.\n\n## KEY TECHNICAL DEVELOPMENTS\n\nNo key technical developments were completed today.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1787](https://github.com/ethereum-optimism/docs/pull/1787), was opened to fix a genesis config file naming issue within the quick start tutorial.\n\n## CLOSED ISSUES\n\nNo issues were closed today.\n\n## NEW ISSUES\n\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Addressing `op-dispute-mon` Out-of-Sync Node Behavior\nDiscussions continued on [#17814](https://github.com/ethereum-optimism/docs/issues/17814) regarding `op-dispute-mon` incorrectly detecting disagreements when one of multiple configured rollup RPCs is behind. The latest comment from ajsutton on 2025-10-12T20:33:19Z suggests that simply trusting the highest L2 block might be problematic if it's from an incorrect fork. Instead, the focus should be on checking the `CurrentL1` from the sync status to determine if a node has processed the relevant L1 block for the dispute game. If the L1 block has been processed, the node is considered sufficiently in sync; otherwise, it's behind and its results may be invalid. This builds on a previous suggestion by pauldowman to use `syncStatus` to identify the highest unsafe block across all nodes as the expected current L2 head, ignoring results from nodes that are behind.", "2025-10-13T20:49:13.190Z"]
["ethereum-optimism/ethereum-optimism.github.io_day_2025-10-13", "ethereum-optimism/ethereum-optimism.github.io", "day", "2025-10-13", "# ethereum-optimism/ethereum-optimism.github.io Daily Update (Oct 13, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to add the DRIP token to Base. Discussion continued on an active issue regarding graceful monitoring and alerting for replica-healthchecks.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1221](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1221), was opened with the intention of adding the DRIP token to Base.\n\n## CLOSED ISSUES\n\n## NEW ISSUES\n\n## ACTIVE ISSUES\n### Discussion on Replica-Healthcheck Monitoring and Alerting\nIssue [#17686](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17686), concerning graceful monitoring and alerting of multiple replica-healthchecks per namespace, saw recent comments. A contributor, CreeptoGengar, submitted a pull request to address the issue. However, yashvardhan-kukreja clarified that the issue is out of scope for op-conductor and is intended for the infrastructure team, noting its \"blocked\" status and association with the Platforms Team Tracker. The pull request was subsequently closed, with yashvardhan-kukreja encouraging future contributions after discussing with a maintainer and getting assigned to an issue.", "2025-10-13T20:49:13.789Z"]
["ethereum-optimism/docs_day_2025-10-13", "ethereum-optimism/docs", "day", "2025-10-13", "# ethereum-optimism/docs Daily Update (Oct 13, 2025)\n## OVERVIEW \nThe day saw a new pull request opened to update the oracles documentation with SUPRA Oracle and VRF information. Discussions continued on an active issue regarding graceful monitoring and alerting for replica-healthchecks.\n\n## KEY TECHNICAL DEVELOPMENTS\nNo completed work was reported for this day.\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#1788](https://github.com/ethereum-optimism/docs/pull/1788), was opened to update the `oracles.mdx` documentation to include details about SUPRA Oracle and VRF within the OP Devs Docs Page.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n**Monitoring and Alerting for Replica-Healthchecks**\nDiscussion continued on [#17686](https://github.com/ethereum-optimism/docs/issues/17686) regarding graceful monitoring and alerting of multiple replica-healthchecks per namespace. A contributor, CreeptoGengar, submitted a pull request to address the issue. However, yashvardhan-kukreja clarified that the issue is out of scope for `op-conductor` and is an infrastructure-level implementation. The pull request was subsequently closed, with yashvardhan-kukreja encouraging future contributions after discussing with a maintainer and getting the issue assigned.", "2025-10-13T20:49:14.005Z"]
["ethereum-optimism/optimism_day_2025-10-12", "ethereum-optimism/optimism", "day", "2025-10-12", "# ethereum-optimism/optimism Daily Update (Oct 12, 2025)\n## OVERVIEW \nToday's development focused on refining the `op-dispute-mon` to improve its handling of output root discrepancies and node synchronization, with a key change distinguishing 404 errors from actual \"output root not found\" scenarios.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Enhanced Dispute Monitor Robustness\nThe `op-dispute-mon` received an important update to differentiate between a transport-level 404 error and an actual \"output root not found\" condition, which is crucial for multi-node support. This change improves the accuracy of output agreement enrichment. ([#17819](https://github.com/ethereum-optimism/optimism/pull/17819))\n\n## NEWLY OPENED PULL REQUESTS\n- A pull request was opened to remove a redundant p2p private key path from the quickstart guide, streamlining the setup process. ([#17829](https://github.com/ethereum-optimism/optimism/pull/17829))\n- Another pull request proposes to consider a node invalid in `op-dispute-mon` if it has not processed L1 past the game head, aiming to improve the reliability of dispute monitoring. ([#17831](https://github.com/ethereum-optimism/optimism/pull/17831))\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n\n### Addressing Out-of-Sync Node Handling in `op-dispute-mon`\nDiscussions on [#17814](https://github.com/ethereum-optimism/optimism/issues/17814) continue to focus on how `op-dispute-mon` should handle out-of-sync nodes when configured with multiple rollup RPCs. The core challenge is to ensure the monitor uses the in-sync node as the source of truth rather than incorrectly flagging disagreements. A recent comment suggests that relying solely on the highest L2 block might be misleading, as it could originate from an incorrect fork. Instead, the `CurrentL1` from the sync status should be used to determine if a node has processed the relevant L1 block for the dispute game, indicating sufficient synchronization. An earlier comment noted that [#17819](https://github.com/ethereum-optimism/optimism/pull/17819) will partially mitigate the problem by reducing \"output root not found\" errors. A general solution proposed involves using `syncStatus` to identify the highest unsafe block across all nodes as the expected current L2 head, ignoring results from nodes that are behind if the requested L2 block is not a future proposal.", "2025-10-13T20:49:14.478Z"]
["ethereum-optimism/op-geth_day_2025-10-13", "ethereum-optimism/op-geth", "day", "2025-10-13", "# ethereum-optimism/op-geth Daily Update (Oct 13, 2025)\n## OVERVIEW \nThe day's activity primarily involved a new pull request to bump the version from upstream. There was also significant discussion on an active issue regarding graceful monitoring and alerting for replica-healthchecks.\n\n## KEY TECHNICAL DEVELOPMENTS\n### Upstream Version Update\nA new pull request was opened to update the `op-geth` version to `v1.101603.1` from its upstream source. This ensures the repository remains current with the latest upstream changes. ([#695](https://github.com/ethereum-optimism/op-geth/pull/695))\n\n## NEWLY OPENED PULL REQUESTS\nA new pull request, [#695](https://github.com/ethereum-optimism/op-geth/pull/695), was opened to bump the version from upstream to `v1.101603.1`.\n\n## CLOSED ISSUES\nNo issues were closed today.\n\n## NEW ISSUES\nNo new issues were reported today.\n\n## ACTIVE ISSUES\n### Replica-Healthcheck Monitoring and Alerting\nDiscussion continued on issue [#17686](https://github.com/ethereum-optimism/op-geth/issues/17686), which concerns the graceful monitoring and alerting of multiple replica-healthchecks per namespace. A contributor, CreeptoGengar, submitted a pull request intending to solve this issue. However, yashvardhan-kukreja clarified that the issue's implementation is intended for the infrastructure end and is currently blocked, belonging to the Platforms Team Tracker. The submitted PR was subsequently closed, with yashvardhan-kukreja encouraging future contributions after discussing issue assignment with a maintainer.", "2025-10-13T20:49:14.758Z"]
["ethereum-optimism/optimism_day_2025-10-13", "ethereum-optimism/optimism", "day", "2025-10-13", "# ethereum-optimism/optimism Daily Update (Oct 13, 2025)\n## OVERVIEW \nToday's development focused on critical bug fixes, particularly enhancing `op-deployer` to support upgrades up to v4.1.0 and improving the stability of acceptance tests. New pull requests address various fixes, features, and dependency updates, while new and closed issues highlight ongoing efforts in `op-conductor` and `rollup-boost` health.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### `op-deployer` Upgrade Support and Bug Fixes\nThe `op-deployer` tool received a significant update, enabling it to support and test upgrades up to v4.1.0. This involved updating the `superchain-registry/validation` package import to include standard `op-contracts/v4.1.0` addresses and porting existing upgrade support. This ensures the deployer can handle the latest contract versions. ([#17824](https://github.com/ethereum-optimism/optimism/pull/17824))\n\n### Acceptance Test Stability Improvements\nMiscellaneous fixes were implemented for flake-shake, a tool used for acceptance tests. These improvements include rounding average durations to the nearest second and fixing the Slack notification CCI URL, contributing to more reliable and accurate test reporting. ([#17830](https://github.com/ethereum-optimism/optimism/pull/17830))\n\n### New Acceptance Test Integration\nA new test, `TestL2ELP2PCanonicalChainAdvancedByFCU`, has been integrated into the FlakeShake system for `op-acceptance-tests`. This expands the test coverage and helps ensure the stability of the L2 EL P2P canonical chain. ([#17833](https://github.com/ethereum-optimism/optimism/pull/17833))\n\n## NEWLY OPENED PULL REQUESTS\nSeveral new pull requests were opened today:\n- [#17832](https://github.com/ethereum-optimism/optimism/pull/17832) proposes passing the game type as a CWIA argument instead of a constructor argument for proofs.\n- [#17834](https://github.com/ethereum-optimism/optimism/pull/17834) aims to improve the test coverage and quality for ResourceMetering.\n- [#17836](https://github.com/ethereum-optimism/optimism/pull/17836) addresses a potential hang by adding a default HTTP client timeout to `op-service/signer`.\n- [#17837](https://github.com/ethereum-optimism/optimism/pull/17837) introduces a `replica_id` label for multi-replica monitoring in `op-conductor`.\n- [#17838](https://github.com/ethereum-optimism/optimism/pull/17838) focuses on adding context cancellation checks before network requests.\n- [#17839](https://github.com/ethereum-optimism/optimism/pull/17839) seeks to improve the organization of `ReinitializableBase` tests.\n- [#17840](https://github.com/ethereum-optimism/optimism/pull/17840) aims to resolve artifact exclusion failures in scheduled runs for `ai-contracts-test`.\n- [#17841](https://github.com/ethereum-optimism/optimism/pull/17841) is a dependabot update to bump `github.com/lmittmann/w3` from 0.19.5 to 0.20.4.\n\n## CLOSED ISSUES\n\n### `rollup-boost` Healthiness Tolerance\nTwo issues related to `rollup-boost` partial healthiness tolerance have been closed. These issues focused on implementing an opt-in tolerance for `op-rbuilder` failures in `op-conductor` to ignore harmless blips ([#17678](https://github.com/ethereum-optimism/optimism/issues/17678)) and deploying this setting across devnet, sepolia, and mainnet ([#17680](https://github.com/ethereum-optimism/optimism/issues/17680)).\n\n## NEW ISSUES\n\n### `op-conductor` Flashblocks and Raft Timeout Issues\nA new issue has been opened to investigate `op-conductor` flashblocks-streaming and raft timeout problems. The primary goal is to identify the root cause of `conductor` attempting to forward flashblocks from `rollup-boost`, specifically noting an error related to reading from the `rollup-boost` WebSocket due to a read limit. ([#17835](https://github.com/ethereum-optimism/optimism/issues/17835))\n\n## ACTIVE ISSUES\n\n### Replica Healthcheck Monitoring\nIssue [#17686](https://github.com/ethereum-optimism/optimism/issues/17686) discusses the need for graceful monitoring and alerting of multiple replica-healthchecks per namespace. The latest comments indicate that a pull request was made with the intention to solve this issue. However, a maintainer clarified that the issue is out of the scope of `op-conductor` and its implementation is meant for the infrastructure end, belonging to the Platforms Team Tracker. The PR was subsequently closed, with an invitation for future contributions.", "2025-10-13T20:49:18.909Z"]
["ethereum-optimism/Retro-Funding_week_2025-09-07", "ethereum-optimism/Retro-Funding", "week", "2025-09-07", "# ethereum-optimism/Retro-Funding Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on enhancing the RetroPGF evaluation process and improving core developer tooling. The most significant development was the integration of M7 data and weights, a key step forward for the next round of public goods funding analysis. Alongside this, work continued on improving the developer experience with a new utility for downloading project logos and active discussions around local build capabilities for `op-geth`. Key issues related to `op-batcher` metrics and `op-geth` genesis handling were also resolved, strengthening the stability and observability of the OP Stack.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on preparing for RetroPGF evaluations and refining the underlying infrastructure.\n\n- **RetroPGF Data Integration and Tooling:**\n  - New data and weights for M7 were integrated into the evaluation algorithms and results files, directly impacting both devtooling and onchain metric calculations ([#77](https://github.com/ethereum-optimism/Retro-Funding/pull/77)).\n  - A new utility was added to the `eval-algos/core` directory to facilitate downloading project logos, improving the data collection and presentation capabilities of the evaluation tooling ([#76](https://github.com/ethereum-optimism/Retro-Funding/pull/76)).\n\n## \ud83d\udc1b Issues & Triage\nThis week saw the resolution of key infrastructure issues and continued discussion on developer experience improvements.\n\n- **Closed Issues:**\n  - **`op-geth` Stability:** An issue causing a LevelDB panic in `op-geth` when initializing with large genesis files was resolved. The fix involves importing the state into the database rather than storing the `genesis.json` as a flat blob, mirroring the process used by `op-mainnet` ([#668](https://github.com/ethereum-optimism/Retro-Funding/issues/668)).\n  - **`op-batcher` Observability:** An improvement was made to the `op-batcher`'s throttling intensity metric. The corresponding Grafana dashboard will now only plot values greater than zero, making it easier to identify active controllers ([#17149](https://github.com/ethereum-optimism/Retro-Funding/issues/17149)).\n\n- **New & Active Issues:**\n  - No new issues were opened this week.\n  - **Developer Tooling:** Discussion is ongoing in issue [#16975](https://github.com/ethereum-optimism/Retro-Funding/issues/16975) about enabling Kurtosis to use a local `op-geth` build. Suggestions include leveraging the templating system to automatically override the image or allowing the temporary cloning and local building of a Docker image.\n  - **Data Documentation:** A minor update was noted in issue [#762](https://github.com/ethereum-optimism/Retro-Funding/issues/762), which documents builder addresses that have received mainnet ETH funding.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was focused on technical problem-solving and improving the developer environment. The active discussion around enabling local `op-geth` builds within Kurtosis ([#16975](https://github.com/ethereum-optimism/Retro-Funding/issues/16975)) highlights the community's focus on refining development workflows. While there were no major multi-contributor threads, the steady progress on infrastructure issues and data integration demonstrates ongoing, focused collaboration.", "2025-10-13T20:49:37.982Z"]
["ethereum-optimism/docs_week_2025-09-07", "ethereum-optimism/docs", "week", "2025-09-07", "# ethereum-optimism/docs Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by a dual focus on immediate operational needs and strategic backlog refinement. A new upgrade notice page (\"Upgrade 16a\") was promptly added and subsequently patched, ensuring chain operators have critical information. Concurrently, a significant number of issues were closed, most notably signaling the deprioritization of Kurtosis devnet development. This cleanup effort also resolved long-standing items related to flashblocks monitoring, proof system tests, and outdated documentation, streamlining the project's focus towards future priorities like `op-program` optimizations.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on crucial documentation updates for an upcoming network upgrade.\n\n*   **Upgrade 16a Documentation:** A new notice page for \"Upgrade 16a\" was created to inform users and operators ([#1733](https://github.com/ethereum-optimism/docs/pull/1733)). A follow-up fix was quickly merged to add necessary chain operator tasks to the notice ([#1739](https://github.com/ethereum-optimism/docs/pull/1739), [#1740](https://github.com/ethereum-optimism/docs/pull/1740)).\n*   **General Documentation Improvements:** Automated fixes were applied to correct breadcrumbs and update the spelling dictionary, which also had the benefit of improving search results ([#1735](https://github.com/ethereum-optimism/docs/pull/1735), [#1736](https://github.com/ethereum-optimism/docs/pull/1736)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a major effort in backlog grooming, closing a large volume of issues to clarify development priorities.\n\n*   **Closed Issues:**\n    *   **Kurtosis Devnet Deprioritization:** A significant number of issues related to the Kurtosis devnet were closed with the rationale that the work is \"not currently a priority.\" This signals a clear shift away from active development in this area, affecting tasks like genesis checks, performance improvements, and new tests ([#15753](https://github.com/ethereum-optimism/docs/issues/15753), [#14390](https://github.com/ethereum-optimism/docs/issues/14390), [#15050](https://github.com/ethereum-optimism/docs/issues/15050), [#15558](https://github.com/ethereum-optimism/docs/issues/15558)).\n    *   **Flashblocks Stability Confirmed:** Several issues concerning the deployment, monitoring, and health of flashblocks on mainnet sequencers were resolved, indicating the feature is now stable ([#16759](https://github.com/ethereum-optimism/docs/issues/16759), [#16760](https://github.com/ethereum-optimism/docs/issues/16760), [#17317](https://github.com/ethereum-optimism/docs/issues/17317)).\n    *   **Proof System & Infrastructure Cleanup:** Smoke test issues for `op-challenger`, `op-dispute-mon`, and `op-proposer` were closed as they are no longer required ([#140](https://github.com/ethereum-optimism/docs/issues/140), [#141](https://github.com/ethereum-optimism/docs/issues/141), [#142](https://github.com/ethereum-optimism/docs/issues/142)). An issue on flashblocks threat modeling was also closed after concluding no novel risks were introduced ([#17144](https://github.com/ethereum-optimism/docs/issues/17144)).\n\n*   **New & Active Issues:**\n    *   **`op-program` Optimization:** A new issue ([#17416](https://github.com/ethereum-optimism/docs/issues/17416)) was opened to add a hint for fast block header oracle lookup in `op-program` specs. A draft PR is already underway, showing this is an active area of development.\n    *   **CI Test Expansion:** To enhance testing, an issue was created to add \"soneium\" to the contract upgrade tests in CI ([#17332](https://github.com/ethereum-optimism/docs/issues/17332)), and a PR to address it has already been opened.\n    *   **Kurtosis Websockets:** The discussion on issue [#17194](https://github.com/ethereum-optimism/docs/issues/17194) (Implement Websockets support) is notable. After being closed as \"Won't implement,\" it was reopened to ensure a corresponding `TODO` in the codebase is removed, highlighting a commitment to code hygiene even for deprioritized features.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the decisive actions taken to refine the project's focus. The discussion between contributors `alfonso-op` and `ajsutton` around the Kurtosis issues ([#14390](https://github.com/ethereum-optimism/docs/issues/14390), [#17194](https://github.com/ethereum-optimism/docs/issues/17194)) demonstrates healthy debate and alignment on deprioritization. The reopening of an issue to ensure a code comment was removed before final closure shows strong attention to detail and peer review. Furthermore, the rapid response to newly opened issues with draft pull requests ([#17416](https://github.com/ethereum-optimism/docs/issues/17416), [#17332](https://github.com/ethereum-optimism/docs/issues/17332)) indicates a highly engaged and responsive team.", "2025-10-13T20:49:42.858Z"]
["ethereum-optimism/community-hub_week_2025-08-31", "ethereum-optimism/community-hub", "week", "2025-08-31", "# ethereum-optimism/community-hub Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on the strategic deployment and configuration of Flashblocks across the ecosystem. Significant progress was made in tracking and executing the rollout on various sequencers, including mainnet. Alongside this major infrastructure initiative, key discussions focused on resolving a critical P2P gossip configuration bug that could cause panics and on enhancing the CI testing environment by exposing more networks to the `op-sync-tester`. While no new code was merged, the activity reflects a strong focus on infrastructure hardening, bug resolution, and improving test coverage.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports for this period, development was focused on planning and discussion, with no new features, bug fixes, or other code changes merged into the main branch.\n\n## \ud83d\udc1b Issues & Triage\nDiscussions this week were concentrated on infrastructure deployment, network configuration bugs, and testing improvements.\n\n- **Closed Issues:**\n  - A project management issue [#1184] related to project definition and labeling was opened and immediately closed, indicating a minor administrative task.\n\n- **New & Active Issues:**\n  - **Flashblocks Deployment:** This was the most active area. A new issue [#17317] was opened to specifically track the enablement of Flashblocks on a mainnet sequencer. Discussions on related issues show steady progress: `op-rbuilder` is now deployed and synced on sunnyside sequencers [#16761], with the next step being the deployment of `rollup-boost` [#16759]. However, the deployment of `flashblocks-websocket-proxy` [#16763] is currently blocked pending the availability of conductor websocket connections.\n  - **Network Configuration & Bugs:** A significant discussion emerged in [#17308] around a bug where `ConfigureGossip` overwrites sane defaults with zero values, leading to panics in `go-libp2p-pubsub`. A potential solution involving a `DefaultP2PConfig` method to provide valid defaults is being considered. Meanwhile, the persistent \"head block is not reachable\" error during `op-geth` initialization continues to be reported [#420].\n  - **CI and Testing:** Work is underway to improve the `op-sync-tester` by exposing more networks within the CI environment [#454]. L2 execution layers for several chains are now exposed, with the remaining task being the exposure of an L1 beacon API.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the coordinated effort to roll out Flashblocks, with multiple issues tracking different components of the deployment and their interdependencies. The detailed technical discussions in issues like the P2P gossip bug [#17308] and the sync-tester enhancements [#454] highlight deep engagement from team members in diagnosing complex problems and improving core infrastructure. The clear identification of blockers, such as the websocket dependency for the Flashblocks proxy [#16763], demonstrates active communication and problem-solving within the team.", "2025-10-13T20:49:43.243Z"]
["ethereum-optimism/specs_week_2025-08-31", "ethereum-optimism/specs", "week", "2025-08-31", "# ethereum-optimism/specs Weekly Report (Aug 31 - 6, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on protocol refinement and specification cleanup, particularly for the upcoming Jovian upgrade. A key clarification was made to require `PayloadAttributes.MinBaseFee` to be `NULL` pre-Jovian, enhancing protocol explicitness. Significant progress was made in closing out a backlog of issues related to the `min-base-fee` feature integration. Additionally, a critical discussion on handling large genesis files in `op-geth` was resolved, providing a clear path forward for node operators.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this period centered on improving the clarity and accuracy of the protocol specifications.\n\n- **Jovian Protocol Specification Refinement:** A crucial update was merged to clarify protocol behavior before the Jovian upgrade. PR [#756](https://github.com/ethereum-optimism/specs/pull/756) explicitly requires `PayloadAttributes.MinBaseFee` to be `NULL`, addressing a need for greater precision in the specs.\n\n- **Configuration and Address Updates:** A series of new pull requests were opened to keep configuration files and contract addresses current. This includes updates to the L1 Block Info contract address ([#758](https://github.com/ethereum-optimism/specs/pull/758)) and the `eth2_config.yaml` file ([#759](https://github.com/ethereum-optimism/specs/pull/759), [#760](https://github.com/ethereum-optimism/specs/pull/760)). Another PR, [#757](https://github.com/ethereum-optimism/specs/pull/757), was also opened.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several important issues, clearing the way for future development and improving the developer experience.\n\n- **Closed Issues:**\n    - **`min-base-fee` Feature Integration:** A cluster of issues related to the `min-base-fee` feature was closed, marking progress in its specification. This included adding `minBaseFee` to the block header's `extraData` ([#649](https://github.com/ethereum-optimism/specs/issues/649)), adding the field to `PayloadAttributesV3` ([#650](https://github.com/ethereum-optimism/specs/issues/650)), and updating `eip1559.CalcBaseFee` logic ([#651](https://github.com/ethereum-optimism/specs/issues/651)).\n    - **`op-geth` Genesis Handling:** A long-standing discussion on initializing `op-geth` with large genesis files ([#668](https://github.com/ethereum-optimism/specs/issues/668)) was resolved. The recommended solution involves modifying `op-geth` to not store the large `alloc` data from the genesis file and instead include the `stateHash` in the chain config, enabling nodes to snap-sync.\n    - **Protocol Clarity:** An issue opened to request explicit clarification on `PayloadAttributes.MinBaseFee` requirements pre-Jovian ([#755](https://github.com/ethereum-optimism/specs/issues/755)) was resolved the same day, leading directly to the update in PR [#756](https://github.com/ethereum-optimism/specs/pull/756).\n    - **Development Environment Shift:** The issue to integrate `op-nat` into Kurtosis network tests ([#158](https://github.com/ethereum-optimism/specs/issues/158)) was closed, signaling a strategic decision to prioritize other local development environments.\n\n- **New & Active Issues:**\n    - An ongoing discussion in [#763](https://github.com/ethereum-optimism/specs/issues/763) focuses on making Superchain configurations fully self-descriptive. The goal is to ensure `ChainConfig` files contain a complete set of values, reducing reliance on inherited or implicitly populated data, which represents significant future work in simplifying chain configuration.\n\n## \ud83d\udcac Community & Collaboration\n- The resolution of the `op-geth` genesis issue ([#668](https://github.com/ethereum-optimism/specs/issues/668)) highlighted effective collaboration, with @protolambda providing a detailed technical explanation that was acknowledged and accepted by @cliff0412.\n- The rapid turnaround on issue [#755](https://github.com/ethereum-optimism/specs/issues/755), from identification to a merged pull request, demonstrates the team's responsiveness in maintaining specification accuracy.\n- Ongoing discussions, such as the one on Superchain configuration explicitness ([#763](https://github.com/ethereum-optimism/specs/issues/763)) involving @alfonso-op, show a continued commitment to improving the developer experience across the ecosystem.", "2025-10-13T20:49:50.063Z"]
["ethereum-optimism/design-docs_week_2025-09-07", "ethereum-optimism/design-docs", "week", "2025-09-07", "# ethereum-optimism/design-docs Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing protocol security and operational stability. Significant progress was made with new design documents for Safe modules, including a LivenessModule and a TimelockGuard, alongside a low-level security improvement with Fused Multiply-Add. On the operational front, the team advanced flashblocks integration, resolved issues with `op-batcher` throttling and `op-geth` stability, and made strides in testing infrastructure with the `op-sync-tester`. A notable trend was the extensive cleanup of issues related to the Kurtosis devnet, signaling a strategic shift or completion of a major workstream.\n\n## \ud83d\udee0\ufe0f Key Developments\nCompleted work this week focused on bolstering security through new design specifications and refining existing documentation.\n\n- **Security Module Design:** New design documents were introduced to improve the security and robustness of managed safes. This includes a proposal for an updated `LivenessModule` ([#320](https://github.com/ethereum-optimism/design-docs/pull/320)) and a new `TimelockGuard` for controlled access ([#324](https://github.com/ethereum-optimism/design-docs/pull/324)). A lower-level security feature was also added to implement Fused Multiply-Add (FMA) for u16a ([#334](https://github.com/ethereum-optimism/design-docs/pull/334)).\n\n- **Documentation and Design Refinements:** The `dispute-game-creators` design document was reorganized to improve clarity and better articulate its purpose ([#331](https://github.com/ethereum-optimism/design-docs/pull/331)). Additionally, new design proposals were opened for a Flash BAL system ([#337](https://github.com/ethereum-optimism/design-docs/pull/337)) and a migration from Kurtosis to Sysgo ([#335](https://github.com/ethereum-optimism/design-docs/pull/335)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week was characterized by a major cleanup of the Kurtosis backlog and a focus on resolving critical stability bugs.\n\n- **Closed Issues:**\n    - **Kurtosis Devnet Cleanup:** A large number of issues related to the Kurtosis devnet were closed, having been either completed, deprioritized, or marked as \"will not be implemented.\" This includes work on genesis checks ([#15753](https://github.com/ethereum-optimism/design-docs/issues/15753)), performance improvements ([#14390](https://github.com/ethereum-optimism/design-docs/issues/14390)), and `op-validator` support ([#16712](https://github.com/ethereum-optimism/design-docs/issues/16712)).\n    - **Operational Stability:** Key stability issues were resolved, including an improvement to the `op-batcher` throttling metric ([#17149](https://github.com/ethereum-optimism/design-docs/issues/17149)), a fix for `op-geth` initialization with large genesis files ([#668](https://github.com/ethereum-optimism/design-docs/issues/668)), and a resolution for an abnormal CPU usage bug in `op-geth` ([#613](https://github.com/ethereum-optimism/design-docs/issues/613)).\n    - **Flashblocks & Testing:** Progress was marked by the closure of issues related to mainnet flashblocks sequencer management ([#17318](https://github.com/ethereum-optimism/design-docs/issues/17318), [#17319](https://github.com/ethereum-optimism/design-docs/issues/17319)) and the completion of the first milestone for the `op-sync-tester` ([#16703](https://github.com/ethereum-optimism/design-docs/issues/16703)).\n\n- **New & Active Issues:**\n    - **Critical `op-geth` Bug:** A significant issue ([#679](https://github.com/ethereum-optimism/design-docs/issues/679)) was reported where `op-geth` crashes during a full sync on op-mainnet due to a failure to decode RLP receipts. The team has acknowledged the issue and a fix appears to be available in a recent patch.\n    - **Future Work:** New issues were opened to conduct threat modeling for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/design-docs/issues/336)) and to add an optimization hint for block header lookups in `op-program` ([#17416](https://github.com/ethereum-optimism/design-docs/issues/17416)).\n    - **Ongoing Discussions:** The effort to add a nightly CI job for the sync tester ([#17253](https://github.com/ethereum-optimism/design-docs/issues/17253)) is currently blocked by an infrastructure issue. Two new bug reports ([#338](https://github.com/ethereum-optimism/design-docs/issues/338), [#339](https://github.com/ethereum-optimism/design-docs/issues/339)) were opened but lack details.\n\n## \ud83d\udcac Community & Collaboration\nThe rapid response to the critical `op-geth` RLP decoding bug ([#679](https://github.com/ethereum-optimism/design-docs/issues/679)) demonstrated effective collaboration between community reporters and the core development team, leading to a swift investigation and fix. The coordinated closure of numerous Kurtosis-related issues suggests a decisive internal effort to refine project priorities and clear the backlog. The continuous stream of new and refined design documents highlights the repository's central role in shaping the future of the Optimism protocol.", "2025-10-13T20:49:59.429Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-09-07", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-09-07", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity was characterized by a significant strategic realignment in development priorities. The project has officially deprioritized the Kurtosis devnet, leading to the closure of a large volume of related issues. This cleanup allows the team to refocus efforts on core protocol enhancements. In line with this, a new issue was opened to improve the efficiency of the `op-program`, signaling a continued focus on optimizing the OP Stack's foundational components.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided daily reports, there were no new features, bug fixes, or other code changes merged during this period. The development focus was on issue management and strategic planning.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was the primary activity this week, reflecting a shift in project focus.\n\n- **Closed Issues:**\n    - **Kurtosis Devnet Deprioritization:** A major cleanup effort resulted in the closure of numerous issues related to the Kurtosis devnet, which is no longer a development priority. This included the umbrella issue for idempotency and performance ([#14390](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/14390)) and specific tasks like adding genesis checks ([#15753](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15753)), L1 chain config mapping ([#15050](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/15050)), and `op-validator` support ([#16712](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16712)).\n    - **Infrastructure Security:** A discussion on infrastructure threat modeling for flashblocks delivery ([#17144](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17144)) was concluded. The outcome determined that no novel risks were introduced, with a recommendation to hardcode image digests in Kubernetes manifests as a short-term mitigation.\n    - **Housekeeping:** An issue regarding v2 dispute game implementations ([#17259](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17259)) was closed as a duplicate.\n\n- **New & Active Issues:**\n    - **`op-program` Enhancement:** A new issue ([#17416](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17416)) was created to add a hint for fast block header oracle lookups in `op-program`, aiming to improve performance.\n    - **Kurtosis Cleanup:** An issue to add websockets support to the Kurtosis reverse proxy ([#17194](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17194)) was reopened. Despite the broader deprioritization, this issue is being tracked to ensure a related `TODO` in the codebase is properly removed.\n\n## \ud83d\udcac Community & Collaboration\nThe week's activity points to a period of internal strategic alignment rather than active code collaboration. The coordinated closure of multiple Kurtosis-related issues suggests a clear, top-down decision to shift development resources. The discussions, such as the one on infrastructure threat modeling, show a focus on risk assessment and process improvement.", "2025-10-13T20:49:59.719Z"]
["ethereum-optimism/infra_week_2025-09-07", "ethereum-optimism/infra", "week", "2025-09-07", "# ethereum-optimism/infra Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant push towards production readiness and a strategic refinement of development priorities. The team successfully advanced the mainnet rollout of flashblocks by closing numerous configuration and monitoring issues. Concurrently, there was a concerted effort to enhance the `op-acceptor` testing framework with new features and bug fixes. A major strategic shift was evident as a large number of Kurtosis-related issues were closed, signaling a de-prioritization of that tool. However, new stability concerns have emerged around `op-geth`, with an active investigation into a critical sync-crashing bug.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe focus of direct code contributions this week was on improving the `op-acceptor` acceptance testing tool, enhancing its usability and reliability.\n\n- **`op-acceptor` User Experience Enhancements:** The testing tool received several updates to improve developer feedback. A new console progress indicator was added to provide better visibility during test execution ([#457](https://github.com/ethereum-optimism/infra/pull/457)). The underlying code for this indicator was also refactored to remove a redundant parameter for a cleaner implementation ([#458](https://github.com/ethereum-optimism/infra/pull/458)). Additionally, a bug related to the Go releaser when `mise` is activated was fixed, ensuring smoother operation ([#459](https://github.com/ethereum-optimism/infra/pull/459)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was a major focus, with significant progress in closing out work related to flashblocks and a strategic cleanup of the backlog.\n\n- **Closed Issues:**\n    - **Flashblocks Mainnet Rollout:** A large cluster of issues related to the flashblocks deployment was resolved. This included enabling flashblocks on mainnet sequencers ([#16759](https://github.com/ethereum-optimism/infra/issues/16759), [#17317](https://github.com/ethereum-optimism/infra/issues/17317), [#16760](https://github.com/ethereum-optimism/infra/issues/16760)), configuring a new sequencer with flashblocks ([#17318](https://github.com/ethereum-optimism/infra/issues/17318)), and finalizing associated monitoring and alerting ([#16868](https://github.com/ethereum-optimism/infra/issues/16868), [#16388](https://github.com/ethereum-optimism/infra/issues/16388)).\n    - **Kurtosis De-prioritization:** Numerous issues related to the Kurtosis devnet environment were closed, with comments indicating that it is not a current priority. This strategic decision clears the way for focus on other areas ([#15753](https://github.com/ethereum-optimism/infra/issues/15753), [#14390](https://github.com/ethereum-optimism/infra/issues/14390), [#15050](https://github.com/ethereum-optimism/infra/issues/15050), [#16712](https://github.com/ethereum-optimism/infra/issues/16712)).\n    - **Test Infrastructure Cleanup:** Several obsolete Network Acceptance Testing (NAT) smoke tests for components like `op-challenger` and `op-proposer` were closed ([#141](https://github.com/ethereum-optimism/infra/issues/141), [#143](https://github.com/ethereum-optimism/infra/issues/143]), along with older issues related to test infrastructure ([#346](https://github.com/ethereum-optimism/infra/issues/346), [#188](https://github.com/ethereum-optimism/infra/issues/188)).\n\n- **New & Active Issues:**\n    - **`op-geth` Stability Concerns:** A critical new issue ([#679](https://github.com/ethereum-optimism/infra/issues/679)) was opened for `op-geth` crashing during a full sync with \"Failed to decode RLP receipts\" errors. The team has confirmed the issue and is actively investigating a fix. This follows the closure of an older issue ([#613](https://github.com/ethereum-optimism/infra/issues/613)) concerning high CPU usage, which appears to have resolved itself after an initial indexing period.\n    - **`op-acceptor` Improvements:** A batch of new issues was opened to further enhance the `op-acceptor` tool. These include improving logging ([#455](https://github.com/ethereum-optimism/infra/issues/455)), logging all configuration for reproducibility ([#461](https://github.com/ethereum-optimism/infra/issues/461)), fixing a bug where the progress indicator fails in Kurtosis runs ([#460](https://github.com/ethereum-optimism/infra/issues/460)), and improving package parallelism ([#462](https://github.com/ethereum-optimism/infra/issues/462)).\n    - **`op-program` Performance:** A new issue ([#17416](https://github.com/ethereum-optimism/infra/issues/17416)) proposes adding a hint for fast block header oracle lookups in `op-program`, aiming to optimize performance.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity highlights a focused and coordinated effort by the core team. The systematic closure of issues related to the flashblocks rollout and the de-prioritization of Kurtosis demonstrate clear strategic alignment and execution. The burst of new, related issues for `op-acceptor` suggests a dedicated planning session or sprint focused on improving the project's testing capabilities.\n\nCollaboration with the wider community was visible in the `op-geth` CPU usage issue ([#613](https://github.com/ethereum-optimism/infra/issues/613)), where users provided diagnostic `pprof` profiles to aid in the investigation. The team's rapid acknowledgment and investigation of the new critical `op-geth` crash ([#679](https://github.com/ethereum-optimism/infra/issues/679)) further underscores a commitment to maintaining node stability for the ecosystem.", "2025-10-13T20:50:09.326Z"]
["ethereum-optimism/op-analytics_week_2025-09-07", "ethereum-optimism/op-analytics", "week", "2025-09-07", "# ethereum-optimism/op-analytics Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's key achievement was the successful deployment and stabilization of flashblocks on mainnet sequencers, a significant step for the protocol's infrastructure. This rollout was supported by enhancements to sequencer health monitoring, including the deployment of `op-conductor` with new EL p2p healthchecks to ensure robust operation. Alongside this major deployment, the team also performed important maintenance by deprecating and removing obsolete smoke tests related to the dispute protocol. Looking ahead, new work has begun on performance enhancements for `op-program` and expanding contract upgrade test coverage.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on a major mainnet deployment and associated stability improvements.\n\n- **Flashblocks Mainnet Deployment**\n  A multi-stage effort to enable flashblocks on mainnet sequencers was successfully completed. After an initial evaluation on a single sequencer, flashblocks were rolled out across the remaining sequencers. Related work included merging supporting PRs and resolving alerts for low peer counts on the newly enabled sequencers, ensuring a stable deployment ([#16759](https://github.com/ethereum-optimism/op-analytics/issues/16759), [#16760](https://github.com/ethereum-optimism/op-analytics/issues/16760), [#17317](https://github.com/ethereum-optimism/op-analytics/issues/17317), [#16868](https://github.com/ethereum-optimism/op-analytics/issues/16868)).\n\n- **Sequencer Health and Alerting**\n  To bolster sequencer reliability, `op-conductor` was released and deployed with new EL p2p healthchecks ([#17153](https://github.com/ethereum-optimism/op-analytics/issues/17153)). An issue causing false alerts for unhealthy non-flashblocks enabled sequencers was also resolved, refining the accuracy of the monitoring system ([#17143](https://github.com/ethereum-optimism/op-analytics/issues/17143)).\n\n- **Test Suite and Infrastructure Maintenance**\n  A series of outdated smoke tests for dispute components, including `op-challenger`, `op-dispute-mon`, and `op-proposer`, were closed as they are no longer required ([#140](https://github.com/ethereum-optimism/op-analytics/issues/140), [#141](https://github.com/ethereum-optimism/op-analytics/issues/141), [#142](https://github.com/ethereum-optimism/op-analytics/issues/142), [#143](https://github.com/ethereum-optimism/op-analytics/issues/143)). Additionally, an issue regarding Websockets support in the Kurtosis Reverse Proxy was closed with the decision not to implement it ([#17194](https://github.com/ethereum-optimism/op-analytics/issues/17194)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management focused on completing the flashblocks deployment while initiating new performance and testing enhancements.\n\n- **Closed Issues:**\n  The primary focus of closed issues was the successful flashblocks deployment and the resolution of associated stability alerts. Significant housekeeping was also completed with the deprecation of multiple obsolete smoke tests for the dispute protocol. Several minor infrastructure and documentation issues were also closed, clearing the backlog.\n\n- **New & Active Issues:**\n  Development has shifted towards future enhancements, with two notable issues gaining immediate traction:\n  - **`op-program` Performance:** A proposal was made to add a hint for fast block header oracle lookups in `op-program` specs to improve performance ([#17416](https://github.com/ethereum-optimism/op-analytics/issues/17416)). A draft PR is already open and under discussion.\n  - **CI Test Coverage:** To improve testing robustness, a new issue was opened to add `soneium` to the contract upgrade tests in CI ([#17332](https://github.com/ethereum-optimism/op-analytics/issues/17332)). A PR to implement this has already been submitted.\n\n## \ud83d\udcac Community & Collaboration\nThe development pace this week was characterized by a tight feedback loop between issue creation and implementation. New proposals for enhancing `op-program` ([#17416](https://github.com/ethereum-optimism/op-analytics/issues/17416)) and expanding test coverage ([#17332](https://github.com/ethereum-optimism/op-analytics/issues/17332)) were both met with immediate draft pull requests. This indicates active collaboration and a proactive approach to moving the project forward, with discussions quickly translating into tangible code.", "2025-10-13T20:50:14.055Z"]
["ethereum-optimism/op-geth_week_2025-09-07", "ethereum-optimism/op-geth", "week", "2025-09-07", "# ethereum-optimism/op-geth Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in operational stability and a focus on Superchain alignment. Key achievements include the successful rollout and stabilization of flashblocks across mainnet sequencers, accompanied by enhanced monitoring and alerting. The Superchain Registry was updated to incorporate the Arena-Z Sepolia Isthmus hardfork, ensuring `op-geth` remains current with network upgrades. While numerous legacy and performance-related issues were resolved, a new critical issue emerged concerning receipt decoding errors during full sync, which will require immediate attention.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment work focused on enhancing Superchain compatibility and tooling robustness.\n\n- **Superchain Configuration & Syncing:** To align with network evolution, the Superchain Registry was updated to commit `8ae98b`, which includes the Arena-Z Sepolia Isthmus hardfork configuration ([#678](https://github.com/ethereum-optimism/op-geth/pull/678)). In parallel, the `sync-superchain.sh` script was made more resilient by preventing errors when certain genesis files are absent during testing ([#673](https://github.com/ethereum-optimism/op-geth/pull/673)).\n\n- **Core Feature Proposals:** A new pull request was opened to introduce logging for Data Availability (DA) usage estimates, aiming to provide better visibility into this core function ([#674](https://github.com/ethereum-optimism/op-geth/pull/674)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a substantial cleanup of old issues and the identification of a new critical bug.\n\n- **Closed Issues:**\n    - **Flashblocks & Sequencer Stability:** A major effort concluded with the successful enablement of flashblocks on all OP Labs mainnet sequencers, marking a significant operational milestone ([#16759](https://github.com/ethereum-optimism/op-geth/issues/16759), [#16760](https://github.com/ethereum-optimism/op-geth/issues/16760), [#17317](https://github.com/ethereum-optimism/op-geth/issues/17317)). This was supported by deploying `op-conductor` with new health checks ([#17153](https://github.com/ethereum-optimism/op-geth/issues/17153)) and implementing new alerts for sequencer peer counts ([#16868](https://github.com/ethereum-optimism/op-geth/issues/16868)).\n    - **Performance & Node Operation:** An issue causing a panic during initialization with large genesis files was resolved by clarifying the correct configuration, which involves using the `stateHash` for snap-syncing rather than a large `alloc` blob ([#668](https://github.com/ethereum-optimism/op-geth/issues/668)). A user-reported issue on abnormal CPU usage was also closed after it was determined to be temporary during log indexing ([#613](https://github.com/ethereum-optimism/op-geth/issues/613)).\n    - **Development & Testing Cleanup:** A number of outdated issues were closed, including obsolete smoke tests ([#140](https://github.com/ethereum-optimism/op-geth/issues/140), [#141](https://github.com/ethereum-optimism/op-geth/issues/141), [#142](https://github.com/ethereum-optimism/op-geth/issues/142), [#143](https://github.com/ethereum-optimism/op-geth/issues/143)), a task to port tests for the already-shipped Isthmus hardfork ([#168](https://github.com/ethereum-optimism/op-geth/issues/168)), and an improvement for a devnet spinup script ([#346](https://github.com/ethereum-optimism/op-geth/issues/346)).\n\n- **New & Active Issues:**\n    - **Critical Sync Error:** A new high-priority issue was opened reporting that `op-geth` v1.101602.0 crashes with a \"Failed to decode RLP receipts\" error during a full sync of op-mainnet, potentially blocking new node setups ([#679](https://github.com/ethereum-optimism/op-geth/issues/679)).\n    - **Performance Enhancement Proposal:** A new issue proposes adding a hint for fast block header oracle lookup in `op-program` to improve performance ([#17416](https://github.com/ethereum-optimism/op-geth/issues/17416)).\n    - **Tooling Discussions:** Active discussion continues on improving the Kurtosis testing environment, specifically around enabling the use of local `op-geth` builds ([#16975](https://github.com/ethereum-optimism/op-geth/issues/16975)). A decision was also finalized not to implement websockets support in the Kurtosis Reverse Proxy, and the related issue was closed after a brief reopening to remove a lingering TODO from the codebase ([#17194](https://github.com/ethereum-optimism/op-geth/issues/17194)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the coordinated effort to close numerous operational and testing-related issues, particularly the multi-issue push to deploy and monitor flashblocks. Discussions around the Kurtosis tooling ([#16975](https://github.com/ethereum-optimism/op-geth/issues/16975), [#17194](https://github.com/ethereum-optimism/op-geth/issues/17194)) show active decision-making and collaboration between team members on development infrastructure. Additionally, administrative tracking was initiated with a new issue to document funded builder addresses, indicating a focus on transparency within the ecosystem ([#762](https://github.com/ethereum-optimism/op-geth/issues/762)).", "2025-10-13T20:50:17.554Z"]
["ethereum-optimism/optimism_week_2025-09-07", "ethereum-optimism/optimism", "week", "2025-09-07", "# ethereum-optimism/optimism Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a significant push to stabilize and enhance the Superchain's core infrastructure. Major progress was made in maturing the testing and CI/CD pipeline, with new sync tests using real-world data from OP Sepolia and mainnet now running in CI. The team successfully closed out a large body of work related to Flashblocks deployment and monitoring, marking a key milestone. Concurrently, development on future upgrades continued with a major refactor of the Optimism Protocol Contracts Manager (OPCM) for the upcoming U17 release and enhancements to the dispute game system for Kona support. A notable strategic shift occurred with the formal deprioritization of numerous Kurtosis-related development efforts.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on strengthening core protocol contracts, improving testing infrastructure, and fixing critical bugs across the stack.\n\n-   **Superchain Configuration & Contract Upgrades:**\n    -   A major upgrade was merged to prepare the Optimism Protocol Contracts Manager (OPCM) for the U17 release, which involved removing U16 code and improving maintainability ([#17406]).\n    -   A bug in `superchainConfig` upgrade logic was fixed to ensure proper version comparison ([#16838]).\n    -   To support migrating chain-specific configurations, a new `PermissionedDisputeGameV2` contract was introduced ([#17290]).\n    -   The `StandardValidator` was improved to retrieve implementation versions directly from contracts, reducing bytecode size ([#17377]).\n\n-   **Kona & Dispute Game Enhancements:**\n    -   The `op-challenger` was updated to support `cannon-kona` trace functionality and fix metric labels for `asterisc-kona` deployments ([#17356], [#17367]). Corresponding `CANNON_KONA` and `SUPER_ASTERISC_KONA` game types were added to the contracts ([#17358]).\n    -   The `op-dispute-mon` tool was enhanced to support monitoring `cannon-kona` games ([#17380]).\n    -   The `op-devstack` environment for Kona was updated to reflect changes in log level and format ([#17370]) and to expose the `UserRPC` endpoint for better restart capabilities ([#17390]).\n\n-   **Testing Infrastructure & CI/CD:**\n    -   A significant enhancement was made to `op-acceptance-tests` by adding new `op-node` upgrade tests that utilize `op-sync-tester` and real-world data from OP Sepolia to validate hardforks ([#17363]).\n    -   The CI pipeline was strengthened by enabling OPM and Base mainnet `op-node` sync tests, complete with Slack notifications for failures ([#17393]).\n    -   The `op-e2e` testing framework was refactored to use the `ActivateForkAtOffset` utility, simplifying future fork activation tests ([#17362]).\n    -   Acceptance tests were improved to properly wait for fund balances in persistent devnets ([#17397]).\n\n-   **Core Component Bug Fixes & Maintenance:**\n    -   A critical fix was applied to `op-node` to skip L1 genesis hash checks when the block is unavailable, addressing issues with pruned L1 nodes ([#17407]).\n    -   A version loop issue in `op-program` was resolved to correctly handle tags with spaces ([#17360]).\n    -   The `op-conductor`'s p2p healthcheck was corrected to use the request context properly ([#17294]).\n    -   `op-geth` was bumped to include new Superchain registry configurations for the `arena-z-sepolia` isthmus hardfork ([#17437]).\n    -   A new pull request was opened to tighten directory permissions for file-backed KV stores, enhancing security ([#17354]).\n\n## \ud83d\udc1b Issues & Triage\n\n-   **Closed Issues:**\n    -   **Flashblocks Stabilization:** A large number of issues related to the deployment, monitoring, and alerting for Flashblocks on mainnet were closed, indicating the successful completion of this initiative ([#16759], [#16760], [#16388], [#17162]).\n    -   **Kurtosis Deprioritization:** A strategic decision was made to deprioritize Kurtosis-related work, leading to the closure of numerous issues, including those for genesis checks, performance improvements, and adding Kurtosis support to `op-validator` ([#15753], [#14390], [#16712]).\n    -   **Testing Milestones:** The first milestone for the `op-sync-tester` was achieved with the closure of the issue tracking the addition of sync acceptance tests ([#16703]). Several older smoke test issues were also closed as no longer required ([#140], [#141], [#142], [#143]).\n    -   **Geth Merge:** The issue tracking the Geth v1.16.2 merge was closed, marking its completion ([#17223]).\n\n-   **New & Active Issues:**\n    -   **`op-geth` Stability:** A critical new issue ([#679]) was reported regarding `op-geth` crashing with \"Failed to decode RLP receipts\" during a full sync on op-mainnet. An ongoing discussion on abnormal CPU usage in `op-geth` ([#613]) also continued, with users reporting that usage returned to normal after an index upgrade completed.\n    -   **Acceptance Test Failures:** A series of new issues were opened for multiple acceptance tests failing on the Eris devnet, including `TestERC20Bridge` ([#17385]), `TestFees` ([#17386]), and `TestOperatorFeeDevstack` ([#17387]), indicating a potential regression or environment-specific problem.\n    -   **DA Footprint Limit:** New issues were created to ratify the design for the DA footprint block limit ([#17394]) and to add corresponding unit tests in `op-geth` ([#17395]), signaling the next phase of this feature's development.\n    -   **Deployment on Alt L1s:** A new issue ([#17365]) was opened concerning the `op-deployer` failing to deploy `OPChain` on alternative L1s, highlighting a potential limitation for non-standard chain setups.\n\n## \ud83d\udcac Community & Collaboration\nThis week saw healthy interaction between the core team and the broader community, particularly around operational issues. The active discussions on `op-geth` CPU usage ([#613]) and the new RLP decoding crash ([#679]) involved multiple community members (`cpuchainorg`, `jsvisa`, `hekich`, `sebastianst`) providing reports, diagnostic information, and potential fixes, demonstrating a valuable feedback loop for maintaining node stability. The closure of a large number of Kurtosis-related issues reflects a clear, internally-driven strategic realignment of development priorities. While most development was driven by core contributors, small interactions on issues like builder address funding ([#762]) and the project status page ([#945]) show continued engagement from the wider ecosystem.", "2025-10-13T20:50:24.347Z"]
["ethereum-optimism/specs_week_2025-09-07", "ethereum-optimism/specs", "week", "2025-09-07", "# ethereum-optimism/specs Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in production infrastructure and a major cleanup of the issue backlog. The team successfully completed the rollout of flashblocks on mainnet sequencers, resolving associated monitoring and health check issues. A large number of issues related to the Kurtosis devnet environment were closed, signaling a strategic deprioritization of that tool. While an older `op-geth` CPU issue was resolved, a new critical bug causing crashes during full sync was identified, posing a significant near-term challenge.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on protocol specification refinement and initiating new security enhancements.\n\n*   **Protocol Specification Refinement:** The specification for the `SystemConfig.ConfigUpdate` event in the Holocene and Jovian protocols was improved by removing repetition and clarifying naming conventions, enhancing the clarity of the protocol documentation ([#763](https://github.com/ethereum-optimism/specs/pull/763)).\n*   **New Security Initiative:** A new proposal, \"Safer Safes - Safe Extensions v2\" ([#761](https://github.com/ethereum-optimism/specs/pull/761)), was opened, indicating ongoing work to enhance the security of Safe contracts within the ecosystem.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a substantial reduction in open issues through targeted cleanup efforts, alongside the emergence of a critical new bug.\n\n### Closed Issues\nA significant number of issues were resolved, primarily related to infrastructure rollouts and backlog grooming:\n\n*   **Flashblocks Mainnet Enablement:** A series of issues related to the deployment and monitoring of flashblocks on mainnet sequencers were closed, marking the successful completion of this rollout. This included enabling flashblocks on sequencers ([#16759](https://github.com/ethereum-optimism/specs/issues/16759), [#16760](https://github.com/ethereum-optimism/specs/issues/16760), [#17317](https://github.com/ethereum-optimism/specs/issues/17317)) and resolving associated monitoring alerts ([#16868](https://github.com/ethereum-optimism/specs/issues/16868)).\n*   **Kurtosis Devnet Deprioritization:** A large volume of issues concerning the Kurtosis devnet environment were closed, including those for performance improvements ([#14390](https://github.com/ethereum-optimism/specs/issues/14390)), genesis checks ([#15753](https://github.com/ethereum-optimism/specs/issues/15753)), and Websockets support ([#17194](https://github.com/ethereum-optimism/specs/issues/17194)). Comments indicate this work is no longer a priority.\n*   **Infrastructure & Testing Cleanup:** Numerous older issues were closed as completed or no longer relevant. This included the resolution of an `op-geth` initialization issue with large genesis files ([#668](https://github.com/ethereum-optimism/specs/issues/668)), the closure of an old `op-geth` CPU usage anomaly ([#613](https://github.com/ethereum-optimism/specs/issues/613)), and the removal of obsolete smoke test requirements ([#140](https://github.com/ethereum-optimism/specs/issues/140), [#141](https://github.com/ethereum-optimism/specs/issues/141), [#142](https://github.com/ethereum-optimism/specs/issues/142), [#143](https://github.com/ethereum-optimism/specs/issues/143)).\n*   **Documentation:** An issue to track funded builder addresses was created and closed after documenting a 64 ETH funding event for the \"Titan builder\" ([#762](https://github.com/ethereum-optimism/specs/issues/762)).\n\n### New & Active Issues\nThe most significant new issue represents a potential blocker for node operators:\n\n*   **Critical `op-geth` Bug:** A new critical issue, \"Failed to decode RLP receipts\" ([#679](https://github.com/ethereum-optimism/specs/issues/679)), was reported for `op-geth` v1.101602.0. This bug causes nodes to crash during a full sync on op-mainnet and is a top priority.\n*   **`op-program` Enhancement:** A feature request was opened to add a hint for faster block header oracle lookups in `op-program` ([#17416](https://github.com/ethereum-optimism/specs/issues/17416)), with a draft PR already in progress.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in both issue diagnosis and internal process checks. The resolution of the `op-geth` CPU usage issue ([#613](https://github.com/ethereum-optimism/specs/issues/613)) involved multiple users sharing diagnostics and confirming the fix. The new critical `op-geth` bug ([#679](https://github.com/ethereum-optimism/specs/issues/679)) was also reported by an external user, highlighting the community's role in maintaining network health. Internally, the reopening of an issue ([#17194](https://github.com/ethereum-optimism/specs/issues/17194)) to ensure a `TODO` in the codebase was addressed demonstrates diligent cross-checking among maintainers.", "2025-10-13T20:50:26.061Z"]
["ethereum-optimism/supersim_week_2025-09-07", "ethereum-optimism/supersim", "week", "2025-09-07", "# ethereum-optimism/supersim Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity, based on data from September 11th, was dominated by the successful deployment and stabilization of flashblocks across mainnet sequencers. This significant operational milestone saw the closure of numerous related issues, including the rollout to all OP Labs infrastructure sequencers and the resolution of associated monitoring alerts. The team also focused on maintenance and cleanup, removing several obsolete proof-related smoke tests and updating documentation for bridging ETH. While no new code was merged, new issues were opened to enhance `op-program` and improve contract upgrade testing in CI.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features, bug fixes, or code refactoring were merged based on the available reports. Development activity was centered on issue management and planning for future work. A new pull request ([#416](https://github.com/ethereum-optimism/supersim/pull/416)) was opened to update the `vite` dependency in the `tictactoe` example application.\n\n## \ud83d\udc1b Issues & Triage\nIssue management was the primary focus, with a significant number of issues closed related to a major feature rollout and ongoing system maintenance.\n\n- **Closed Issues:**\n    - **Flashblocks Deployment & Sequencer Health:** A major effort was concluded with the successful deployment of flashblocks on mainnet sequencers ([#16759](https://github.com/ethereum-optimism/supersim/issues/16759), [#16760](https://github.com/ethereum-optimism/supersim/issues/16760), [#17317](https://github.com/ethereum-optimism/supersim/issues/17317)). Corresponding alerts for sequencer peer count were also resolved ([#16868](https://github.com/ethereum-optimism/supersim/issues/16868)). Additionally, the release of `op-conductor` with EL p2p healthchecks was completed ([#17153](https://github.com/ethereum-optimism/supersim/issues/17153)).\n    - **Testing & Documentation Cleanup:** Several outdated proof-related smoke tests for components like `op-challenger`, `op-dispute-mon`, and `op-proposer` were removed as they are no longer required ([#140](https://github.com/ethereum-optimism/supersim/issues/140), [#141](https://github.com/ethereum-optimism/supersim/issues/141), [#142](https://github.com/ethereum-optimism/supersim/issues/142), [#143](https://github.com/ethereum-optimism/supersim/issues/143)). A documentation update was also completed to add examples for custom chains when bridging ETH ([#1473](https://github.com/ethereum-optimism/supersim/issues/1473)).\n    - **Tooling Deprecation:** A decision was made not to implement Websockets support in the Kurtosis Reverse Proxy, leading to the closure of the related issue ([#17194](https://github.com/ethereum-optimism/supersim/issues/17194)).\n\n- **New & Active Issues:**\n    - **Future Enhancements:** New issues were created to plan future work, including adding a hint for fast block header oracle lookup in `op-program` ([#17416](https://github.com/ethereum-optimism/supersim/issues/17416)) and adding `soneium` to the contract upgrade tests in the CI pipeline ([#17332](https://github.com/ethereum-optimism/supersim/issues/17332)).\n    - **Active Discussion:** Issue [#17194](https://github.com/ethereum-optimism/supersim/issues/17194) regarding Kurtosis Websockets support saw notable discussion. After being closed, it was briefly reopened to ensure a related `TODO` in the codebase was removed, highlighting active collaboration to ensure tasks are fully completed.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the issue triage process. The discussion on issue [#17194](https://github.com/ethereum-optimism/supersim/issues/17194) between members @alfonso-op, @ajsutton, and @serpixel demonstrated effective peer review and follow-through, ensuring that the decision not to implement a feature was correctly reflected in the codebase by removing associated comments. The week's activity reflects a team focused on successful operational rollouts and diligent maintenance of the project's health.", "2025-10-13T20:50:35.339Z"]
["ethereum-optimism/superchain-registry_week_2025-09-07", "ethereum-optimism/superchain-registry", "week", "2025-09-07", "# ethereum-optimism/superchain-registry Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on enhancing the stability and observability of the Superchain infrastructure. A major focus was the successful rollout and stabilization of flashblocks across mainnet sequencers, a significant step in maturing the production environment. This effort was complemented by the deployment of improved monitoring and health check alerts for sequencers. While new feature development was quiet, active discussions progressed on future performance optimizations and testing enhancements.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork merged during this period focused on refining existing configurations.\n\n- **Testnet Configuration Fix:** A bug fix was merged to correct the Isthmus time for the `arena-z-testnet` configuration, ensuring accurate time synchronization for the test network ([#1104](https://github.com/ethereum-optimism/superchain-registry/pull/1104)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week was characterized by the closure of several infrastructure-related tasks and active discussion on future work. No new issues were opened.\n\n- **Closed Issues:**\n    - **Flashblocks Rollout:** A significant set of issues related to enabling flashblocks on mainnet sequencers was closed, confirming the stability of the deployment ([#16759](https://github.com/ethereum-optimism/superchain-registry/issues/16759), [#16760](https://github.com/ethereum-optimism/superchain-registry/issues/16760), [#17317](https://github.com/ethereum-optimism/superchain-registry/issues/17317)).\n    - **Infrastructure Monitoring:** Several issues were resolved to improve infrastructure resilience, including adding health alerts for sequencer peer counts ([#16868](https://github.com/ethereum-optimism/superchain-registry/issues/16868), [#17143](https://github.com/ethereum-optimism/superchain-registry/issues/17143)) and completing the deployment of `op-conductor` with EL p2p healthchecks ([#17153](https://github.com/ethereum-optimism/superchain-registry/issues/17153)).\n    - **Documentation & Cleanup:** A documentation tutorial for bridging ETH was updated ([#1473](https://github.com/ethereum-optimism/superchain-registry/issues/1473)), and several obsolete smoke test issues were closed ([#141](https://github.com/ethereum-optimism/superchain-registry/issues/141), [#142](https://github.com/ethereum-optimism/superchain-registry/issues/142), [#143](https://github.com/ethereum-optimism/superchain-registry/issues/143)).\n\n- **New & Active Issues:**\n    - A notable decision was made in [#17194](https://github.com/ethereum-optimism/superchain-registry/issues/17194) to **not** implement Websockets support in the Kurtosis Reverse Proxy, with the issue pending minor code cleanup before closure.\n    - Progress continues on adding Soneium to contract upgrade tests, with a pull request now open to address the task ([#17332](https://github.com/ethereum-optimism/superchain-registry/issues/17332)).\n    - Early-stage discussion is underway for a performance optimization in `op-program` to add a hint for fast block header oracle lookups, with a draft PR available for validation ([#17416](https://github.com/ethereum-optimism/superchain-registry/issues/17416)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active issue discussions. The decision regarding Websockets support in [#17194](https://github.com/ethereum-optimism/superchain-registry/issues/17194) involved coordination between contributors @alfonso-op and @ajsutton. Similarly, discussion around the `op-program` optimization in [#17416](https://github.com/ethereum-optimism/superchain-registry/issues/17416) showed active communication between @emhane, @meyer9, and @ajsutton to ensure visibility and provide a starting point for the work. Contributor @MozirDmitriy provided a clear status update on [#17332](https://github.com/ethereum-optimism/superchain-registry/issues/17332), demonstrating healthy project communication.", "2025-10-13T20:50:37.229Z"]
["ethereum-optimism/superchain-ops_week_2025-09-07", "ethereum-optimism/superchain-ops", "week", "2025-09-07", "# ethereum-optimism/superchain-ops Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by the successful completion of the flashblocks rollout and a significant strategic shift in development focus. The team enabled flashblocks across remaining mainnet sequencers, established the necessary monitoring and alerting, and adjusted the sequencer set for Raft consensus. Concurrently, a large number of issues related to the Kurtosis devnet environment were closed, signaling a de-prioritization of that tool in favor of other priorities. Work also progressed on testing infrastructure and preparations for the upcoming U16a Freya devnet upgrade, rounding out a week of both completing major initiatives and refining the project's roadmap.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week's development focused on Superchain configuration upgrades, critical tooling fixes, and preparations for future network upgrades.\n\n-   **Superchain Configuration & Upgrades:**\n    -   The OPCM templates were updated for OP-Contracts v4.1.0, which included a U16A OPCM upgrade and enhancements to SuperchainConfig templates ([#1185](https://github.com/ethereum-optimism/superchain-ops/pull/1185)).\n    -   In preparation for a devnet upgrade, tasks were added to upgrade four Freya devnet chains to U16a, starting with an update to SuperchainConfig v3.2.0 ([#1193](https://github.com/ethereum-optimism/superchain-ops/pull/1193)).\n\n-   **Tooling Bug Fixes & Refinements:**\n    -   A key bug was fixed in Tenderly link generation, which now correctly supports doubly nested safes for more complex multisig tasks, ensuring accurate simulation links ([#1197](https://github.com/ethereum-optimism/superchain-ops/pull/1197)).\n    -   A minor code refactoring was performed to clean up an example task for superchain configuration upgrades, improving code hygiene ([#1195](https://github.com/ethereum-optimism/superchain-ops/pull/1195)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week was characterized by a major backlog grooming effort, the resolution of several long-standing infrastructure tasks, and the proposal of a new performance enhancement.\n\n-   **Closed Issues:**\n    -   **Flashblocks Rollout Completed:** A significant cluster of issues related to flashblocks was closed, marking the completion of this initiative. This included enabling flashblocks on all remaining sequencers ([#16759](https://github.com/ethereum-optimism/superchain-ops/issues/16759), [#16760](https://github.com/ethereum-optimism/superchain-ops/issues/16760), [#17317](https://github.com/ethereum-optimism/superchain-ops/issues/17317)), managing the sequencer set for Raft consensus ([#17318](https://github.com/ethereum-optimism/superchain-ops/issues/17318), [#17319](https://github.com/ethereum-optimism/superchain-ops/issues/17319)), and implementing associated alerting ([#16868](https://github.com/ethereum-optimism/superchain-ops/issues/16868)).\n    -   **De-prioritization of Kurtosis:** A large number of issues related to Kurtosis devnet features and improvements were closed, with the rationale that it is no longer a primary focus ([#15753](https://github.com/ethereum-optimism/superchain-ops/issues/15753), [#14390](https://github.com/ethereum-optimism/superchain-ops/issues/14390), [#17194](https://github.com/ethereum-optimism/superchain-ops/issues/17194)).\n    -   **Testing & Infrastructure Cleanup:** Several legacy testing issues were closed, including the first milestone for sync acceptance tests ([#16703](https://github.com/ethereum-optimism/superchain-ops/issues/16703)), enabling the sync-tester to use real chain data ([#454](https://github.com/ethereum-optimism/superchain-ops/issues/454)), and removing obsolete proof system smoke tests ([#140](https://github.com/ethereum-optimism/superchain-ops/issues/140)-[#143](https://github.com/ethereum-optimism/superchain-ops/issues/143)).\n    -   **`op-geth` & Node Stability:** Long-standing issues were resolved, including a panic on initialization with large genesis files ([#668](https://github.com/ethereum-optimism/superchain-ops/issues/668)) and older reports of abnormal CPU usage ([#613](https://github.com/ethereum-optimism/superchain-ops/issues/613)) and receipt decoding failures ([#679](https://github.com/ethereum-optimism/superchain-ops/issues/679)) that were fixed in subsequent patches.\n\n-   **New & Active Issues:**\n    -   **`op-program` Enhancement:** A new issue proposes adding a hint for fast block header oracle lookups within `op-program` specifications, aiming to improve performance ([#17416](https://github.com/ethereum-optimism/superchain-ops/issues/17416)). A draft PR is already under discussion.\n    -   **Potential Blocker:** The nightly CI job for syncing with the latest `op-node` remains blocked by an infrastructure issue, delaying full implementation of mainnet sync testing ([#17253](https://github.com/ethereum-optimism/superchain-ops/issues/17253)).\n    -   **Ongoing Work:** Progress continues on adding `soneium` to the contract upgrade tests, with an open PR to address the issue ([#17332](https://github.com/ethereum-optimism/superchain-ops/issues/17332)).\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity reflects a period of focused execution and strategic realignment by the core team. The coordinated closure of numerous issues related to flashblocks and Kurtosis demonstrates strong internal alignment on completing major initiatives and making decisive roadmap adjustments. While there was limited public discussion on new PRs, the ongoing work on active issues like the `op-program` enhancement ([#17416](https://github.com/ethereum-optimism/superchain-ops/issues/17416)) and local `op-geth` builds in Kurtosis ([#16975](https://github.com/ethereum-optimism/superchain-ops/issues/16975)) shows continued collaboration on future improvements. The overall pattern suggests a \"heads-down\" week of shipping completed work and grooming the backlog for the next development cycle.", "2025-10-13T20:50:39.874Z"]
["ethereum-optimism/ecosystem_week_2025-09-07", "ethereum-optimism/ecosystem", "week", "2025-09-07", "# ethereum-optimism/ecosystem Weekly Report (Sep 7 - 13, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on resolving outstanding issues and refining operational strategies, with a strong focus on the `optimism.io` website and core node components. Several key issues concerning the website's architecture, documentation, and migration plans were closed, clearing the path for future development. Additionally, solutions were finalized for an `op-batcher` throttling metric and an `op-geth` initialization problem. While no new code was merged, ongoing discussions indicate a focus on improving the local development experience, particularly around testing with Kurtosis.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, there were no new features, bug fixes, or code refactoring efforts merged during this period. The development focus was on issue resolution and planning.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw significant progress in clearing the issue backlog, with no new issues being opened.\n\n- **Closed Issues:**\n    - **Website & Documentation:** A major cleanup of `optimism.io` related issues was completed. This included closing out architectural spikes for the CMS [#930] and a React migration [#929], as well as resolving the docs homepage redesign [#925] and the relayer design doc [#750].\n    - **Node Operations & Metrics:** Two key operational issues were resolved. A problem with `op-geth` panicking on large genesis files [#668] was addressed with a strategy to use `stateHash` for snap-syncing. An issue with the `op-batcher` throttling metric [#17149] was closed with the decision to handle visualization directly in Grafana.\n\n- **New & Active Issues:**\n    - No new issues were opened in the observed timeframe.\n    - Discussion continued on issue [#16975] regarding the ability to use local `op-geth` builds within Kurtosis. The conversation is exploring using the templating system to automatically override image sources, which would significantly improve the local development and testing workflow for contributors.\n\n## \ud83d\udcac Community & Collaboration\nThe activity this week was characterized by focused discussions aimed at resolving existing technical hurdles and planning architectural improvements. The closure of several issues related to `optimism.io` and node operations suggests effective collaboration in clearing technical debt. The ongoing discussion around local Kurtosis builds [#16975] highlights a commitment to enhancing the developer experience for core contributors.", "2025-10-13T20:50:43.385Z"]
["ethereum-optimism/community-hub_week_2025-09-14", "ethereum-optimism/community-hub", "week", "2025-09-14", "# ethereum-optimism/community-hub Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on maintenance, issue resolution, and critical discussions related to future network upgrades. While new feature development was quiet, significant progress was made in closing out issues related to developer tooling, including improvements to `op-acceptor` and the Forge Deployer. Key ongoing discussions focused on resolving persistent test flakiness, clarifying token bridging behavior, and ensuring `op-node` compatibility for the upcoming Fusaka hardfork. The primary theme was one of stabilization and preparation for future development.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe sole code-related change this week was a documentation update.\n\n- **Documentation Enhancements**\n    - The `get-support.mdx` file was updated to provide current information within the grant section, ensuring community members have access to the latest details ([#1186](https://github.com/ethereum-optimism/community-hub/pull/1186)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was a major focus, with several issues closed and important discussions continuing on active ones.\n\n- **Closed Issues:**\n    - **Tooling & Testing Improvements:** Several issues related to the `op-acceptor` tool were resolved, including adding configuration logging at startup ([#461](https://github.com/ethereum-optimism/community-hub/issues/461)) and fixing sub-optimal package parallelism ([#462](https://github.com/ethereum-optimism/community-hub/issues/462)). An issue to create a CLI wrapper for the Forge binary was also closed ([#17214](https://github.com/ethereum-optimism/community-hub/issues/17214)).\n    - **Fusaka Hardfork Preparation:** An issue to prepare `proxyd` for Fusaka activation on L1 by updating geth blob transaction handling was closed ([#467](https://github.com/ethereum-optimism/community-hub/issues/467)).\n    - **Housekeeping:** An issue regarding a dispute game creator pattern refactor was closed as a duplicate ([#17436](https://github.com/ethereum-optimism/community-hub/issues/17436)).\n\n- **New & Active Issues:**\n    - **New Documentation Bug:** A new issue was opened to report a broken link for CEX listing request documentation ([#1185](https://github.com/ethereum-optimism/community-hub/issues/1185)).\n    - **Persistent Test Flakiness:** A significant ongoing challenge is the flakiness of `TestPreNoInbox` in `op-acceptance-tests` ([#17298](https://github.com/ethereum-optimism/community-hub/issues/17298)). Discussions confirmed that a recent fix was ineffective, requiring further investigation.\n    - **Fusaka Compatibility:** A critical discussion is underway in [#17493](https://github.com/ethereum-optimism/community-hub/issues/17493) concerning `op-node`'s compatibility with Fusaka, particularly around blob gas handling and the risks of tight coupling with upstream Geth code.\n    - **Token Bridging:** An active discussion continues to seek clarification on why a specific token is not bridging as expected, with maintainers investigating the implementation details ([#1203](https://github.com/ethereum-optimism/community-hub/issues/1203)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was most visible within GitHub issues, where contributors and maintainers engaged in detailed technical discussions to diagnose problems and refine specifications. The ongoing dialogue around the `TestPreNoInbox` flakiness ([#17298](https://github.com/ethereum-optimism/community-hub/issues/17298)) and Fusaka compatibility ([#17493](https://github.com/ethereum-optimism/community-hub/issues/17493)) highlights a community-driven effort to address complex, foundational issues through shared analysis and problem-solving. Similarly, discussions on token bridging ([#1203](https://github.com/ethereum-optimism/community-hub/issues/1203)) and documentation improvements ([#771](https://github.com/ethereum-optimism/community-hub/issues/771)) demonstrate active collaboration in refining the ecosystem.", "2025-10-13T20:50:50.158Z"]
["ethereum-optimism/design-docs_week_2025-09-14", "ethereum-optimism/design-docs", "week", "2025-09-14", "# ethereum-optimism/design-docs Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on solidifying the protocol's design and operational procedures. Significant progress was made in closing out long-standing research and analysis tasks, including the completion of threat modeling for the Data Availability Footprint Limit and evaluations of flashblocks load testing. A critical receipt decoding bug was effectively addressed, and a new initiative was launched to establish a robust convention for network upgrade transactions, aiming to improve the predictability and safety of future contract deployments. The focus was clearly on analysis, bug resolution, and forward-looking architectural planning rather than new feature implementation.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo new features, bug fixes, or code refactoring pull requests were merged this week according to the provided reports. The development focus was on discussion, analysis, and resolving issues at the design stage.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several key issues and the start of an important discussion on future network upgrade procedures.\n\n- **Closed Issues:**\n    - **Analysis & Evaluation:** Several major analysis tasks were concluded. This includes the threat modeling for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/design-docs/issues/336)), the summary of flashblocks load testing on devnets ([#16756](https://github.com/ethereum-optimism/design-docs/issues/16756)), and the evaluation of partner support criteria on eris-0 ([#16765](https://github.com/ethereum-optimism/design-docs/issues/16765)).\n    - **Code Structure:** An issue to consolidate duplicated address structs into a single source of truth was closed, completing its intended scope ([#14977](https://github.com/ethereum-optimism/design-docs/issues/14977)).\n\n- **New & Active Issues:**\n    - **Network Upgrade Convention:** A significant new issue was opened to define a formal convention for network upgrade transactions that deploy new contracts ([#781](https://github.com/ethereum-optimism/design-docs/issues/781)). The current ad-hoc method affects deployment addresses, and discussion has already begun on using `CREATE2` with a system address and source-hash for improved collision resistance and predictability.\n    - **Bug Resolution:** A fix was proposed for a critical RLP receipt decoding failure in Geth v1.101602.0 ([#679](https://github.com/ethereum-optimism/design-docs/issues/679)). The reporter confirmed the patch appears to resolve the issue, moving it closer to closure.\n    - **Dispute Game Design:** Discussion continued on the spec updates for the dispute game creator pattern refactor ([#17436](https://github.com/ethereum-optimism/design-docs/issues/17436)), with efforts to clarify the issue's scope and objectives.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was centered on issue discussion and design refinement. The active back-and-forth on the new network upgrade transaction convention ([#781](https://github.com/ethereum-optimism/design-docs/issues/781)) highlights a proactive approach to establishing robust protocol standards. Similarly, the quick feedback loop on the receipt decoding bug ([#679](https://github.com/ethereum-optimism/design-docs/issues/679)), where a proposed fix was tested and confirmed by the original reporter, demonstrates effective problem-solving within the community. The activity reflects a healthy focus on improving the core design and stability of the protocol through collaborative specification.", "2025-10-13T20:50:53.371Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-09-14", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-09-14", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused heavily on expanding the Superchain ecosystem, with numerous new tokens added to the Base network and proposed for Celo. Alongside this growth, significant progress was made in maturing the protocol's foundations by closing issues related to tooling, system upgrades, and code refactoring. A key new discussion emerged around standardizing network upgrade transactions to improve robustness. A persistent challenge remains in resolving test flakiness within the `op-acceptance-tests`, which continues to be an active area of investigation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on expanding the token ecosystem and improving token discoverability.\n\n- **New Token Integrations:** The token list was expanded with several additions to the Base network, including FLIXX ([#1195](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1195)), MasterDEX Token (MDEX) ([#1196](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1196)), CANA Holdings California Carbon Credits ([#1197](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1197)), and ZKC ([#1198](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1198)).\n- **Proposed Token Additions:** New pull requests were opened to add addresses for weETH and wstETH on Celo ([#1204](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1204)), as well as for VLR ([#1205](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1205)) and DOGE ([#1206](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1206)).\n- **Token Discoverability Fix:** The `nobridge` flag was removed for the ARCV2 token, ensuring its addresses and bridges are now discoverable ([#1202](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1202)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several technical debt and tooling issues, while new discussions began on protocol conventions and bug fixes.\n\n- **Closed Issues:**\n    - **Tooling & System Prep:** Several key infrastructure issues were closed, including the creation of a CLI wrapper for the Forge deployer ([#17214](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17214)), preparation of `proxyd` for the Fusaka L1 activation ([#467](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/467)), and a refactor of the dispute game creator pattern specs ([#17436](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17436)).\n    - **Analysis & Refactoring:** Work was completed on threat modeling for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/336)), and an issue to consolidate redundant address structs was resolved ([#14977](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/14977)).\n    - **Testing & Evaluation:** Load testing for flashblocks ([#16756](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16756)) and the evaluation of partner support criteria ([#16765](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16765)) were concluded.\n\n- **New & Active Issues:**\n    - **Standardizing Network Upgrades:** A significant new issue ([#781](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/781)) was opened to establish a more robust, collision-resistant convention for network upgrade transactions that deploy new contracts. The discussion immediately saw detailed technical proposals for using `CREATE2` to ensure safety.\n    - **Persistent Test Flakiness:** The `TestPreNoInbox` test in `op-acceptance-tests` remains a blocker ([#17298](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17298)), with a recent fix proving unsuccessful. The issue continues to be actively monitored.\n    - **Token Configuration & Bugs:** A new issue was raised regarding a token not bridging correctly to Base, pointing to a potential configuration problem ([#1203](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1203)). Another report flagged an incorrect address for ETH on Optimism-Sepolia ([#1201](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1201)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in both initiating future protocol improvements and troubleshooting current issues. The new proposal to standardize network upgrade transactions ([#781](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/781)) sparked immediate and deep technical engagement, with `@protolambda` providing a detailed analysis on preventing address collisions. Similarly, the token bridging issue ([#1203](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1203)) saw quick diagnostic feedback from `AlexBHarley`. The ongoing effort to resolve test flakiness ([#17298](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17298)) also highlights persistent collaboration among contributors to stabilize the test suite.", "2025-10-13T20:51:10.238Z"]
["ethereum-optimism/op-analytics_week_2025-09-14", "ethereum-optimism/op-analytics", "week", "2025-09-14", "# ethereum-optimism/op-analytics Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on enhancing data accuracy and resolving critical infrastructure tasks. Key developments included a bug fix to improve transaction tracking and a refinement in the Jovian analysis framework for more precise data availability size estimations. Significant progress was also made in closing out preparatory work, with the completion of Flashblocks load testing, `op-acceptor` improvements, and a threat modeling analysis for the Data Availability Footprint Limit. Active discussions continue on future work, notably around `op-node` preparations for the Fusaka upgrade.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on bug fixes and improving the precision of core analytics.\n\n- **Transaction Tracking Bug Fix:** A bug in the `alltxs` functionality was resolved by updating the `get_all_txs.ipynb` script, ensuring more comprehensive transaction tracking ([#1746](https://github.com/ethereum-optimism/op-analytics/pull/1746)).\n- **Jovian Analysis Refinement:** To improve the accuracy of data availability (DA) size estimates, the calculation was modified to exclude deposit transactions from the analysis ([#1745](https://github.com/ethereum-optimism/op-analytics/pull/1745)).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nSeveral key issues were resolved, marking the completion of important testing and analysis tasks:\n\n- **Flashblocks Readiness:** Work concluded on load testing Flashblocks on devnets ([#16756](https://github.com/ethereum-optimism/op-analytics/issues/16756)) and evaluating partner support criteria on eris-0 to confirm performance against SLAs ([#16765](https://github.com/ethereum-optimism/op-analytics/issues/16765)).\n- **`op-acceptor` Improvements:** Two issues related to `op-acceptor` were closed, delivering improved configuration logging at startup ([#461](https://github.com/ethereum-optimism/op-analytics/issues/461)) and fixing sub-optimal package parallelism ([#462](https://github.com/ethereum-optimism/op-analytics/issues/462)).\n- **Security Analysis:** A threat modeling and failure modes analysis for the DA Footprint Limit was completed and documented ([#336](https://github.com/ethereum-optimism/op-analytics/issues/336)).\n\n### New & Active Issues\nNo new issues were opened this week. However, several active discussions point to ongoing and future work:\n\n- **`op-node` Fusaka Preparation:** A notable discussion in issue [#17493](https://github.com/ethereum-optimism/op-analytics/issues/17493) raised concerns about tight coupling with upstream Geth code, which could complicate future `op-geth` or `op-node` releases.\n- **Receipt Decoding:** A fix has been proposed and is under testing for an RLP receipt decoding failure, with user feedback suggesting the latest patch may resolve it ([#679](https://github.com/ethereum-optimism/op-analytics/issues/679)).\n- **Dispute Game Refactor:** A discussion is underway to clarify the scope of a proposed refactor for the dispute game creator pattern and determine if it overlaps with existing work ([#17436](https://github.com/ethereum-optimism/op-analytics/issues/17436)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the active issue discussions, which highlighted proactive planning and a healthy feedback loop. The conversation around `op-node` preparations for Fusaka ([#17493](https://github.com/ethereum-optimism/op-analytics/issues/17493)) demonstrates forward-thinking architectural consideration among contributors. Similarly, the dialogue on the receipt decoding error ([#679](https://github.com/ethereum-optimism/op-analytics/issues/679)) shows effective collaboration between developers and users to test and confirm fixes.", "2025-10-13T20:51:13.671Z"]
["ethereum-optimism/docs_week_2025-09-14", "ethereum-optimism/docs", "week", "2025-09-14", "# ethereum-optimism/docs Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by significant progress in both documentation and protocol stability. A major highlight was the complete modernization of the L2 rollup testnet tutorial ([#1705](https://github.com/ethereum-optimism/docs/pull/1705)), providing chain operators with up-to-date guidance using the latest `op-d` tools. On the infrastructure front, a long-standing archive node synchronization issue was resolved by implementing a configurable timeout flag ([#13852](https://github.com/ethereum-optimism/docs/issues/13852)). Looking ahead, new features for custom gas tokens, bridge recovery, and an operator fee vault entered the development pipeline, while important discussions began around establishing a new convention for network upgrade transactions ([#781](https://github.com/ethereum-optimism/docs/issues/781)) and preparing the `op-node` for the upcoming Fusaka hardfork.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week's completed work focused on improving developer experience and documentation accuracy, while several new feature proposals were initiated.\n\n-   **Documentation Enhancements:**\n    -   The tutorial for deploying an OP Stack testnet chain was comprehensively updated to reflect the latest `op-d` tools, a significant improvement for chain operators ([#1705](https://github.com/ethereum-optimism/docs/pull/1705)).\n    -   A bug fix was implemented to correct a contract address within the documentation, enhancing its accuracy ([#1745](https://github.com/ethereum-optimism/docs/pull/1745)).\n\n-   **New Feature Development (In Progress):**\n    -   Work began on several new features with the opening of draft pull requests for an operator fee vault ([#1741](https://github.com/ethereum-optimism/docs/pull/1741)), custom gas tokens ([#1743](https://github.com/ethereum-optimism/docs/pull/1743)), and a bridge recovery mechanism ([#1744](https://github.com/ethereum-optimism/docs/pull/1744)).\n\n-   **Dependency Management:**\n    -   Routine dependency updates were made for `brace-expansion` ([#1747](https://github.com/ethereum-optimism/docs/pull/1747)) and `next` ([#1748](https://github.com/ethereum-optimism/docs/pull/1748)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week saw the resolution of several infrastructure and tooling problems, while new discussions focused on protocol conventions and future hardfork preparations.\n\n-   **Closed Issues:**\n    -   **Infrastructure & Stability:** A persistent block synchronization slowdown in Base and Optimism archive nodes was resolved ([#13852](https://github.com/ethereum-optimism/docs/issues/13852)). An issue concerning failed RLP receipt decoding was also closed after a fix was tested ([#679](https://github.com/ethereum-optimism/docs/issues/679)).\n    -   **Protocol & Tooling:** Several issues were resolved, including the threat modeling for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/docs/issues/336)), the creation of a Forge Deployer CLI wrapper ([#17214](https://github.com/ethereum-optimism/docs/issues/17214)), and the standardization of address structs to reduce code duplication ([#14977](https://github.com/ethereum-optimism/docs/issues/14977)).\n    -   **Testing:** Issues related to load testing flashblocks ([#16756](https://github.com/ethereum-optimism/docs/issues/16756)) and evaluating partner support criteria ([#16765](https://github.com/ethereum-optimism/docs/issues/16765)) were closed, with links to detailed reports provided.\n\n-   **New & Active Issues:**\n    -   **Network Upgrade Convention:** A significant new issue ([#781](https://github.com/ethereum-optimism/docs/issues/781)) was opened to establish a safer convention for network upgrade transactions that deploy contracts. The discussion includes a detailed analysis of address collision resistance and a proposal to use a `CREATE2`-based approach for enhanced safety.\n    -   **Fusaka Hardfork Prep:** Discussions are ongoing to prepare the `op-node` for the Fusaka hardfork, focusing on compatibility with upstream Geth changes and EIP 7892 ([#17493](https://github.com/ethereum-optimism/docs/issues/17493)).\n    -   **DA Footprint Limit:** Following the closure of the threat modeling issue, a new issue was opened to document the risks associated with configuring the DA Footprint Limit scalar ([#1742](https://github.com/ethereum-optimism/docs/issues/1742)).\n    -   **Flaky Test:** The `TestPreNoInbox` test continues to exhibit flakiness, with recent attempts to fix it proving unsuccessful, requiring further investigation ([#17298](https://github.com/ethereum-optimism/docs/issues/17298)).\n\n## \ud83d\udcac Community & Collaboration\n-   The week saw deep technical collaboration, particularly in the discussion around a new convention for network upgrade transactions ([#781](https://github.com/ethereum-optimism/docs/issues/781)). Contributor `@protolambda` provided a detailed cryptographic analysis, suggesting a `CREATE2`-based approach to prevent address collisions and demonstrating a proactive approach to protocol security.\n-   Cross-repository work was evident in the resolution of `op-acceptor` logging and parallelism improvements ([#461](https://github.com/ethereum-optimism/docs/issues/461), [#462](https://github.com/ethereum-optimism/docs/issues/462)), which were addressed by a pull request in the separate `infra` repository.\n-   Maintainers actively engaged with the community, as seen in the token bridging issue ([#1203](https://github.com/ethereum-optimism/docs/issues/1203)), where a maintainer helped a user diagnose a problem by clarifying the expected behavior of `OptimismMintableERC20` tokens.", "2025-10-13T20:51:16.507Z"]
["ethereum-optimism/op-geth_week_2025-09-14", "ethereum-optimism/op-geth", "week", "2025-09-14", "# ethereum-optimism/op-geth Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by a focus on stability and preparation for future network upgrades. A critical bug causing sync crashes on op-mainnet was resolved, significantly improving node reliability. The team completed essential load testing and analysis for flashblocks and the DA Footprint Limit, closing out major workstreams. Concurrently, development progressed on upcoming hardforks, with feature toggles introduced for the Jovian release and planning initiated for the Fusaka release. A key new discussion emerged around standardizing network upgrade transactions, signaling a forward-looking effort to enhance protocol robustness.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on critical fixes, hardfork preparations, and routine maintenance to keep `op-geth` aligned with the broader ecosystem.\n\n- **Critical Sync Bug Fix:** A significant bug causing `op-geth` to crash during snap sync due to an RLP decoding failure in deposit receipt correction was fixed in [#680](https://github.com/ethereum-optimism/op-geth/pull/680). This fix, which adjusts the handling of storage RLP following an upstream Geth change, is crucial for node stability on op-mainnet.\n\n- **Hardfork and Release Preparation:**\n    - To prepare for the Jovian hardfork, feature toggles were introduced to allow for easy removal of features if necessary ([#677](https://github.com/ethereum-optimism/op-geth/pull/677)).\n    - The release process was streamlined by removing the approval hold job from the CircleCI workflow, enabling faster deployments ([#683](https://github.com/ethereum-optimism/op-geth/pull/683)).\n\n- **Upstream Sync and Registry Updates:**\n    - The `superchain-registry` was updated to a newer commit, ensuring alignment with the latest Superchain configurations ([#672](https://github.com/ethereum-optimism/op-geth/pull/672)).\n    - A pull request was opened to merge `go-ethereum v1.16.3`, continuing the effort to keep `op-geth` current with its upstream dependency ([#684](https://github.com/ethereum-optimism/op-geth/pull/684)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week saw the resolution of several long-standing items and the introduction of important new discussions for future protocol development.\n\n- **Closed Issues:**\n    - **Critical Bug Resolution:** The primary issue resolved was the \"Failed to decode RLP receipts\" bug ([#679](https://github.com/ethereum-optimism/op-geth/issues/679)), which was fixed by the patch in PR [#680](https://github.com/ethereum-optimism/op-geth/pull/680).\n    - **Testing and Analysis:** Several key analysis tasks were completed and closed, including the load testing for flashblocks on eris-0 ([#16756](https://github.com/ethereum-optimism/op-geth/issues/16756)), the evaluation of partner support criteria for flashblocks ([#16765](https://github.com/ethereum-optimism/op-geth/issues/16765)), and a threat modeling analysis for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/op-geth/issues/336)).\n    - **Refactoring and Tooling:** An issue to consolidate redundant address structs across different packages was closed after its scope was completed ([#14977](https://github.com/ethereum-optimism/op-geth/issues/14977)). An issue for a Forge Deployer CLI wrapper was also closed ([#17214](https://github.com/ethereum-optimism/op-geth/issues/17214)).\n\n- **New & Active Issues:**\n    - **Network Upgrade Convention:** A significant new issue ([#781](https://github.com/ethereum-optimism/op-geth/issues/781)) was opened to establish a more robust and collision-resistant convention for network upgrade transactions that deploy new contracts. The discussion includes detailed analysis on using `CREATE2` with a system address and source-hash for enhanced safety.\n    - **Fusaka Release Planning:** A new issue ([#682](https://github.com/ethereum-optimism/op-geth/issues/682)) was created to track the preparation of `op-geth` for the upcoming Fusaka release.\n    - **Test Flakiness:** The `TestPreNoInbox` acceptance test continues to exhibit flakiness ([#17298](https://github.com/ethereum-optimism/op-geth/issues/17298)), with a previous fix proving insufficient. This remains an active area of investigation to improve CI stability.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in both resolving immediate issues and planning for the future. The resolution of the critical receipt correction bug ([#679](https://github.com/ethereum-optimism/op-geth/issues/679)) involved multiple community members and maintainers identifying the problem and confirming the fix. Similarly, the completion of flashblocks testing ([#16756](https://github.com/ethereum-optimism/op-geth/issues/16756), [#16765](https://github.com/ethereum-optimism/op-geth/issues/16765)) showcased effective coordination to deliver and document results. The most notable example of forward-looking collaboration is the active discussion on establishing a new convention for network upgrade transactions ([#781](https://github.com/ethereum-optimism/op-geth/issues/781)), which features detailed technical proposals and analysis from core contributors.", "2025-10-13T20:51:20.413Z"]
["ethereum-optimism/infra_week_2025-09-14", "ethereum-optimism/infra", "week", "2025-09-14", "# ethereum-optimism/infra Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts were heavily concentrated on preparing the infrastructure for the upcoming Fusaka hard fork and bolstering the project's testing capabilities. Key components like `proxyd` and `op-signer` were updated to support post-Fusaka blob transactions, a critical step for network readiness. Concurrently, the `op-acceptor` testing framework received significant enhancements, including new end-to-end tests, improved configuration visibility, and bug fixes. The team also resolved several important issues, including the completion of Flashblocks load testing and the standardization of address structs, while initiating a crucial discussion on creating a new convention for network upgrade transactions.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on Fusaka readiness, testing improvements, and service stability.\n\n### Fusaka Upgrade Readiness\nTo ensure compatibility with the upcoming Fusaka hard fork, several components were updated to handle new transaction types:\n- **`proxyd` Blob Transaction Support:** The `proxyd` service was upgraded to support post-Fusaka blob transactions and cell proofs. This update also included upgrading Geth and monorepo versions and fixing a panic on ingesting pre-EIP-155 transactions ([#464](https://github.com/ethereum-optimism/infra/pull/464)).\n- **`op-signer` Dependency Upgrade:** The `op-signer` component's Geth dependency was upgraded to `v1.16.2` as part of the \"fusaka defence\" initiative, ensuring its compatibility with the fork ([#471](https://github.com/ethereum-optimism/infra/pull/471)).\n\n### `op-acceptor` Testing Framework Improvements\nThe acceptance testing suite saw substantial enhancements to improve usability, coverage, and reliability:\n- **New Acceptance Tests:** Basic end-to-end acceptance tests were added to the `op-acceptor` package, integrating with `op-devstack` to test faucet, initialization, and RPC connectivity ([#470](https://github.com/ethereum-optimism/infra/pull/470)).\n- **Enhanced Configuration Visibility:** `op-acceptor` now logs a summary of its effective configuration on startup and in HTML reports, and can output the configuration as a JSON file for easier debugging ([#463](https://github.com/ethereum-optimism/infra/pull/463)).\n- **Bug Fixes:** A default package timeout was added and logging was improved to display package names during testing ([#468](https://github.com/ethereum-optimism/infra/pull/468)).\n\n### `proxyd` Stability and Observability\nThe `proxyd` service received key updates to improve its robustness and monitoring:\n- **Stability Fix:** A flaky multicall test was resolved by modifying a function to use a thread-safe method, ensuring more reliable test execution ([#472](https://github.com/ethereum-optimism/infra/pull/472)).\n- **Improved RPC Metrics:** RPC error metrics were refined for better Prometheus reporting by changing \"unknown\" error states to \"method_not_allowed,\" enhancing observability ([#465](https://github.com/ethereum-optimism/infra/pull/465)).\n\n## \ud83d\udc1b Issues & Triage\n\n### Closed Issues\nSeveral key initiatives and problems were resolved this week:\n- **Testing and Analysis:** Critical testing and analysis tasks were completed, including the successful load testing of Flashblocks on `eris-0` ([#16756](https://github.com/ethereum-optimism/infra/issues/16756), [#16765](https://github.com/ethereum-optimism/infra/issues/16765)) and the finalization of the threat model for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/infra/issues/336)).\n- **`op-acceptor` Fixes:** Issues related to suboptimal test parallelism ([#462](https://github.com/ethereum-optimism/infra/issues/462)) and configuration logging ([#461](https://github.com/ethereum-optimism/infra/issues/461)) in `op-acceptor` were addressed.\n- **Code Standardization:** A long-standing effort to consolidate duplicated address structs across various packages was completed, establishing a single source of truth ([#14977](https://github.com/ethereum-optimism/infra/issues/14977)).\n- **Fusaka Preparation:** An issue to prepare `proxyd` for Fusaka activation ([#467](https://github.com/ethereum-optimism/infra/issues/467)) was swiftly closed by the work in PR [#464](https://github.com/ethereum-optimism/infra/pull/464).\n\n### New & Active Issues\nDiscussions this week centered on future standards, ongoing test flakiness, and Fusaka compatibility challenges:\n- **New Convention for Upgrade Transactions:** A significant new issue was opened to establish a more robust and standardized convention for network upgrade transactions that deploy new contracts ([#781](https://github.com/ethereum-optimism/infra/issues/781)). This immediately sparked a detailed technical discussion on ensuring address collision resistance.\n- **Persistent Test Flakiness:** The flakiness of `TestPreNoInbox` in `op-acceptance-tests` ([#17298](https://github.com/ethereum-optimism/infra/issues/17298)) remains an ongoing challenge, as a recent attempted fix was confirmed to be unsuccessful.\n- **Fusaka Compatibility Concerns:** An active discussion on preparing `op-node` for Fusaka ([#17493](https://github.com/ethereum-optimism/infra/issues/17493)) highlighted a potential challenge with tight coupling to upstream Geth code, which could complicate future updates.\n- **Tooling Improvement:** A new issue was created to make it easier to run acceptance tests from external repositories by addressing challenges with contract artifact discovery ([#469](https://github.com/ethereum-optimism/infra/issues/469)).\n\n## \ud83d\udcac Community & Collaboration\nThis week demonstrated proactive and coordinated work, particularly around the Fusaka upgrade, where issues were identified and resolved quickly. There was strong evidence of deep technical collaboration in issue discussions. For instance, the new proposal for network upgrade transaction conventions ([#781](https://github.com/ethereum-optimism/infra/issues/781)) received immediate and detailed analysis from community members like `@protolambda`. The persistent, collaborative debugging on the flaky `op-acceptance-tests` ([#17298](https://github.com/ethereum-optimism/infra/issues/17298)) further highlights the team's commitment to resolving complex issues together.", "2025-10-13T20:51:23.640Z"]
["ethereum-optimism/specs_week_2025-09-14", "ethereum-optimism/specs", "week", "2025-09-14", "# ethereum-optimism/specs Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in formalizing future protocol upgrades and enhancing the tooling for network maintenance. Key efforts focused on expanding the Jovian protocol specifications, particularly by defining the data availability footprint limits. Concurrently, the team invested heavily in improving the scripts used to generate upgrade transactions, streamlining the process for future hardforks. This forward-looking work was balanced with resolving existing issues, including a long-standing archive node synchronization problem and preparations for the upcoming Fusaka hardfork.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on protocol specification expansion, tooling improvements, and documentation refinement.\n\n- **Jovian Protocol Specification Expansion:** The specifications for the Jovian upgrade were significantly advanced with the addition of details for the data availability (DA) footprint limit ([#767](https://github.com/ethereum-optimism/specs/pull/767)). A minor typo in the Jovian system-config documentation was also corrected ([#768](https://github.com/ethereum-optimism/specs/pull/768)).\n\n- **Network Upgrade Tooling Enhancements:** A major effort was made to improve the process of generating specifications for network upgrades. New scripts were added to streamline the creation of upgrade and proxy update transaction specs ([#673](https://github.com/ethereum-optimism/specs/pull/673)). The tooling was further refined by factoring out per-fork constants and co-locating scripts for better organization and deduplication ([#780](https://github.com/ethereum-optimism/specs/pull/780)).\n\n- **Documentation and Specification Refinements:** Several updates were made to improve the clarity and accuracy of existing specifications. This included fixing broken links in configurability documentation ([#765](https://github.com/ethereum-optimism/specs/pull/765)), adding more detail about the `minBaseFee` in system configuration ([#766](https://github.com/ethereum-optimism/specs/pull/766)), clarifying `operatorFee` attributes ([#774](https://github.com/ethereum-optimism/specs/pull/774)), and correcting a bug related to flashblocks authorship ([#775](https://github.com/ethereum-optimism/specs/pull/775)).\n\n- **New Specification Proposals:** A new pull request was opened to introduce specifications for revenue sharing ([#782](https://github.com/ethereum-optimism/specs/pull/782)), signaling the start of work on a new protocol feature.\n\n## \ud83d\udc1b Issues & Triage\nThe project saw the resolution of several important issues related to node stability, tooling, and testing, while new discussions began on standardizing upgrade procedures and ensuring forward compatibility.\n\n- **Closed Issues:**\n    - **Node Stability & Bug Fixes:** A key issue improving archive node synchronization via a configurable timeout was resolved ([#13852](https://github.com/ethereum-optimism/specs/issues/13852)), and a bug causing failures in RLP receipt decoding was fixed ([#679](https://github.com/ethereum-optimism/specs/issues/679)).\n    - **Tooling & Process Improvements:** The effort to improve the specs upgrade transaction generator script was completed ([#779](https://github.com/ethereum-optimism/specs/issues/779)), as was the work to create a single source of truth for address structs ([#14977](https://github.com/ethereum-optimism/specs/issues/14977)).\n    - **Testing & Analysis:** Several testing and analysis tasks were concluded, including load testing for flashblocks ([#16756](https://github.com/ethereum-optimism/specs/issues/16756)), evaluation of partner support criteria ([#16765](https://github.com/ethereum-optimism/specs/issues/16765)), and threat modeling for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/specs/issues/336)).\n    - **Hardfork Preparation:** Preparations for the Fusaka activation on L1 were completed for `proxyd` ([#467](https://github.com/ethereum-optimism/specs/issues/467)).\n\n- **New & Active Issues:**\n    - **Standardizing Network Upgrades:** A significant new discussion was opened in [#781](https://github.com/ethereum-optimism/specs/issues/781) to establish a new convention for deploying contracts during network upgrades, aiming to avoid potential address computation issues.\n    - **System Configuration:** A cluster of new issues ([#770](https://github.com/ethereum-optimism/specs/issues/770), [#771](https://github.com/ethereum-optimism/specs/issues/771), [#777](https://github.com/ethereum-optimism/specs/issues/777)) highlights a focus on clarifying system configuration parameters and ensuring forward compatibility for client parsing of `SystemConfig.ConfigUpdate` events.\n    - **Ongoing Challenges:** The flakiness of the `TestPreNoInbox` acceptance test ([#17298](https://github.com/ethereum-optimism/specs/issues/17298)) remains an ongoing stability concern, with a recent fix attempt proving unsuccessful. Additionally, discussions on preparing `op-node` for the Fusaka hardfork ([#17493](https://github.com/ethereum-optimism/specs/issues/17493)) raised concerns about tight coupling with upstream Geth code.\n\n## \ud83d\udcac Community & Collaboration\nThis week saw deep technical collaboration on forward-looking architectural decisions. The new issue regarding network upgrade transactions ([#781](https://github.com/ethereum-optimism/specs/issues/781)) immediately sparked a detailed analysis from Protolambda on address computation, demonstrating proactive design and risk assessment. Similarly, the ongoing effort to resolve test flakiness in [#17298](https://github.com/ethereum-optimism/specs/issues/17298) involves multiple contributors tracking and attempting to diagnose the persistent issue. The discussion around improving documentation in [#771](https://github.com/ethereum-optimism/specs/issues/771) also incorporated suggestions from the wider community, reflecting a healthy feedback loop.", "2025-10-13T20:51:43.621Z"]
["ethereum-optimism/community-hub_week_2025-09-21", "ethereum-optimism/community-hub", "week", "2025-09-21", "# ethereum-optimism/community-hub Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on enhancing the Community Hub's documentation and making key infrastructure decisions. A significant new Superchain revenue explainer was introduced to the `op-token` section, accompanied by several metadata and formatting updates to improve clarity and navigation. On the technical front, a strategic decision was made to move away from Kurtosis for testing environments, leading to the closure of a related integration issue. Additionally, a UI bug in the sidebar was resolved, and work to enable flashblocks on Sunnyside sequencers was completed.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on content creation and user experience improvements within the hub.\n\n- **Superchain Revenue Documentation:** A concerted effort was made to improve information regarding the OP Token and Superchain economics.\n  - A new Superchain revenue explainer document was added, providing valuable context for the community ([#1187]).\n  - This was supported by several follow-up pull requests to update navigation metadata ([#1188], [#1189]), adjust heading formats ([#1191]), and refine content by removing emojis for stylistic consistency ([#1192]).\n\n- **UI Bug Fix:** A bug affecting the sidebar display was resolved, improving navigation and the overall user experience within the community hub ([#1190]).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week was characterized by the resolution of older tasks and strategic deprioritization.\n\n- **Closed Issues:** Two key issues were closed, marking progress in infrastructure and a shift in technical strategy.\n  - **Testing Strategy Shift:** The issue to integrate `op-test-sequencer` with Kurtosis ([#15265]) was closed. This decision reflects a strategic move away from using Kurtosis for the devnet environment, as confirmed in the issue discussion.\n  - **Infrastructure Deployment:** The task to enable flashblocks on Sunnyside sequencers was completed and its corresponding issue was closed ([#16761]).\n\n- **New & Active Issues:** No new issues were opened during this period. The discussion around the now-closed issue `#15265` was the most significant activity, but there are no major new or ongoing blockers reported.\n\n## \ud83d\udcac Community & Collaboration\n- The development pattern this week showed focused, iterative work, with a series of related pull requests from a single contributor to roll out the new Superchain revenue explainer.\n- The closure of issue `#15265` involved input from several team members (`janjakubnanista`, `emhane`, `ajsutton`, `teddyknox`), demonstrating a collaborative process in making key decisions about the project's testing infrastructure.\n- Based on the provided reports, there were no unusually high levels of discussion on pull requests or evidence of new contributor activity this week.", "2025-10-13T20:51:43.646Z"]
["ethereum-optimism/superchain-registry_week_2025-09-14", "ethereum-optimism/superchain-registry", "week", "2025-09-14", "# ethereum-optimism/superchain-registry Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the stability and maintainability of the Superchain. A significant refactoring streamlined chain configurations by reducing redundant address data, making the system less prone to errors from frequent changes. Key operational milestones were achieved with the closure of issues related to load testing, partner support criteria, and preparation for the Fusaka network activation. Additionally, a critical Geth receipt decoding bug was resolved through collaborative effort, and progress was made in expanding the registry with new chain addresses and proposals.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on refining the registry's data structure and adding new configurations.\n\n- **Configuration File Optimization:** A major refactoring was completed to reduce the number of hardcoded contract and role addresses in `.toml` files. By centralizing these values in the `addresses.json` codegen file, the configurations are now more maintainable and less likely to become stale ([#1103](https://github.com/ethereum-optimism/superchain-registry/pull/1103)). This directly addressed a long-standing issue to improve configuration accuracy ([#978](https://github.com/ethereum-optimism/superchain-registry/issues/978)).\n\n- **Registry Content Updates:** New addresses for `u16a` were added to the mainnet and sepolia standard versions ([#1106](https://github.com/ethereum-optimism/superchain-registry/pull/1106)). A proposal to add the Sova testnet to the registry was also opened, signaling continued ecosystem growth ([#1105](https://github.com/ethereum-optimism/superchain-registry/pull/1105)).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw significant progress in resolving existing issues, with no new issues being opened.\n\n- **Closed Issues:**\n    - **Operational Readiness:** Several critical validation tasks were completed, including load testing for flashblocks on devnets ([#16756](https://github.com/ethereum-optimism/superchain-registry/issues/16756)), evaluation of partner support criteria ([#16765](https://github.com/ethereum-optimism/superchain-registry/issues/16765)), and a threat modeling analysis for the DA Footprint Limit ([#336](https://github.com/ethereum-optimism/superchain-registry/issues/336)).\n    - **Bug Fix & Infrastructure:** A critical issue causing Geth to crash from a failure to decode RLP receipts during sync was resolved and closed after a community member confirmed the fix ([#679](https://github.com/ethereum-optimism/superchain-registry/issues/679)). Infrastructure work to prepare `proxyd` for the Fusaka activation was also completed ([#467](https://github.com/ethereum-optimism/superchain-registry/issues/467)).\n    - **Tooling & Housekeeping:** An issue to create a CLI wrapper for the OP Deployer was closed ([#17214](https://github.com/ethereum-optimism/superchain-registry/issues/17214)), and an issue regarding dispute game specifications was closed as a duplicate ([#17436](https://github.com/ethereum-optimism/superchain-registry/issues/17436)).\n\n- **New & Active Issues:**\n    - No new issues were opened during this period.\n    - Investigation continues into a flaky acceptance test, `TestPreNoInbox` ([#17298](https://github.com/ethereum-optimism/superchain-registry/issues/17298)). A recent attempt to fix the flakiness was confirmed to be unsuccessful, indicating that this remains an ongoing challenge for the team.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was key to resolving a critical bug this week. In issue [#679](https://github.com/ethereum-optimism/superchain-registry/issues/679), team member @sebastianst engaged with community member @cpuchainorg, who reported a Geth crash. After a potential fix was provided, @cpuchainorg confirmed its success, demonstrating a healthy feedback loop between the core team and ecosystem users. Internal coordination was also evident in the discussion between @stevennevins and @pauldowman, which led to the efficient closure of a duplicate issue ([#17436](https://github.com/ethereum-optimism/superchain-registry/issues/17436)).", "2025-10-13T20:51:44.687Z"]
["ethereum-optimism/superchain-ops_week_2025-09-14", "ethereum-optimism/superchain-ops", "week", "2025-09-14", "# ethereum-optimism/superchain-ops Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was dominated by the coordinated preparation and execution of the U16a upgrade across the Superchain. Significant progress was made in adding and validating upgrade tasks for numerous chains on both Sepolia and Mainnet, including Base, Optimism, Soneium, Ink, and Unichain. Several Sepolia-based chains like Zora, Metal, and Mode were successfully upgraded from U13 to U16. Alongside this major upgrade effort, the team enhanced developer tooling by improving `mise` and `op-acceptor`, resolved key issues related to Eris-0 network readiness, and initiated important architectural discussions around standardizing network upgrade transactions.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on a major upgrade cycle while also delivering targeted improvements to tooling and protocol components.\n\n### U16a Upgrade Rollout & Preparation\nA massive, coordinated effort was undertaken to prepare the Superchain for the U16a upgrade, which includes the OPCM v410 update.\n- **Task Creation & Readiness:** New tasks were created and set to \"ready to sign\" for the U16a upgrade on Sepolia for Base ([#1196]), Optimism, Soneium, Ink, and Unichain ([#1198], [#1202]). Preparations for Mainnet followed, with tasks added for the same set of chains ([#1201]).\n- **Chain Upgrades Executed:** Several Sepolia chains were successfully upgraded, including Zora ([#1180]), Metal ([#1181]), and Mode ([#1182]) from U13 to U16, and Arena-Z ([#1194]) from U15 to U16a.\n- **Bug Fixes & Templating:** A critical bug was fixed to provide the necessary state diffs for the Base U16a Sepolia upgrade ([#1204], [#1207]). Additionally, upgrade templates were updated to reflect the new U16a and OPCM v410 addresses ([#1203]).\n\n### Protocol & Tooling Enhancements\nImprovements were made to core protocol components and the developer environment.\n- **AnchorStateRegistry:** Support for normalized hashes was added to AnchorStateRegistry V410, ensuring consistent behavior for the speedrun template ([#1209]).\n- **Developer Experience:** The `mise` tool was improved by integrating `fzf` to resolve a dependency issue ([#1199]) and by updating its activation instructions for clarity ([#1211]).\n- **Worldchain:** A bug affecting Worldchain's nonce update and hash was fixed ([#1210]), and a new template for key handback was introduced ([#1205], [#1208]).\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several important issues related to network readiness and tooling, while new discussions point toward future architectural standards.\n\n- **Closed Issues:**\n    - **Network Readiness:** Key milestones were met with the closure of issues for Eris-0 load testing ([#16756]) and partner support criteria evaluation ([#16765]). Preparations for Fusaka activation were also completed for `proxyd` ([#467]).\n    - **Tooling & Refactoring:** The `op-acceptor` tool was improved with better configuration logging and parallelism ([#461], [#462]). A CLI wrapper for the Forge binary was completed ([#17214]), and redundant address structs were consolidated into a single source of truth ([#14977]).\n    - **Analysis & Specifications:** A threat modeling analysis for the DA Footprint Limit was completed ([#336]), and an issue regarding the dispute game creator pattern was closed as a duplicate ([#17436]).\n\n- **New & Active Issues:**\n    - **Network Upgrade Conventions:** A significant new discussion began in issue [#781] to establish a formal convention for network upgrade transactions that deploy new contracts. The conversation includes a detailed analysis of address collision resistance, comparing `CREATE` and `CREATE2` to ensure safe and predictable deployments.\n    - **Persistent Flakiness:** The `TestPreNoInbox` test in `op-acceptance-tests` continues to be flaky ([#17298]), with a recent fix attempt proving insufficient. This remains an ongoing CI stability concern.\n    - **Ongoing Investigations:** Active discussions continue around preparing `op-node` for Fusaka ([#17493]) and investigating a Geth crash related to RLP receipt decoding during op-mainnet sync ([#679]).\n\n## \ud83d\udcac Community & Collaboration\nThe week's activity demonstrated strong, focused collaboration on the U16a upgrade, requiring tight coordination to prepare a diverse set of chains across the Superchain ecosystem. The resolution of the Forge Deployer wrapper issue ([#17214]) through a pull request in the main `optimism` repository highlights effective cross-repository work. Furthermore, the deep technical dive in issue [#781] on network upgrade transaction conventions, featuring a detailed analysis from @protolambda, showcases the community's commitment to robust architectural design and forward-looking standards.", "2025-10-13T20:51:49.757Z"]
["ethereum-optimism/optimism_week_2025-09-14", "ethereum-optimism/optimism", "week", "2025-09-14", "# ethereum-optimism/optimism Weekly Report (Sep 14 - 20, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by intensive preparations for the upcoming Jovian and Fusaka network upgrades. The `min-base-fee` feature, a key component of Jovian, saw its implementation completed and rigorously tested across the stack. Significant effort was also invested in enhancing developer tooling, with major improvements to the `op-deployer`'s reliability and testability. While progress was strong on new features, the team continued to grapple with a persistent flaky test in the acceptance suite, highlighting an ongoing focus on CI stability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on protocol upgrades, developer tooling, and testing infrastructure.\n\n- **Jovian & Fusaka Upgrade Preparations:**\n  - **`min-base-fee` Feature:** A major focus was the `min-base-fee` functionality. The feature was implemented in the `contracts-bedrock` package ([#17330](https://github.com/ethereum-optimism/optimism/pull/17330)) and followed by the addition of extensive e2e and acceptance tests to ensure its correct behavior ([#17441](https://github.com/ethereum-optimism/optimism/pull/17441)).\n  - **Jovian Toggles:** `IsFeature` toggles for Jovian were introduced to enable new functionalities within the rollup attributes and program client ([#17424](https://github.com/ethereum-optimism/optimism/pull/17424)).\n  - **Fusaka Planning:** Preparatory work for the Fusaka hardfork began, with new issues opened to prepare `op-node` for derivation changes ([#17493](https://github.com/ethereum-optimism/optimism/issues/17493)), the `op-batcher` for sending cell proofs ([#17472](https://github.com/ethereum-optimism/optimism/issues/17472)), and to create a new L1 activation test ([#17500](https://github.com/ethereum-optimism/optimism/issues/17500)).\n\n- **Developer Tooling & Deployment:**\n  - **`op-deployer` Enhancements:** The deployment tool received numerous improvements, including fixes for contract verification ([#17478](https://github.com/ethereum-optimism/optimism/pull/17478], [#17503](", "2025-10-13T20:51:52.664Z"]
["ethereum-optimism/design-docs_week_2025-09-21", "ethereum-optimism/design-docs", "week", "2025-09-21", "# ethereum-optimism/design-docs Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts focused on enhancing the core protocol's robustness and security. A significant design update introduced a Data Availability (DA) footprint block limit, a mechanism aimed at mitigating spam and preventing priority fee auctions by dynamically managing block capacity. Additionally, progress was made on the sequencer infrastructure, with the successful enablement of flashblocks on Sunnyside sequencers.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on a key protocol enhancement documented for the OP Stack.\n\n### Protocol Enhancements for Spam Mitigation\nTo improve network stability, a design for a DA footprint block limit was introduced ([#317](https://github.com/ethereum-optimism/design-docs/pull/317)). This mechanism tracks the DA footprint of transactions alongside gas usage, allowing the protocol to dynamically adjust the block gas limit based on the estimated impact on data availability. This change is designed to make the protocol more resilient to data spam.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week saw the resolution of a key infrastructure task, with no new issues being opened.\n\n- **Closed Issues:** The effort to enable flashblocks on Sunnyside sequencers was completed, resolving issue [#16761](https://github.com/ethereum-optimism/design-docs/issues/16761). The update confirms that flashblocks are now successfully enabled.\n- **New & Active Issues:** No new issues were reported during this period.\n\n## \ud83d\udcac Community & Collaboration\nThe provided reports for the week focused on specific technical updates and did not contain details regarding broader community discussions or collaborative reviews.", "2025-10-13T20:51:59.025Z"]
["ethereum-optimism/infra_week_2025-09-21", "ethereum-optimism/infra", "week", "2025-09-21", "# ethereum-optimism/infra Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's focus was heavily on enhancing the project's testing and validation infrastructure. Significant improvements were made to `op-acceptor`, including the introduction of a \"flake-shake\" mode to identify flaky tests and better logging capabilities. On the network operations front, Flashblocks were successfully enabled on Sunnyside sequencers, marking a key deployment milestone. Concurrently, the team is actively preparing for the upcoming Fusaka hard fork and refining the `superchain-ops` workflow based on user feedback.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on bolstering testing frameworks and improving core service components.\n\n- **Testing Infrastructure Enhancements:** The `op-acceptor` component received several major updates to improve test reliability and reporting. A new \"flake-shake\" runner mode was introduced to run tests multiple times and identify intermittent failures ([#475](https://github.com/ethereum-optimism/infra/pull/475)). Logging and reporting were also improved by fixing output capture for subtests and adding better error handling for report generation ([#474](https://github.com/ethereum-optimism/infra/pull/474)). A minor cleanup removed an unused function now provided by Go 1.21 ([#476](https://github.com/ethereum-optimism/infra/pull/476)).\n\n- **`proxyd` Service Improvements:** The `proxyd` component was updated to enable public access and authentication, increasing its security and deployment flexibility ([#424](https://github.com/ethereum-optimism/infra/pull/424)).\n\n- **CI/CD and Dependencies:** A new pull request was opened to update the Kurtosis SDK in `op-acceptor` ([#473](https://github.com/ethereum-optimism/infra/pull/473)), even as the project moves away from using Kurtosis more broadly. Another PR was opened to fix an issue with the CircleCI Go releaser ([#477](https://github.com/ethereum-optimism/infra/pull/477)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week saw the resolution of key operational tasks and the start of discussions on future optimizations and upgrade preparations.\n\n- **Closed Issues:**\n    - **Kurtosis Deprecation:** A significant strategic decision was finalized with the closure of issue [#15265](https://github.com/ethereum-optimism/infra/issues/15265), officially marking the move away from using Kurtosis for devnet environments.\n    - **Flashblocks on Sunnyside:** The effort to enable Flashblocks on Sunnyside sequencers was completed and the corresponding issue was closed, aligning the testnet with the mainnet configuration ([#16761](https://github.com/ethereum-optimism/infra/issues/16761)).\n\n- **New & Active Issues:**\n    - **Fusaka Hard Fork Preparation:** An active discussion is underway regarding the necessary preparations for `op-batcher` ahead of the Fusaka activation, focusing on the switch to sending blob transactions with cell proofs ([#17472](https://github.com/ethereum-optimism/infra/issues/17472)).\n    - **`superchain-ops` Workflow:** Detailed feedback was provided on the `superchain-ops` signing flow, highlighting areas for UX improvement for signers and clarifying the purpose of generated artifacts and validation steps ([#1224](https://github.com/ethereum-optimism/infra/issues/1224)).\n    - **Engine API Optimization:** A new issue proposes deduplicating Engine API validation checks that are currently performed in multiple places, aiming to streamline the logic within `eth/catalyst/api_optimism.go` ([#688](https://github.com/ethereum-optimism/infra/issues/688)).\n    - **Configuration Bug:** A bug where `ChainConfig.BlobConfig` used default values was reported but immediately noted as having been fixed in an upstream dependency, with the solution pending the next merge ([#685](https://github.com/ethereum-optimism/infra/issues/685)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the detailed feedback loop for the `superchain-ops` tooling. The discussion in issue [#1224](https://github.com/ethereum-optimism/infra/issues/1224) shows active engagement from users of the workflow (signers), providing practical insights to improve the operational experience. This collaborative process is crucial for refining the tools that secure and manage the Superchain. Furthermore, forward-looking discussions around the Fusaka upgrade demonstrate proactive coordination among developers to ensure a smooth network transition.", "2025-10-13T20:52:07.763Z"]
["ethereum-optimism/docs_week_2025-09-21", "ethereum-optimism/docs", "week", "2025-09-21", "# ethereum-optimism/docs Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on documentation enhancements and critical discussions shaping future development. Key progress included updates to operator setup guides and preparations for the U16a upgrade. A strategic decision was made to close an issue related to `op-test-sequencer` integration, reflecting a shift away from Kurtosis. Meanwhile, active discussions advanced planning for the Fusaka upgrade, improvements to the `superchain-ops` flow, and clarification of L2EL syncing behavior, setting the stage for upcoming work.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused exclusively on improving documentation for operators and developers.\n\n- **Documentation Enhancements:** Two minor but important updates were merged. The operator setup guide was clarified in `op-deployer-setup.mdx` ([#1749](https://github.com/ethereum-optimism/docs/pull/1749)), and crucial chain operator information was added to the U16a upgrade notice ([#1751](https://github.com/ethereum-optimism/docs/pull/1751)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved resolving a strategic dependency, identifying new areas for improvement, and continuing discussions on complex technical topics.\n\n- **Closed Issues:** A significant issue regarding the integration of `op-test-sequencer` into the devnet environment was closed ([#15265](https://github.com/ethereum-optimism/docs/issues/15265)). The closure was a strategic decision, as the team is \"moving away from `kurtosis`.\"\n\n- **New & Active Issues:**\n    - **New Issues Opened:**\n        - A UI bug was reported where the theme-switcher button text is not visible in light mode ([#1752](https://github.com/ethereum-optimism/docs/issues/1752)).\n        - An issue was opened to deduplicate Engine API validations in `Miner.prepareWork` ([#688](https://github.com/ethereum-optimism/docs/issues/688)).\n        - An issue regarding `ChainConfig.BlobConfig` using default configurations was opened ([#685](https://github.com/ethereum-optimism/docs/issues/685)) but was immediately noted as having been resolved by an upstream fix in `go-ethereum`.\n    - **Noteworthy Active Discussions:**\n        - **Superchain-ops Flow ([#1224](https://github.com/ethereum-optimism/docs/issues/1224)):** A detailed discussion unfolded as @blmalone addressed feedback from @geoknee on improving the signing flow, clarifying task simulations and the role of `op-txverify`.\n        - **Fusaka Upgrade Prep ([#17472](https://github.com/ethereum-optimism/docs/issues/17472)):** To prepare `op-batcher` for Fusaka, @geoknee provided a recipe for manual testing, highlighting the need for the batcher to send blob transactions with cell proofs post-activation.\n        - **L2EL Syncing ([#17628](https://github.com/ethereum-optimism/docs/issues/17628)):** Discussion continued on the conditions for L2EL syncing, with @ajsutton clarifying that `op-geth` will sync to the new chain head regardless of its finalized status, simplifying the problem space.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions on active issues. The back-and-forth between @blmalone and @geoknee on the `superchain-ops` flow ([#1224](https://github.com/ethereum-optimism/docs/issues/1224)) exemplifies a healthy feedback loop. Contributors like @geoknee, @ajsutton, and @janjakubnanista were instrumental in providing technical direction and strategic context across several issues, from Fusaka preparation to clarifying core syncing mechanics.", "2025-10-13T20:52:10.903Z"]
["ethereum-optimism/op-analytics_week_2025-09-21", "ethereum-optimism/op-analytics", "week", "2025-09-21", "# ethereum-optimism/op-analytics Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on infrastructure maintenance and strategic cleanup, ensuring the long-term stability of the project's tooling and CI/CD pipelines. Key activities included proactively updating Helm chart configurations to address a dependency's upcoming sunset and fixing a bug in the weekly CI job. The team also closed several issues, notably confirming the successful enablement of flashblocks on Sunnyside sequencers and officially deprecating the use of Kurtosis for test environments. Overall, it was a week focused on reinforcing the project's technical foundation rather than developing new features.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week was concentrated on maintaining the health and reliability of the project's infrastructure.\n\n- **CI/CD and Helm Chart Maintenance:**\n  - A bug affecting the weekly CI/CD job was resolved, restoring stability to the automated pipeline ([#1749](https://github.com/ethereum-optimism/op-analytics/pull/1749)).\n  - In response to an upcoming dependency change, the Dagster Helm chart values were updated to address a sunsetting requirement for Bitnami images ([#1748](https://github.com/ethereum-optimism/op-analytics/pull/1748)). This proactive measure prevents future disruptions to the analytics stack.\n\n## \ud83d\udc1b Issues & Triage\nIssue management focused on resolving outstanding items and addressing new infrastructure requirements.\n\n- **Closed Issues:**\n  - **Strategic Tooling Decisions:** An issue to add `op-test-sequencer` to Kurtosis was closed, as the team has decided to move away from using Kurtosis for its test environments ([#15265](https://github.com/ethereum-optimism/op-analytics/issues/15265)).\n  - **Deployment Confirmation:** The issue tracking the enablement of flashblocks on Sunnyside sequencers was closed, marking the successful completion of this deployment ([#16761](https://github.com/ethereum-optimism/op-analytics/issues/16761)).\n  - **Upstream Fixes:** A bug where `ChainConfig.BlobConfig` used default configurations was resolved. The issue was closed after an upstream fix in Go-Ethereum addressed the root cause ([#685](https://github.com/ethereum-optimism/op-analytics/issues/685)).\n\n- **New & Active Issues:**\n  - A new issue was opened to track the upcoming unavailability of Bitnami images used by the Dagster Helm chart ([#1747](https://github.com/ethereum-optimism/op-analytics/issues/1747)). This issue prompted the proactive maintenance work seen in PR [#1748](https://github.com/ethereum-optimism/op-analytics/pull/1748).\n\n## \ud83d\udcac Community & Collaboration\nWhile there were no major collaborative threads on new features, the issue history reveals effective internal coordination and reliance on the broader ecosystem. The decision to deprecate Kurtosis ([#15265](https://github.com/ethereum-optimism/op-analytics/issues/15265)) involved discussion among several team members before a final decision was made. Furthermore, the resolution of the `ChainConfig.BlobConfig` issue ([#685](https://github.com/ethereum-optimism/op-analytics/issues/685)) highlights the project's integration with and benefit from developments in upstream dependencies like Go-Ethereum.", "2025-10-13T20:52:16.196Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-09-21", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-09-21", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by a dual focus on administrative cleanup and strategic ecosystem growth. A significant number of legacy issues related to the `superchain-ops` architecture were closed, reflecting progress and shifts in design rather than new code merges. In parallel, development efforts concentrated on expanding the Superchain's reach by integrating new chains and tokens, including the Celo-Sepolia testnet and several new assets on Base and Optimism. A key theme that emerged was the refinement of developer experience, highlighted by a detailed feedback report on the `superchain-ops` flow, which sparked active discussion and immediate action.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on expanding the ecosystem's supported assets and maintaining project dependencies.\n\n- **Ecosystem Expansion: New Chains and Tokens**\n  - The Celo-Sepolia testnet and its corresponding WETH token were added to the ecosystem ([#1199](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1199)).\n  - Support for new tokens was introduced, including the IncomRWA (iRWA) token on the Base Network ([#1200](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1200)) and the LITKEY token for both Optimism and Base, with Sepolia support ([#1214](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1214)).\n  - The address for the Wrapped WIT token on Sepolia was updated ([#1211](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1211)).\n\n- **Dependency Management**\n  - The `eslint-plugin-unicorn` dependency was updated from version 42.0.0 to 44.0.2, ensuring the project benefits from the latest linting rules and improvements ([#1092](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1092)).\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:**\n  A major cleanup effort resulted in the closure of 17 long-standing issues, primarily related to the `superchain-ops` framework. This reflects the finalization of architectural decisions and implementation shifts. Key areas addressed include:\n  - **Architecture Refinements:** Issues concerning `SignFromJson` compatibility ([#49](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/49)), JSON parsing cleanup ([#12](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/12)), and refactoring of `VerificationBase` ([#427](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/427)) and `AccountAccessParser` ([#666](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/666)) were closed.\n  - **Developer Experience & Tooling:** Improvements such as better proposal operations ([#140](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/140)) and task tracking ([#433](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/433)) were resolved.\n  - **Simulation and Testing:** A batch of issues related to proposal simulation ([#436](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/436]), security council rehearsals ([#529](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/529)), and various simulation tasks were closed.\n  - **CI Stability:** Issues related to CI rate limiting ([#569](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/569), [#628](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/628)) and Foundry test failures ([#577](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/577)) were resolved.\n\n- **New & Active Issues:**\n  - **`superchain-ops` Developer Experience:** The most significant new issue, [#1224](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1224), provided a detailed \"snag report\" on the improved `superchain-ops` flow. The report highlighted points of confusion for users during the signing process, including the purpose of 'TODOs' in simulation output and the necessity of `op-txverify`. The issue generated immediate and detailed discussion, with a pull request already opened to address some of the feedback.\n  - **Fusaka L1 Activation:** Discussion continued in [#17472](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17472) on preparing the `op-batcher` for the upcoming Fusaka L1 activation, specifically its need to send blob transactions with cell proofs.\n  - **Code Quality and Refinements:** Several new issues were opened to track minor but important code quality improvements, such as splitting test assertions ([#17598](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17598)), adding helper functions ([#17600](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17600)), and deduplicating Engine API validation logic ([#688](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/688)).\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted a strong feedback loop within the community. The detailed report and subsequent discussion in issue [#1224](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/1224) demonstrated constructive collaboration between users experiencing friction (`geoknee`) and maintainers (`blmalone`), who provided thorough explanations and prompt fixes. This interaction is crucial for refining the developer experience of core tooling like `superchain-ops`. Additionally, proactive planning for the Fusaka upgrade in [#17472](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17472) and collaborative discussions on code quality improvements between `smartcontracts` and `hexshire` show a healthy and engaged contributor base focused on both immediate usability and future-proofing the protocol.", "2025-10-13T20:52:18.428Z"]
["ethereum-optimism/op-geth_week_2025-09-21", "ethereum-optimism/op-geth", "week", "2025-09-21", "# ethereum-optimism/op-geth Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's focus was on maintaining alignment with the upstream `go-ethereum` repository, a critical task for ensuring the stability and security of `op-geth`. A significant merge of `go-ethereum v1.16.3` was completed, and a pull request for `v1.16.4` was promptly opened. Alongside this core maintenance, the team explored a new experimental mint-burn precompile and continued preparations for future network upgrades like Fusaka. Key discussions also centered on improving internal tooling and refactoring Engine API validations for better efficiency.\n\n## \ud83d\udee0\ufe0f Key Developments\n### Upstream Geth Synchronization\nA primary effort this week was updating the core dependency. This ensures `op-geth` benefits from the latest features, optimizations, and security patches from the underlying `go-ethereum` client.\n- **Geth v1.16.3 Merged:** A major update was completed by merging `go-ethereum v1.16.3` ([#686](https://github.com/ethereum-optimism/op-geth/pull/686)). This foundational change impacted numerous core components, including `accounts/abi`, `core/rawdb`, `common`, and `core/state`.\n- **Geth v1.16.4 Proposed:** Following the previous merge, a new pull request was opened to bring the client up to date with `go-ethereum v1.16.4` ([#689](https://github.com/ethereum-optimism/op-geth/pull/689)).\n\n### Experimental Features\n- **Mint-Burn Precompile:** A new pull request ([#687](https://github.com/ethereum-optimism/op-geth/pull/687)) was opened to introduce an experimental mint-burn precompile, signaling exploration into new protocol capabilities.\n\n## \ud83d\udc1b Issues & Triage\n### Closed Issues\n- **Deprecation of Kurtosis:** An issue regarding the `op-test-sequencer` and its integration with Kurtosis ([#15265](https://github.com/ethereum-optimism/op-geth/issues/15265)) was closed, as the team is moving away from using Kurtosis for its testing environment.\n- **Flashblocks on Sunnyside:** The task to enable flashblocks on Sunnyside sequencers ([#16761](https://github.com/ethereum-optimism/op-geth/issues/16761)) was marked as complete, confirming the successful deployment.\n\n### New & Active Issues\n- **Engine API Validation Refactor:** A new issue ([#688](https://github.com/ethereum-optimism/op-geth/issues/688)) was opened to address redundant Engine API validation checks in `Miner.prepareWork`. The goal is to deduplicate this logic by consolidating checks into `eth/catalyst/api_optimism.go`.\n- **Upstream Configuration Bug:** An upstream bug was identified where `ChainConfig.BlobConfig` always uses default configurations ([#685](https://github.com/ethereum-optimism/op-geth/issues/685)). A fix is already present in `go-ethereum` and is expected to be incorporated in a future upstream merge.\n- **Fusaka Upgrade Preparation:** Discussions continued on preparing the `op-batcher` for the Fusaka L1 activation ([#17472](https://github.com/ethereum-optimism/op-geth/issues/17472)). The focus is on ensuring the batcher can send blob transactions with cell proofs as required by the upgrade.\n- **Superchain-Ops Flow Improvements:** Feedback was provided on the `superchain-ops` signing flow ([#1224](https://github.com/ethereum-optimism/op-geth/issues/1224)), leading to clarifications on workflow tooling and suggestions for improving documentation and markdown formatting.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity highlights strong internal coordination, particularly around the critical task of keeping `op-geth` synchronized with its upstream dependency. The rapid succession of merging `v1.16.3` and proposing `v1.16.4` demonstrates a proactive maintenance posture. Furthermore, ongoing discussions on active issues like the `superchain-ops` flow ([#1224](https://github.com/ethereum-optimism/op-geth/issues/1224)) and Fusaka preparations ([#17472](https://github.com/ethereum-optimism/op-geth/issues/17472)) show a collaborative effort to refine internal processes and prepare for future network milestones.", "2025-10-13T20:52:22.013Z"]
["ethereum-optimism/Retro-Funding_week_2025-09-28", "ethereum-optimism/Retro-Funding", "week", "2025-09-28", "# ethereum-optimism/Retro-Funding Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development efforts were focused on enhancing the project's testing infrastructure in preparation for upcoming official results. The team introduced a comprehensive set of sample data to facilitate robust dashboard testing. This preparatory work ensures the system is ready to handle and display final data accurately when it is locked on October 8th.\n\n## \ud83d\udee0\ufe0f Key Developments\n### Testing Infrastructure Enhancements\nTo prepare for the upcoming release of official results, the team merged updates to the testing environment. This involved adding sample data for M8 to support dashboard testing, including files for devtooling, onchain metrics, output results, and weight configurations ([#78](https://github.com/ethereum-optimism/Retro-Funding/pull/78)). This effort is critical for validating the dashboard's functionality and data presentation ahead of the official results lock.\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened or closed this week, indicating a period of focused implementation rather than bug fixing or feature planning. There was no significant activity reported on existing issues.\n\n## \ud83d\udcac Community & Collaboration\nCommunity and collaborative activity was minimal this week, with development work concentrated on a single, focused pull request. There were no significant discussions on issues or pull requests reported during this period.", "2025-10-13T20:52:33.024Z"]
["ethereum-optimism/specs_week_2025-09-21", "ethereum-optimism/specs", "week", "2025-09-21", "# ethereum-optimism/specs Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by a dual focus on future protocol upgrades and present-day tooling refinement. Significant progress was made in clarifying specifications for the upcoming Isthmus and Jovian upgrades. Concurrently, a substantial housekeeping effort streamlined the project by closing a large volume of outdated issues related to the now-deprecated `superchain-ops` architecture and CI processes. This cleanup aligns the repository with current development practices, while active discussions around improving the new `superchain-ops` workflow demonstrate a commitment to refining user experience based on community feedback.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on preparing for future network upgrades and updating core documentation.\n\n- **Protocol Upgrade Specification:** Precision was added to the L1 block attribute transaction choice for the Isthmus and Jovian protocol upgrades. This key clarification, merged in PR [#789](https://github.com/ethereum-optimism/specs/pull/789), updates the overview, L1 attributes, and system configuration documentation, marking a critical step in preparing for these future hard forks.\n- **Derivation Specification Updates:** Several pull requests ([#784](https://github.com/ethereum-optimism/specs/pull/784), [#785](https://github.com/ethereum-optimism/specs/pull/785)) were opened to update `derivation.md`, indicating ongoing work to refine the core L2 chain derivation logic.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw a major effort in issue triage, closing out old tasks and opening new ones focused on protocol enhancements and developer experience.\n\n- **Closed Issues:** A significant number of issues were closed, primarily as part of a large-scale cleanup to reflect architectural changes and process improvements.\n    - **Superchain-Ops Architecture Deprecation:** Dozens of issues related to the previous `superchain-ops` architecture were closed, including those for `JsonTxBuilderBase`, `etch` simulation, and older proposal methods ([#12](https://github.com/ethereum-optimism/specs/issues/12), [#49](https://github.com/ethereum-optimism/specs/issues/49), [#140](https://github.com/ethereum-optimism/specs/issues/140), [#427](https://github.com/ethereum-optimism/specs/issues/427)). This marks the formal transition to the new, streamlined tooling.\n    - **CI & Development Workflow:** Issues concerning CI rate limits, `mise` installation, and test failures with new Foundry versions were resolved ([#569](https://github.com/ethereum-optimism/specs/issues/569), [#646](https://github.com/ethereum-optimism/specs/issues/646), [#714](https://github.com/ethereum-optimism/specs/issues/714)), pointing to a more stable and efficient development environment.\n\n- **New & Active Issues:**\n    - **Protocol Enhancement Proposal:** A new issue ([#787](https://github.com/ethereum-optimism/specs/issues/787)) proposes using SSZ `hash_tree_root` instead of `keccak(payload)` for `SequencerCommitment` signatures, sparking discussion on a potential improvement to the protocol's signature mechanisms.\n    - **Superchain-Ops Workflow Feedback:** An active discussion in [#1224](https://github.com/ethereum-optimism/specs/issues/1224) highlights areas for improvement in the new `superchain-ops` signing flow. User feedback pointed out confusing elements during simulation and signing, leading to immediate action to clarify documentation and tool output.\n    - **Potential Bug Fix:** A comment on issue [#679](https://github.com/ethereum-optimism/specs/issues/679), which tracks a Geth crash due to RLP receipt decoding failures, suggests that a recent patch may have resolved this critical bug.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active feedback loop for new tooling. The discussion on issue [#1224](https://github.com/ethereum-optimism/specs/issues/1224) between user `geoknee` and maintainer `blmalone` exemplifies a healthy process of identifying user experience \"snags\" in the new `superchain-ops` flow and working collaboratively to address them. Additionally, a comment from `cpuchainorg` on issue [#679](https://github.com/ethereum-optimism/specs/issues/679) shows community engagement in verifying fixes for critical network issues. The extensive issue cleanup, largely driven by `blmalone`, demonstrates a strong maintainer effort to improve project hygiene and focus contributor attention on relevant tasks.", "2025-10-13T20:52:33.813Z"]
["ethereum-optimism/optimism_week_2025-09-21", "ethereum-optimism/optimism", "week", "2025-09-21", "# ethereum-optimism/optimism Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week saw a major push toward finalizing the Custom Gas Token (CGT) feature, with extensive testing, refinement, and bug fixing based on detailed reviews. Concurrently, significant progress was made in preparing the stack for the upcoming Fusaka upgrade, particularly by ensuring compatibility for `kona-proof` and the `op-batcher`. The team also invested heavily in developer experience and stability, introducing an innovative AI-powered system for maintaining contract tests, streamlining CI/CD pipelines by removing deprecated jobs, and tackling persistent test flakiness. Active investigation into complex L2CL/L2EL synchronization behaviors emerged as a key focus area for ensuring node robustness.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on feature completion, upgrade preparation, and infrastructure hardening.\n\n**Custom Gas Token (CGT) Finalization**\nThe CGT feature moved closer to completion with the addition of comprehensive acceptance tests covering introspection, native payments, and revert scenarios ([#17451]). New invariant tests were added to ensure supply conservation and consistency across mint, burn, deposit, and withdraw functions ([#17489]). Numerous fixes were implemented based on review feedback, addressing issues in acceptance tests, deployer configurations, and e2e utilities ([#17577], [#17612], [#17621]), including a fix for minter authorization in tests ([#17642]).\n\n**Fusaka Upgrade Preparations**\nKey components were updated for Fusaka compatibility. The transaction manager (`txmgr`) was modified to allow blobs to be sent with Fusaka-compatible cell proofs, a critical requirement for L2 activation ([#17620]). The `kona-proof` system was also made compatible with L1 chain configurations, ensuring the proving system can correctly interpret L1 data post-upgrade ([#17638]).\n\n**Testing Infrastructure & Stability**\nSignificant effort was dedicated to improving the reliability and efficiency of the testing suite.\n- **AI for Test Maintenance:** A new AI Contract Test Maintenance System was introduced ([#17560], [#17578]) and integrated with the Devin API to automate test improvement workflows ([#17602]).\n- **CI/CD Optimization:** Kurtosis-based CI acceptance tests were removed as they are deprecated ([#17581]), and the acceptance job was updated to skip building contract tests, reducing memory usage and execution time ([#17639]).\n- **Flakiness Reduction:** The `op-sync-tester` was updated to retry block fetching to prevent flakiness in `TestSyncTesterELSync` ([#17624]), though the test was temporarily disabled to stabilize CI ([#17617]). The test validation script for `contracts-bedrock` was also refactored for better maintainability ([#17510]).\n\n**Dispute Game Advancements**\nProgress was made on next-generation dispute games. New creator pattern implementations were integrated for `FaultDisputeGameV2` and `PermissionedDisputeGameV2` ([#17329]). To facilitate development, new feature flags (`CANNON_KONA`, `DEPLOY_V2_DISPUTE_GAMES`) were added to the bedrock contracts test matrix ([#17635]).\n\n**Core Protocol & Deployment Refinements**\n- **Contract Security:** Safety checks for the `ETHLockbox` feature were added to `SystemConfig.sol` to improve protocol security ([#17559]).\n- **Transaction Management:** The transaction manager was updated to fetch `BlobBaseFee` via RPC, simplifying fee estimation and fixing a concurrency-related flaky test ([#17567], [#17570]).\n- **Deployment Tooling:** The `DeployOPChain.s.sol` script was updated to allow arbitrary gas limits ([#17550]), and support for custom `gasLimit` was added to `op-deployer` ([#17585]), providing more flexibility for chain deployments.\n\n## \ud83d\udc1b Issues & Triage\n\n**Closed Issues**\nA significant volume of issues was resolved this week, indicating progress across multiple fronts:\n- **`superchain-ops` Tooling:** A large batch of issues related to `superchain-ops` tooling was closed, reflecting a major architectural cleanup and improvement in proposal operations, task tracking, and simulation processes ([#49], [#12], [#140], and many others).\n- **Custom Gas Token Refinements:** A flurry of issues opened in response to a detailed review of the CGT feature were quickly addressed and closed. This included refactoring tests, clarifying naming, and adding custom errors ([#17586], [#17587], [#17593], [#17596], etc.).\n- **Infrastructure & Deployments:** Issues related to the Interop POC implementation ([#17190]), rollup-boost deployments ([#17459], [#17460], [#17461]), and CI capacity ([#17571]) were closed. The issue preparing `op-batcher` for Fusaka was also resolved ([#17472]).\n- **Test Stability:** Flaky tests like `TestQueue_Send_MaxPendingMetrics` ([#17554]) and `TestSyncTesterELSync` ([#17615]) were investigated and addressed.\n\n**New & Active Issues**\n- **L2CL/L2EL Syncing Challenges:** A series of new issues highlights a deep dive into the complexities of node synchronization. These issues question the conditions required for L2EL to start syncing ([#17628]), how the verifier reaches the chain tip ([#17629]), and why the sequencer cannot advance in EL Sync mode ([#17630]). This represents a significant area of active investigation to ensure node robustness across different client implementations.\n- **`superchain-ops` User Experience:** An active discussion ([#1224]) on snags in the improved `superchain-ops` signing flow points to ongoing efforts to refine the user experience for signers, with feedback on task simulation output and the need for clearer documentation.\n- **Fusaka Prestate Review:** A new issue was opened to review the Fusaka prestate ([#17575]), signaling the next step in preparing for the network upgrade.\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity highlighted a strong collaborative feedback loop, particularly around the Custom Gas Token feature. The rapid creation and resolution of numerous small, targeted issues ([#17586] through [#17605]) suggests a thorough and interactive code review process. Discussions on active issues like the `superchain-ops` flow ([#1224]) and L2EL syncing conditions ([#17628]) show deep engagement from multiple contributors in solving complex systemic problems. The introduction of an AI-powered system for test maintenance ([#17560]) also points to a culture of innovation and a forward-thinking approach to improving developer productivity and code quality.", "2025-10-13T20:52:34.782Z"]
["ethereum-optimism/superchain-registry_week_2025-09-21", "ethereum-optimism/superchain-registry", "week", "2025-09-21", "# ethereum-optimism/superchain-registry Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by a significant push to mature and streamline the `superchain-ops` framework, with a large number of legacy issues related to architecture, tooling, and developer experience being resolved. This effort culminated in a more refined development process, including new task management and testing methodologies. A key feature was also introduced with the addition of a new standard contract version, `op-contracts/v3.0.1`, which enables configurable gas limits on both Sepolia and Mainnet. While this cleanup represents substantial progress, newly opened issues around the developer workflow, particularly the signing process, highlight the next set of challenges in improving user experience.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused heavily on refining the core operational tooling and updating contract standards.\n\n- **`superchain-ops` Framework Maturation:** A major effort was completed to streamline the `superchain-ops` architecture. This involved closing numerous issues related to tooling and processes, such as deprecating `JsonTxBuilderBase.sol` and `sim-seq`, improving proposal operations, and refining simulation outputs ([#12](https://github.com/ethereum-optimism/superchain-registry/issues/12), [#49](https://github.com/ethereum-optimism/superchain-registry/issues/49), [#140](https://github.com/ethereum-optimism/superchain-registry/issues/140), [#427](https://github.com/ethereum-optimism/superchain-registry/issues/427), [#436](https://github.com/ethereum-optimism/superchain-registry/issues/436)). This refactoring simplifies the framework and enhances its usability for developers.\n\n- **New Standard Contract Version:** A new standard version, `op-contracts/v3.0.1`, was added for both Sepolia and Mainnet ([#1107](https://github.com/ethereum-optimism/superchain-registry/pull/1107)). This update introduces the ability to configure gas limits within the `DeployOPChain.s.sol` script, providing more flexibility for chain deployments.\n\n- **Developer Experience & CI/CD:** Several improvements were made to the development environment. Fixes were implemented for CI rate-limiting issues, and installation instructions in the README were updated for clarity ([#569](https://github.com/ethereum-optimism/superchain-registry/issues/569), [#617](https://github.com/ethereum-optimism/superchain-registry/issues/617), [#628](https://github.com/ethereum-optimism/superchain-registry/issues/628)). Additionally, folder numbering is now enforced for tasks to maintain organizational consistency ([#203](https://github.com/ethereum-optimism/superchain-registry/issues/203)).\n\n- **Governance & Security Tooling:** Progress was made on governance-related tooling. Security council rehearsals were reimplemented using the new `superchain-ops` format ([#529](https://github.com/ethereum-optimism/superchain-registry/issues/529)), and a new template was created to facilitate swapping owners ([#1167](https://github.com/ethereum-optimism/superchain-registry/issues/1167)).\n\n## \ud83d\udc1b Issues & Triage\nThe issue landscape reflects a transition from large-scale refactoring to focusing on workflow refinement and code quality.\n\n- **Closed Issues:** A significant number of issues were closed, primarily related to the `superchain-ops` architectural overhaul. These closures resolved problems in task management, simulation processes, CI/CD pipelines, and developer tooling, marking the completion of a major phase of work. Key examples include making task invocation easier ([#593](https://github.com/ethereum-optimism/superchain-registry/issues/593)), fixing test failures with the latest Foundry version ([#577](https://github.com/ethereum-optimism/superchain-registry/issues/577)), and improving simulation output ([#714](https://github.com/ethereum-optimism/superchain-registry/issues/714), [#781](https://github.com/ethereum-optimism/superchain-registry/issues/781)).\n\n- **New & Active Issues:** As the framework matures, new issues are emerging around developer experience and code quality. A key active discussion is happening in [#1224](https://github.com/ethereum-optimism/superchain-registry/issues/1224), where snags in the `superchain-ops` signing flow were reported, including confusing output and unclear requirements. This feedback is critical for the next iteration of tooling improvements. Additionally, new issues were opened to promote best practices, such as splitting test assertions ([#17598](https://github.com/ethereum-optimism/superchain-registry/issues/17598)) and adding helper functions to reduce code duplication ([#17600](https://github.com/ethereum-optimism/superchain-registry/issues/17600)).\n\n## \ud83d\udcac Community & Collaboration\nThe activity this week highlights a healthy feedback loop within the contributor community. The discussion in issue [#1224](https://github.com/ethereum-optimism/superchain-registry/issues/1224) between @geoknee and @blmalone is a prime example of this, where user-reported friction in the signing process was met with direct engagement and clarification from the development team. This collaborative dynamic is essential for refining the developer experience and ensuring the tools meet the needs of their users. Further collaboration is evident in issue [#698](https://github.com/ethereum-optimism/superchain-registry/issues/698), where team members are working to clarify requirements for future tasks.", "2025-10-13T20:52:47.327Z"]
["ethereum-optimism/superchain-ops_week_2025-09-21", "ethereum-optimism/superchain-ops", "week", "2025-09-21", "# ethereum-optimism/superchain-ops Weekly Report (Sep 21 - 27, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was defined by a major push to roll out the U16a upgrade across the Superchain. The team successfully upgraded multiple networks, including Metal, Mode, and Zora, while preparing and staging the upgrade for Base, OP Mainnet, and others. Alongside this large-scale operational effort, the core `superchain-ops` system received significant enhancements, including native support for direct L2 upgrade transactions and new templates for security operations. A substantial cleanup of legacy issues and code has streamlined the repository, solidifying the new ops system as the project's foundation and demonstrating a strong feedback loop by rapidly addressing operator workflow concerns.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week's work focused on executing a broad network upgrade campaign, enhancing core tooling, and improving system reliability.\n\n- **Superchain U16a Upgrade Campaign:** A coordinated effort was made to deploy the U16a upgrade.\n    - **Execution:** Upgrades were successfully executed for Metal, Mode, Zora, Arena-Z, and Swell ([#1188], [#1189], [#1190], [#1191], [#1192]). On the Sepolia testnet, state differences were corrected [#1212] and several tasks were marked as executed [#1228].\n    - **Preparation:** New U16a tasks were created for Base Mainnet [#1200]. Tasks for OP/Ink/Soneium and Unichain were set to \"ready to sign\" ([#1225], [#1226]), and the Base U16a upgrade was also marked as `READY TO SIGN` by the end of the week [#1234].\n\n- **Core System Enhancements & New Templates:** The `superchain-ops` framework gained new capabilities.\n    - **Direct L2 Upgrades:** The system now supports direct L2 upgrade transactions, a feature previously only available in the older system, enabling more efficient operations [#1187].\n    - **New Templates:** A template was added to facilitate swapping Safe owners, crucial for security council rotations [#1219]. Another new template and example task were introduced for transferring L2PAO from L1 to an EOA [#1233].\n\n- **Developer Experience and CI Stability:** Efforts were made to improve the operator and developer workflow.\n    - **Debugging & CI:** Nonce error messages in CI were improved to display the task configuration file, speeding up debugging [#1215]. Retry mechanisms were added to `forge_test` and `template_regression_tests` to mitigate flakiness from RPC nodes [#1229].\n    - **Documentation & Clarity:** Instructions were improved for importing Keystore wallets [#1214] and for the Base U16a upgrade, specifically targeting semi-technical users [#1232]. Feedback on the multisig signing process led to improvements in `MultisigTaskPrinter.sol` and `MultisigTask.sol` for better clarity [#1230].\n\n- **Codebase Streamlining:** The repository was cleaned of legacy components. The `FinanceTemplate` [#1216] and the old `improvements` directory [#1217] were removed, reflecting the maturation of the current `superchain-ops` system.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week was characterized by a massive cleanup of historical debt and a focus on improving the current operator experience.\n\n- **Closed Issues:** A large number of legacy issues were closed, signaling a significant housekeeping effort. These closures related to:\n    - **Architectural Cleanup:** Issues concerning the previous architecture, such as merging `VerificationBase` [#427] and making `SignFromJson` compatible with the Safe Web UI [#49], were resolved.\n    - **Tooling Deprecation:** Issues related to the now-unused `sim-seq` feature ([#646], [#647]) and the move away from Kurtosis [#15265] were closed.\n    - **CI & DevEx:** Long-standing issues around CI rate limits ([#569], [#628]) and developer tooling were addressed and closed.\n    - **Security & Templates:** The issue to create a \"Swap Owner Template\" [#1167] was completed and closed.\n\n- **New & Active Issues:**\n    - **Operator Workflow Feedback:** A critical new issue, [#1224], was opened, detailing several pain points in the `superchain-ops` signing flow. The feedback highlighted confusion around `TODOs` in simulation output, the \"experimental\" nature of audit reports, and the `op-txverify` requirement. This sparked an important discussion and led to immediate action.\n    - **Fusaka Preparation:** An active discussion in [#17472] is focused on preparing the `op-batcher` for the Fusaka L1 hardfork, ensuring it correctly sends blob transactions with cell proofs.\n    - **Engine API Validation:** A new issue [#688] was opened to address potential duplication of Engine API validation checks, proposing a refactor to streamline the logic.\n\n## \ud83d\udcac Community & Collaboration\nThe week highlighted a healthy and responsive collaboration dynamic within the project. The most notable example was the interaction around issue [#1224], where feedback from user `@geoknee` on the signing process was quickly acknowledged by maintainer `@blmalone`. The detailed discussion that followed resulted in a pull request [#1230] being merged within a day to address the reported \"snags,\" demonstrating a tight and effective feedback loop between operators and the core development team. The coordinated rollout of the U16a upgrade across numerous PRs and chains also points to strong internal team alignment and execution.", "2025-10-13T20:52:49.821Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-09-28", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-09-28", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by a major operational milestone with the successful enablement of Flashblocks on op-mainnet. This significant deployment was supported by comprehensive on-call onboarding, revised documentation, and a detailed public blog post to inform the community. Alongside this feature rollout, the team also addressed a key synchronization issue in the `op-node`'s EL sync code path, enhancing network stability. Overall, the focus was on successful deployment and ensuring operational readiness and reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on a major network feature activation and core node stability.\n\n### Flashblocks Deployment and Communication\n- **Flashblocks Enabled on op-mainnet:** A significant achievement was the successful live activation of Flashblocks on the mainnet, completing a major operational goal ([#16498](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16498)).\n- **Operational Readiness:** To support the launch, the team completed on-call onboarding sessions and documentation revisions to ensure operational preparedness ([#17142](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17142)).\n- **Public Announcement:** A deep-dive blog post was published, detailing the deployment process, key learnings, and improvements made for the mainnet launch ([#17664](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17664)).\n\n### Node Stability Fix\n- **EngineController Synchronization:** A bug related to synchronization in the `op-node`'s EL sync code path was resolved. The fix, which involved applying and testing proper locking, was merged to address the issue ([#17564](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17564)).\n\n## \ud83d\udc1b Issues & Triage\n- **Closed Issues:** Several key issues were closed this week, corresponding to the completed work:\n    - The successful deployment of Flashblocks on op-mainnet ([#16498](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/16498)).\n    - The completion of Flashblocks onboarding and documentation ([#17142](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17142)).\n    - The publication of the Flashblocks blog post ([#17664](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17664)).\n    - The resolution of the `op-node` EL sync issue ([#17564](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17564)).\n\n- **New & Active Issues:** No new issues were opened based on the provided reports for this period.\n\n## \ud83d\udcac Community & Collaboration\nWhile the provided data focuses primarily on deployment outcomes, the work highlights strong internal coordination. The completion of a dedicated onboarding session and documentation for the Flashblocks rollout ([#17142](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17142)) points to effective knowledge sharing within the team. Furthermore, the publication of a detailed blog post ([#17664](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17664)) demonstrates a commitment to transparent communication with the broader developer community and ecosystem.", "2025-10-13T20:52:55.043Z"]
["ethereum-optimism/design-docs_week_2025-09-28", "ethereum-optimism/design-docs", "week", "2025-09-28", "# ethereum-optimism/design-docs Weekly Report (Sep 28 - Oct 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by the conclusion of several major initiatives and the clarification of key technical behaviors. The Isthmus Upgrade was officially marked as complete, a significant milestone for the project. Work on flashblocks infrastructure was also finalized with the successful deployment of an RPC node and the completion of load testing. Discussions around L2 Execution Layer synchronization led to a clearer understanding of the protocol, resolving an active investigation. Meanwhile, new challenges have emerged, including a critical compatibility issue with Go 1.25 affecting the Cannon fault-proof system and a strategic pivot in how `op-reth` will be integrated for testing.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no new features were merged via pull requests this week, progress was marked by the closure of several issues representing the completion of significant workstreams.\n\n- **Isthmus Upgrade Concluded:** The primary tracking issue for the Isthmus Upgrade ([#12703](https://github.com/ethereum-optimism/design-docs/issues/12703)) was closed, formally signaling the successful completion of this major network upgrade.\n- **Flashblocks Infrastructure Finalized:** Work on the flashblocks RPC service was completed. This included the deployment of a new node, `op-opn-reth-f-fb-0` ([#16764](https://github.com/ethereum-optimism/design-docs/issues/16764)), and the documentation of load test results for the `rollup-boost flashblocks forwarder` ([#17462](https://github.com/ethereum-optimism/design-docs/issues/17462)).\n- **Acceptance Test Tooling Enhanced:** To improve diagnostics, the `op-acceptor` tool was updated to include setup information in its HTML output, with the work completed in a related infrastructure PR ([#386](https://github.com/ethereum-optimism/design-docs/issues/386)).\n\n## \ud83d\udc1b Issues & Triage\nThe week's issue management focused on closing out resolved topics and identifying new challenges related to tooling and documentation.\n\n- **Closed Issues:**\n  - The investigation into the conditions required for the L2 Execution Layer to begin syncing was closed ([#17628](https://github.com/ethereum-optimism/design-docs/issues/17628)). The discussion concluded that existing mechanisms, such as `engineController.insertUnsafePayload`, sufficiently handle the process, clarifying a key aspect of node synchronization.\n  - As mentioned above, the closure of issues for the Isthmus Upgrade ([#12703](https://github.com/ethereum-optimism/design-docs/issues/12703)), flashblocks deployment ([#16764](https://github.com/ethereum-optimism/design-docs/issues/17464)), load testing ([#17462](https://github.com/ethereum-optimism/design-docs/issues/17462)), and `op-acceptor` output ([#386](https://github.com/ethereum-optimism/design-docs/issues/386)) marked the end of these work items.\n\n- **New & Active Issues:**\n  - **Terminology Standardization:** A new issue ([#342](https://github.com/ethereum-optimism/design-docs/issues/342)) was opened to address inconsistent use of \"soft-fork\" and \"hard-fork\" terminology within the documentation, aiming for greater precision.\n  - **Cannon/Go 1.25 Blocker:** A significant active issue ([#17060](https://github.com/ethereum-optimism/design-docs/issues/17060)) highlights that Cannon produces incorrect Keccak hashes when compiled with Go 1.25, impacting block hash calculations. This is a blocker for Go 1.25 adoption and is dependent on an upstream fix in the Go repository.\n  - **`op-reth` Integration Strategy:** Discussion on issue [#17475](https://github.com/ethereum-optimism/design-docs/issues/17475) revealed a strategic shift. Instead of adding `op-reth` back to the deprecated Jovian Kurtosis devnet, the focus is now on integrating it into the `devstack / sysgo` system.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the detailed technical discussions aimed at resolving complex issues and aligning on future strategy.\n- The resolution of the L2EL syncing issue ([#17628](https://github.com/ethereum-optimism/design-docs/issues/17628)) showcased effective collaboration between contributors `@pcw109550`, `@sebastianst`, and `@ajsutton`, who worked together to refine their understanding of client sync behavior.\n- Similarly, `@pauldowman` and `@ajsutton` collaborated on diagnosing the critical Cannon compatibility issue with Go 1.25 ([#17060](https://github.com/ethereum-optimism/design-docs/issues/17060)).\n- Strategic direction was provided by `@geoknee` on the `op-reth` integration issue ([#17475](https://github.com/ethereum-optimism/design-docs/issues/17475)), guiding the effort towards more modern and maintained tooling. This reflects a healthy process of technical debate and strategic alignment among core team members.", "2025-10-13T20:52:57.019Z"]
["ethereum-optimism/docs_week_2025-09-28", "ethereum-optimism/docs", "week", "2025-09-28", "# ethereum-optimism/docs Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by the finalization of major initiatives and a strong focus on improving the developer experience. The tracking issue for the Isthmus Upgrade was officially closed, marking a significant milestone. Work on the Flashblocks initiative also wrapped up, with the successful deployment of an RPC node, completion of load testing, and refinement of alerts. A key documentation enhancement ([#1775](https://github.com/ethereum-optimism/docs/pull/1775)) now provides developers with example code for creating L2 rollups. However, a significant blocker was identified in Cannon, where an incompatibility with Go 1.25 is preventing correct block hash calculations ([#17060](https://github.com/ethereum-optimism/docs/issues/17060)).\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development this week focused on enhancing developer tooling and documentation to support builders on the OP Stack.\n\n- **L2 Rollup Creation Documentation:** To improve the developer experience, documentation for creating L2 rollups was significantly enhanced. PR [#1775](https://github.com/ethereum-optimism/docs/pull/1775) added practical example code, including environment setup, a Makefile, Docker Compose files, and deployment scripts, to provide a clear, hands-on guide for setting up a new rollup. A new pull request for \"U16a comms updates\" ([#1776](https://github.com/ethereum-optimism/docs/pull/1776)) was also opened.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week saw the closure of several long-standing items and the identification of a critical compatibility problem.\n\n- **Closed Issues:**\n    - **Flashblocks Initiative:** A cluster of issues related to Flashblocks was resolved, signaling the completion of this effort. This includes the deployment of a flashblocks-rpc node ([#16764](https://github.com/ethereum-optimism/docs/issues/16764)), the documentation of load test results ([#17462](https://github.com/ethereum-optimism/docs/issues/17462)), and the refinement of associated alerts and runbooks ([#17423](https://github.com/ethereum-optimism/docs/issues/17423)).\n    - **Protocol & Network Upgrades:** The main tracking issue for the Isthmus Upgrade was closed, confirming its completion ([#12703](https://github.com/ethereum-optimism/docs/issues/12703)). The investigation into L2EL sync conditions was also concluded ([#17628](https://github.com/ethereum-optimism/docs/issues/17628)).\n    - **Tooling & Planning:** An issue to improve `op-acceptance-test` reporting was closed ([#386](https://github.com/ethereum-optimism/docs/issues/386)), and a proposal to refactor the `op-node` architecture was closed as \"not planned\" after an initial spike ([#16680](https://github.com/ethereum-optimism/docs/issues/16680)).\n\n- **New & Active Issues:**\n    - **Process Improvement:** Two new issues were opened to track and report on September's contribution metrics for closed issues ([#1777](https://github.com/ethereum-optimism/docs/issues/1777)) and pull requests ([#1778](https://github.com/ethereum-optimism/docs/issues/1778)).\n    - **Potential Blocker:** A critical issue in Cannon ([#17060](https://github.com/ethereum-optimism/docs/issues/17060)) was highlighted, where Go 1.25 causes incorrect Keccak hash calculations, breaking block hash validation. The latest Go patch does not appear to resolve the underlying MIPS issue.\n    - **Strategic Shift:** Discussion in [#17475](https://github.com/ethereum-optimism/docs/issues/17475) indicates a change in strategy for `op-reth` integration, moving focus from the deprecated `jovian kt-devnet` to the `devstack / sysgo` system.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in technical discussions and strategic decision-making. The resolution of the L2EL sync conditions issue ([#17628](https://github.com/ethereum-optimism/docs/issues/17628)) demonstrated effective problem-solving, with several contributors (@pcw109550, @ajsutton, @sebastianst) reaching a consensus. The decision to close the `op-node` refactoring issue ([#16680](https://github.com/ethereum-optimism/docs/issues/16680)) after a spike shows a healthy process of exploration and deliberate planning, prioritizing impact over implementation.", "2025-10-13T20:53:05.079Z"]
["ethereum-optimism/op-analytics_week_2025-09-28", "ethereum-optimism/op-analytics", "week", "2025-09-28", "# ethereum-optimism/op-analytics Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by the successful deployment and operationalization of Flashblocks on op-mainnet, a significant milestone accompanied by comprehensive documentation, onboarding materials, and a detailed blog post. Concurrently, development efforts enhanced the analytics platform by integrating Superchain configuration data, making key EIP-1559 parameters accessible. The team also addressed a critical synchronization bug in `op-node` and made a strategic decision to close an exploratory issue on architectural refactoring, focusing efforts on current priorities.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis week's primary code contribution focused on enhancing data accessibility for the analytics platform.\n\n- **Superchain Configuration Integration:** A new feature was implemented to pull `eip1559_elasticity` and `eip1559_denominator` values directly from the `superchain-registry`. This integration, detailed in [#1750](https://github.com/ethereum-optimism/op-analytics/pull/1750), ensures that `op-analytics` has access to the most current configuration data for chains within the Superchain ecosystem.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week centered on closing out work related to the Flashblocks rollout and `op-node` stability. No new issues were opened.\n\n- **Closed Issues:**\n    - **Flashblocks Rollout:** A series of issues related to the Flashblocks feature were closed, signifying its successful launch. This included enabling the feature on op-mainnet ([#16498](https://github.com/ethereum-optimism/op-analytics/issues/16498)), completing onboarding documentation and presentations ([#17142](https://github.com/ethereum-optimism/op-analytics/issues/17142)), publishing a deep-dive blog post ([#17664](https://github.com/ethereum-optimism/op-analytics/issues/17664)), and refining associated alerts and runbooks ([#17423](https://github.com/ethereum-optimism/op-analytics/issues/17423)).\n    - **`op-node` Stability & Architecture:** A race condition in the `op-node` EL sync code path was resolved with a fix involving proper locking ([#17564](https://github.com/ethereum-optimism/op-analytics/issues/17564)). Separately, an issue exploring a major refactor of the `op-node`'s internal components was closed as \"not planned,\" clarifying the team's architectural direction ([#16680](https://github.com/ethereum-optimism/op-analytics/issues/16680)).\n\n- **New & Active Issues:** No new issues were reported, and there were no active issues with significant discussion this week, indicating a focus on completing in-progress work.\n\n## \ud83d\udcac Community & Collaboration\nThe successful and multi-faceted rollout of Flashblocks demonstrates strong cross-functional collaboration. The effort spanned live deployment, operational tooling (`op-conductor-ops`), documentation, onboarding sessions, and public communication via a blog post, indicating a well-coordinated effort between engineering, operations, and developer relations. Furthermore, the technical discussion on the EL sync fix ([#17564](https://github.com/ethereum-optimism/op-analytics/issues/17564)), which included suggestions for future improvements like enabling a race detector, highlights a proactive approach to long-term code quality and stability.", "2025-10-13T20:53:07.267Z"]
["ethereum-optimism/op-geth_week_2025-09-28", "ethereum-optimism/op-geth", "week", "2025-09-28", "# ethereum-optimism/op-geth Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week marked a major milestone with the successful enablement of Flashblocks on op-mainnet, completing a significant effort to bring preconfirmations to the network. This rollout was supported by comprehensive documentation, a public blog post, and refined operational alerts. Development also focused on enhancing network stability by integrating upstream Geth fixes to bolster Fusaka defense on Sepolia. Looking ahead, a new proposal was opened to rethink how the Data Availability (DA) footprint is stored, signaling future architectural improvements.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on integrating upstream changes and initiating new performance benchmarks.\n\n- **Upstream Geth Integration for Fusaka Defense:** To improve security on Sepolia, critical upstream Geth pull requests were cherry-picked. This effort resolved a configuration bug where `ChainConfig.BlobConfig` used default values instead of the actual config, strengthening the network's Fusaka defense ([#690](https://github.com/ethereum-optimism/op-geth/pull/690)).\n\n- **Benchmarking Improvements:** A new pull request was opened to introduce `benchmarkComputeCellProofs`, aiming to add new benchmarking capabilities to the project ([#692](https://github.com/ethereum-optimism/op-geth/pull/692)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week was focused on closing out the Flashblocks project and addressing key bugs, while opening discussions for future protocol enhancements.\n\n- **Closed Issues:**\n    - **Flashblocks Rollout Complete:** A series of issues related to the Flashblocks initiative were closed, signifying the project's completion. This included the live enablement on op-mainnet ([#16498](https://github.com/ethereum-optimism/op-geth/issues/16498)), on-call onboarding and documentation ([#17142](https://github.com/ethereum-optimism/op-geth/issues/17142)), publication of a detailed blog post ([#17664](https://github.com/ethereum-optimism/op-geth/issues/17664)), and refinement of alerts and runbooks ([#17423](https://github.com/ethereum-optimism/op-geth/issues/17423)).\n    - **Bug Fixes:** A synchronization issue in the op-node's EL sync code path was resolved and confirmed via testing ([#17564](https://github.com/ethereum-optimism/op-geth/issues/17564)). The `ChainConfig.BlobConfig` bug was also closed with the merge of an upstream Geth fix ([#685](https://github.com/ethereum-optimism/op-geth/issues/685)).\n    - **Component Refactoring:** An issue to split `op-node` components was closed as \"not planned,\" clarifying the project's direction ([#16680](https://github.com/ethereum-optimism/op-geth/issues/16680)).\n\n- **New & Active Issues:**\n    - **Data Availability Footprint:** A new issue was opened to discuss storing the total DA footprint in the `blobGasUsed` header field instead of the current `gasUsed` field ([#691](https://github.com/ethereum-optimism/op-geth/issues/691)). This represents a significant potential change for future development.\n    - According to the reports, there were no active issues with significant discussion (more than 3 comments) this week.\n\n## \ud83d\udcac Community & Collaboration\nThe successful and multi-faceted rollout of Flashblocks\u2014spanning live deployment, documentation, operational readiness, and public communication\u2014highlights a period of strong internal coordination. The integration of fixes from upstream Geth demonstrates ongoing collaboration with the broader Ethereum ecosystem to ensure client stability and security. Public discussion on GitHub issues was minimal, with no active issues seeing significant comment activity during this period.", "2025-10-13T20:53:15.299Z"]
["ethereum-optimism/optimism_week_2025-09-28", "ethereum-optimism/optimism", "week", "2025-09-28", "# ethereum-optimism/optimism Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week marked a major milestone with the successful enablement of Flashblocks on op-mainnet, completing a significant initiative for preconfirmations. Alongside this deployment, there was a substantial push to overhaul the project's testing and CI/CD infrastructure. Key improvements include the introduction of a \"flake-shaker\" system to detect unstable tests, nightly heavy fuzz testing for contracts, and enhanced mocking capabilities in `op-sync-tester`. Core protocol components, particularly the `op-node`'s EngineController, received significant refactoring to improve stability and correctness. A critical compatibility issue with Go 1.25 affecting Cannon's cryptographic functions has been identified and is under active investigation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on enhancing protocol stability, improving deployment processes, and massively scaling up testing infrastructure.\n\n-   **Testing and CI/CD Overhaul:**\n    -   A new \"flake-shaker\" system was introduced to validate test stability by running them multiple times to detect flakiness before merge ([#17646]).\n    -   CI was enhanced with a nightly job for heavy fuzz testing of smart contracts ([#17668]) and consolidated workflows for `op-acceptance-tests` ([#17673]).\n    -   Testing capabilities were expanded with EL engine mocking support in `op-sync-tester` to better validate L2CL sync ([#17645]), and new acceptance tests were added for L1 Osaka activation ([#17666]) and unsafe chain stalling scenarios ([#17696]).\n    -   The AI contract testing system was improved to handle API timeouts and prevent redundant work ([#17616]).\n\n-   **Node Stability and Core Protocol Refinements:**\n    -   The `op-node`'s EngineController underwent significant refactoring to improve locking mechanisms and stability during concurrent operations ([#17647], [#17648]).\n    -   The node architecture was streamlined by merging the `EngineResetDeriver` into the `EngineController` ([#17662]) and removing the `ReceivedUnsafePayloadEvent` to simplify sync logic ([#17530]).\n    -   The L1ChainConfig is now embedded directly into the configuration for `op-node`, `op-program`, and `kona`, improving handling of L1 block info post-Ecotone ([#17568]).\n    -   The codebase was updated to a new `op-geth` commit ([#17661]), and a dependency on a removed `go-bip39` package was replaced ([#17526]).\n\n-   **Contract Security and Deployment Enhancements:**\n    -   A full implementation of the `TimelockGuard` was completed, featuring external signature validation for enhanced security ([#17584]).\n    -   The OP Contracts Manager was updated to support Cannon and Kona games, allowing for incremental prestate updates ([#17512]).\n    -   To prevent non-deterministic optimizer results, protocol versions were added to contract restrictions ([#17651]).\n    -   The `op-deployer`'s default `GasPadFactor` was reduced to keep deployment transactions within gas limits ([#17710]), and it was updated to allow custom Etherscan URLs ([#17674]).\n\n## \ud83d\udc1b Issues & Triage\n\n-   **Closed Issues:**\n    -   **Flashblocks Rollout:** A major set of issues related to the Flashblocks initiative were closed, marking its successful deployment on op-mainnet ([#16498]), completion of documentation and onboarding ([#17142], [#17664]), and refinement of alerts ([#17423]).\n    -   **Project Trackers Completed:** Several large-scale project trackers were closed, signifying the completion of the Isthmus Upgrade ([#12703]), devnet/interop testing simplification ([#16442], [#14122], [#15574]), and reorg testing ([#14530]).\n    -   **Protocol Stability:** An EL sync correctness issue related to parallelism in the EngineController was resolved ([#17564]), and an investigation into EL sync start conditions was concluded ([#17628]).\n\n-   **New & Active Issues:**\n    -   **Critical Blocker:** A significant issue is being tracked where Cannon produces incorrect Keccak hashes when compiled with Go 1.25, impacting block hash calculations. The underlying Go issue has been identified, but a fix is not yet available in the latest Go patch release ([#17060]).\n    -   **Future Work & Performance:** New issues were opened to explore performance tuning for Flashblocks by testing a 200ms configuration ([#17676], [#17677]). Discussions also began on improving sequencer infrastructure and implementing new health checks for `op-rbuilder` ([#17685]).\n    -   **Specification & Configuration:** A new requirement was filed specifying that the Jovian activation block must only contain deposit transactions ([#17704]). A need for better documentation on EL Sync behavior was also highlighted ([#17693]).\n    -   **Strategic Shift:** Discussion on an active issue ([#17475]) indicates a strategic shift from integrating `op-reth` into the deprecated Kurtosis devnet to focusing on the `devstack / sysgo` system.\n\n## \ud83d\udcac Community & Collaboration\nThis week saw intense, focused collaboration within the core development team, particularly around protocol stability and testing infrastructure. The active discussion on the Go 1.25 compatibility issue ([#17060]) involving multiple team members (@sebastianst, @pauldowman, @ajsutton) demonstrates rapid, collaborative problem diagnosis. The closure of a very old issue ([#686]) after a discussion between team members shows healthy backlog grooming and a focus on current priorities. The high volume of interconnected pull requests and issues reflects a tightly coordinated effort to harden the OP Stack and prepare for future network upgrades.", "2025-10-13T20:53:21.945Z"]
["ethereum-optimism/infra_week_2025-09-28", "ethereum-optimism/infra", "week", "2025-09-28", "# ethereum-optimism/infra Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week marked a major milestone with the successful rollout of Flashblocks on op-mainnet, a culmination of efforts that included deployment, load testing, and comprehensive documentation. The team also formally concluded the Isthmus Upgrade by closing its main tracking issue. Significant enhancements were made to core infrastructure tooling, with `proxyd` receiving a critical build fix and improved transaction logging, while the `op-acceptor` testing framework saw multiple upgrades to improve logging and test execution flexibility. These developments underscore a strong focus on enhancing network reliability, developer experience, and observability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving the reliability and observability of core services and testing infrastructure.\n\n- **`proxyd` Reliability and Observability:**\n  - A build process bug was fixed by ensuring `mise` is installed for every release, guaranteeing the Go binary is available and improving the reliability of `proxyd` releases ([#479](https://github.com/ethereum-optimism/infra/pull/479)).\n  - To enhance debugging and monitoring, comprehensive logging was added for `eth_sendRawTransaction` and `eth_sendRawTransactionConditional` requests, now including details like transaction hash, request ID, and chain ID ([#481](https://github.com/ethereum-optimism/infra/pull/481)).\n\n- **Testing Framework (`op-acceptor`) Enhancements:**\n  - The logging output of `op-acceptor` was cleaned up by replacing a custom ANSI stripper with a more robust solution ([#478](https://github.com/ethereum-optimism/infra/pull/478)).\n  - A new feature was added to allow environment variables to be passed to `go test`, enabling more flexible and controlled test execution ([#483](https://github.com/ethereum-optimism/infra/pull/483)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week focused on closing out major initiatives, resolving synchronization bugs, and identifying potential future blockers.\n\n- **Closed Issues:**\n  - **Flashblocks Rollout Completion:** A series of issues related to Flashblocks were closed, signifying the project's completion. This included the successful deployment and spin-up of a flashblocks-rpc node ([#16764](https://github.com/ethereum-optimism/infra/issues/16764)), enabling it on op-mainnet ([#16498](https://github.com/ethereum-optimism/infra/issues/16498)), completing load tests ([#17462](https://github.com/ethereum-optimism/infra/issues/17462)), refining alerts and runbooks ([#17423](https://github.com/ethereum-optimism/infra/issues/17423)), and publishing on-call documentation and a deep-dive blog post ([#17142](https://github.com/ethereum-optimism/infra/issues/17142), [#17664](https://github.com/ethereum-optimism/infra/issues/17664)).\n  - **Protocol Upgrades and Synchronization:** The main tracking issue for the Isthmus Upgrade was closed, marking the formal completion of the upgrade ([#12703](https://github.com/ethereum-optimism/infra/issues/12703)). Additionally, an investigation into L2CL/L2EL sync conditions was concluded ([#17628](https://github.com/ethereum-optimism/infra/issues/17628)), and a race condition in the `op-node`'s EL sync code path was fixed ([#17564](https://github.com/ethereum-optimism/infra/issues/17564)).\n  - **`op-acceptor` Improvements:** Several issues for the testing tool were resolved, including improvements to package parallelism ([#462](https://github.com/ethereum-optimism/infra/issues/462)) and adding setup information to HTML output ([#386](https://github.com/ethereum-optimism/infra/issues/386)).\n\n- **New & Active Issues:**\n  - **Cannon/Go 1.25 Compatibility:** A significant discussion is ongoing in [#17060](https://github.com/ethereum-optimism/infra/issues/17060) regarding an issue where Go 1.25 causes incorrect Keccak hashes when running in Cannon. This has been confirmed to affect Optimism and is being tracked as a potential blocker.\n  - **`op-reth` Integration Strategy:** In [#17475](https://github.com/ethereum-optimism/infra/issues/17475), the strategy for re-integrating `op-reth` has shifted. Following the deprecation of the Kurtosis devnet, the new focus is on integrating it into the devstack/sysgo system.\n\n## \ud83d\udcac Community & Collaboration\n- Collaborative problem-solving was evident in discussions around key technical challenges. The L2CL/L2EL sync conditions issue ([#17628](https://github.com/ethereum-optimism/infra/issues/17628)) saw detailed input from contributors @pcw109550, @sebastianst, and @ajsutton before its resolution.\n- The active investigation into the Cannon/Go 1.25 compatibility bug ([#17060](https://github.com/ethereum-optimism/infra/issues/17060)) also highlights cross-contributor engagement, with @ajsutton, @pauldowman, and @sebastianst working to diagnose the impact on Optimism.\n- The team demonstrated responsiveness to developer needs with the rapid turnaround on the `op-acceptor` feature request. A new issue to forward environment variables ([#482](https://github.com/ethereum-optimism/infra/issues/482)) was opened and resolved with a merged pull request ([#483](https://github.com/ethereum-optimism/infra/pull/483)) within a day.", "2025-10-13T20:53:24.237Z"]
["ethereum-optimism/specs_week_2025-09-28", "ethereum-optimism/specs", "week", "2025-09-28", "# ethereum-optimism/specs Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was characterized by significant progress in closing out major initiatives and refining protocol specifications. Key achievements include the completion of the Isthmus Upgrade, confirmed by the closure of its tracking issue, and the successful deployment and load testing of flashblocks-rpc nodes. Work also progressed on protocol security with a clarification to the Fusaka defense mechanism. Concurrently, important discussions identified a blocking issue with Go 1.25 compatibility affecting Cannon and shifted the integration strategy for `op-reth` towards the `devstack` / `sysgo` system.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development effort this week focused on enhancing protocol security and clarity.\n\n- **Protocol Specification Refinements:** A pull request ([#790](https://github.com/ethereum-optimism/specs/pull/790)) was opened to clarify the specifications for the Fusaka defense mechanism, improving the protocol's robustness.\n\n## \ud83d\udc1b Issues & Triage\nThe week saw the resolution of several key issues, while active discussions highlighted future technical challenges.\n\n- **Closed Issues:**\n    - **Protocol Upgrades & Syncing:** The tracker for the Isthmus Upgrade was closed, marking the successful completion of this major initiative ([#12703](https://github.com/ethereum-optimism/specs/issues/12703)). An investigation into L2 Execution Layer sync conditions was also concluded, determining that `engineController.insertUnsafePayload` adequately handles syncs after the initial run ([#17628](https://github.com/ethereum-optimism/specs/issues/17628)).\n    - **Infrastructure & Testing:** The deployment of flashblocks-rpc nodes was completed ([#16764](https://github.com/ethereum-optimism/specs/issues/16764]), and associated load test results were documented ([#17462](https://github.com/ethereum-optimism/specs/issues/17462)). An issue to improve `op-acceptor` test reporting was also resolved ([#386](https://github.com/ethereum-optimism/specs/issues/386)).\n\n- **New & Active Issues:**\n    - No new issues were opened this week.\n    - **Cannon Go 1.25 Compatibility:** A significant blocker was identified in issue [#17060](https://github.com/ethereum-optimism/specs/issues/17060), where Go 1.25 is causing incorrect Keccak hashes in Cannon. The issue is linked to a blocking problem in the Go toolchain, and the recent Go 1.25.1 release does not appear to contain the required MIPS fix.\n    - **`op-reth` Integration Strategy:** Discussion in [#17475](https://github.com/ethereum-optimism/specs/issues/17475) resulted in a strategic shift for testing `op-reth`. With the Kurtosis devnet deprecated, the focus will now be on integrating `op-reth` into the `devstack` / `sysgo` system.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the active discussions around complex technical issues. The resolution of the L2 EL sync conditions ([#17628](https://github.com/ethereum-optimism/specs/issues/17628)) involved detailed back-and-forth, leading to a consensus on the path forward. Similarly, ongoing conversations about Cannon's compatibility with Go 1.25 ([#17060](https://github.com/ethereum-optimism/specs/issues/17060)) and the strategic pivot for `op-reth` testing ([#17475](https://github.com/ethereum-optimism/specs/issues/17475)) demonstrate active problem-solving and planning among contributors.", "2025-10-13T20:53:24.677Z"]
["ethereum-optimism/superchain-registry_week_2025-09-28", "ethereum-optimism/superchain-registry", "week", "2025-09-28", "# ethereum-optimism/superchain-registry Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's focus was on expanding the Superchain and hardening existing systems. The Silent Data mainnet was officially added to the registry, continuing the growth of the ecosystem. A major operational milestone was achieved with the successful deployment of Flashblocks on op-mainnet, accompanied by comprehensive documentation and operational runbooks. Concurrently, an important compatibility issue with Go 1.25 affecting Cannon's cryptographic functions has been identified as a key area of active investigation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on registry additions and version updates.\n\n- **Superchain Registry Expansion:** The registry grew with the addition of the Silent Data mainnet. This included its chain configuration and genesis data, formally incorporating it into the Superchain ([#1091](https://github.com/ethereum-optimism/superchain-registry/pull/1091)).\n- **Standard Version Updates:** A new standard version for `op-contracts/v4.1.0` was added for both Sepolia and Mainnet, mirroring the `v4.1.0-rc.3` configuration to standardize contract versions ([#1109](https://github.com/ethereum-optimism/superchain-registry/pull/1109)).\n\nA pull request was also opened to update the `CHAINS.md` documentation file ([#1108](https://github.com/ethereum-optimism/superchain-registry/pull/1108)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week was dominated by the closure of tasks related to the Flashblocks deployment and a critical active discussion on Go compatibility.\n\n- **Closed Issues:**\n    - **Flashblocks Deployment:** A significant cluster of issues related to Flashblocks was resolved. This included enabling the feature on op-mainnet ([#16498](https://github.com/ethereum-optimism/superchain-registry/issues/16498)), completing on-call onboarding and documentation ([#17142](https://github.com/ethereum-optimism/superchain-registry/issues/17142)), refining alerts and runbooks ([#17423](https://github.com/ethereum-optimism/superchain-registry/issues/17423)), and publishing a blog post on the deployment ([#17664](https://github.com/ethereum-optimism/superchain-registry/issues/17664)).\n    - **Protocol Fixes & Testing:** A synchronization bug in the `op-node` EL sync code was fixed with proper locking ([#17564](https://github.com/ethereum-optimism/superchain-registry/issues/17564)), and the Fusaka activation test for L1 was completed ([#17500](https://github.com/ethereum-optimism/superchain-registry/issues/17500)).\n    - **Process & Architecture:** An issue to refactor the `op-node` CLI was closed as \"not planned\" after a spike did not gain support for a PR ([#16680](https://github.com/ethereum-optimism/superchain-registry/issues/16680)). An older issue on negative testing for chain configurations was also closed, as the project's strategy has shifted from validation to reporting ([#686](https://github.com/ethereum-optimism/superchain-registry/issues/686)).\n\n- **New & Active Issues:**\n    - No new issues were opened this week.\n    - **Cannon Go 1.25 Compatibility ([#17060](https://github.com/ethereum-optimism/superchain-registry/issues/17060)):** A significant active issue involves Go 1.25 causing incorrect Keccak hashes and potentially other crypto function failures within Cannon. A detailed diagnosis has been documented, linking it to a known Go issue. The recent Go 1.25.1 release does not appear to contain the necessary MIPS fix, making this a potential blocker requiring continued attention.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the coordinated effort to roll out Flashblocks. The closure of multiple related issues, spanning from mainnet activation to documentation, runbooks, and public communication via a blog post, highlights a well-orchestrated feature deployment. Additionally, the deep diagnostic work on the Cannon compatibility issue ([#17060](https://github.com/ethereum-optimism/superchain-registry/issues/17060)), including a detailed Notion document, points to focused, in-depth technical investigation within the team.", "2025-10-13T20:53:33.037Z"]
["ethereum-optimism/superchain-ops_week_2025-09-28", "ethereum-optimism/superchain-ops", "week", "2025-09-28", "# ethereum-optimism/superchain-ops Weekly Report (Sep 28 - Oct 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week was marked by a major operational success with the full enablement of Flashblocks on op-mainnet, complete with comprehensive onboarding, documentation, and public communication. Progress on cross-chain functionality was made by enabling L1 to L2 call execution via the Optimism Portal. The team also finalized the Isthmus upgrade and advanced testing for the upcoming Fusaka activation. An ongoing challenge remains with Cannon's incompatibility with Go 1.25, which is currently blocked by an upstream issue in the Go MIPS compiler.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week focused on enhancing cross-chain capabilities, improving command performance, and managing chain operations.\n\n- **L1 to L2 Call Execution:** A significant new feature was introduced to allow L1 to L2 call execution using the Optimism Portal. This change adds a new template and configuration-driven parameters, specifically enabling the dispatch of L2 calls from an L1 Safe ([#1231](https://github.com/ethereum-optimism/superchain-ops/pull/1231)).\n- **Chain & Task Management:** A new task was added to facilitate the Worldchain key handback process ([#1235](https://github.com/ethereum-optimism/superchain-ops/pull/1235)).\n- **Performance and Tooling:** Base commands were optimized for faster execution ([#1241](https://github.com/ethereum-optimism/superchain-ops/pull/1241)), and an example task was updated to pin a block number, resolving a CI failure ([#1240](https://github.com/ethereum-optimism/superchain-ops/pull/1240)).\n\n## \ud83d\udc1b Issues & Triage\nThe team closed out several major operational and testing issues while identifying new areas for developer experience improvement and tracking a significant external dependency.\n\n- **Closed Issues:**\n    - **Flashblocks Rollout Completed:** A series of issues related to the Flashblocks rollout were closed, marking a significant milestone. This includes the successful live enablement on op-mainnet, completion of on-call onboarding and documentation, refinement of alerts, and the publication of a blog post detailing the deployment ([#16498](https://github.com/ethereum-optimism/superchain-ops/issues/16498), [#17142](https://github.com/ethereum-optimism/superchain-ops/issues/17142), [#17664](https://github.com/ethereum-optimism/superchain-ops/issues/17664), [#17423](https://github.com/ethereum-optimism/superchain-ops/issues/17423)).\n    - **Protocol Upgrades & Testing:** The main tracking issue for the Isthmus upgrade was closed, confirming its completion ([#12703](https://github.com/ethereum-optimism/superchain-ops/issues/12703)). Additionally, a test for Fusaka (Osaka) activation on L1 was successfully implemented ([#17500](https://github.com/ethereum-optimism/superchain-ops/issues/17500)).\n    - **Bug Fixes & Refinements:** A race condition in the `op-node` EngineController was resolved by applying proper locking ([#17564](https://github.com/ethereum-optimism/superchain-ops/issues/17564)), and acceptance test reporting was improved to include setup information in the HTML output ([#386](https://github.com/ethereum-optimism/superchain-ops/issues/386)).\n    - **Strategic Closures:** An issue to refactor the `op-node` CLI was closed as \"not planned\" ([#16680](https://github.com/ethereum-optimism/superchain-ops/issues/16680)), and an issue for chain configuration negative testing was closed due to a strategic shift to a report-based validation approach ([#686](https://github.com/ethereum-optimism/superchain-ops/issues/686)).\n\n- **New & Active Issues:**\n    - **Developer Experience:** A new issue was opened to improve `justfile` command input validation, aiming to provide more helpful error messages and enhance the developer workflow ([#1236](https://github.com/ethereum-optimism/superchain-ops/issues/1236)).\n    - **Go 1.25 Compatibility Blocker:** Discussions continued on Cannon's incompatibility with Go 1.25, which causes incorrect Keccak hashes. The problem is blocked by an issue in the Go compiler, as the necessary MIPS fix was not included in the Go 1.25.1 release ([#17060](https://github.com/ethereum-optimism/superchain-ops/issues/17060)).\n    - **Devnet Strategy:** The integration of `op-reth` is being re-evaluated. With the Kurtosis devnet now deprecated, the focus has shifted to integrating `op-reth` into the `devstack` or `sysgo` systems instead ([#17475](https://github.com/ethereum-optimism/superchain-ops/issues/17475)).\n\n## \ud83d\udcac Community & Collaboration\nThis week's activity highlights strong internal collaboration, particularly in the successful cross-functional rollout of Flashblocks. The resolution of issues related to alerts and test reporting, with references to pull requests in the `k8s` and `infra` repositories, demonstrates effective cross-repository coordination. Active discussions on complex issues like the Go 1.25 compatibility problem show a deep engagement in diagnosing and tracking external dependencies that impact the project.", "2025-10-13T20:53:37.161Z"]
["ethereum-optimism/optimism_week_2025-10-05", "ethereum-optimism/optimism", "week", "2025-10-05", "# ethereum-optimism/optimism Weekly Report (Oct 5 - 11, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused on enhancing the robustness and maintainability of core OP Stack components. Key efforts were directed at improving the dispute monitoring system, with a significant new issue and active discussion around how `op-dispute-mon` should handle out-of-sync nodes. Work also progressed on node synchronization with a proposal to add ELSync gap filling to `op-node`. Additionally, contract management capabilities were updated, and general code cleanup and dependency maintenance were performed, reflecting a period of targeted, incremental improvements across the stack.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on refining existing components for better reliability and functionality.\n\n- **Node Synchronization & Dispute Monitoring:**\n  - To improve data synchronization, a pull request ([#17751](https://github.com/ethereum-optimism/optimism/pull/17751)) was opened to add ELSync gap filling functionality to the `op-node`'s `OnUnsafeL2Payload` method.\n  - In the dispute monitoring service, a PR ([#17825](https://github.com/ethereum-optimism/optimism/pull/17825)) was introduced to better handle \"not found\" scenarios within `op-dispute-mon`, contributing to its overall stability.\n\n- **Contract Management (OPCM):**\n  - The Optimism Contract Management (`opcm`) tool received an update to support V2 contracts within the `addGameType` function ([#17782](https://github.com/ethereum-optimism/optimism/pull/17782)).\n  - A code cleanup effort ([#17828](https://github.com/ethereum-optimism/optimism/pull/17828)) removed an unused `superchainProxyAdmin` immutable variable from OPCM, streamlining the codebase.\n\n- **Dependency Management:**\n  - A routine dependency update was submitted by Dependabot to bump the `github.com/docker/docker` dependency from version 27.5.1+incompatible to 28.5.1+incompatible ([#17793](https://github.com/ethereum-optimism/optimism/pull/17793)).\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed this week, but a critical new issue was opened, sparking important technical discussion.\n\n- **Closed Issues:**\n  - No issues were closed during this period.\n\n- **New & Active Issues:**\n  - The most significant new issue, [#17814](https://github.com/ethereum-optimism/optimism/issues/17814), addresses a challenge in `op-dispute-mon` where an out-of-sync rollup RPC is incorrectly detected as a disagreement rather than a synchronization lag.\n  - Active discussion on the issue suggests a solution involving the use of `syncStatus` to verify if a node has processed the relevant L1 block. The consensus is leaning towards ignoring results from nodes that are confirmed to be behind, though care must be taken not to trust a node on an incorrect fork simply because it has a higher L2 block number. This highlights a key area of focus for ensuring the dispute system's reliability.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was evident in the focused technical discussions around improving system resilience. The active conversation on issue [#17814](https://github.com/ethereum-optimism/optimism/issues/17814) between contributors `ajsutton` and `pauldowman` demonstrates a collaborative effort to diagnose and solve a complex problem related to the dispute monitor's behavior with out-of-sync nodes. Development activity was spread across several key components, including `op-node`, `op-dispute-mon`, and `opcm`, indicating coordinated work across different parts of the OP Stack.", "2025-10-13T20:53:41.730Z"]
["ethereum-optimism/community-hub_week_2025-09-28", "ethereum-optimism/community-hub", "week", "2025-09-28", "# ethereum-optimism/community-hub Weekly Report (Sep 28 - 4, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on testing, validation, and addressing a critical compatibility challenge. Progress was made in strengthening the protocol's test suite with the addition of a specific test for the Fusaka network activation. A significant ongoing investigation is focused on a Go 1.25 compatibility issue within the Cannon fault-proof system, which has been found to cause incorrect hash calculations. This issue, blocked by an upstream dependency in the Go language itself, represents a key challenge for future toolchain upgrades.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile no new major features were merged, an important enhancement was made to the project's testing infrastructure.\n\n- **Protocol Testing:** A new test for the Fusaka (Osaka) activation on L1 was implemented and merged via PR [#17666](https://github.com/ethereum-optimism/community-hub/pull/17666). This resolves issue [#17500](https://github.com/ethereum-optimism/community-hub/issues/17500) and improves the validation process for network upgrades.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week involved resolving older test-related tasks and identifying a significant new blocker.\n\n- **Closed Issues:** The test suite was refined by closing two issues. A specific test for Fusaka activation was added ([#17500](https://github.com/ethereum-optimism/community-hub/issues/17500)), and an older issue concerning negative testing for chain configurations was closed as it is no longer relevant to the current validation approach ([#686](https://github.com/ethereum-optimism/community-hub/issues/686)).\n\n- **New & Active Issues:**\n    - Two new issues ([#1193](https://github.com/ethereum-optimism/community-hub/issues/1193), [#1194](https://github.com/ethereum-optimism/community-hub/issues/1194)) were opened related to `BEPs/BEP2.md`, suggesting upcoming work on documentation.\n    - A critical discussion is ongoing in issue [#17060](https://github.com/ethereum-optimism/community-hub/issues/17060) regarding Go 1.25 support for Cannon. It has been confirmed that running Cannon with Go 1.25 results in incorrect keccak hashes, which breaks essential functions like block hash calculation. The problem is tracked by an upstream Go issue (`golang/go/issues/74998`) and currently blocks the project from upgrading to Go 1.25.\n\n## \ud83d\udcac Community & Collaboration\nThere was significant collaboration around diagnosing the Go 1.25 compatibility issue in Cannon ([#17060](https://github.com/ethereum-optimism/community-hub/issues/17060)). Contributors @pauldowman, @ajsutton, and @sebastianst were actively involved in the discussion to confirm the issue's relevance, provide detailed context, and link to a full diagnosis of the hashing problem. This collaborative effort is crucial for navigating a complex issue dependent on an external project.", "2025-10-13T20:53:46.400Z"]
["ethereum-optimism/infra_week_2025-10-05", "ethereum-optimism/infra", "week", "2025-10-05", "# ethereum-optimism/infra Weekly Report (Oct 5 - 11, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's efforts centered on enhancing the robustness and security of the infrastructure's monitoring and validation components. While no major features were merged, significant groundwork was laid for future improvements. A new pull request aims to tighten the filtering logic in the `op-acceptor`, and a critical discussion emerged around improving the `op-dispute-mon`'s resilience to out-of-sync nodes. This focus on refining core systems highlights an ongoing commitment to protocol security and reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were completed or merged during this reporting period. However, new work was initiated to improve core validation components.\n\nA new pull request, [#490](https://github.com/ethereum-optimism/infra/pull/490), was opened to introduce stricter exclusion gates within the `op-acceptor`. This change is intended to improve the component's filtering capabilities and overall security posture.\n\n## \ud83d\udc1b Issues & Triage\nNo issues were closed this week. The primary focus was on a significant active issue concerning the dispute monitoring system.\n\n- **New & Active Issues:** A key discussion unfolded in issue [#17814](https://github.com/ethereum-optimism/infra/issues/17814) regarding the `op-dispute-mon` component. It was identified that the monitor can incorrectly flag a disagreement if one of its configured rollup RPCs is out of sync, creating false positives. The proposed solution involves using `syncStatus` to determine the true L2 head across all nodes and ignoring results from nodes that are significantly behind. The discussion also noted the complexity of this approach, as simply trusting the node with the highest block number could be risky if that node is on an incorrect fork, suggesting a more robust solution is needed.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this week was characterized by deep technical analysis of core infrastructure components. The active discussion on issue [#17814](https://github.com/ethereum-optimism/infra/issues/17814) demonstrates a focused effort to identify and solve complex edge cases in the dispute monitoring system. This proactive problem-solving on potential vulnerabilities reflects a healthy and security-conscious contributor community.", "2025-10-13T20:53:46.419Z"]
["ethereum-optimism/ethereum-optimism.github.io_week_2025-10-12", "ethereum-optimism/ethereum-optimism.github.io", "week", "2025-10-12", "# ethereum-optimism/ethereum-optimism.github.io Weekly Report (Oct 12 - 18, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity focused on expanding the Base ecosystem and clarifying infrastructure responsibilities. A new pull request was opened to add the DRIP token to Base. Additionally, a key discussion on an active issue regarding replica-healthcheck monitoring resulted in important scope clarification, redirecting the effort to the appropriate infrastructure team and providing valuable guidance for contributor engagement.\n\n## \ud83d\udee0\ufe0f Key Developments\nThe primary development effort this week was aimed at growing the token ecosystem on Base.\n\n- **Token Additions:** A new pull request, [#1221](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1221), was opened to add the DRIP token, contributing to the diversity of assets available on the platform.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this week centered on clarifying ownership and scope for infrastructure-related tasks.\n\n- **Closed Issues:** No issues were closed this week.\n- **New Issues:** No new issues were opened.\n- **Active Issues:** Discussion on issue [#17686](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17686), which concerns monitoring and alerting for replica-healthchecks, was a key focus. A maintainer clarified that this task is out of scope for `op-conductor` and is a \"blocked\" item intended for the Platforms Team. This highlights a potential blocker for replica monitoring until it is picked up by the correct team.\n\n## \ud83d\udcac Community & Collaboration\nThe discussion around issue [#17686](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17686) served as a clear example of community collaboration and process guidance. After a contributor submitted a pull request for the issue, a maintainer explained the scope and ownership mismatch, closing the PR but also encouraging the contributor to engage with maintainers for assignment before starting future work. This interaction reinforces the project's workflow for new contributions.", "2025-10-13T20:53:52.366Z"]
["ethereum-optimism/docs_week_2025-10-12", "ethereum-optimism/docs", "week", "2025-10-12", "# ethereum-optimism/docs Weekly Report (Oct 12 - 18, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity focused on initiating new documentation improvements and engaging in deep technical discussions on active issues, rather than completing and merging work. Two new pull requests were opened to enhance the documentation by fixing a tutorial configuration and adding a new oracle provider. Concurrently, significant progress was made in architectural discussions, particularly around refining the sync-checking logic for `op-dispute-mon` and clarifying the implementation scope for replica healthcheck monitoring.\n\n## \ud83d\udee0\ufe0f Key Developments\nNo pull requests were merged or major features completed during this period. However, new work was initiated to improve documentation accuracy and completeness:\n\n- **Tutorial and Oracle Documentation Updates:** Two pull requests were opened to enhance developer resources. [#1787](https://github.com/ethereum-optimism/docs/pull/1787) aims to fix an incorrect genesis config file name in the quick start tutorial, improving the onboarding experience. Additionally, [#1788](https://github.com/ethereum-optimism/docs/pull/1788) proposes adding SUPRA Oracle and VRF to the oracles documentation, expanding the list of available tools for developers.\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were created and no existing issues were closed this week. The focus remained on resolving complex, active issues through community discussion.\n\n- **Closed Issues:** No issues were closed this week.\n\n- **New & Active Issues:**\n    - **`op-dispute-mon` Sync Logic:** Discussions on issue [#17814](https://github.com/ethereum-optimism/docs/issues/17814) progressed, addressing how `op-dispute-mon` handles out-of-sync rollup RPCs. The conversation moved towards a more robust solution: instead of trusting the highest L2 block, the monitor should use the `syncStatus` to check if a node has processed the relevant L1 block for a given dispute game. This ensures a node is sufficiently in sync to provide valid data, preventing false disagreements.\n    - **Replica Healthcheck Scope:** On issue [#17686](https://github.com/ethereum-optimism/docs/issues/17686), a contributor's pull request for replica healthcheck monitoring was clarified to be out of scope for `op-conductor`. A maintainer explained that this functionality is an infrastructure-level concern, providing valuable architectural guidance and encouraging the contributor to re-engage after discussion and assignment.\n\n## \ud83d\udcac Community & Collaboration\nThis week highlighted constructive collaboration between maintainers and contributors on complex technical issues. The detailed discussion on `op-dispute-mon` ([#17814](https://github.com/ethereum-optimism/docs/issues/17814)) between contributors `ajsutton` and `pauldowman` demonstrates a collaborative effort to refine a critical monitoring component. Furthermore, the interaction on [#17686](https://github.com/ethereum-optimism/docs/issues/17686) showed healthy community dynamics, with maintainer `yashvardhan-kukreja` providing clear, supportive feedback to contributor `CreeptoGengar`, guiding them on project scope and contribution best practices.", "2025-10-13T20:53:54.178Z"]
["ethereum-optimism/op-geth_week_2025-10-12", "ethereum-optimism/op-geth", "week", "2025-10-12", "# ethereum-optimism/op-geth Weekly Report (Oct 12 - 18, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's activity centered on routine maintenance and clarifying project processes. A key pull request was opened to synchronize `op-geth` with its upstream source, ensuring the codebase remains current. Additionally, a significant discussion on an active issue regarding replica healthchecks provided important clarification on issue ownership and implementation scope, highlighting an opportunity to improve contributor coordination.\n\n## \ud83d\udee0\ufe0f Key Developments\n### Upstream Synchronization\nTo maintain alignment with the upstream Geth repository, a pull request was opened to update `op-geth`.\n- **Upstream Version Bump:** PR [#695](https://github.com/ethereum-optimism/op-geth/pull/695) proposes updating the codebase to version `v1.101603.1`, incorporating the latest changes from its source.\n\n## \ud83d\udc1b Issues & Triage\nNo new issues were opened and no existing issues were closed this week. However, there was important activity on an existing issue.\n\n- **New & Active Issues:** Discussion on issue [#17686](https://github.com/ethereum-optimism/op-geth/issues/17686), which addresses monitoring and alerting for replica-healthchecks, was a key focus. It was clarified that the implementation for this issue is intended for the infrastructure side, is currently blocked, and falls under the Platforms Team's tracker. A community-submitted PR was closed as a result, with the discussion serving to define the issue's scope and ownership more clearly.\n\n## \ud83d\udcac Community & Collaboration\nThe discussion around issue [#17686](https://github.com/ethereum-optimism/op-geth/issues/17686) provided a notable example of community interaction and process refinement. After a contributor submitted a pull request to address the issue, a maintainer clarified its status and ownership. The maintainer encouraged the contributor to engage in future work after first discussing issue assignment, reinforcing the importance of coordinating with the team to prevent misaligned efforts, particularly on issues with external dependencies or blockers.", "2025-10-13T20:53:55.852Z"]
["ethereum-optimism/optimism_week_2025-10-12", "ethereum-optimism/optimism", "week", "2025-10-12", "# ethereum-optimism/optimism Weekly Report (Oct 12 - 18, 2025)\n\n## \ud83d\ude80 Highlights\nThis week's development focused on enhancing the robustness and reliability of the OP Stack's core monitoring and deployment services. Significant progress was made in hardening the `op-dispute-mon` to more accurately handle node synchronization issues and output root discrepancies. The `op-deployer` was updated to support contract upgrades up to v4.1.0, a critical step for maintaining the Superchain. Concurrently, efforts were made to improve the stability of the acceptance testing framework and address health monitoring challenges within `op-conductor`.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this week centered on improving system stability, deployment capabilities, and testing infrastructure.\n\n- **Dispute Monitor Enhancements:** The `op-dispute-mon` service received a key update to improve its resilience in multi-node environments. It now correctly differentiates between a network-level 404 error and a genuine \"output root not found\" condition, leading to more accurate monitoring of output agreements ([#17819](https://github.com/ethereum-optimism/optimism/pull/17819)). This work is part of a broader effort to refine how the monitor handles out-of-sync nodes.\n\n- **Deployment Tooling Upgrade:** The `op-deployer` tool was significantly improved to support and test contract upgrades up to version v4.1.0. This ensures the deployment tooling is aligned with the latest contract releases, facilitating smooth network upgrades ([#17824](https://github.com/ethereum-optimism/optimism/pull/17824)).\n\n- **Acceptance Test Stability:** The acceptance test suite saw several improvements aimed at reducing flakiness and improving reporting. Fixes were made to the `flake-shake` tool for more accurate test duration reporting ([#17830](https://github.com/ethereum-optimism/optimism/pull/17830)), and a new test for the L2 EL P2P canonical chain was integrated to expand coverage ([#17833](https://github.com/ethereum-optimism/optimism/pull/17833)).\n\n## \ud83d\udc1b Issues & Triage\n\n- **Closed Issues:** Two related issues ([#17678](https://github.com/ethereum-optimism/optimism/issues/17678), [#17680](https://github.com/ethereum-optimism/optimism/issues/17680)) were closed, marking the implementation and deployment of partial healthiness tolerance for `rollup-boost` in `op-conductor`. This change makes the conductor more resilient to harmless, transient failures from builder services.\n\n- **New & Active Issues:**\n    - A new high-priority issue ([#17835](https://github.com/ethereum-optimism/optimism/issues/17835)) was opened to investigate the root cause of `op-conductor` raft timeouts and errors related to forwarding flashblocks from `rollup-boost`.\n    - Active discussion continues on issue [#17814](https://github.com/ethereum-optimism/optimism/issues/17814) regarding how `op-dispute-mon` should handle out-of-sync nodes. The conversation is focused on using the `CurrentL1` sync status to determine a node's validity for a given dispute game, ensuring the monitor relies on the correct source of truth.\n    - In issue [#17686](https://github.com/ethereum-optimism/optimism/issues/17686), a maintainer clarified that monitoring multiple replica healthchecks is an infrastructure-level concern for the Platforms Team, not `op-conductor`, guiding future contributions to the correct area.\n\n## \ud83d\udcac Community & Collaboration\nThe week saw active collaboration around improving the fault tolerance of core services. The detailed discussion on issue [#17814](https://github.com/ethereum-optimism/optimism/issues/17814) highlights a collaborative effort to define a robust strategy for handling out-of-sync nodes in the dispute monitor. Furthermore, the clear guidance provided on issue [#17686](https://github.com/ethereum-optimism/optimism/issues/17686) demonstrates effective project management and communication, ensuring contributor efforts are well-aligned with team responsibilities. The influx of new pull requests on October 13th across various components\u2014from service reliability to contract testing\u2014indicates a high level of ongoing development activity.", "2025-10-13T20:54:20.436Z"]
["ethereum-optimism/Retro-Funding_month_2025-10-01", "ethereum-optimism/Retro-Funding", "month", "2025-10-01", "# ethereum-optimism/Retro-Funding Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nDevelopment in the Retro-Funding repository during October was focused on foundational preparations for result processing. The primary effort centered on enhancing the testing infrastructure for the project's dashboard. This involved the integration of comprehensive sample data to ensure the system's readiness and stability ahead of the official results lock.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month was concentrated on ensuring the reliability of the project's tooling through testing enhancements.\n\n### Testing Infrastructure Enhancements\n*   In preparation for the official results, significant effort was made to bolster the dashboard's testing capabilities. Sample data for M8 was added, which included a variety of files for devtooling, onchain metrics, output results, and weight configurations. This preparatory work ([#78](https://github.com/ethereum-optimism/Retro-Funding/pull/78)) is crucial for validating the dashboard's functionality before the official results are finalized and published.\n\n## \ud83d\udc1b Issues & Triage\nThe issue tracker saw minimal activity during this period. No new issues were reported, and no existing issues were closed. There were no significant discussions on active issues, indicating a period of focused development rather than bug fixing or feature planning.\n\n## \ud83d\udcac Community & Collaboration\nBased on the development reports from this month, there were no PRs or issues with a high degree of discussion. The work was focused and self-contained, with no other notable collaboration dynamics to report.", "2025-10-13T20:54:32.908Z"]
["ethereum-optimism/community-hub_month_2025-09-01", "ethereum-optimism/community-hub", "month", "2025-09-01", "# ethereum-optimism/community-hub Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember was a month of deep infrastructure work and documentation enhancement. Significant progress was made in deploying Flashblocks across the network, with several key configuration and enablement tasks completed or actively underway. Preparations for the Fusaka hardfork were also a major focus, particularly ensuring `op-node` compatibility. On the community-facing side, the documentation was notably improved with the addition of a Superchain revenue explainer. Concurrently, the team continued to tackle persistent challenges, including test flakiness and protocol-level bugs, reflecting a commitment to system stability and reliability.\n\n## \ud83d\udee0\ufe0f Key Developments\nDevelopment this month centered on improving documentation and user experience within the community hub.\n\n- **Superchain Documentation & UX:** A significant effort was made to enhance the `op-token` section. A new Superchain revenue explainer was added to provide clarity on the ecosystem's economic model ([#1187](https://github.com/ethereum-optimism/community-hub/pull/1187)). This was supported by several metadata updates to improve navigation ([#1188](https://github.com/ethereum-optimism/community-hub/pull/1188), [#1189](https://github.com/ethereum-optimism/community-hub/pull/1189)), a fix for a sidebar display bug ([#1190](https://github.com/ethereum-optimism/community-hub/pull/1190)), and minor content refinements ([#1186](https://github.com/ethereum-optimism/community-hub/pull/1186), [#1191](https://github.com/ethereum-optimism/community-hub/pull/1191), [#1192](https://github.com/ethereum-optimism/community-hub/pull/1192)).\n\n## \ud83d\udc1b Issues & Triage\nIssue tracking this month was dominated by infrastructure rollouts, protocol upgrades, and stability improvements.\n\n- **Closed Issues:**\n    - **Infrastructure & Tooling:** Key infrastructure tasks were completed, including the enablement of flashblocks on Sunnyside sequencers ([#16761](https://github.com/ethereum-optimism/community-hub/issues/16761)) and `proxyd` preparations for the Fusaka L1 activation ([#467](https://github.com/ethereum-optimism/community-hub/issues/467)). Improvements to `op-acceptor` were also finalized, adding configuration logging and optimizing package parallelism ([#461](https://github.com/ethereum-optimism/community-hub/issues/461), [#462](https://github.com/ethereum-optimism/community-hub/issues/462)).\n    - **Strategic Deprioritization:** The integration of `op-test-sequencer` with Kurtosis was closed after a decision to move away from the Kurtosis environment ([#15265](https://github.com/ethereum-optimism/community-hub/issues/15265)).\n    - **Housekeeping:** A Forge Deployer CLI wrapper issue was closed ([#17214](https://github.com/ethereum-optimism/community-hub/issues/17214)), and an issue for a dispute game creator pattern refactor was closed as a duplicate ([#17436](https://github.com/ethereum-optimism/community-hub/issues/17436)).\n\n- **New & Active Issues:**\n    - **Flashblocks Rollout:** A major ongoing effort is the network-wide deployment of Flashblocks. A new issue was opened to track its enablement on a mainnet sequencer ([#17317](https://github.com/ethereum-optimism/community-hub/issues/17317)), while active discussions continued on deploying components like `rollup-boost` ([#16759](https://github.com/ethereum-optimism/community-hub/issues/16759)), `flashblocks-websocket-proxy` ([#16763](https://github.com/ethereum-optimism/community-hub/issues/16763)), and `flashblocks-rpc` ([#16764](https://github.com/ethereum-optimism/community-hub/issues/16764)).\n    - **Fusaka Compatibility:** A critical discussion is underway to ensure `op-node` is compatible with the upcoming Fusaka hardfork, specifically concerning the derivation pipeline and handling of excess blob gas per EIP-789 ([#17493](https://github.com/ethereum-optimism/community-hub/issues/17493)).\n    - **Test Stability:** A persistent flaky test, `TestPreNoInbox` in `op-acceptance-tests`, remains an active concern ([#17298](https://github.com/ethereum-optimism/community-hub/issues/17298)). A previous fix was found to be ineffective, indicating further investigation is required to stabilize the CI pipeline.\n    - **Protocol Bugs & Improvements:** A bug where `ConfigureGossip` overwrites defaults with zero values is being investigated, with potential solutions proposed ([#17308](https://github.com/ethereum-optimism/community-hub/issues/17308)). Meanwhile, the \"head block is not reachable\" error during `op-geth` initialization continues to be reported ([#420](https://github.com/ethereum-optimism/community-hub/issues/420)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was characterized by focused, in-depth technical discussions on core infrastructure. The series of interconnected issues related to the Flashblocks deployment ([#17317](https://github.com/ethereum-optimism/community-hub/issues/17317), [#16759](https://github.com/ethereum-optimism/community-hub/issues/16759), [#16761](https://github.com/ethereum-optimism/community-hub/issues/16761)) demonstrates a highly coordinated effort among team members to execute a complex, multi-stage rollout. Similarly, the proactive discussion around Fusaka compatibility ([#17493](https://github.com/ethereum-optimism/community-hub/issues/17493)) highlights the team's forward-looking approach to protocol evolution. The ongoing dialogue to resolve persistent issues like test flakiness ([#17298](https://github.com/ethereum-optimism/community-hub/issues/17298)) and protocol bugs ([#17308](https://github.com/ethereum-optimism/community-hub/issues/17308)) underscores a collective commitment to maintaining a high-quality and reliable codebase.", "2025-10-13T20:54:46.946Z"]
["ethereum-optimism/supersim_month_2025-09-01", "ethereum-optimism/supersim", "month", "2025-09-01", "# ethereum-optimism/supersim Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember's efforts centered on hardening the mainnet sequencer infrastructure. The most significant achievement was the successful deployment and stabilization of flashblocks across all OP Labs mainnet sequencers, a major step in improving network performance and health. This was complemented by enhancements to sequencer health monitoring, including the rollout of `op-conductor` with new p2p healthchecks. The month also saw a focus on maintenance and cleanup, with the removal of several obsolete smoke tests and updates to developer documentation.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the provided reports, no new features, bug fixes, or code refactors were merged during this period. Development activity focused on dependency management, with a new pull request opened to update the `vite` dependency in the `tictactoe` example application ([#416](https://github.com/ethereum-optimism/supersim/pull/416)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management was a primary focus, with significant progress made in resolving infrastructure tasks and planning future work.\n\n-   **Closed Issues:** A large number of issues were closed, primarily related to infrastructure stability and maintenance.\n    -   **Flashblocks & Sequencer Health:** The core achievement was the successful deployment of flashblocks on mainnet sequencers, tracked in issues [#16759](https://github.com/ethereum-optimism/supersim/issues/16759), [#16760](https://github.com/ethereum-optimism/supersim/issues/16760), and [#17317](https://github.com/ethereum-optimism/supersim/issues/17317). Related work included resolving alerts for sequencer peer counts ([#16868](https://github.com/ethereum-optimism/supersim/issues/16868)) and confirming the release of `op-conductor` with EL p2p healthchecks ([#17153](https://github.com/ethereum-optimism/supersim/issues/17153)).\n    -   **Test & Documentation Cleanup:** A series of outdated proof-related smoke tests for components like `op-challenger` ([#141](https://github.com/ethereum-optimism/supersim/issues/141)), `op-dispute-mon` ([#142](https://github.com/ethereum-optimism/supersim/issues/142)), and `op-proposer` ([#143](https://github.com/ethereum-optimism/supersim/issues/143)) were removed. Documentation for bridging ETH was also updated to include examples for custom chains ([#1473](https://github.com/ethereum-optimism/supersim/issues/1473)).\n    -   **Feature Deprecation:** A decision was made not to implement Websockets support in the Kurtosis Reverse Proxy, and the corresponding issue was closed ([#17194](https://github.com/ethereum-optimism/supersim/issues/17194)).\n\n-   **New & Active Issues:** New issues were opened to scope future enhancements and improve test coverage.\n    -   An enhancement was proposed to add a hint for fast block header oracle lookup in `op-program` specifications to improve performance ([#17416](https://github.com/ethereum-optimism/supersim/issues/17416)).\n    -   A new issue was created to expand CI by adding `soneium` to the contract upgrade tests ([#17332](https://github.com/ethereum-optimism/supersim/issues/17332)).\n    -   The issue regarding Kurtosis Websockets support ([#17194](https://github.com/ethereum-optimism/supersim/issues/17194)) saw discussion around ensuring a related `TODO` comment was removed from the codebase, demonstrating diligent issue and code management.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the active management of issues. For instance, the discussion on issue [#17194](https://github.com/ethereum-optimism/supersim/issues/17194) involved multiple team members to ensure that closing the issue as \"won't implement\" was followed by the necessary code cleanup, showcasing a coordinated approach to maintaining code quality.", "2025-10-13T20:54:47.469Z"]
["ethereum-optimism/specs_month_2025-09-01", "ethereum-optimism/specs", "month", "2025-09-01", "# ethereum-optimism/specs Monthly Report (September 2025)\n\n## \ud83d\ude80 Highlights\nSeptember was a month of significant refinement and consolidation for the Optimism specifications. Major progress was made in finalizing the Jovian protocol upgrade, with key clarifications on `MinBaseFee` requirements and the addition of data availability footprint limits. The team successfully rolled out flashblocks on mainnet sequencers, closing numerous issues related to deployment, monitoring, and load testing. A critical `op-geth` bug causing receipt decoding failures was swiftly identified and resolved. Concurrently, a substantial effort was made to clean up the issue backlog, closing out a large volume of older tasks related to deprecated Kurtosis tooling and a previous superchain-ops architecture, signaling a clear focus on current priorities and improved development workflows.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month focused on hardening upcoming protocol upgrades, improving developer tooling, and ensuring documentation accuracy.\n\n-   **Jovian Protocol Specification Hardening:**\n    -   The specifications were updated to explicitly require `PayloadAttributes.MinBaseFee` to be `NULL` prior to the Jovian upgrade, clarifying protocol behavior ([#756]).\n    -   Specifications for data availability (DA) footprint limits were added to the Jovian protocol documentation ([#767]).\n    -   The `SystemConfig.ConfigUpdate` event specification was refined to improve naming and remove redundancy ([#763]).\n    -   Precision was added to the L1 block attribute transaction choice for the activation blocks of both the Isthmus and Jovian upgrades ([#789]).\n\n-   **Upgrade Tooling and Automation:**\n    -   New scripts and improvements were introduced to streamline the generation of specifications for upgrade and proxy update transactions, simplifying the process for future hardforks ([#673], [#780]).\n\n-   **Documentation and Specification Fixes:**\n    -   A bug related to flashblocks authorship was corrected in the protocol specifications ([#775]).\n    -   Various documentation improvements were made, including fixing broken links in configurability docs ([#765]), adding detail to system configuration specs ([#766]), and correcting minor typos ([#768], [#774]).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw a major cleanup of the issue tracker, resolving long-standing items and addressing critical new bugs, while also initiating discussions on future protocol enhancements.\n\n-   **Closed Issues:**\n    -   **Flashblocks Rollout:** A suite of issues related to the deployment, monitoring, health checks, and load testing of flashblocks and `rollup-boost` on mainnet were successfully closed, marking the completion of this initiative ([#16759], [#16760], [#16868], [#17317], [#16756], [#17462]).\n    -   **`op-geth` Bug Fixes:** A critical issue causing `op-geth` to crash due to \"Failed to decode RLP receipts\" was reported and resolved ([#679]). An older issue regarding `op-geth` initialization with large genesis files was also closed with a recommended solution ([#668]).\n    -   **Infrastructure & Tooling Deprecation:** A large number of issues related to the Kurtosis development environment were closed, reflecting a strategic shift to other local development tools ([#158], [#14390], [#15753], etc.). Similarly, many issues tied to the old `superchain-ops` architecture and CI processes were closed, reflecting a move to a new, more streamlined workflow ([#49], [#12], [#427], [#433]).\n    -   **Testing Cleanup:** Several obsolete smoke test issues for components like `op-challenger` and `op-proposer` were closed as they are no longer required ([#140], [#141], [#142], [#143]).\n\n-   **New & Active Issues:**\n    -   **Future Protocol Design:** Important new discussions were initiated around standardizing network upgrade transactions to avoid potential address collisions ([#781]), proposing the use of SSZ `hash_tree_root` for `SequencerCommitment` signatures ([#787]), and ensuring forward-compatibility for clients parsing `SystemConfig.ConfigUpdate` events ([#777]).\n    -   **Test Stability:** The flakiness of `TestPreNoInbox` in `op-acceptance-tests` remains an active concern, with previous fix attempts proving unsuccessful ([#17298]).\n    -   **Synchronization Logic:** An active discussion is underway regarding the precise synchronization conditions between the L2 Consensus Layer (CL) and Execution Layer (EL), particularly for `op-geth` ([#17628]).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was strong this month, characterized by rapid responses to critical issues and deep technical discussions on protocol design. The resolution of the `op-geth` receipt decoding bug ([#679]) demonstrated an effective feedback loop, with community member `@cpuchainorg` reporting the issue and later confirming the fix.\n\nDiscussions on future protocol changes, such as standardizing network upgrade transactions ([#781]), saw detailed analysis from core contributors like `@protolambda`, showcasing in-depth engagement on foundational architecture. Furthermore, a snag report on the new `superchain-ops` flow ([#1224]) from `@geoknee` was quickly acknowledged by `@blmalone`, leading to immediate pull requests to improve the user experience. This highlights a healthy cycle of user feedback and iterative improvement within the contributor community.", "2025-10-13T20:54:48.431Z"]
["ethereum-optimism/docs_month_2025-10-01", "ethereum-optimism/docs", "month", "2025-10-01", "# ethereum-optimism/docs Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober's efforts focused on enhancing developer documentation and addressing key infrastructure issues. A significant update was made to the L2 rollup creation guide, providing developers with clearer instructions and practical examples. The project also formally closed out the Isthmus Upgrade, marking a major milestone. While direct code contributions were focused, critical discussions took place regarding future work on protocol stability, including a significant Go compatibility blocker in Cannon and refining the logic for the dispute monitor.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on improving the developer experience through documentation enhancements.\n\n- **Enhanced L2 Rollup Creation Guide:** The documentation for creating L2 rollups was substantially improved ([#1775]). This update clarified container execution, updated target versions, and added a suite of example files, including environment setup, a Makefile, Docker Compose configuration, and deployment scripts.\n- **Tutorial and Oracle Updates:** New pull requests were opened to improve user-facing documentation. One fixed a genesis config file naming issue in the quick start tutorial ([#1787]), while another added information about SUPRA Oracle and VRF to the oracles documentation ([#1788]).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month involved closing out completed initiatives, managing project metrics, and engaging in deep discussions on active technical challenges.\n\n- **Closed Issues:**\n    - **Infrastructure & Upgrades:** The tracking issue for the Isthmus Upgrade was officially closed ([#12703]), signifying its completion. An issue to refine flashblock alerts and runbooks was also resolved ([#17423]).\n    - **Component Investigations:** Several issues were closed after investigation or changes in planning. A proposed architectural split of `op-node` was deemed \"not planned\" ([#16680]), and an investigation into L2EL syncing conditions was concluded ([#17628]).\n    - **Project Management:** New issues were opened to generate and report on contribution metrics from September ([#1777], [#1778]).\n\n- **New & Active Issues:**\n    - **Cannon Go Compatibility Blocker:** A critical discussion is ongoing in [#17060] regarding Go 1.25's incompatibility with Cannon. The issue causes incorrect Keccak hash calculations, preventing correct block hash generation and posing a significant blocker for future upgrades.\n    - **Dispute Monitor Sync Logic:** An important discussion in [#17814] focuses on improving how `op-dispute-mon` handles out-of-sync nodes. The proposed solution is to use the `CurrentL1` status to verify if a node has processed the relevant L1 block for a dispute, which would make the monitoring more robust against nodes on incorrect forks.\n    - **Testing Strategy Shift:** A conversation in [#17475] revealed a strategic shift in testing `op-reth`, moving away from the deprecated `jovian kt-devnet` and toward integration with the `devstack` / `sysgo` system.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the detailed technical discussions on active issues. The conversation around monitoring replica-healthchecks ([#17686]) provided a clear example of community interaction, where a maintainer guided a contributor by clarifying the scope of an issue and outlining the proper contribution process. This interaction highlights the project's commitment to mentoring contributors. Furthermore, discussions on the Cannon compatibility issue ([#17060]) and dispute monitor logic ([#17814]) show active collaboration among team members to diagnose and solve complex, core protocol challenges.", "2025-10-13T20:54:48.475Z"]
["ethereum-optimism/ethereum-optimism.github.io_month_2025-10-01", "ethereum-optimism/ethereum-optimism.github.io", "month", "2025-10-01", "# ethereum-optimism/ethereum-optimism.github.io Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober's activity centered on ecosystem growth and infrastructure process refinement. A proposal was made to expand the token ecosystem on Base with the addition of the DRIP token. Concurrently, a significant discussion unfolded around infrastructure monitoring for replica-healthchecks, leading to important clarifications on contribution scope and inter-team coordination. This highlighted the project's focus on both expanding its utility and ensuring robust operational processes.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork was initiated to expand the token list available within the Superchain ecosystem.\n\n*   **Token Additions to Base**\n    *   A pull request ([#1221](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/1221)) was opened to add the DRIP token to Base, reflecting ongoing efforts to grow the on-chain ecosystem.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month focused on clarifying the scope and ownership of infrastructure-related tasks.\n\n*   **Closed Issues:**\n    *   No issues were reported as closed in the provided data for October.\n\n*   **New & Active Issues:**\n    *   No new issues were opened based on the available reports.\n    *   Discussion on active issue [#17686](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17686), concerning monitoring and alerting for replica-healthchecks, was a key focus. It was clarified that this work is intended for the infrastructure team and is currently blocked, falling outside the scope of `op-conductor`. This discussion prevents misaligned work and directs contributions to the appropriate team.\n\n## \ud83d\udcac Community & Collaboration\nThe month provided a clear example of community guidance and process clarification. In the discussion surrounding issue [#17686](https://github.com/ethereum-optimism/ethereum-optimism.github.io/issues/17686), a contributor's pull request was closed after a maintainer explained that the issue was blocked and belonged to a different team (Platforms Team). The maintainer, yashvardhan-kukreja, guided the contributor on the preferred workflow of discussing with a maintainer and getting assigned to an issue before submitting code, fostering a more organized and effective contribution environment.", "2025-10-13T20:54:50.164Z"]
["ethereum-optimism/op-analytics_month_2025-10-01", "ethereum-optimism/op-analytics", "month", "2025-10-01", "# ethereum-optimism/op-analytics Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober's development began with a focus on enhancing data integration from the broader Superchain ecosystem. A key feature was introduced to pull EIP-1559 configuration parameters directly from the `superchain-registry`, improving the accuracy and accessibility of on-chain data within `op-analytics`. Additionally, issue triage saw the closure of items related to `op-node` architecture and flashblock alerting, reflecting ongoing refinement and decision-making around the core infrastructure.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on improving data pipelines that feed into the analytics platform.\n\n- **Superchain Configuration Integration**\n  A new feature was implemented to pull `eip1559_elasticity` and `eip1559_denominator` values from the `superchain-registry`. This enhancement ensures that analytics related to EIP-1559 are always based on the latest Superchain configurations. The change involved updates to the project's dependencies, Helm charts, and core Python data-sourcing logic ([#1750](https://github.com/ethereum-optimism/op-analytics/pull/1750)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month involved closing out prior investigations and operational tasks.\n\n- **Closed Issues:**\n  - **`op-node` Architecture:** An issue exploring a potential refactor of the `op-node` CLI, entrypoint, and service components was closed as \"not planned,\" concluding the investigation phase ([#16680](https://github.com/ethereum-optimism/op-analytics/issues/16680)).\n  - **Alerting:** An issue to improve alerts and runbooks for flashblocks was resolved, with the implementation completed in the `k8s` repository ([#17423](https://github.com/ethereum-optimism/op-analytics/issues/17423)).\n\n- **New & Active Issues:**\n  No new issues were opened, and there were no significant discussions on existing active issues during this period.\n\n## \ud83d\udcac Community & Collaboration\nBased on the available data, collaboration was evident through cross-repository work. The resolution for the flashblock alert issue ([#17423](https://github.com/ethereum-optimism/op-analytics/issues/17423)) was implemented in a separate `k8s` repository, highlighting coordination between different parts of the project's infrastructure.", "2025-10-13T20:55:04.801Z"]
["ethereum-optimism/infra_month_2025-10-01", "ethereum-optimism/infra", "month", "2025-10-01", "# ethereum-optimism/infra Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober was a month of refinement and forward-planning for the Optimism infrastructure. Development focused heavily on improving the robustness of core tooling, with significant enhancements to the `op-acceptor` testing framework and `proxyd` observability. The team officially closed out the long-running Isthmus upgrade, marking a major milestone. Concurrently, new and complex challenges emerged, particularly around dispute monitoring with out-of-sync nodes and a critical compatibility issue with Go 1.25, setting the stage for future work on protocol security and stability.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on improving the developer experience and operational stability through tooling enhancements.\n\n-   **Enhanced Observability in `proxyd`**: To improve debugging and monitoring, `proxyd` was updated to include comprehensive logging for `eth_sendRawTransaction` and `eth_sendRawTransactionConditional` requests. The new logs capture critical details such as transaction hash, method, request ID, and chain ID, with integration tests added to validate the functionality ([#481](https://github.com/ethereum-optimism/infra/pull/481)).\n\n-   **Testing Framework Improvements**: The `op-acceptor` component received several key updates to improve test execution and flexibility. A new feature was added to allow environment variables to be passed through to `go test`, enabling more controlled testing scenarios ([#483](https://github.com/ethereum-optimism/infra/pull/483)). Work also began on implementing stricter exclusion gates to refine its filtering capabilities ([#490](https://github.com/ethereum-optimism/infra/pull/490)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management in October involved resolving legacy items while identifying new, systemic challenges.\n\n-   **Closed Issues:** Several significant issues were resolved and closed, signifying progress and finalization of major efforts.\n    -   **Upgrade Finalization:** The tracking issue for the Isthmus Upgrade was officially closed, confirming the upgrade's completion ([#12703](https://github.com/ethereum-optimism/infra/issues/12703)).\n    -   **Tooling & Test Fixes:** A series of issues related to `op-acceptor` were addressed, including forwarding environment variables ([#482](https://github.com/ethereum-optimism/infra/issues/482)), improving package parallelism ([#462](https://github.com/ethereum-optimism/infra/issues/462)), and enhancing HTML output ([#386](https://github.com/ethereum-optimism/infra/issues/386)).\n    -   **Architecture & Alerts:** A proposal to refactor the `op-node` architecture was closed as \"not planned\" ([#16680](https://github.com/ethereum-optimism/infra/issues/16680)), and an issue to refine flashblock alerts was also completed ([#17423](https://github.com/ethereum-optimism/infra/issues/17423)).\n\n-   **New & Active Issues:** Discussions this month highlighted several critical areas requiring attention.\n    -   **Dispute Monitoring Vulnerability:** A significant discussion emerged around `op-dispute-mon` incorrectly flagging disagreements when a rollup RPC is out of sync ([#17814](https://github.com/ethereum-optimism/infra/issues/17814)). The conversation points toward needing a more robust solution that verifies node sync status before treating differing outputs as a dispute.\n    -   **Go 1.25 Compatibility Blocker:** An ongoing issue with Cannon's compatibility with Go 1.25 was confirmed to affect Optimism by causing incorrect Keccak hashes ([#17060](https://github.com/ethereum-optimism/infra/issues/17060)). This represents a potential blocker for future Go version upgrades.\n    -   **Dev Environment Strategy:** A discussion on re-integrating `op-reth` into acceptance tests led to a strategic pivot, with the team deciding to focus on integration with the current `devstack/sysgo` system rather than the deprecated Kurtosis devnet ([#17475](https://github.com/ethereum-optimism/infra/issues/17475)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was characterized by deep-dive discussions on complex technical issues. The active threads concerning `op-dispute-mon` ([#17814](https://github.com/ethereum-optimism/infra/issues/17814)), Cannon/Go compatibility ([#17060](https://github.com/ethereum-optimism/infra/issues/17060)), and `op-reth` integration ([#17475](https://github.com/ethereum-optimism/infra/issues/17475)) showcased detailed problem-solving among core contributors. This focus on diagnosing and addressing systemic challenges, rather than just shipping features, indicates a strong commitment to the long-term health and security of the Superchain ecosystem.", "2025-10-13T20:55:10.928Z"]
["ethereum-optimism/specs_month_2025-10-01", "ethereum-optimism/specs", "month", "2025-10-01", "# ethereum-optimism/specs Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober's efforts focused on solidifying the protocol by concluding past upgrades and initiating new security enhancements. A significant milestone was achieved with the formal closure of the Isthmus Upgrade tracker, marking its successful completion. Concurrently, work began on refining the Fusaka defense mechanism specifications to improve protocol robustness. However, development faces a notable blocker with a Go 1.25 compatibility issue affecting Cannon's cryptographic functions, while testing strategy continues to evolve with a planned integration of `op-reth` into the `devstack` system.\n\n## \ud83d\udee0\ufe0f Key Developments\nThis month's development centered on enhancing the security and clarity of the core protocol specifications.\n\n*   **Protocol Security Enhancements:** To improve the protocol's robustness, work has begun on clarifying the specifications for the Fusaka defense mechanism. A pull request ([#790](https://github.com/ethereum-optimism/specs/pull/790)) was opened to formalize these enhancements.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month involved closing out major upgrade tasks and identifying a critical external dependency blocker.\n\n*   **Closed Issues:**\n    *   **Isthmus Upgrade Completion:** The primary tracking issue for the Isthmus Upgrade ([#12703](https://github.com/ethereum-optimism/specs/issues/12703)) was closed, confirming the successful conclusion of this major network upgrade.\n    *   **Housekeeping and Refinements:** Several issues were resolved, including an improvement to test reporting in `op-acceptor` HTML output ([#386](https://github.com/ethereum-optimism/specs/issues/386)) and the closure of an investigation into L2 Execution Layer syncing conditions ([#17628](https://github.com/ethereum-optimism/specs/issues/17628)), which was deemed a non-critical concern.\n\n*   **New & Active Issues:**\n    *   **Cannon Go 1.25 Compatibility Blocker:** A significant challenge is being tracked in [#17060](https://github.com/ethereum-optimism/specs/issues/17060), where a bug in the Go 1.25 toolchain causes incorrect Keccak hashes in Cannon. This is a blocking issue for tooling that relies on these cryptographic operations, and a fix was not present in the Go 1.25.1 release.\n    *   **`op-reth` Testing Strategy:** Discussion in [#17475](https://github.com/ethereum-optimism/specs/issues/17475) signals a strategic shift in testing infrastructure. With the Kurtosis devnet being deprecated, the focus is now on integrating `op-reth` with the `devstack` / `sysgo` system for future testing.\n\n## \ud83d\udcac Community & Collaboration\nDiscussions this month were focused and impactful, centering on resolving critical technical challenges and finalizing strategic decisions. The active conversations around the Cannon compatibility issue ([#17060](https://github.com/ethereum-optimism/specs/issues/17060)) and the evolving `op-reth` testing strategy ([#17475](https://github.com/ethereum-optimism/specs/issues/17475)) highlight the community's engagement in tackling key blockers and shaping the project's future development path. The closure of the Isthmus Upgrade tracker also reflects a collaborative effort to confirm the successful rollout and completion of a major initiative.", "2025-10-13T20:55:13.145Z"]
["ethereum-optimism/op-geth_month_2025-10-01", "ethereum-optimism/op-geth", "month", "2025-10-01", "# ethereum-optimism/op-geth Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober was a month focused on maintenance, stability, and alignment with upstream Geth. The most significant achievement was the integration of an upstream fix to bolster Fusaka defense on Sepolia by resolving a critical configuration bug. Development efforts also included proposals for new benchmarks and keeping the codebase current with a version bump from Geth. While no major new features were shipped, the work undertaken ensures the continued security and reliability of the node software.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on integrating changes from upstream Geth and preparing for future performance analysis.\n\n- **Upstream Integration & Maintenance**\n    - A critical bug in Fusaka defense on Sepolia was addressed by cherry-picking upstream Geth PRs. This resolved an issue where `ChainConfig.BlobConfig` was not being correctly applied, ensuring proper node configuration ([#690](https://github.com/ethereum-optimism/op-geth/pull/690)).\n    - A pull request was opened to bump the `op-geth` version to `v1.101603.1`, continuing the effort to keep the fork in sync with its upstream source ([#695](https://github.com/ethereum-optimism/op-geth/pull/695)).\n\n- **Benchmarking Enhancements**\n    - To improve performance measurement capabilities, a new pull request was introduced to add `benchmarkComputeCellProofs` ([#692](https://github.com/ethereum-optimism/op-geth/pull/692)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month focused on resolving existing bugs and clarifying the scope of future work.\n\n- **Closed Issues:**\n    - The primary bug fix was the resolution of an issue where `ChainConfig.BlobConfig` always used default configurations, which was closed in conjunction with PR [#690](https://github.com/ethereum-optimism/op-geth/pull/690) ([#685](https://github.com/ethereum-optimism/op-geth/issues/685)).\n    - A task to refine alerts and runbooks for flashblocks was completed and closed ([#17423](https://github.com/ethereum-optimism/op-geth/issues/17423)).\n    - An older issue regarding the splitting of `op-node` components was closed as \"not planned,\" clarifying the project's architectural direction ([#16680](https://github.com/ethereum-optimism/op-geth/issues/16680)).\n\n- **New & Active Issues:**\n    - No new issues were opened during this period.\n    - Significant discussion occurred on an active issue concerning graceful monitoring and alerting for replica-healthchecks ([#17686](https://github.com/ethereum-optimism/op-geth/issues/17686)). It was clarified that the implementation is intended for the infrastructure side, is currently blocked, and belongs to the Platforms Team Tracker, highlighting a cross-team dependency.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was most visible in the management of issue [#17686](https://github.com/ethereum-optimism/op-geth/issues/17686). A contributor submitted a PR to address the issue, but a maintainer clarified that the work was blocked and owned by another team. The interaction served as a valuable example of project coordination, with the maintainer guiding the contributor on the process for issue assignment and encouraging future contributions once the blocker is resolved.", "2025-10-13T20:55:14.731Z"]
["ethereum-optimism/optimism_month_2025-10-01", "ethereum-optimism/optimism", "month", "2025-10-01", "# ethereum-optimism/optimism Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober was a month of significant hardening and infrastructure enhancement for the OP Stack. Development was heavily focused on bolstering the reliability of the entire system through a major push in testing infrastructure, including the introduction of the \"flake-shaker\" system for test stability and new nightly fuzz testing jobs. Key components like the `op-deployer` and `op-dispute-mon` received critical updates to support new contract versions and improve monitoring accuracy. While substantial progress was made in closing out testing and upgrade-related trackers, challenging new issues emerged around `op-conductor` health and performance, and active discussions continue on resolving a critical Cannon compatibility bug with Go 1.25.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on improving test coverage, strengthening core components, and refining deployment tooling.\n\n- **Advanced Testing and CI/CD Infrastructure:**\n  - A new \"flake-shaker\" system was introduced to automatically detect and report flaky tests by running them multiple times, enhancing the reliability of the test suite ([#17646], [#17830]).\n  - CI was strengthened with a new nightly job for heavy fuzz testing of smart contracts ([#17668]) and the consolidation of `op-acceptance-tests` workflows ([#17673]).\n  - Test coverage was expanded with new unit tests for `DevFeatures.sol` ([#17643]) and new acceptance tests validating L1 Osaka activation ([#17666]), unsafe chain stalling logic ([#17696]), and EL payload caching ([#17675]).\n\n- **Core Protocol and Node Enhancements:**\n  - The L1ChainConfig is now embedded directly into the configuration for `op-node`, `op-program`, and `kona`, improving the handling of L1 block info and blob base fees post-Ecotone ([#17568]).\n  - The `op-node` architecture was simplified by merging the `EngineResetDeriver` with the `EngineController`, reducing complexity ([#17662]).\n  - A new flag was added to `op-service/L1BeaconClient` and related components to optionally skip blob proof verification, providing more flexibility ([#17713], [#17718]).\n  - `op-geth` was updated to integrate the latest \"fusaka defence cherry pick\" improvements ([#17661]).\n\n- **Deployment and Contract Management:**\n  - The `op-deployer` was significantly updated to support and test upgrades up to contract version v4.1.0, ensuring compatibility with the latest releases ([#17824]).\n  - The OP Contracts Manager (`opcm`) was enhanced to support Cannon and Kona fault-proof games ([#17512]).\n  - A full implementation of the `TimelockGuard` was completed, adding external signature validation to bolster security for Safe transactions ([#17584]).\n\n- **Dispute Monitor Robustness:**\n  - `op-dispute-mon` was improved to correctly distinguish between a transport-level 404 error and a genuine \"output root not found\" condition, which is critical for accurate monitoring across multiple nodes ([#17819]).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month saw the closure of major testing and upgrade initiatives, while new discussions focused on synchronization, performance, and external dependencies.\n\n- **Closed Issues:**\n  - **Testing & Devnet Initiative:** A significant milestone was reached with the closure of several long-standing tracker issues related to migrating `devnet-sdk` tests to `devstack` ([#15574]), simplifying interop testing ([#16442]), and completing the reorg testing checklist ([#14530]).\n  - **Network Upgrade Completion:** The main tracker for the Isthmus Upgrade was closed, marking its successful completion ([#12703]). The issue for a Fusaka activation test was also resolved ([#17500]).\n  - **`rollup-boost` Health:** Issues related to implementing and deploying a partial healthiness tolerance for `op-rbuilder` failures in `op-conductor` were closed, improving sequencer stability ([#17678], [#17680]).\n\n- **New & Active Issues:**\n  - **`op-dispute-mon` Synchronization Logic ([#17814]):** A critical discussion is ongoing on how `op-dispute-mon` should handle out-of-sync nodes when multiple RPCs are configured. The challenge is to reliably differentiate a lagging node from one on an incorrect fork. The proposed solution involves checking the `CurrentL1` from the node's sync status to ensure it has processed the relevant L1 block.\n  - **Cannon Compatibility with Go 1.25 ([#17060]):** This active issue highlights a significant blocker where Go 1.25 produces incorrect Keccak hashes within Cannon, affecting block hash calculations. The root cause has been traced to an upstream Go issue, and the team is tracking it closely.\n  - **`op-conductor` and Flashblocks Health ([#17835]):** A new issue was opened to investigate raft timeouts and errors in `op-conductor` when streaming flashblocks, pointing to potential bottlenecks in the sequencing pipeline.\n  - **Flashblocks Performance Tuning ([#17676], [#17677]):** New initiatives were started to load test 200ms Flashblocks on a devnet, signaling a push towards further reducing block times and improving performance.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was evident in the deep technical discussions surrounding active issues. The diagnosis of the Cannon/Go 1.25 bug ([#17060]) and the complex logic for `op-dispute-mon` synchronization ([#17814]) involved detailed back-and-forth between multiple core developers, showcasing collaborative problem-solving on challenging issues. Furthermore, maintainer guidance was visible in the triage process, such as clarifying the scope of an issue related to replica health checks ([#17686]) and directing it to the appropriate team. The focused effort on testing infrastructure and dispute monitoring suggests strong coordination within dedicated development pods.", "2025-10-13T20:55:17.896Z"]
["ethereum-optimism/community-hub_month_2025-10-01", "ethereum-optimism/community-hub", "month", "2025-10-01", "# ethereum-optimism/community-hub Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober's efforts focused on core infrastructure stability and testing. A critical compatibility issue was identified in Cannon's support for Go 1.25, which causes incorrect hash calculations and is being treated as a blocker. This diagnostic work ran parallel to progress in the project's testing suite, where a key test for the Fusaka L1 activation was successfully implemented and closed. The month's activity underscores a commitment to maintaining the foundational security and reliability of the protocol.\n\n## \ud83d\udee0\ufe0f Key Developments\nBased on the available data, development work centered on enhancing the protocol's test coverage.\n\n- **Protocol Testing:** A specific test for the Fusaka (Osaka) activation on L1 was completed and merged via PR [#17666](https://github.com/ethereum-optimism/community-hub/pull/17666), resolving a long-standing issue ([#17500](https://github.com/ethereum-optimism/community-hub/issues/17500)). This improves validation for protocol upgrades.\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month involved resolving legacy test-related tasks while triaging a significant new blocker and preparing for future documentation work.\n\n- **Closed Issues:**\n  - **Testing & Validation:** Two issues were closed. The \"Fusaka activation test\" ([#17500](https://github.com/ethereum-optimism/community-hub/issues/17500)) was completed. An older issue regarding negative testing for chain configurations ([#686](https://github.com/ethereum-optimism/community-hub/issues/686)) was closed as it was no longer relevant due to a new report-based validation approach.\n\n- **New & Active Issues:**\n  - **Cannon Go 1.25 Blocker:** The most significant active discussion is on issue [#17060](https://github.com/ethereum-optimism/community-hub/issues/17060), concerning Go 1.25 compatibility. It was confirmed that running Cannon with Go 1.25 results in incorrect keccak hashes, which impacts block hash calculations. The problem is linked to an upstream Go issue ([golang/go/issues/74998](https://github.com/golang/go/issues/74998)) affecting emulated MIPS hardware and is considered a blocker.\n  - **BEP Documentation:** Two new issues ([#1193](https://github.com/ethereum-optimism/community-hub/issues/1193), [#1194](https://github.com/ethereum-optimism/community-hub/issues/1194)) were opened referencing `BEPs/BEP2.md`, signaling upcoming work on documentation.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was evident in the focused effort to diagnose the critical Go 1.25 compatibility issue in Cannon ([#17060](https://github.com/ethereum-optimism/community-hub/issues/17060)). Contributors @pauldowman, @ajsutton, and @sebastianst engaged in a detailed discussion to confirm the issue's impact on Optimism, link it to an upstream dependency, and provide a detailed diagnosis. This highlights the team's active problem-solving on complex, low-level bugs essential to the stack's integrity.", "2025-10-13T20:55:33.883Z"]
["ethereum-optimism/superchain-registry_month_2025-10-01", "ethereum-optimism/superchain-registry", "month", "2025-10-01", "# ethereum-optimism/superchain-registry Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober's activity focused on registry maintenance, standards updates, and strategic issue resolution. The primary technical achievement was the addition of the `op-contracts/v4.1.0` standard version for Mainnet and Sepolia, ensuring the registry stays current with contract deployments. The project also made key decisions on its technical direction, closing an `op-node` architecture proposal as \"not planned\" and shifting from a validation-based to a report-based testing strategy. A significant ongoing challenge is a compatibility issue between Cannon and Go 1.25, which is causing incorrect cryptographic hashes and is being actively investigated.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on updating standards and documentation within the registry.\n\n- **Standard Version Updates:** The registry was updated to include the `op-contracts/v4.1.0` standard for both Sepolia and Mainnet, mirroring the `v4.1.0-rc.3` configurations. This ensures the registry accurately reflects the latest contract versions ([#1109](https://github.com/ethereum-optimism/superchain-registry/pull/1109)).\n- **Documentation:** A pull request was opened to update the `CHAINS.md` file, reflecting ongoing maintenance of project documentation ([#1108](https://github.com/ethereum-optimism/superchain-registry/pull/1108)).\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month involved closing out legacy tasks, making strategic decisions, and identifying a critical compatibility bug.\n\n- **Closed Issues:**\n    - **Architectural & Strategic Decisions:** An issue to refactor the `op-node` service ([#16680](https://github.com/ethereum-optimism/superchain-registry/issues/16680)) was closed as \"not planned\" after its proposed implementation was not supported. Similarly, an older issue regarding negative testing for chain configurations ([#686](https://github.com/ethereum-optimism/superchain-registry/issues/686)) was closed, as the project has pivoted from a validation-based to a report-based approach.\n    - **Completed Tasks:** The Fusaka activation test for L1 ([#17500](https://github.com/ethereum-optimism/superchain-registry/issues/17500)) was closed, indicating its completion. An issue for refining flashblock alerts ([#17423](https://github.com/ethereum-optimism/superchain-registry/issues/17423)) was also closed, with the work having been completed in the `k8s` repository.\n\n- **New & Active Issues:**\n    - **Potential Blocker:** A significant issue ([#17060](https://github.com/ethereum-optimism/superchain-registry/issues/17060)) regarding Go 1.25 compatibility with Cannon is under active discussion. The problem causes incorrect Keccak hashes and potentially affects other crypto functions. A detailed diagnosis has been documented, but the required MIPS fix was not included in the Go 1.25.1 release, leaving the issue unresolved.\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was evident through cross-repository coordination. The closure of the flashblock alert issue ([#17423](https://github.com/ethereum-optimism/superchain-registry/issues/17423)) highlighted the connection between the `superchain-registry` and `k8s` repositories. Additionally, active discussion and detailed diagnostic work on the Cannon compatibility issue ([#17060](https://github.com/ethereum-optimism/superchain-registry/issues/17060)) demonstrate focused problem-solving within the community.", "2025-10-13T20:55:34.449Z"]
["ethereum-optimism/design-docs_month_2025-10-01", "ethereum-optimism/design-docs", "month", "2025-10-01", "# ethereum-optimism/design-docs Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober's activity centered on finalizing major initiatives and addressing foundational challenges. The most significant achievement was the formal conclusion of the Isthmus Upgrade, marking the completion of a key protocol enhancement. While no new features were merged, progress was made through strategic discussions on tooling compatibility and integration. Ongoing work highlights a critical blocker with Go 1.25 affecting Cannon's hashing functions and a pivot in the integration strategy for `op-reth`.\n\n## \ud83d\udee0\ufe0f Key Developments\nWhile the provided reports did not include newly merged pull requests, several important workstreams were concluded, as evidenced by the closure of their tracking issues.\n\n- **Isthmus Upgrade Finalized:** The tracking issue for the Isthmus Upgrade was closed, formally marking the end of this significant development cycle and signifying that the upgrade is complete and stable. ([#12703](https://github.com/ethereum-optimism/design-docs/issues/12703))\n- **Acceptance Test Enhancements:** Work was completed to improve the diagnostic output of `op-acceptor` tests. The HTML output now includes setup information, providing better context for test analysis and debugging. ([#386](https://github.com/ethereum-optimism/design-docs/issues/386))\n- **Protocol Clarity:** An investigation into the L2EL sync conditions was resolved, clarifying that the `engineController.insertUnsafePayload` function likely handles the observed behavior. This resolution enhances the collective understanding of the EL synchronization process. ([#17628](https://github.com/ethereum-optimism/design-docs/issues/17628))\n\n## \ud83d\udc1b Issues & Triage\nIssue management this month focused on closing out completed work, identifying documentation inconsistencies, and tackling significant technical blockers.\n\n- **Closed Issues:** Key problems resolved include the official completion of the Isthmus Upgrade, clarification on L2EL sync conditions, and an enhancement to acceptance test reporting. These closures represent the finalization of important protocol and tooling initiatives.\n\n- **New & Active Issues:**\n    - **Terminology Standardization:** A new issue was opened to standardize the use of \"soft-fork\" versus \"hard-fork\" terminology across the design documents, aiming for greater precision and clarity. ([#342](https://github.com/ethereum-optimism/design-docs/issues/342))\n    - **Go Compatibility Blocker:** A critical discussion is ongoing regarding Cannon's incompatibility with Go 1.25. This version causes all Keccak hashes to be calculated incorrectly, impacting block hash integrity. The issue is currently blocked by an upstream issue in the Go repository. ([#17060](https://github.com/ethereum-optimism/design-docs/issues/17060))\n    - **Integration Strategy Pivot:** The plan for integrating `op-reth` is shifting. Following the deprecation of the Kurtosis devnet, the new focus is on integrating `op-reth` into the `devstack / sysgo` system. ([#17475](https://github.com/ethereum-optimism/design-docs/issues/17475))\n\n## \ud83d\udcac Community & Collaboration\nCollaboration was centered on resolving complex technical issues and refining project strategy. Discussions on active issues showed focused engagement from team members. For instance, `@pauldowman` and `@ajsutton` collaborated to diagnose the Go 1.25 compatibility problem in Cannon, while `@geoknee` provided clear direction on the new integration path for `op-reth`. The activity reflects a mature project phase, with an emphasis on stability, long-term maintenance, and strategic planning over rapid feature development.", "2025-10-13T20:55:35.839Z"]
["ethereum-optimism/superchain-ops_month_2025-10-01", "ethereum-optimism/superchain-ops", "month", "2025-10-01", "# ethereum-optimism/superchain-ops Monthly Report (October 2025)\n\n## \ud83d\ude80 Highlights\nOctober's efforts focused on enhancing cross-chain functionality and finalizing major network upgrade tasks. A significant new feature was introduced to enable L1 to L2 call execution via the Optimism Portal, directly improving Superchain interoperability. The team also closed out several long-standing items, including the main tracking issue for the Isthmus upgrade and a test for the Fusaka activation. While progress was made on multiple fronts, a key technical challenge emerged with a Go 1.25 compatibility issue in Cannon, which is currently blocking further work and is under active investigation.\n\n## \ud83d\udee0\ufe0f Key Developments\nWork this month centered on delivering a key interoperability feature and making incremental improvements to system performance and stability.\n\n- **L1 to L2 Call Execution:** A major feature was merged to enable L1 to L2 call execution using the Optimism Portal. This change introduces a new template and configuration-driven parameters specifically for dispatching L2 calls from an L1 Safe, a crucial step for enhancing cross-chain operations within the Superchain ([#1231](https://github.com/ethereum-optimism/superchain-ops/pull/1231)).\n\n- **Performance and CI Optimizations:** Minor but important refinements were made to the codebase. Base commands were modified to improve their execution speed ([#1241](https://github.com/ethereum-optimism/superchain-ops/pull/1241)), and an example task was updated to pin a block number, resolving a CircleCI issue ([#1240](https://github.com/ethereum-optimism/superchain-ops/pull/1240)).\n\n## \ud83d\udc1b Issues & Triage\nThe month saw a strong focus on closing out historical issues related to network upgrades and tooling, while also identifying a significant external dependency as a blocker.\n\n- **Closed Issues:**\n    - **Network Upgrade Finalization:** The tracking issue for the Isthmus upgrade was officially closed, marking the completion of that network event ([#12703](https://github.com/ethereum-optimism/superchain-ops/issues/12703)). Additionally, a test for Fusaka activation on L1 was successfully implemented and closed ([#17500](https://github.com/ethereum-optimism/superchain-ops/issues/17500)).\n    - **Tooling and Process Refinements:** Several issues were resolved by improving internal processes. An issue to enhance acceptance test reporting was closed, with the work completed in the `infra` repository ([#386](https://github.com/ethereum-optimism/superchain-ops/issues/386]). Similarly, flashblock alert refinement was completed in the `k8s` repository ([#17423](https://github.com/ethereum-optimism/superchain-ops/issues/17423)).\n    - **Strategic Decisions:** A proposal to refactor the `op-node` CLI was closed as \"not planned\" ([#16680](https://github.com/ethereum-optimism/superchain-ops/issues/16680)). The team also decided to move away from negative testing for chain configurations in favor of a report-based approach ([#686](https://github.com/ethereum-optimism/superchain-ops/issues/686)).\n\n- **New & Active Issues:**\n    - **Go 1.25 Compatibility Blocker:** The most critical active issue is Cannon's incompatibility with Go 1.25, which causes incorrect Keccak hashes. It was confirmed that the Go 1.25.1 release does not contain the necessary MIPS fix, making this an external blocker for the team ([#17060](https://github.com/ethereum-optimism/superchain-ops/issues/17060)).\n    - **Tooling Strategy Shift:** The integration of `op-reth` is being re-evaluated. With the Kurtosis devnet now deprecated, the focus has shifted to integrating `op-reth` into the `devstack` or `sysgo` systems instead, reflecting an adaptation in the project's development tooling strategy ([#17475](https://github.com/ethereum-optimism/superchain-ops/issues/17475)).\n\n## \ud83d\udcac Community & Collaboration\nCollaboration this month was evident through cross-repository efforts, with issues in `superchain-ops` being resolved by pull requests in the `infra` and `k8s` repositories. This highlights effective coordination across different parts of the Optimism ecosystem. Active discussions on issues like the Go 1.25 compatibility and the `op-reth` integration strategy demonstrate a proactive approach to problem-solving and strategic planning within the core team. The overall activity reflects a healthy balance between shipping new features and diligently maintaining the existing infrastructure.", "2025-10-13T20:55:37.997Z"]
