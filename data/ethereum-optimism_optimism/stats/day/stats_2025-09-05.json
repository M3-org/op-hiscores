{
  "interval": {
    "intervalStart": "2025-09-05T00:00:00.000Z",
    "intervalEnd": "2025-09-06T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "ethereum-optimism/optimism",
  "overview": "From 2025-09-05 to 2025-09-06, ethereum-optimism/optimism had 9 new PRs (13 merged), 4 new issues, and 28 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDODjvEJM7Fuei6",
      "title": "op-sync-tester: Better Session Handling",
      "author": "pcw109550",
      "number": 17047,
      "repository": "ethereum-optimism/optimism",
      "body": "The sync tester APIs currently have session validation logic duplicated almost every RPC.\n\npseudocode like\n```\nfunc SomeRPC1(ctx) {\n    if not checksession(ctx) return err\n    do something\n}\nfunc SomeRPC2(ctx) {\n    if not checksession(ctx) return err\n    do something\n}\n```\nremove this duplication by moving the checker logic to the middleware.\n\nAlso revise mutex logic\n",
      "createdAt": "2025-08-13T07:46:32Z",
      "closedAt": "2025-09-05T14:11:03Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDODjvEJM7J6Qr_",
      "title": "op-program: Update engine API checks for op-program",
      "author": "sebastianst",
      "number": 17336,
      "repository": "ethereum-optimism/optimism",
      "body": "I believe that the engine API check for op-program lag behind the latest update that we did for op-geth. We should track for follow-up work to harden the replicated engine api checks (maybe we can even reuse the extracted check functions from op-geth so we don't need to duplicate).\r\n\r\nOne result of this may be that we need to set the `minBaseFee` field to `nil` if `Jovian` is not active.\r\n\r\n_Originally posted by @sebastianst in https://github.com/ethereum-optimism/optimism/pull/17307#discussion_r2318937361_\r\n            ",
      "createdAt": "2025-09-05T13:05:21Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    },
    {
      "id": "I_kwDODjvEJM7J7IW9",
      "title": "Validate extradata pre-Holocene in engine_consolidate",
      "author": "geoknee",
      "number": 17337,
      "repository": "ethereum-optimism/optimism",
      "body": "I ended up reverting this [b54581d](https://github.com/ethereum-optimism/optimism/pull/17307/commits/b54581dfa78ce5d9b347730030e054425fe3eb43), I didn't want to change the existing behaviour (it broke existing tests). Happy to look again in a followup PR>\r\n\r\n_Originally posted by @geoknee in https://github.com/ethereum-optimism/optimism/pull/17307#discussion_r2324994070_\r\n            ",
      "createdAt": "2025-09-05T14:14:39Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    },
    {
      "id": "I_kwDODjvEJM7J8lMJ",
      "title": "min-base-fee: load minimum base fee value from SystemConfig contract events",
      "author": "geoknee",
      "number": 17340,
      "repository": "ethereum-optimism/optimism",
      "body": "",
      "createdAt": "2025-09-05T16:14:38Z",
      "closedAt": "2025-09-16T20:19:25Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDODjvEJM7J_L3b",
      "title": "Run precompile FP tests on Jovian fork",
      "author": "Inphi",
      "number": 17348,
      "repository": "ethereum-optimism/optimism",
      "body": "",
      "createdAt": "2025-09-05T21:11:40Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDODjvEJM6l4mKG",
      "title": "feat: dev feature flagging in OPCM",
      "author": "smartcontracts",
      "number": 17268,
      "body": "Adds functionality to tests and OPCM that makes it possible to execute use feature flags in the OPCM that selectively utilize specific functionality. This flag is represented as a 32 byte bitmap for op-deployer compatibility and makes it possible to support 32 unique development features at the same time.",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-08-28T21:53:38Z",
      "mergedAt": "2025-09-05T17:18:26Z",
      "additions": 4078,
      "deletions": 1333
    },
    {
      "id": "PR_kwDODjvEJM6nFotI",
      "title": "feat: dev feature flagging in OPCM (#17268)",
      "author": "smartcontracts",
      "number": 17341,
      "body": "* feat: dev feature flagging in OPCM\r\n\r\nAdds functionality to tests and OPCM that makes it possible to execute use feature flags in the OPCM that selectively utilize specific functionality. This flag is represented as a 32 byte bitmap for op-deployer compatibility and makes it possible to support 32 unique development features at the same time.\r\n\r\n* feat: small ergonomic cleanup\r\n\r\n* feat: test fixes\r\n\r\n* fix: portal upgrade implementation\r\n\r\n* fix: more test fixes\r\n\r\n* fix: working on lockbox tests\r\n\r\n* fix: most contract tests should work now\r\n\r\n* fix: run opcm against latest blocks\r\n\r\n* fix: update OPCM bindings\r\n\r\n* fix: correct error format in OPCMCC\r\n\r\n* fix: update ReadImplementationAddresses\r\n\r\n* fix: bug in ReadImplementations\r\n\r\n* fix: tweaked superchain config check in ocpm for now\r\n\r\n* fix: opcm fix after rebase\r\n\r\n* fix: use fake feature for SystemConfig tests\r\n\r\n* feat: parameterized tests for dev features\r\n\r\n* fix: circle ci syntax\r\n\r\n* fix: matrix naming\r\n\r\n* feat: parameterize upgrades too\r\n\r\n* fix: only parameterize coverage\r\n\r\n* feat: more tests\r\n\r\n* fix: rebase conflicts\r\n\r\n* feat: add dev feature bitmap to e2e\r\n\r\n* fix: go bug\r\n\r\n* fix: more go test failures\r\n\r\n* fix: pr comments\r\n\r\n* fix: better check for use super roots\r\n\r\n* fix: pr feedback\r\n\r\n* fix: skip test for interop lockbox\r\n\r\n* fix: typo\r\n\r\n* fix: rebase fixes\r\n\r\n* fix: ci naming\r\n\r\n<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nA clear and concise description of the features you're adding in this pull request.\r\n-->\r\n\r\n**Tests**\r\n\r\n<!--\r\nPlease describe any tests you've added. If you've added no tests, or left important behavior untested, please explain why not.\r\n-->\r\n\r\n**Additional context**\r\n\r\n<!--\r\nAdd any other context about the problem you're solving.\r\n-->\r\n\r\n**Metadata**\r\n\r\n<!-- \r\nInclude a link to any github issues that this may close in the following form:\r\n- Fixes #[Link to Issue]\r\n-->\r\n",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-09-05T17:46:25Z",
      "mergedAt": "2025-09-05T19:04:38Z",
      "additions": 4078,
      "deletions": 1332
    },
    {
      "id": "PR_kwDODjvEJM6kKY9e",
      "title": "feat: creator pattern integerate FaultDisputeGameV2 into DGF",
      "author": "stevennevins",
      "number": 17119,
      "body": "",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-08-18T18:46:36Z",
      "mergedAt": "2025-09-05T13:46:51Z",
      "additions": 3537,
      "deletions": 191
    },
    {
      "id": "PR_kwDODjvEJM6m3Tlb",
      "title": "op-sync-tester: Better Session Handling",
      "author": "pcw109550",
      "number": 17316,
      "body": "<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\n\r\nMutexs are now fine grained, embedded per each session.\r\n\r\nIntroduce a session Manager, which abstracts locking operations for the sessions, and each session holds their own lock to protect themselves while modification.\r\n\r\nNo logic change in the sync tester APIs except explicit locking mechanism added:\r\n\r\nFor APIs we now wrap around the logic with `WithSession`. Example:\r\n```go\r\nfunc (s *SyncTester) GetBlockByNumber(ctx context.Context, number rpc.BlockNumber, fullTx bool) (json.RawMessage, error) {\r\n\treturn WithSession(s.sessMgr, ctx, func(session *eth.SyncTesterSession) (json.RawMessage, error) {\r\n\t\tvar err error\r\n\t\tvar target uint64\r\n\t\tif target, err = s.checkBlockNumber(number, session); err != nil {\r\n\t\t\treturn nil, err\r\n\t\t}\r\n\t\tvar raw json.RawMessage\r\n\t\tif raw, err = s.elReader.GetBlockByNumberJSON(ctx, rpc.BlockNumber(target), fullTx); err != nil {\r\n\t\t\treturn nil, err\r\n\t\t}\r\n\t\treturn raw, nil\r\n\t})\r\n}\r\n\r\n```\r\nwhich under the hood, acquires locks.\r\n\r\nAll locks are blocking, but they can be changed to TryLocks in the future.\r\n\r\n**Tests**\r\n\r\nAll existing tests are passing.\r\n\r\n**Additional context**\r\n\r\nBefore this PR few APIs did not properly acquire locks. This PR adds proper locking mechanisms to every APIs.\r\n\r\nAlso hardened holocene related checks(eip1559params) and tweaked error messages.\r\n\r\n**Metadata**\r\n\r\n- Fixes https://github.com/ethereum-optimism/optimism/issues/17047\r\n",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-09-04T13:39:30Z",
      "mergedAt": "2025-09-05T14:11:02Z",
      "additions": 281,
      "deletions": 245
    },
    {
      "id": "PR_kwDODjvEJM6m6m4I",
      "title": "feat: add feature flagging functionality to SystemConfig (#17281)",
      "author": "smartcontracts",
      "number": 17327,
      "body": "* feat: add feature flagging functionality to SystemConfig\r\n\r\nAdds a function to the SystemConfig for feature flagging. Features are identified by 32 byte strings and can be toggled on or off by the ProxyAdmin or the owner of the ProxyAdmin. Note that this commit does not actually use any feature flags but demonstrates what a feature flag would look like by adding in the flag for the ETHLockbox feature.\r\n\r\n* feat: update for PR feedback\r\n\r\n* fix: small test tweaks\r\n\r\n* fix: broken test",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-09-04T18:16:50Z",
      "mergedAt": "2025-09-05T16:06:43Z",
      "additions": 267,
      "deletions": 10
    }
  ],
  "codeChanges": {
    "additions": 10278,
    "deletions": 2052,
    "files": 118,
    "commitCount": 80
  },
  "completedItems": [
    {
      "title": "feat: creator pattern integerate FaultDisputeGameV2 into DGF",
      "prNumber": 17119,
      "type": "feature",
      "body": "",
      "files": [
        "packages/contracts-bedrock/interfaces/dispute/IDisputeGameFactory.sol",
        "packages/contracts-bedrock/interfaces/dispute/v2/IFaultDisputeGameV2.sol",
        "packages/contracts-bedrock/scripts/checks/test-validation/main.go",
        "packages/contracts-bedrock/snapshots/abi/DisputeGameFactory.json",
        "packages/contracts-bedrock/snapshots/abi/FaultDisputeGameV2.json",
        "packages/contracts-bedrock/snapshots/semver-lock.json",
        "packages/contracts-bedrock/snapshots/storageLayout/DisputeGameFactory.json",
        "packages/contracts-bedrock/src/L1/OPContractsManagerStandardValidator.sol",
        "packages/contracts-bedrock/src/dispute/DisputeGameFactory.sol",
        "packages/contracts-bedrock/src/dispute/v2/FaultDisputeGameV2.sol",
        "packages/contracts-bedrock/test/dispute/DisputeGameFactory.t.sol",
        "packages/contracts-bedrock/test/dispute/v2/FaultDisputeGameV2.t.sol"
      ]
    },
    {
      "title": "feat: dev feature flagging in OPCM",
      "prNumber": 17268,
      "type": "feature",
      "body": "Adds functionality to tests and OPCM that makes it possible to execute use feature flags in the OPCM that selectively utilize specific functionality. This flag is represented as a 32 byte bitmap for op-deployer compatibility and makes it po",
      "files": [
        ".circleci/config.yml",
        ".semgrep/rules/sol-rules.yaml",
        "op-chain-ops/addresses/contracts.go",
        "op-chain-ops/genesis/config.go",
        "op-chain-ops/interopgen/deploy.go",
        "op-chain-ops/interopgen/deployments.go",
        "op-deployer/pkg/deployer/bootstrap/flags.go",
        "op-deployer/pkg/deployer/bootstrap/implementations.go",
        "op-deployer/pkg/deployer/bootstrap/implementations_test.go",
        "op-deployer/pkg/deployer/integration_test/apply_test.go",
        "op-deployer/pkg/deployer/opcm/implementations.go",
        "op-deployer/pkg/deployer/opcm/implementations_test.go",
        "op-deployer/pkg/deployer/opcm/opchain.go",
        "op-deployer/pkg/deployer/pipeline/implementations.go",
        "op-deployer/pkg/deployer/pipeline/opchain.go",
        "op-deployer/pkg/deployer/state/intent.go",
        "op-devstack/dsl/bridge.go",
        "op-devstack/sysgo/deployer.go",
        "op-devstack/sysgo/system.go",
        "op-e2e/bindings/opcontractsmanager.go",
        "packages/contracts-bedrock/interfaces/L1/IOPContractsManager.sol",
        "packages/contracts-bedrock/interfaces/L1/IOPContractsManager180.sol",
        "packages/contracts-bedrock/interfaces/L1/IOPContractsManager200.sol",
        "packages/contracts-bedrock/interfaces/L1/IOPContractsManagerStandardValidator.sol",
        "packages/contracts-bedrock/interfaces/L1/IOptimismPortal2.sol",
        "packages/contracts-bedrock/interfaces/L1/IOptimismPortalInterop.sol",
        "packages/contracts-bedrock/justfile",
        "packages/contracts-bedrock/scripts/checks/test-validation/main.go",
        "packages/contracts-bedrock/scripts/deploy/ChainAssertions.sol",
        "packages/contracts-bedrock/scripts/deploy/Deploy.s.sol",
        "packages/contracts-bedrock/scripts/deploy/DeployConfig.s.sol",
        "packages/contracts-bedrock/scripts/deploy/DeployImplementations.s.sol",
        "packages/contracts-bedrock/scripts/deploy/ReadImplementationAddresses.s.sol",
        "packages/contracts-bedrock/scripts/deploy/VerifyOPCM.s.sol",
        "packages/contracts-bedrock/scripts/libraries/Config.sol",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManager.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerContractsContainer.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerDeployer.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerGameTypeAdder.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerInteropMigrator.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerStandardValidator.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerUpgrader.json",
        "packages/contracts-bedrock/snapshots/abi/OptimismPortal2.json",
        "packages/contracts-bedrock/snapshots/abi/OptimismPortalInterop.json",
        "packages/contracts-bedrock/snapshots/semver-lock.json",
        "packages/contracts-bedrock/snapshots/storageLayout/OPContractsManagerContractsContainer.json",
        "packages/contracts-bedrock/snapshots/storageLayout/OPContractsManagerStandardValidator.json",
        "packages/contracts-bedrock/snapshots/storageLayout/OptimismPortal2.json",
        "packages/contracts-bedrock/snapshots/storageLayout/OptimismPortalInterop.json",
        "packages/contracts-bedrock/src/L1/L1CrossDomainMessenger.sol",
        "packages/contracts-bedrock/src/L1/OPContractsManager.sol",
        "packages/contracts-bedrock/src/L1/OPContractsManagerStandardValidator.sol",
        "packages/contracts-bedrock/src/L1/OptimismPortal2.sol",
        "packages/contracts-bedrock/src/L1/OptimismPortalInterop.sol",
        "packages/contracts-bedrock/src/libraries/DevFeatures.sol",
        "packages/contracts-bedrock/test/L1/OPContractsManager.t.sol",
        "packages/contracts-bedrock/test/L1/OptimismPortal2.t.sol",
        "packages/contracts-bedrock/test/opcm/DeployImplementations.t.sol",
        "packages/contracts-bedrock/test/opcm/DeployOPChain.t.sol",
        "packages/contracts-bedrock/test/scripts/VerifyOPCM.t.sol",
        "packages/contracts-bedrock/test/setup/DevFlags.sol",
        "packages/contracts-bedrock/test/setup/Setup.sol",
        "packages/contracts-bedrock/test/vendor/Initializable.t.sol"
      ]
    },
    {
      "title": "min-base-fee: bring in op-geth code",
      "prNumber": 17307,
      "type": "other",
      "body": "Raising this PR to trigger monorepo CI checks and validate https://github.com/ethereum-optimism/op-geth/pull/666. This PR aims to be the minimal changeset to get existing tests passing. Note that interop tests implicitly activate jovian so ",
      "files": [
        "devnet-sdk/testing/testlib/validators/forks.go",
        "go.mod",
        "go.sum",
        "kurtosis-devnet/interop.yaml",
        "op-chain-ops/genesis/genesis.go",
        "op-chain-ops/interopgen/deploy.go",
        "op-deployer/pkg/deployer/state/chain_intent.go",
        "op-devstack/dsl/validators.go",
        "op-e2e/config/init.go",
        "op-e2e/faultproofs/util.go",
        "op-e2e/system/proofs/system_fpp_test.go",
        "op-node/rollup/attributes/engine_consolidate.go",
        "op-node/rollup/attributes/engine_consolidate_test.go",
        "op-node/rollup/chain_spec.go",
        "op-node/rollup/derive/attributes.go",
        "op-node/rollup/derive/payload_util.go",
        "op-node/rollup/interop/indexing/attributes.go",
        "op-node/rollup/sequencing/sequencer_test.go",
        "op-node/rollup/types.go",
        "op-node/service.go",
        "op-program/client/l2/engineapi/block_processor.go",
        "op-program/client/l2/engineapi/l2_engine_api.go",
        "op-program/client/l2/engineapi/l2_engine_api_test.go",
        "op-program/client/l2/test/miner.go",
        "op-program/client/tasks/deposits_block.go",
        "op-service/eth/types.go",
        "op-service/flags/flags.go"
      ]
    },
    {
      "title": "op-sync-tester: Better Session Handling",
      "prNumber": 17316,
      "type": "tests",
      "body": "<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\n\r\nMutexs are now fine grained, embedded per each session.\r\n\r\nIntroduce a session Manager, which abstracts loc",
      "files": [
        "op-devstack/dsl/sync_tester.go",
        "op-service/apis/sync_tester.go",
        "op-service/eth/synctester_session.go",
        "op-service/sources/sync_tester_client.go",
        "op-sync-tester/synctester/backend/backend.go",
        "op-sync-tester/synctester/backend/session/session.go",
        "op-sync-tester/synctester/backend/sync_tester.go",
        "op-sync-tester/synctester/backend/sync_tester_test.go",
        "op-sync-tester/synctester/frontend/sync.go",
        "op-sync-tester/synctester/middleware.go",
        "op-sync-tester/synctester/middleware_test.go"
      ]
    },
    {
      "title": "op-sync-tester: remove un-used code in `backend.FromConfig`",
      "prNumber": 17321,
      "type": "tests",
      "body": "I don’t think these codes are relevant anymore.",
      "files": [
        "op-sync-tester/synctester/backend/backend.go"
      ]
    },
    {
      "title": "feat: updated system config pause",
      "prNumber": 17322,
      "type": "feature",
      "body": "<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\nUpdates the SystemConfig.paused() function to look at the OptimismPortal as an identifier if the ETHLockbox f",
      "files": [
        "packages/contracts-bedrock/snapshots/semver-lock.json",
        "packages/contracts-bedrock/src/L1/OPContractsManagerStandardValidator.sol",
        "packages/contracts-bedrock/src/L1/SystemConfig.sol",
        "packages/contracts-bedrock/test/L1/OPContractsManager.t.sol",
        "packages/contracts-bedrock/test/L1/SystemConfig.t.sol"
      ]
    },
    {
      "title": "feat: have VerifyOPCM check for dev bitmap",
      "prNumber": 17324,
      "type": "feature",
      "body": "<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\nUpdates VerifyOPCM so that it will check for a non-empty dev bitmap on mainnet",
      "files": [
        "packages/contracts-bedrock/scripts/deploy/VerifyOPCM.s.sol",
        "packages/contracts-bedrock/test/scripts/VerifyOPCM.t.sol"
      ]
    },
    {
      "title": "fix: remove duplicate bodyclose linter configuration",
      "prNumber": 17325,
      "type": "bugfix",
      "body": "Remove duplicate(already in line 5) `bodyclose` linter entry in `.golangci.yaml` (line 9).",
      "files": [
        ".golangci.yaml"
      ]
    },
    {
      "title": "feat: add feature flagging functionality to SystemConfig (#17281)",
      "prNumber": 17327,
      "type": "feature",
      "body": "* feat: add feature flagging functionality to SystemConfig\r\n\r\nAdds a function to the SystemConfig for feature flagging. Features are identified by 32 byte strings and can be toggled on or off by the ProxyAdmin or the owner of the ProxyAdmin",
      "files": [
        "packages/contracts-bedrock/interfaces/L1/ISystemConfig.sol",
        "packages/contracts-bedrock/snapshots/abi/SystemConfig.json",
        "packages/contracts-bedrock/snapshots/semver-lock.json",
        "packages/contracts-bedrock/snapshots/storageLayout/SystemConfig.json",
        "packages/contracts-bedrock/src/L1/OPContractsManagerStandardValidator.sol",
        "packages/contracts-bedrock/src/L1/SystemConfig.sol",
        "packages/contracts-bedrock/src/libraries/Features.sol",
        "packages/contracts-bedrock/test/L1/OPContractsManager.t.sol",
        "packages/contracts-bedrock/test/L1/SystemConfig.t.sol"
      ]
    },
    {
      "title": "feat: op-node sync tests for multiple networks in ci",
      "prNumber": 17334,
      "type": "feature",
      "body": "<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\n\r\n**Go test code refactoring:**\r\n\r\n* Refactored the `op-acceptance-tests-docker` job to `op-acceptance-sync-t",
      "files": [
        ".circleci/config.yml",
        "op-acceptance-tests/tests/sync_tester_ext_el/init_test.go",
        "op-acceptance-tests/tests/sync_tester_ext_el/sync_tester_ext_el_test.go"
      ]
    },
    {
      "title": "feat: dev feature flagging in OPCM (#17268)",
      "prNumber": 17341,
      "type": "feature",
      "body": "* feat: dev feature flagging in OPCM\r\n\r\nAdds functionality to tests and OPCM that makes it possible to execute use feature flags in the OPCM that selectively utilize specific functionality. This flag is represented as a 32 byte bitmap for o",
      "files": [
        ".circleci/config.yml",
        ".semgrep/rules/sol-rules.yaml",
        "op-chain-ops/addresses/contracts.go",
        "op-chain-ops/genesis/config.go",
        "op-chain-ops/interopgen/deploy.go",
        "op-chain-ops/interopgen/deployments.go",
        "op-deployer/pkg/deployer/bootstrap/flags.go",
        "op-deployer/pkg/deployer/bootstrap/implementations.go",
        "op-deployer/pkg/deployer/bootstrap/implementations_test.go",
        "op-deployer/pkg/deployer/integration_test/apply_test.go",
        "op-deployer/pkg/deployer/opcm/implementations.go",
        "op-deployer/pkg/deployer/opcm/implementations_test.go",
        "op-deployer/pkg/deployer/opcm/opchain.go",
        "op-deployer/pkg/deployer/pipeline/implementations.go",
        "op-deployer/pkg/deployer/pipeline/opchain.go",
        "op-deployer/pkg/deployer/state/intent.go",
        "op-devstack/dsl/bridge.go",
        "op-devstack/sysgo/deployer.go",
        "op-devstack/sysgo/system.go",
        "op-e2e/bindings/opcontractsmanager.go",
        "packages/contracts-bedrock/interfaces/L1/IOPContractsManager.sol",
        "packages/contracts-bedrock/interfaces/L1/IOPContractsManager180.sol",
        "packages/contracts-bedrock/interfaces/L1/IOPContractsManager200.sol",
        "packages/contracts-bedrock/interfaces/L1/IOPContractsManagerStandardValidator.sol",
        "packages/contracts-bedrock/interfaces/L1/IOptimismPortal2.sol",
        "packages/contracts-bedrock/interfaces/L1/IOptimismPortalInterop.sol",
        "packages/contracts-bedrock/justfile",
        "packages/contracts-bedrock/scripts/checks/test-validation/main.go",
        "packages/contracts-bedrock/scripts/deploy/ChainAssertions.sol",
        "packages/contracts-bedrock/scripts/deploy/Deploy.s.sol",
        "packages/contracts-bedrock/scripts/deploy/DeployConfig.s.sol",
        "packages/contracts-bedrock/scripts/deploy/DeployImplementations.s.sol",
        "packages/contracts-bedrock/scripts/deploy/ReadImplementationAddresses.s.sol",
        "packages/contracts-bedrock/scripts/deploy/VerifyOPCM.s.sol",
        "packages/contracts-bedrock/scripts/libraries/Config.sol",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManager.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerContractsContainer.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerDeployer.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerGameTypeAdder.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerInteropMigrator.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerStandardValidator.json",
        "packages/contracts-bedrock/snapshots/abi/OPContractsManagerUpgrader.json",
        "packages/contracts-bedrock/snapshots/abi/OptimismPortal2.json",
        "packages/contracts-bedrock/snapshots/abi/OptimismPortalInterop.json",
        "packages/contracts-bedrock/snapshots/semver-lock.json",
        "packages/contracts-bedrock/snapshots/storageLayout/OPContractsManagerContractsContainer.json",
        "packages/contracts-bedrock/snapshots/storageLayout/OPContractsManagerStandardValidator.json",
        "packages/contracts-bedrock/snapshots/storageLayout/OptimismPortal2.json",
        "packages/contracts-bedrock/snapshots/storageLayout/OptimismPortalInterop.json",
        "packages/contracts-bedrock/src/L1/L1CrossDomainMessenger.sol"
      ]
    },
    {
      "title": "feat: updated system config pause (#17322)",
      "prNumber": 17344,
      "type": "feature",
      "body": "* feat: updated system config pause\r\n\r\n* fix: ci fixes\r\n\r\n* fix: simpler logic in system config paused check\r\n\r\n* fix: rebase fixes",
      "files": [
        "packages/contracts-bedrock/snapshots/semver-lock.json",
        "packages/contracts-bedrock/src/L1/OPContractsManagerStandardValidator.sol",
        "packages/contracts-bedrock/src/L1/SystemConfig.sol",
        "packages/contracts-bedrock/test/L1/OPContractsManager.t.sol",
        "packages/contracts-bedrock/test/L1/SystemConfig.t.sol"
      ]
    },
    {
      "title": "feat: have VerifyOPCM check for dev bitmap (#17324)",
      "prNumber": 17345,
      "type": "feature",
      "body": "* feat: have VerifyOPCM check for dev bitmap\r\n\r\n* fix: include required getter in verifyopcm",
      "files": [
        "packages/contracts-bedrock/scripts/deploy/VerifyOPCM.s.sol",
        "packages/contracts-bedrock/test/scripts/VerifyOPCM.t.sol"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "smartcontracts",
      "avatarUrl": "https://avatars.githubusercontent.com/u/14298799?u=fc611223360f6bddb7d404becaaf1ee8ccbf5529&v=4",
      "totalScore": 126.8312377636393,
      "prScore": 116.63123776363929,
      "issueScore": 0,
      "reviewScore": 10,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "blmalone",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15608778?u=1d123d672e830fa3e0357e2acecfaea8da50e2df&v=4",
      "totalScore": 94.46822049735478,
      "prScore": 79.96822049735478,
      "issueScore": 0,
      "reviewScore": 14.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "maurelian",
      "avatarUrl": "https://avatars.githubusercontent.com/u/23033765?u=2e7a6d419d3bcf8c495155dad1fd1c7575eab951&v=4",
      "totalScore": 70.73566292528187,
      "prScore": 34.23566292528188,
      "issueScore": 0,
      "reviewScore": 36.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "geoknee",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1833419?u=89cf6b0e4e1cae909bb2641e58be5201710f6d82&v=4",
      "totalScore": 45.287718956217056,
      "prScore": 20.849718956217053,
      "issueScore": 10,
      "reviewScore": 14,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "Inphi",
      "avatarUrl": "https://avatars.githubusercontent.com/u/3516807?u=760e102e0dd9d0d8c7361293c2b6c326e5bbf61a&v=4",
      "totalScore": 37.69314718055995,
      "prScore": 20.693147180559944,
      "issueScore": 2,
      "reviewScore": 15,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "lisuxiaoqi",
      "avatarUrl": "https://avatars.githubusercontent.com/u/22526710?v=4",
      "totalScore": 37.60429066738033,
      "prScore": 37.60429066738033,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "brianmcmichael",
      "avatarUrl": "https://avatars.githubusercontent.com/u/2374718?u=14a4de3ca2afd1ac8a8aee1af706cd94e73b4848&v=4",
      "totalScore": 34.51117018598809,
      "prScore": 30.011170185988092,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "ccerv1",
      "avatarUrl": "https://avatars.githubusercontent.com/u/42869436?u=d5fe3824ac5153507cc8a3b77dbb24ba84e4416a&v=4",
      "totalScore": 31.18826412308259,
      "prScore": 31.18826412308259,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "nonsense",
      "avatarUrl": "https://avatars.githubusercontent.com/u/50459?u=5dec4acc1aaa51471b718aa578918f3f0970282c&v=4",
      "totalScore": 28.84,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 28.5,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "devin-ai-integration",
      "avatarUrl": "https://avatars.githubusercontent.com/in/811515?v=4",
      "totalScore": 28.583267098070177,
      "prScore": 28.243267098070177,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "JosepBove",
      "avatarUrl": "https://avatars.githubusercontent.com/u/45015975?u=5fd6491f3a1c84f1716cb321f59ec1b76119a339&v=4",
      "totalScore": 28.2,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 28,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "tech-lcx",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54703285?u=e9c21a1ce3872344ad88ddc14dc1655882228371&v=4",
      "totalScore": 26.51266961828337,
      "prScore": 26.51266961828337,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "bradleycamacho",
      "avatarUrl": "https://avatars.githubusercontent.com/u/42678939?u=63d3b279005d0796282644b0374e4671c76361c5&v=4",
      "totalScore": 24.19913438504509,
      "prScore": 24.19913438504509,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "gpgarner",
      "avatarUrl": "https://avatars.githubusercontent.com/u/20133520?v=4",
      "totalScore": 23.4544379124341,
      "prScore": 23.4544379124341,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "alcueca",
      "avatarUrl": "https://avatars.githubusercontent.com/u/38806121?u=05446d587fca577d19ea91499b0ae9ce4d66c3ae&v=4",
      "totalScore": 18.34,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 18,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "mds1",
      "avatarUrl": "https://avatars.githubusercontent.com/u/17163988?u=95114a00aa1ebac94d8fc8519598f168d2c5949f&v=4",
      "totalScore": 15,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 15,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "wiz-inc-a178a98b5d",
      "avatarUrl": "https://avatars.githubusercontent.com/u/58791460?v=4",
      "totalScore": 13.938,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 13.5,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "joshklop",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31332481?v=4",
      "totalScore": 9.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 9.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "AmadiMichael",
      "avatarUrl": "https://avatars.githubusercontent.com/u/97467680?u=0f7a396ff96c3f3515f0fe6dc535088847af019f&v=4",
      "totalScore": 9,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 9,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "jelias2",
      "avatarUrl": "https://avatars.githubusercontent.com/u/19310318?u=5379d59e88f8cb95ef750ee49504db394d84ad5a&v=4",
      "totalScore": 7.460780823064823,
      "prScore": 7.460780823064823,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "pcw109550",
      "avatarUrl": "https://avatars.githubusercontent.com/u/29061389?u=37a4f55d3c4ccdc2e3ec9bd138c959e03bdb695a&v=4",
      "totalScore": 5.2,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "stevennevins",
      "avatarUrl": "https://avatars.githubusercontent.com/u/12021290?u=87fe650172e39a439e61fc800fe67fbb179aef6a&v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "pauldowman",
      "avatarUrl": "https://avatars.githubusercontent.com/u/17709?u=4829e9440317cd206fbde5eaeab866d1db79d8d1&v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "blockchaindevsh",
      "avatarUrl": "https://avatars.githubusercontent.com/u/100516036?v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "almanax-ai",
      "avatarUrl": "https://avatars.githubusercontent.com/in/934833?v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "tremarkley",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15234569?u=b2a30602eb3a6a6fbd8e7b2ee2eef68888738704&v=4",
      "totalScore": 4,
      "prScore": 0,
      "issueScore": 4,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "sebastianst",
      "avatarUrl": "https://avatars.githubusercontent.com/u/2607372?u=b72d05409d41d8654c6c8c7c174d8534297757dd&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "samir0x",
      "avatarUrl": "https://avatars.githubusercontent.com/u/159337459?u=c97cceb6aad00a0266cb9d05b2351a2454687e96&v=4",
      "totalScore": 0.2,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    }
  ],
  "newPRs": 9,
  "mergedPRs": 13,
  "newIssues": 4,
  "closedIssues": 1,
  "activeContributors": 28
}