{
  "interval": {
    "intervalStart": "2025-09-30T00:00:00.000Z",
    "intervalEnd": "2025-10-01T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "ethereum-optimism/optimism",
  "overview": "From 2025-09-30 to 2025-10-01, ethereum-optimism/optimism had 8 new PRs (5 merged), 2 new issues, and 22 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDODjvEJM68L4nd",
      "title": "enable flashblocks on op-mainnet",
      "author": "yashvardhan-kukreja",
      "number": 16498,
      "repository": "ethereum-optimism/optimism",
      "body": "After having thorough confidence on flashblocks-enablement on op-sepolia, we can proceed with enabling flashblocks on op-mainnet.\n\nThis can be done in a progressive manner with one sequencer at a time with dry_run mode.\n\nA/C:\n- op-mainnet passing Flashblocks + Regular RRC\n- monitoring and alerting baked in into the existing setup to cover flashblocks related alerts.\n\nBlocked on https://github.com/ethereum-optimism/optimism/issues/16497",
      "createdAt": "2025-06-18T15:01:59Z",
      "closedAt": "2025-09-30T07:47:40Z",
      "state": "CLOSED",
      "commentCount": 1
    },
    {
      "id": "I_kwDODjvEJM7GwbQK",
      "title": "on-call onboarding and revision for flashblocks",
      "author": "yashvardhan-kukreja",
      "number": 17142,
      "repository": "ethereum-optimism/optimism",
      "body": "Considering the operational knowledge needed to smoothly function any flashblocks-oriented incidents or situations, it would be strongly preferable to have an on-call onboarding session or revision, to cover the knowledge, runbooks and references related to flashblocks operations.",
      "createdAt": "2025-08-19T14:20:14Z",
      "closedAt": "2025-09-30T07:45:40Z",
      "state": "CLOSED",
      "commentCount": 1
    },
    {
      "id": "I_kwDODjvEJM7NSfcU",
      "title": "op-{node|sync-tester}: EL Sync Correctness: EngineController Parallelism and EL Sync Tests",
      "author": "pcw109550",
      "number": 17564,
      "repository": "ethereum-optimism/optimism",
      "body": "This issue claims that there is some synchronization issue in the op-node, especially in the EL sync code path.\n\nStarting from https://github.com/ethereum-optimism/optimism/pull/17565's first commit. The first commit simply prints `debug.Stack()` to nowhere:\nhttps://github.com/ethereum-optimism/optimism/blob/3c3944dfd99efb957c5ffca5d50182abac325ed6/op-node/rollup/engine/engine_controller.go#L490-L500\n\nif we run EL Sync acceptance tests using no parallelism,\n\n```sh\ncd op-acceptance-tests/tests/sync_tester/sync_tester_hfs_ext_granite\nTAILSCALE_NETWORKING=true GOMAXPROCS=1 go test ./... -run ^TestSyncTesterHFS_Granite_ELSync$   -count=1 -v \n```\nWe get always success. However, if we enable parallelism:\n```\nTAILSCALE_NETWORKING=true GOMAXPROCS=2 go test ./... -run ^TestSyncTesterHFS_Granite_ELSync$   -count=1 -v \n```\nWe get consistent failure.\n\nYou may argue that this faulty behavior may be rooted from mis-implementation of sync-tester. However, if we re-run the test starting from the second commit:\nhttps://github.com/ethereum-optimism/optimism/blob/53783060fbb37178fd4e0297cb3595d8558da32f/op-node/rollup/engine/engine_controller.go#L359-L363\n\nIf the `e.finalizedHead` is correctly synchronized, if the if statement is true, `e.finalizedHead` will be empty until explictly updated. However if we re-run using `GOMAXPROCS=2`, \n\n```log\n### 0 initializeUnknowns finalizedRef 0x0000000000000000000000000000000000000000000000000000000000000000:0\n### 1 initializeUnknowns finalizedRef 0x0000000000000000000000000000000000000000000000000000000000000000:0\n### 2 initializeUnknowns finalizedRef 0x0000000000000000000000000000000000000000000000000000000000000000:0\n### 3 initializeUnknowns finalizedRef 0xa828ef159f137180cdf7eb9c21355cb36057ca8642b8a4ee5a0fe0f4aca37e7b:15837935\n### 4 initializeUnknowns finalizedRef 0xa828ef159f137180cdf7eb9c21355cb36057ca8642b8a4ee5a0fe0f4aca37e7b:15837935\n### 5 initializeUnknowns finalizedRef \n...\n```\n\nWe can check that Engine Controller state is updated with race condition.\n\nThis cases the EL Sync to be flaky and unreliable, since after the race it fails to update the finalized head properly and be stucked.\n\nCurrent mitigation for EL Sync tests are to explicitly disable parallelism, by using `runtime.GOMAXPROCS(1)`.\n\n\n",
      "createdAt": "2025-09-23T08:09:47Z",
      "closedAt": "2025-09-30T14:23:21Z",
      "state": "CLOSED",
      "commentCount": 1
    },
    {
      "id": "I_kwDODjvEJM7Ozwpr",
      "title": "Write the blog for op mainnet Flashblocks deep dive",
      "author": "yashvardhan-kukreja",
      "number": 17664,
      "repository": "ethereum-optimism/optimism",
      "body": "Write and publish a blog port diving deep into the Flashblocks deployment, learnings and improvements for mainniet.",
      "createdAt": "2025-09-30T14:07:08Z",
      "closedAt": "2025-09-30T14:07:23Z",
      "state": "CLOSED",
      "commentCount": 1
    },
    {
      "id": "I_kwDODjvEJM7O0v1M",
      "title": "op-sync-tester: Documentation",
      "author": "pcw109550",
      "number": 17667,
      "repository": "ethereum-optimism/optimism",
      "body": "Update https://github.com/ethereum-optimism/optimism/tree/develop/op-sync-tester README with the current implementation",
      "createdAt": "2025-09-30T15:03:51Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDODjvEJM6q94BF",
      "title": "feat: add EL engine mocking support to op-sync-tester",
      "author": "avorylli",
      "number": 17645,
      "body": "## Summary\r\nImplements support for mocking different EL (Execution Layer) implementations in op-sync-tester to validate L2CL behavior with various engine types.\r\n\r\n## Changes\r\n- Add `EngineBehavior` interface for different EL implementations (Geth, Reth, Erigon)\r\n- Support engine-specific behaviors around sync modes and post-finalization EL sync\r\n- Add configuration fields: `engine_kind`, `sync_mode`, `network_type`\r\n- Implement network-specific characteristics (regenesis support, block times)\r\n- Add comprehensive test coverage for new functionality\r\n\r\n## Engine Differences\r\n- **Geth**: Conservative sync, no post-finalization EL sync support\r\n- **Reth**: Aggressive sync, supports post-finalization EL sync\r\n- **Erigon**: Optimized for archival data, supports post-finalization EL sync\r\n\r\n## Testing\r\n- All existing tests pass\r\n- New test coverage: 30.4% backend, 90% config, 100% types\r\n- Race detector clean\r\n- Linter clean\r\n\r\nFixes #17632",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-09-28T19:52:54Z",
      "mergedAt": null,
      "additions": 775,
      "deletions": 11
    },
    {
      "id": "PR_kwDODjvEJM6rN_a-",
      "title": "op-contracts: DeployOPChain.s.sol conform to input/output struct pattern",
      "author": "bitwiseguy",
      "number": 17657,
      "body": "Refactors `DeployOPChain.s.sol` so that it has the following `run` function definition:\r\n```\r\nfunction run(Types.DeployOPChainInput memory _input) public returns (Output memory output_)\r\n```\r\nThe main driver of this change is to make it easier to invoke this script via our op-deployer go code (which will shell out to forge binary). But the refactor also has the following additional advantages:\r\n* consistency with other `Deploy*.s.sol.run()` functions (uses input/output structs)\r\n* more intuitive = better maintainability: previous `run` method wrote input/output values to contract storage, which then had to be read onchain instead of just getting a return value",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-09-30T01:28:51Z",
      "mergedAt": "2025-10-02T14:08:33Z",
      "additions": 471,
      "deletions": 1045
    },
    {
      "id": "PR_kwDODjvEJM6rElfF",
      "title": "op-node: refactor EngineController",
      "author": "nonsense",
      "number": 17647,
      "body": "The motivation behind this change is that `clsync.CLSync` provides very little / trivial functionality, namely:\r\n- it manages a heap of unsafe blocks received over p2p\r\n- it tries to apply the highest block number payload\r\n\r\n`clsync.CLSync` is also coupled with `engine.EngineController`.\r\n\r\nMerging the two reduces the number of components we have to keep in mind, and also allows for further simplifications.\r\n\r\n---\r\n\r\n1. Merge `clsync.CLSync` with `engine.EngineController`\r\n2. Remove `ProcessUnsafePayload` event in favor of a simple function call.\r\n3. Remove `onPayloadInvalid`.\r\n4. Removed unused interfaces.\r\n5. Consistently used direct fields instead of Getters from within the same value (`*EngineController`), instead of a mix of these two.\r\n6. Removed unused Getters for `EngineController`.\r\n7. Refactored tests under `clsync_test.go` and moved under `engine_controller_test.go`",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-09-29T11:09:01Z",
      "mergedAt": "2025-09-30T13:07:06Z",
      "additions": 382,
      "deletions": 553
    },
    {
      "id": "PR_kwDODjvEJM6qx1yZ",
      "title": "add valid semver check script and tests",
      "author": "AmadiMichael",
      "number": 17641,
      "body": "add valid semver check script and tests",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-09-26T18:51:39Z",
      "mergedAt": "2025-09-30T11:48:09Z",
      "additions": 251,
      "deletions": 37
    },
    {
      "id": "PR_kwDODjvEJM6rXKB0",
      "title": "op-e2e/actions: add L1 Osaka activation test ",
      "author": "geoknee",
      "number": 17666,
      "body": "The test fails, which is **expected**.\r\n\r\nThis branch uses a custom \"cherry-picked\" build of op-geth ,\r\n\r\nI verified locally that merging https://github.com/ethereum-optimism/optimism/pull/17568 allow the test to pass.",
      "repository": "ethereum-optimism/optimism",
      "createdAt": "2025-09-30T14:59:42Z",
      "mergedAt": "2025-10-02T17:04:43Z",
      "additions": 210,
      "deletions": 23
    }
  ],
  "codeChanges": {
    "additions": 945,
    "deletions": 650,
    "files": 40,
    "commitCount": 26
  },
  "completedItems": [
    {
      "title": "add valid semver check script and tests",
      "prNumber": 17641,
      "type": "tests",
      "body": "add valid semver check script and tests",
      "files": [
        "packages/contracts-bedrock/justfile",
        "packages/contracts-bedrock/scripts/checks/valid-semver-check/main.go",
        "packages/contracts-bedrock/scripts/checks/valid-semver-check/main_test.go",
        "packages/contracts-bedrock/snapshots/semver-lock.json",
        "packages/contracts-bedrock/src/L1/OPContractsManager.sol",
        "packages/contracts-bedrock/src/legacy/DeployerWhitelist.sol",
        "packages/contracts-bedrock/src/legacy/L1BlockNumber.sol",
        "packages/contracts-bedrock/src/legacy/LegacyMessagePasser.sol",
        "packages/contracts-bedrock/src/safe/LivenessGuard.sol",
        "packages/contracts-bedrock/src/safe/LivenessModule.sol",
        "packages/contracts-bedrock/src/universal/OptimismMintableERC20.sol",
        "packages/contracts-bedrock/src/universal/OptimismMintableERC20Factory.sol",
        "packages/contracts-bedrock/src/universal/StorageSetter.sol"
      ]
    },
    {
      "title": "op-node: refactor EngineController",
      "prNumber": 17647,
      "type": "refactor",
      "body": "The motivation behind this change is that `clsync.CLSync` provides very little / trivial functionality, namely:\r\n- it manages a heap of unsafe blocks received over p2p\r\n- it tries to apply the highest block number payload\r\n\r\n`clsync.CLSync`",
      "files": [
        "op-e2e/actions/helpers/l2_verifier.go",
        "op-node/rollup/attributes/attributes.go",
        "op-node/rollup/clsync/clsync.go",
        "op-node/rollup/driver/driver.go",
        "op-node/rollup/driver/interfaces.go",
        "op-node/rollup/driver/sync_deriver.go",
        "op-node/rollup/engine/api.go",
        "op-node/rollup/engine/build_cancel.go",
        "op-node/rollup/engine/build_invalid.go",
        "op-node/rollup/engine/build_seal.go",
        "op-node/rollup/engine/build_sealed.go",
        "op-node/rollup/engine/build_start.go",
        "op-node/rollup/engine/build_started.go",
        "op-node/rollup/engine/engine_controller.go",
        "op-node/rollup/engine/engine_controller_test.go",
        "op-node/rollup/engine/events.go",
        "op-node/rollup/engine/iface.go",
        "op-node/rollup/engine/payload_invalid.go",
        "op-node/rollup/engine/payload_process.go",
        "op-node/rollup/engine/payload_success.go",
        "op-node/rollup/engine/payloads_queue.go",
        "op-node/rollup/engine/payloads_queue_test.go"
      ]
    },
    {
      "title": "op-node: EngineController: Proper locking",
      "prNumber": 17648,
      "type": "other",
      "body": "<!--\r\nContributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\n\r\nThere are multiple control flows which invokes Engine Controller logic. Some subroutines will be invoked st",
      "files": [
        "op-acceptance-tests/tests/sync_tester/sync_tester_ext_el/sync_tester_ext_el_test.go",
        "op-acceptance-tests/tests/sync_tester/sync_tester_hfs_ext/sync_tester_hfs_ext_test.go",
        "op-node/rollup/engine/api.go",
        "op-node/rollup/engine/engine_controller.go",
        "op-node/rollup/engine/payload_success.go"
      ]
    },
    {
      "title": "feat(op-acceptance-tests): kurtosis nightly tests.",
      "prNumber": 17658,
      "type": "feature",
      "body": "Kurtosis backends are to be deprecated. Until then, let's run these tests nightly instead of blocking PR's.\r\n\r\nTested by manually triggering it in CI:\r\nhttps://app.circleci.com/pipelines/github/ethereum-optimism/optimism/102408",
      "files": [
        ".circleci/config.yml"
      ]
    },
    {
      "title": "op-deployer: ensure standard forge version matches mise",
      "prNumber": 17670,
      "type": "other",
      "body": "Adds a ci job to ensure the version of forge used by op-deployer matches the one installed by mise (which is the version used to build contracts in ci and locally).\r\n\r\nThis will help prevent unexpected behavior within op-deployer that could",
      "files": [
        ".circleci/config.yml",
        "op-deployer/justfile",
        "op-deployer/pkg/deployer/forge/version.json"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "bitwiseguy",
      "avatarUrl": "https://avatars.githubusercontent.com/u/35908605?u=66116d982611a681a8a71a9ac3e3f3d0a7df4e69&v=4",
      "totalScore": 138.4480227067246,
      "prScore": 115.1080227067246,
      "issueScore": 0,
      "reviewScore": 23,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "geoknee",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1833419?u=89cf6b0e4e1cae909bb2641e58be5201710f6d82&v=4",
      "totalScore": 110.46571471234157,
      "prScore": 101.46571471234157,
      "issueScore": 0,
      "reviewScore": 9,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "nonsense",
      "avatarUrl": "https://avatars.githubusercontent.com/u/50459?u=5dec4acc1aaa51471b718aa578918f3f0970282c&v=4",
      "totalScore": 60.226733695618464,
      "prScore": 55.226733695618464,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "chuxinh",
      "avatarUrl": "https://avatars.githubusercontent.com/u/30974572?u=9deea51a72fff78c5e3ff435b1abe1b6a5cd78a3&v=4",
      "totalScore": 48.66701310524586,
      "prScore": 48.66701310524586,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "cody-wang-cb",
      "avatarUrl": "https://avatars.githubusercontent.com/u/156240243?v=4",
      "totalScore": 45.957850320442645,
      "prScore": 45.957850320442645,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "scharissis",
      "avatarUrl": "https://avatars.githubusercontent.com/u/376382?u=21da38bcf55ef6712398ef67e8c7d96096c4a045&v=4",
      "totalScore": 41.77747842544511,
      "prScore": 28.277478425445107,
      "issueScore": 0,
      "reviewScore": 13.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "devin-ai-integration",
      "avatarUrl": "https://avatars.githubusercontent.com/in/811515?v=4",
      "totalScore": 27.439441541679834,
      "prScore": 27.239441541679835,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "serpixel",
      "avatarUrl": "https://avatars.githubusercontent.com/u/5087962?u=6f2fb80cc627356ef3e885f9cad13b4751cebd80&v=4",
      "totalScore": 24,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 24,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "winnsterx",
      "avatarUrl": "https://avatars.githubusercontent.com/u/46658657?u=fac44567f70633b63fd14539ed844097aa9bdc72&v=4",
      "totalScore": 20.713947866261382,
      "prScore": 20.713947866261382,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "pcw109550",
      "avatarUrl": "https://avatars.githubusercontent.com/u/29061389?u=37a4f55d3c4ccdc2e3ec9bd138c959e03bdb695a&v=4",
      "totalScore": 16.438,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 14,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "mds1",
      "avatarUrl": "https://avatars.githubusercontent.com/u/17163988?u=95114a00aa1ebac94d8fc8519598f168d2c5949f&v=4",
      "totalScore": 13.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 13.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "almanax-ai",
      "avatarUrl": "https://avatars.githubusercontent.com/in/934833?v=4",
      "totalScore": 13.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 13.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "AmadiMichael",
      "avatarUrl": "https://avatars.githubusercontent.com/u/97467680?u=0f7a396ff96c3f3515f0fe6dc535088847af019f&v=4",
      "totalScore": 13.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 13.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "blmalone",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15608778?u=1d123d672e830fa3e0357e2acecfaea8da50e2df&v=4",
      "totalScore": 11.2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 9,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "janjakubnanista",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1451480?u=4b613ee7defd11d243d913e89ddc2309769e0c57&v=4",
      "totalScore": 6,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 6,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "theochap",
      "avatarUrl": "https://avatars.githubusercontent.com/u/80177219?u=ae2f417b09960ed0cd1ffe41cee169d5dd7e9cce&v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "maurelian",
      "avatarUrl": "https://avatars.githubusercontent.com/u/23033765?u=2e7a6d419d3bcf8c495155dad1fd1c7575eab951&v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "yashvardhan-kukreja",
      "avatarUrl": "https://avatars.githubusercontent.com/u/25801460?u=2a32a3da993655526c3670024f95d6e60737a068&v=4",
      "totalScore": 4.537999999999999,
      "prScore": 0,
      "issueScore": 4.1,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "mbaxter",
      "avatarUrl": "https://avatars.githubusercontent.com/u/658601?v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "joshklop",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31332481?v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "Inphi",
      "avatarUrl": "https://avatars.githubusercontent.com/u/3516807?u=760e102e0dd9d0d8c7361293c2b6c326e5bbf61a&v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "0xiamflux",
      "avatarUrl": "https://avatars.githubusercontent.com/u/175354924?u=a1b15ed46794542530aed61f7f7fd40dc0968c3f&v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "sebastianst",
      "avatarUrl": "https://avatars.githubusercontent.com/u/2607372?u=b72d05409d41d8654c6c8c7c174d8534297757dd&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "Wazabie",
      "avatarUrl": "https://avatars.githubusercontent.com/u/48911235?u=a3ae7a5fe8f04676a02d733b8d8b1df425633cc2&v=4",
      "totalScore": 0.43799999999999994,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    }
  ],
  "newPRs": 8,
  "mergedPRs": 5,
  "newIssues": 2,
  "closedIssues": 4,
  "activeContributors": 22
}